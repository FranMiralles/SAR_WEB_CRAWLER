{"url": "https://es.wikipedia.org/wiki/Joystick", "title": "Palanca de mando", "summary": "Una palanca de mando o joystick (del ingl\u00e9s joy, alegr\u00eda, y stick, palo)[1]\u200b es un perif\u00e9rico de entrada que consiste en una palanca que gira sobre una base e informa su \u00e1ngulo o direcci\u00f3n al dispositivo que est\u00e1 controlando. Es el dispositivo de control principal en la cabina de vuelo de muchos aviones civiles y militares, ya sea como una palanca de control central o una palanca de control lateral. Algunas palancas poseen interruptores suplementarios para controlar diversos aspectos del vuelo de la aeronave.\nLas palancas de mando tambi\u00e9n se usan para controlar videojuegos y generalmente tienen uno o m\u00e1s botones cuyo estado tambi\u00e9n puede leer el computador. Una variaci\u00f3n popular de la palanca de mando que se usa en las consolas de videojuegos modernas es la palanca anal\u00f3gica. Las palancas de mando tambi\u00e9n se utilizan para controlar m\u00e1quinas como gr\u00faas, camiones, veh\u00edculos subacu\u00e1ticos no tripulados, sillas de ruedas, c\u00e1maras de vigilancia y cortac\u00e9spedes de giro cero. Las palancas de mando miniatura accionados por el dedo se han adoptado como dispositivos de entrada para equipos electr\u00f3nicos m\u00e1s peque\u00f1os, como tel\u00e9fonos m\u00f3viles.", "sections": [{"name": "Aviaci\u00f3n", "text": "Las palancas de mando fueron dise\u00f1adas como controles para los alerones y el tim\u00f3n de profundidad, y se sabe que se usaron como tales en el avi\u00f3n Bl\u00e9riot VIII de Louis Bleriot en 1908, en combinaci\u00f3n con una barra de tim\u00f3n accionada por pedal para la superficie de control de gui\u00f1ada en la cola.[2]\u200b\nEl origen del t\u00e9rmino \"joystick\" no es del todo claro. Se dice que fue usado por el piloto franc\u00e9s Robert Esnault-Pelterie a principios del siglo\u00a0XX.[3]\u200b Otras fuentes dan el cr\u00e9dito a algunos de sus compa\u00f1eros pilotos: Robert Loraine, James Henry Joyce y A. E. George. Loraine es citado por el Oxford English Dictionary por usar el t\u00e9rmino \"joystick\" en su diario en 1909 cuando fue a Pau para aprender a volar en la escuela de Bleriot. George fue un aviador pionero que, junto a su colega Jobling, construy\u00f3 y vol\u00f3 un biplano hacia Newcastle, Inglaterra en 1910. Supuestamente invent\u00f3 el \"Palo de George\" (George Stick), que se hizo m\u00e1s popularmente conocido como el joystick. La columna de control de la aeronave dise\u00f1ada por George y Jobling est\u00e1 en la colecci\u00f3n del Discovery Museum en Newcastle upon Tyne, Inglaterra. Los joysticks estaban presentes en los primeros aeroplanos, aunque sus or\u00edgenes mec\u00e1nicos son inciertos.[4]\u200b La acu\u00f1aci\u00f3n del t\u00e9rmino \"joystick\" en realidad puede atribuirse a Loraine, ya que es el uso conocido m\u00e1s antiguo del t\u00e9rmino, aunque ciertamente no invent\u00f3 el dispositivo.", "subsections": []}, {"name": "Palancas de mando electr\u00f3nicas", "text": "", "subsections": [{"name": "Historia", "text": "La palanca de mando el\u00e9ctrica de dos ejes fue inventado por CB Mirick en el Laboratorio de Investigaci\u00f3n Naval de los Estados Unidos (NRL, por sus siglas en ingl\u00e9s) y patentado en 1926 (Patente de Estados Unidos N.\u00ba 1.597.416).[5]\u200b En esa \u00e9poca, el NRL estaba desarrollando activamente un avi\u00f3n de control remoto y el joystick posiblemente se us\u00f3 para apoyar este esfuerzo. En la patente otorgada, Mirick escribe: \u00abMi sistema de control es particularmente aplicable para maniobrar aviones sin piloto\u00bb.[6]\u200b\nLos alemanes desarrollaron una palanca de mando el\u00e9ctrica de dos ejes alrededor del a\u00f1o 1944. El dispositivo se us\u00f3 como parte del sistema de transmisi\u00f3n de control de radio llamado Funkger\u00e4t FuG 203 Kehl utilizado en ciertos aviones bombarderos alemanes.[7]\u200b Tambi\u00e9n fue utilizado para guiar tanto al misil antibuque Henschel Hs 293 como a la bomba guiada Fritz-X,[8]\u200b contra objetivos mar\u00edtimos y otros. Aqu\u00ed, la palanca del transmisor Kehl fue utilizado por un operador para dirigir el misil hacia su objetivo. Esta palanca ten\u00eda interruptores de encendido-apagado en lugar de sensores anal\u00f3gicos. Tanto el Hs 293 como el Fritz-X usaron receptores de radio FuG 230 Stra\u00dfburg para enviar las se\u00f1ales de control de Kehl a las superficies de control de la artiller\u00eda. Se us\u00f3 una palanca de mando similar para el control de la bomba guiada americana Azon, estrictamente para dirigir la bomba lateralmente en el eje vertical.[9]\u200b\nEste invento alem\u00e1n fue aprovechado por el equipo de cient\u00edficos del Heeresversuchsanstalt en Peenem\u00fcnde. Aqu\u00ed, una parte del equipo del programa alem\u00e1n de cohetes estaba desarrollando el misil Wasserfall, una variante del cohete V2, el primer misil tierra-aire. El equipo de desarrollo del Wasserfall modific\u00f3 el sistema de control para convertir la se\u00f1al el\u00e9ctrica a se\u00f1ales de radio que se transmit\u00edan al misil, eliminando la necesidad del cable.[10]\u200b\nEn la d\u00e9cada de 1960, el uso de las palancas de mando se generaliz\u00f3 en los sistemas de aeronaves radiocontroladas como el Kwik Fly producido por Phill Kraft (1964).[11]\u200b La ahora desaparecida firma Kraft Systems finalmente se convirti\u00f3 en un importante proveedor OEM de joysticks para la industria inform\u00e1tica y otros usuarios. El primer uso de las palancas de mando fuera de la industria aeron\u00e1utica controlada por radio pudo haber estado en el control de sillas de ruedas motorizadas, como el Permobil (1963). Durante este per\u00edodo de tiempo, la NASA utiliz\u00f3 palancas de mando como dispositivos de control como parte de las misiones Apolo.[12]\u200b\nEn muchos aviones modernos la palanca de mando ha recibido una nueva vida \u00fatil para el control de vuelo en forma de \"palanca lateral\" (side-stick), un controlador similar a un joystick de videojuegos pero que se usa para controlar el vuelo, reemplazando el yoke tradicional. La palanca lateral ahorra peso, mejora el movimiento y la visibilidad en la cabina, y puede ser m\u00e1s segura en un accidente que el tradicional \"Yoke de control\".[13]\u200b"}, {"name": "Juegos electr\u00f3nicos", "text": "Ralph H. Baer, inventor de los videojuegos de televisi\u00f3n y Bill Harrison, dieron a conocer los usos de las palancas de mando en videojuegos. En estos primeros videojuegos, se pudieron controlar la posici\u00f3n horizontal y vertical de un punto mostrado en una pantalla.[14]\u200b La palanca de mando para juegos electr\u00f3nicos m\u00e1s antigua con un bot\u00f3n de disparo fue lanzado por Sega como parte de su videojuego de arcade Missile de 1969, un videojuego de simulaci\u00f3n de disparos que lo us\u00f3 como parte de un esquema de control dual temprano, donde se usan dos botones direccionales para mover un tanque motorizado y una palanca de mando bidireccional para disparar y dirigir el misil hacia los aviones que se aproximan y que se muestran en la pantalla; cuando se golpea un avi\u00f3n, se anima una explosi\u00f3n en la pantalla junto con un sonido de explosi\u00f3n.[15]\u200b En 1970, el videojuego fue lanzado en Am\u00e9rica del Norte como S.A.M.I.[16]\u200b por Midway Games.[15]\u200b\nEn 1973, Taito dise\u00f1\u00f3 una palanca de cuatro direcciones como parte del videojuego Astro Race, un videojuego de carreras arcade,[17]\u200b mientras que en 1975 Western Gun, un videojuego del tipo Matamarcianos multidireccional, introdujo un control con dos palancas de ocho direcciones; una palanca serv\u00eda para movimiento y la otra para cambiar la direcci\u00f3n de disparo. En Am\u00e9rica del Norte, el videojuego fue lanzado por Midway bajo el t\u00edtulo Gun Fight.[18]\u200b En 1976, Taito lanz\u00f3 Interceptor, un simulador de vuelo de combate en primera persona que involucraba el pilotaje de un avi\u00f3n de caza mediante el uso de un de una palanca de mando de ocho direcciones para apuntar y disparar contra un avi\u00f3n enemigo.[19]\u200b\nEl controlador Atari CX40 de 1977, conocido como el controlador \"cl\u00e1sico\" de Atari y desarrollado para el Atari 2600,[20]\u200b era una palanca de mando digital, con un solo bot\u00f3n de disparo. El puerto del controlador de Atari fue durante muchos a\u00f1os la especificaci\u00f3n est\u00e1ndar de los joystick digitales de facto. Las palancas de mando se usaban com\u00fanmente como controladores en consolas de la primera y segunda generaci\u00f3n, para dar paso al mando tradicional con la Nintendo Entertainment System y la Sega Master System a mediados de la d\u00e9cada de 1980.\nEn 1985, Space Harrier un videojuego arcade del tipo rail shooter en tercera persona desarrollado por Sega, introdujo una verdadera palanca de mando anal\u00f3gica, utilizada para el movimiento. La palanca pod\u00eda registrar el movimiento en cualquier direcci\u00f3n, as\u00ed como tambi\u00e9n medir el grado de empuje, lo que lograba mover al personaje del jugador a diferentes velocidades dependiendo de qu\u00e9 tan lejos se empujaba la palanca en cierta direcci\u00f3n.[21]\u200b\nUna variaci\u00f3n distinta de una palanca de mando anal\u00f3gica es una pistola posicional, que funciona de manera diferente a una pistola de luz. En lugar de utilizar sensores de luz, una pistola posicional es esencialmente una palanca de mando anal\u00f3gica montada en un lugar fijo que registra la posici\u00f3n de la pistola para determinar hacia d\u00f3nde apunta el jugador en la pantalla.[22]\u200b[23]\u200b Se usan a menudo en los videojuegos arcade de disparos con pistolas. Algunos ejemplos de estos videojuegos incluyen a Sea Devil de Sega en 1972;[24]\u200b Attack de Taito en 1976;[25]\u200b Cross Fire en 1977;[26]\u200b y Battle Shark de Nintendo en 1978.[27]\u200b\nDurante la d\u00e9cada de 1990, algunos joystick como CH Products Flightstick, Gravis Phoenix, Microsoft SideWinder, Logitech WingMan y Thrustmaster FCS ten\u00edan mucha demanda entre los jugadores de PC. Se les consider\u00f3 como un requisito previo para los simuladores de vuelo como el F-16 Fighting Falcon y LHX Attack Chopper. Las palancas de mando se hicieron especialmente populares con el \u00e9xito principal de los videojuegos de simulaci\u00f3n espacial como Star Wars: X-Wing y Wing Commander, as\u00ed como el videojuego de disparos 3D Descent.[28]\u200b[29]\u200b[30]\u200b[31]\u200b[32]\u200b El joystick MongoosT-50 de VirPil Controls fue dise\u00f1ado para imitar el estilo de un avi\u00f3n ruso (incluyendo el Sukhoi Su-35 y el Sukhoi Su-57), a diferencia de la mayor\u00eda de las palancas usadas en otros simuladores de vuelo.[33]\u200b\nSin embargo, desde el comienzo del siglo\u00a0XXI, este tipo de videojuegos han perdido popularidad y ahora se consideran un g\u00e9nero \"muerto\", y con eso, las palancas de mando de videojuegos se han reducido a productos de nicho.[28]\u200b[29]\u200b[30]\u200b[31]\u200b[32]\u200b En la entrevista de NowGamer con Jim Boone, productor de Volition Inc., afirm\u00f3 que las pobres ventas de FreeSpace 2 podr\u00edan haberse debido a que las palancas de mando se vendieron mal porque estaban \"pasadas de moda\" y porque los videojuegos de disparos en primera persona m\u00e1s modernos, como Quake, fueron \u00abmucho sobre el rat\u00f3n y [el] teclado\u00bb. Luego a\u00f1adi\u00f3: \u00abAntes de eso, cuando creamos Descent, por ejemplo, era muy com\u00fan que las personas tuvieran palancas de mando. Vendimos muchas copias de Descent. Fue en ese momento [cuando] el \"FPS\" m\u00e1s moderno con mouse y teclado fue lanzado, a diferencia de otros videojuegos que solo usaban teclado como Wolfenstein [3D] o algo as\u00ed\u00bb.[34]\u200b\nDesde fines de la d\u00e9cada de 1990, las palancas anal\u00f3gicas (o thumbsticks, debido a que son controlados por los pulgares) se han convertido en un est\u00e1ndar en controladores para consolas de videojuegos, popularizados por el control de Nintendo 64 dise\u00f1ado por Nintendo,[35]\u200b y tiene la capacidad de indicar el desplazamiento de la palanca desde su posici\u00f3n neutral. Esto significa que el software no tiene que hacer un seguimiento de la posici\u00f3n o estimar la velocidad a la que se mueven los controles. Estos dispositivos generalmente usan potenci\u00f3metros para determinar la posici\u00f3n de la palanca, aunque algunos modelos m\u00e1s nuevos usan un sensor de efecto Hall para una mayor confiabilidad y tama\u00f1o reducido."}, {"name": "Arcade stick", "text": "Un arcade stick es un controlador de gran tama\u00f1o para usar con consolas dom\u00e9sticas o computadoras. Utilizan la configuraci\u00f3n de palanca y botones de algunas cabinas arcade, como los que tienen arreglos de botones espec\u00edficos. Por ejemplo, el dise\u00f1o de seis botones de los videojuegos arcade Street Fighter II o Mortal Kombat no se puede emular c\u00f3modamente en un control de consola, por lo que se fabrican arcade stick licenciados para estos juegos para su uso en consolas dom\u00e9sticas y PC.[36]\u200b"}, {"name": "Hat switch", "text": "Un hat switch es un control en algunas palancas de mando. Tambi\u00e9n se lo conoce como interruptor POV (point of view). Permite cambiar la vista en el mundo virtual, navegar por los men\u00fas, etc. Por ejemplo, muchos simuladores de vuelo lo usan para cambiar las vistas del jugador,[37]\u200b mientras que otros videojuegos a veces lo usan como un sustituto de la cruceta.\nEl t\u00e9rmino \"hat switch\" es un acortamiento del t\u00e9rmino \"Coolie hat switch\", que lleva el nombre del sombrero de aspecto similar.[38]\u200b\nEn un avi\u00f3n real, el hat switch puede controlar cosas como el aler\u00f3n o el borde del tim\u00f3n."}]}, {"name": "Asistencia a personas con discapacidad", "text": "Las palancas de mando especializadas, clasificadas como un dispositivo apuntador dentro de la tecnolog\u00eda de asistencia, se utilizan para reemplazar el rat\u00f3n de la computadora para personas con discapacidades f\u00edsicas bastante severas. En lugar de controlar videojuegos, estas palancas controlan el puntero. A menudo son \u00fatiles para las personas con afecciones atetoides, como la par\u00e1lisis cerebral, ya que les resulta m\u00e1s f\u00e1cil de entender que un rat\u00f3n est\u00e1ndar.[39]\u200b Las palancas de mando en miniatura est\u00e1n disponibles para personas con afecciones que involucran debilidad muscular, como la distrofia muscular o alguna enfermedad de la motoneurona. Tambi\u00e9n se usan en las sillas de ruedas el\u00e9ctricas ya que son simples y efectivas para usar como m\u00e9todo de control.[40]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Anexo:Jerga inform\u00e1tica\nAFCS\nSimulador de vuelo\nControlador de videojuego\nMando (videojuegos)\nPalanca anal\u00f3gica\nKempston Micro Electronics\nTAC-2", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abJoystick\u00bb. Merriam Webster (en ingl\u00e9s). Consultado el 5 de junio de 2018. \u00abLa palabra aparece en ingl\u00e9s con su sentido actual sobre 1910. Su origen es un t\u00e9rmino de jerga que hac\u00eda referencia al miembro viril, una expresi\u00f3n con el uso equivalente a verga en espa\u00f1ol.\u00bb\u00a0\n\u2191 AFP (25 de julio de 2009). \u00abEnglish Channel Armada to Mark Centenary of Louis Bl\u00e9riot Flight\u00bb. Times of Malta. Consultado el 4 de junio de 2018.\u00a0\n\u2191 Zeller Jr., Tom (5 de junio de 2005). \u00abA Great Idea That's All in the Wrist\u00bb. New York Times. Consultado el 4 de junio de 2018.\u00a0\n\u2191 Quinion, Michael (17 de julio de 2004). \u00abQuestions & Answers: Joystick\u00bb. World Wide Words. Consultado el 7 de septiembre de 2006.\u00a0\n\u2191 \u00abA Timeline of NRL's Autonomous Systems Research\u00bb. Laboratorio de Investigaci\u00f3n Naval de los Estados Unidos. 2011. Archivado desde el original el 3 de marzo de 2016. Consultado el 6 de junio de 2018.\u00a0\n\u2191 Mirick, C. B. (1926). \u00abElectrical Distant Control System\u00bb. Oficina de Patentes y Marcas de Estados Unidos. Consultado el 6 de junio de 2018.\u00a0\n\u2191 \u00abImagen del joystick utilizado en el Henschel Hs\u00bb (JPEG). wehrmacht-history.com. Archivado desde el original el 12 de noviembre de 2014. Consultado el 6 de junio de 2018.\u00a0\n\u2191 \u00abBomb, Guided, Fritz X (X-1)\u00bb (en ingl\u00e9s). Museo Nacional del Aire y el Espacio de Estados Unidos. Archivado desde el original el 15 de junio de 2018. Consultado el 6 de junio de 2018.\u00a0\n\u2191 Anthony, Alastair; Walker, Norman K.; DeSocio, Elizabeth (Mayo de 1946). The accuracy of the AZON guided bomb as affected by battle conditions in World War II (PDF) (en ingl\u00e9s). Defense Technical Information Center. pp.\u00a04,6. Consultado el 14 de junio de 2018.\u00a0\n\u2191 Reinke, Niklas, ed. (2012). History of Rocketry and Astronautics (PDF|formato= requiere |url= (ayuda)). AAS History (Univelt) 43: 167, 168. ISBN\u00a0978-0-87703-615-9. ISSN\u00a00730-3564.\u00a0 |fechaacceso= requiere |url= (ayuda)\n\u2191 Wolf, Mark J. P., ed. (2012). Encyclopedia of video games: the culture, technology, and art of gaming (en ingl\u00e9s). Santa Barbara, California: Greenwood. p.\u00a0342. ISBN\u00a0978-0-313-37936-9. Consultado el 15 de junio de 2018.\u00a0\n\u2191 Wittler, Frank E.; Johnson, Lyndon B. (Marzo de 1975). \u00abSpacecraft Hand Controller Development\u00bb (PDF). Apollo experience report - Crew Station Integration (en ingl\u00e9s) (NASA) 3. Consultado el 15 de junio de 2018.\u00a0\n\u2191 John Hutchinson (25 de marzo de 2015). \u00abHow Safe Is the Airbus A320? 'Workhorse of the Skies' Is Still One of World's Most Reliable Planes Despite Alps Crash, Say Experts\u00bb. Daily Mail. Consultado el 13 de septiembre de 2015.\u00a0\n\u2191 Edwards, Benj (17 de julio de 2004). \u00abVideo Games Turn 40\u00bb (en ingl\u00e9s). 1UP.com. Archivado desde el original el 4 de junio de 2011. Consultado el 15 de junio de 2018.\u00a0\n\u2191 a b Missile en Killer List of Videogames (en ingl\u00e9s)\n\u2191 S.A.M.I. en Killer List of Videogames (en ingl\u00e9s)\n\u2191 Astro Race en Killer List of Videogames (en ingl\u00e9s)\n\u2191 Totilo, Stephen (31 de agosto de 2010). \u00abIn Search Of The First Video Game Gun\u00bb (en ingl\u00e9s). Kotaku. Consultado el 3 de julio de 2018.\u00a0\n\u2191 Interceptor en Killer List of Videogames (en ingl\u00e9s)\n\u2191 Grant Brunner (27 de mayo de 2013). \u00abShoulder Buttons of Giants: The Evolution of Controllers Leading Up to PS4 and Xbox One\u00bb. ExtremeTech. Consultado el 11 de septiembre de 2015.\u00a0\n\u2191 Buchanan, Levi (5 de septiembre de 2008). \u00abSpace Harrier retrospective - Page 2 of 3\u00bb (en ingl\u00e9s). IGN UK. Consultado el 15 de julio de 2018.\u00a0\n\u2191 Morgan McGuire & Odest Chadwicke Jenkins (2009), Creating Games: Mechanics, Content, and Technology, A K Peters, Ltd., p.\u00a0408, ISBN\u00a01-56881-305-8, consultado el 3 de abril de 2011, \u00abLight guns, such as the NES Zapper or those used in the House of the Dead series, are distinctly different from positional guns used by arcade games such as SEGA's Gunblade NY. ... Light guns differ from positional guns, such as in Gunblade NY (bottom), that are essentially analog joysticks. ... Positional guns are essentially analog sticks mounted in a fixed location with respect to the screen. Light guns, in contrast, have no fixed a priori relationship with a display.\u00bb\u00a0.\n\u2191 Yo-Sung Ho & Hyoung Joong Kim (November 13\u201316, 2005), Advances in Multimedia Information Processing-PCM 2005: 6th Pacific-Rim Conference on Multimedia, Jeju Island, Korea, Springer Science & Business, p.\u00a0688, ISBN\u00a03-540-30040-6, consultado el 3 de abril de 2011, \u00abThe two routes to conventional gun control are light guns and positional guns. Light guns are the most common for video game systems of any type. They work optically with screen and do not keep track of location on the screen until the gun is fired. When the gun is fired, the screen blanks for a moment, and the optics in the gun register where on the screen the gun is aimed. That information is sent to the computer, which registers the shot. ... Positional guns are mounted stationary on the arcade cabinet with the ability to aim left/right and up/down. They function much like joysticks, which maintain a known location on screen at all times and register the current location when fired.\u00bb\u00a0.\n\u2191 Sea Devil en Killer List of Videogames (en ingl\u00e9s)\n\u2191 Attack en Killer List of Videogames (en ingl\u00e9s)\n\u2191 Cross Fire en Killer List of Videogames (en ingl\u00e9s)\n\u2191 Battle Shark en Killer List of Videogames (en ingl\u00e9s)\n\u2191 a b Peckham, Matt (26 de septiembre de 2006). \u00abDarkStar One\u00bb. SciFi.com. Archivado desde el original el 17 de octubre de 2006. Consultado el 17 de noviembre de 2007.\u00a0\n\u2191 a b \u00abSpace Interceptor: Project Freedom\u00bb. MyGamer. 9 de noviembre de 2004. Archivado desde el original el 14 de abril de 2005. Consultado el 15 de julio de 2018.\u00a0\n\u2191 a b Weise, Matt (28 de mayo de 2003). \u00abFreelancer\u00bb. GameCritics. Archivado desde el original el 6 de enero de 2008. Consultado el 17 de noviembre de 2007.\u00a0\n\u2191 a b LaMosca, Adam (18 de julio de 2006). \u00abLost in the Void\u00bb. The Escapist. Archivado desde el original el 25 de febrero de 2008. Consultado el 17 de noviembre de 2007.\u00a0\n\u2191 a b Wen, Howard (12 de febrero de 2008). \u00abWhat Happened To The Last Starfighters?\u00bb. The Escapist. Archivado desde el original el 25 de febrero de 2009. Consultado el 20 de junio de 2008.\u00a0\n\u2191 Hirsch, Matthew (4 de junio de 2017). \u00abVPC\u2019s MongoosT-50 joystick: A rare Russian-style controller for skies or space\u00bb. Ars Technica. Archivado desde el original el 5 de junio de 2017. Consultado el 15 de julio de 2018. \u00abUnlike most flight sticks for sale on the US market, which tend to be based with varying levels of verisimilitude on US fighter aircraft control columns, the MongoosT-50 is built to mirror the control stick on Russian aircraft\u2014specifically, the fifth-generation Russian Sukhoi Su-35 and PAK FA (T-50).\u00bb\u00a0\n\u2191 Tom Senior (7 de febrero de 2011). \u00abVolition Would \"Commit Murder\" to Make Freespace 3\u00bb. PC Gamer. Consultado el 15 de julio de 2018.\u00a0\n\u2191 Jonathan Drake (24 de septiembre de 2011). \u00abNintendo 64: Launching a Legacy\u00bb. IGN. Consultado el 9 de septiembre de 2015.\u00a0\n\u2191 Block, Gerry (18 de diciembre de 2007). \u00abArcade in a Box Xbox 360 Arcade Stick\u00bb (en ingl\u00e9s). IGN UK. Consultado el 15 de julio de 2018.\u00a0\n\u2191 \u00abMicrosoft Combat Flight Simulator 2, EU-Inside Moves Series, Jeff Van West, Book - Barnes & Noble\u00bb. Search.barnesandnoble.com. Archivado desde el original el 29 de septiembre de 2007. Consultado el 18 de agosto de 2010.\u00a0\n\u2191 Cantrell, Paul. \u00abHelicopter Aviation\u00bb. www.copters.com. Consultado el 20 de diciembre de 2015.\u00a0\n\u2191 Darleen Hartley (22 de mayo de 2009). \u00abRobotics Improves Movement in Kids with Cerebral Palsy\u00bb. geek.com. Archivado desde el original el 20 de agosto de 2016. Consultado el 16 de septiembre de 2015.\u00a0\n\u2191 Andrew Liszewski (28 de abril de 2012). \u00abIf You Don't Find This Video About Robot Wheelchairs for Babies' Heartwarming, You Probably Don't Have a Soul\u00bb. Gizmodo. Consultado el 17 de septiembre de 2015.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una galer\u00eda multimedia sobre Palanca de mando.\nEsta obra contiene una traducci\u00f3n parcial derivada de \u00abJoystick\u00bb de Wikipedia en ingl\u00e9s,\u00a0concretamente de esta versi\u00f3n del 28 de junio de 2018, publicada por sus editores bajo la Licencia de documentaci\u00f3n libre de GNU y la Licencia Creative Commons Atribuci\u00f3n-CompartirIgual 4.0 Internacional.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Kilobyte", "title": "Kilobyte", "summary": "Un kilobyte es una unidad de almacenamiento de informaci\u00f3n cuyo s\u00edmbolo es el kB (con la 'k' en min\u00fasculas) y equivale a 103 (mil) bytes. Aunque el prefijo griego kilo- (\u03c7\u03af\u03bb\u03b9\u03bf\u03b9) significa \u00abmil\u00bb, el t\u00e9rmino kilobyte y el s\u00edmbolo \u00abkB\u00bb se han utilizado hist\u00f3ricamente para hacer referencia tanto a 1024 (210) bytes como a 1000 (103) bytes, dependiendo del contexto, en los campos de la inform\u00e1tica y de la tecnolog\u00eda de la informaci\u00f3n.[1]\u200b[2]\u200b[3]\u200b\nPara solucionar esta confusi\u00f3n, la Comisi\u00f3n Electrot\u00e9cnica Internacional public\u00f3 en 1998 un ap\u00e9ndice al est\u00e1ndar IEC 60027-2 donde se instauraban los prefijos binarios, naciendo la unidad kibibyte para designar 210 bytes y consider\u00e1ndose el uso de la palabra kilobyte no v\u00e1lido a dichos efectos.", "sections": [{"name": "El Sistema Internacional de Unidades y el t\u00e9rmino byte", "text": "Art\u00edculos principales:\n y \nEn los inicios de la inform\u00e1tica, las unidades se mostraban como m\u00faltiplos de 1000, pero en los a\u00f1os 1960 se empez\u00f3 a confundir 1000 con 1024, puesto que la memoria de los ordenadores trabajan en base binaria y no decimal. El problema radic\u00f3 al nombrar estas unidades, ya que se adoptaron los nombres de los prefijos del Sistema Internacional de Unidades. Dada la similitud en las cantidades, se utilizaron los prefijos de base mil que se aplican a las unidades del sistema internacional (tales como el metro, el gramo, el voltio o el amperio). \nSin embargo, etimol\u00f3gicamente es incorrecto utilizar estos prefijos (de base decimal) para nombrar m\u00faltiplos en base binaria. Como ocurre en el caso del kilobyte, a pesar de que 1024 se aproxime a 1000. \nEste hecho sembr\u00f3 ciertas confusiones que, actualmente, contin\u00faan debati\u00e9ndose en la comunidad inform\u00e1tica.\nPara clarificar la distinci\u00f3n entre los prefijos decimal y binario, la Comisi\u00f3n Electrot\u00e9cnica Internacional (IEC), un grupo de estandarizaci\u00f3n, propuso en 1998 otros prefijos, que consist\u00edan en uniones abreviadas del Sistema Internacional de Unidades con la palabra binario. \nAs\u00ed pues, un conjunto de 210 bytes - o lo que es lo mismo, 1024 bytes - deber\u00eda ser denominado un kibibyte[4]\u200b (KiB) contracci\u00f3n de Kilobyte Binario.\nEsta convenci\u00f3n, expresada en los est\u00e1ndares IEC 60027-2[5]\u200b e IEC 80000-13:2008, ha sido adoptada para el sistema operativo \"Snow Leopard\" de Apple y por Ubuntu.  Otras, como Microsoft, adoptan la definici\u00f3n que se encuentra en diccionarios como el de Oxford (Ver referencias m\u00e1s adelante), al mantener el uso de kilobyte para 1024 bytes.\nEn el entorno inform\u00e1tico se ha sugerido utilizar el prefijo K may\u00fascula para distinguir la cantidad binaria de la decimal, pero este tema a\u00fan no se ha normalizado, ya que el s\u00edmbolo \"K\" en el SI representa la unidad de temperatura, el kelvin. Por otro lado, esta sugerencia no se podr\u00eda extender a otros prefijos de mayor magnitud dado que, en el caso ejemplo del MB (megabyte), el SI ya utiliza tanto la M may\u00fascula (mega: mill\u00f3n) como la min\u00fascula (mili: mil\u00e9sima).", "subsections": []}, {"name": "Equivalencia", "text": "", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Byte\nMegabyte\nKibibyte\nMebibyte\nNibble", "subsections": []}, {"name": "Referencias", "text": "\u2191 definition of kilobyte from Oxford Dictionaries Online Archivado el 25 de junio de 2006 en Wayback Machine.. Askoxford.com. Retrieved on 2011-01-07.\n\u2191 Kilobyte \u2013 Definition and More from the Free Merriam-Webster Dictionary. Merriam-webster.com (2010-08-13). Retrieved on 2011-01-07.\n\u2191 Kilobyte | Define Kilobyte at Dictionary.com. Dictionary.reference.com (1995-09-29). Retrieved on 2011-01-07.\n\u2191 \u00abDefinitions of the SI units: The binary prefixes\u00bb. Consultado el 2012.\u00a0\n\u2191 Prefixes for binary multiples (en ingl\u00e9s)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_ensamblador", "title": "Lenguaje ensamblador", "summary": "Motorola MC6800 Assembler listing\nEl lenguaje ensamblador o assembler (en ingl\u00e9s: assembler language y la abreviaci\u00f3n asm) es un lenguaje de programaci\u00f3n que se usa en los microprocesadores. Implementa una representaci\u00f3n simb\u00f3lica de los c\u00f3digos de m\u00e1quina binarios y otras constantes necesarias para programar una arquitectura de procesador y constituye la representaci\u00f3n m\u00e1s directa del c\u00f3digo m\u00e1quina espec\u00edfico para cada arquitectura legible por un programador. Cada arquitectura de procesador tiene su propio lenguaje ensamblador que usualmente es definida por el fabricante de hardware, y est\u00e1 basada en los mnem\u00f3nicos que simbolizan los pasos de procesamiento (las instrucciones), los registros del procesador, las posiciones de memoria y otras caracter\u00edsticas del lenguaje. Un lenguaje ensamblador es por lo tanto espec\u00edfico de cierta arquitectura de computador f\u00edsica (o virtual). Esto est\u00e1 en contraste con la mayor\u00eda de los lenguajes de programaci\u00f3n de alto nivel, que idealmente son portables.\nUn programa utilitario llamado ensamblador es usado para traducir sentencias del lenguaje ensamblador al c\u00f3digo de m\u00e1quina del computador objetivo. El ensamblador realiza una traducci\u00f3n m\u00e1s o menos isomorfa (un mapeo de uno a uno) desde las sentencias mnem\u00f3nicas a las instrucciones y datos de m\u00e1quina. Esto est\u00e1 en contraste con los lenguajes de alto nivel, en los cuales una sola declaraci\u00f3n generalmente da lugar a muchas instrucciones de m\u00e1quina.\nMuchos sofisticados ensambladores ofrecen mecanismos adicionales para facilitar el desarrollo del programa, controlar el proceso de ensamblaje, y la ayuda de depuraci\u00f3n. Particularmente, la mayor\u00eda de los ensambladores modernos incluyen una facilidad de macro (descrita m\u00e1s abajo), y se llaman macro ensambladores.\nFue usado principalmente en los inicios del desarrollo de software, cuando a\u00fan no se contaba con potentes lenguajes de alto nivel y los recursos eran limitados. Actualmente se utiliza con frecuencia en ambientes acad\u00e9micos y de investigaci\u00f3n, especialmente cuando se requiere la manipulaci\u00f3n directa de hardware, alto rendimiento, o un uso de recursos controlado y reducido. Tambi\u00e9n es utilizado en el desarrollo de controladores de dispositivo (en ingl\u00e9s, device drivers) y en el desarrollo de sistemas operativos, debido a la necesidad del acceso directo a las instrucciones de la m\u00e1quina. Muchos dispositivos programables (como los microcontroladores) a\u00fan cuentan con el ensamblador como la \u00fanica manera de ser manipulados.", "sections": [{"name": "Caracter\u00edsticas", "text": "El c\u00f3digo escrito en lenguaje ensamblador posee una cierta dificultad de ser entendido ya que su estructura se acerca al lenguaje m\u00e1quina, es decir, es un lenguaje de bajo nivel.\nEl lenguaje ensamblador es dif\u00edcilmente portable, es decir, un c\u00f3digo escrito para un microprocesador, puede necesitar ser modificado, para poder ser usado en otra m\u00e1quina distinta. Al cambiar a una m\u00e1quina con arquitectura diferente, generalmente es necesario reescribirlo completamente.\nLos programas hechos por un programador experto en lenguaje ensamblador pueden ser m\u00e1s r\u00e1pidos y consumir menos recursos del sistema (ej: memoria RAM) que el programa equivalente compilado desde un lenguaje de alto nivel. Al programar cuidadosamente en lenguaje ensamblador se pueden crear programas que se ejecutan m\u00e1s r\u00e1pidamente y ocupan menos espacio que con lenguajes de alto nivel. Conforme han evolucionado tanto los procesadores como los compiladores de lenguajes de alto nivel, esta caracter\u00edstica del lenguaje ensamblador se ha vuelto cada vez menos significativa. Es decir, un compilador moderno de lenguaje de alto nivel puede generar c\u00f3digo casi tan eficiente como su equivalente en lenguaje ensamblador.[1]\u200b\nCon el lenguaje ensamblador se tiene un control muy preciso de las tareas realizadas por un microprocesador por lo que se pueden crear segmentos de c\u00f3digo dif\u00edciles y/o muy ineficientes de programar en un lenguaje de alto nivel, ya que, entre otras cosas, en el lenguaje ensamblador se dispone de instrucciones del CPU que generalmente no est\u00e1n disponibles en los lenguajes de alto nivel.", "subsections": []}, {"name": "Programa ensamblador", "text": "Art\u00edculo principal:\nGeneralmente, un programa ensamblador (assembler en ingl\u00e9s) moderno crea c\u00f3digo objeto traduciendo instrucciones mnem\u00f3nicas de lenguaje ensamblador en opcodes, y resolviendo los nombres simb\u00f3licos para las localizaciones de memoria y otras entidades.[2]\u200b El uso de referencias simb\u00f3licas es una caracter\u00edstica clave del lenguaje ensamblador, evitando tediosos c\u00e1lculos y actualizaciones manuales de las direcciones despu\u00e9s de cada modificaci\u00f3n del programa. La mayor\u00eda de los ensambladores tambi\u00e9n incluyen facilidades de macros para realizar sustituci\u00f3n textual - ej. generar cortas secuencias de instrucciones como expansi\u00f3n en l\u00ednea en vez de llamar a subrutinas.\nLos ensambladores son generalmente m\u00e1s simples de escribir que los compiladores para los lenguajes de alto nivel, y han estado disponibles desde los a\u00f1os 1950. Los ensambladores modernos, especialmente para las arquitecturas basadas en RISC, tales como MIPS, Sun SPARC, y HP PA-RISC, as\u00ed como tambi\u00e9n para el x86 (-64), optimizan la planificaci\u00f3n de instrucciones para explotar la segmentaci\u00f3n del CPU eficientemente.\nEn los compiladores para lenguajes de alto nivel, son el \u00faltimo paso antes de generar el c\u00f3digo ejecutable.", "subsections": [{"name": "N\u00famero de pasos", "text": "Hay dos tipos de ensambladores basados en cu\u00e1ntos pasos a trav\u00e9s de la fuente son necesarios para producir el programa ejecutable.\nLos ensambladores de un solo paso pasan a trav\u00e9s del c\u00f3digo fuente una vez y asumen que todos los s\u00edmbolos ser\u00e1n definidos antes de cualquier instrucci\u00f3n que los refiera.\nLos ensambladores de dos pasos crean una tabla con todos los s\u00edmbolos y sus valores en el primer paso, despu\u00e9s usan la tabla en un segundo paso para generar c\u00f3digo. El ensamblador debe por lo menos poder determinar la longitud de cada instrucci\u00f3n en el primer paso para que puedan ser calculadas las direcciones de los s\u00edmbolos.\nLa ventaja de un ensamblador de un solo paso es la velocidad, que no es tan importante como lo fue en un momento dados los avances en velocidad y capacidades del computador. La ventaja del ensamblador de dos pasos es que los s\u00edmbolos pueden ser definidos dondequiera en el c\u00f3digo fuente del programa. Esto permite a los programas ser definidos de maneras m\u00e1s l\u00f3gicas y m\u00e1s significativas, haciendo los programas de ensamblador de dos pasos m\u00e1s f\u00e1ciles de leer y mantener.[3]\u200b"}, {"name": "Ensambladores de alto nivel", "text": "Los m\u00e1s sofisticados ensambladores de alto nivel proporcionan abstracciones del lenguaje tales como:\nEstructuras de control avanzadas\nDeclaraciones e invocaciones de procedimientos/funciones de alto nivel\nTipos de datos abstractos de alto nivel, incluyendo las estructuras/r\u00e9cords, uniones, clases, y conjuntos\nProcesamiento de macros sofisticado (aunque est\u00e1 disponible en los ensambladores ordinarios desde finales de los a\u00f1os 1960 para el IBM S/360, entre otras m\u00e1quinas)\nCaracter\u00edsticas de programaci\u00f3n orientada a objetos"}, {"name": "Uso del t\u00e9rmino", "text": "Note que, en el uso profesional normal, el t\u00e9rmino ensamblador es frecuentemente usado tanto para referirse al lenguaje ensamblador como tambi\u00e9n al programa ensamblador (que convierte el c\u00f3digo fuente escrito en el lenguaje ensamblador a c\u00f3digo objeto que luego ser\u00e1 enlazado para producir lenguaje de m\u00e1quina). Las dos expresiones siguientes utilizan el t\u00e9rmino \"ensamblador\":"}]}, {"name": "Lenguaje", "text": "El lenguaje ensamblador refleja directamente la arquitectura y las instrucciones en lenguaje de m\u00e1quina de la CPU, y pueden ser muy diferentes de una arquitectura de CPU a otra. \nCada arquitectura de microprocesador tiene su propio lenguaje de m\u00e1quina, y en consecuencia su propio lenguaje ensamblador ya que este se encuentra muy ligado a la estructura del hardware para el cual se programa. Los microprocesadores difieren en el tipo y n\u00famero de operaciones que soportan; tambi\u00e9n pueden tener diferente cantidad de registros, y distinta representaci\u00f3n de los tipos de datos en memoria. Aunque la mayor\u00eda de los microprocesadores son capaces de cumplir esencialmente las mismas funciones, la forma en que lo hacen difiere y los respectivos lenguajes ensamblador reflejan tal diferencia.", "subsections": [{"name": "Instrucciones de CPU", "text": "La mayor\u00eda de las CPU tienen m\u00e1s o menos los mismos grupos de instrucciones, aunque no necesariamente tienen todas las instrucciones de cada grupo. Las operaciones que se pueden realizar var\u00edan de una CPU a otra. Una CPU particular puede tener instrucciones que no tenga otro y viceversa. \nLos primeros microprocesadores de 8 bits no ten\u00edan operaciones para multiplicar o dividir n\u00fameros, por ejemplo, y hab\u00eda que hacer subrutinas para realizar esas operaciones. Otras CPU puede que no tengan operaciones de punto flotante y habr\u00eda que hacer o conseguir bibliotecas que realicen esas operaciones.\nLas instrucciones de la CPU pueden agruparse, de acuerdo a su funcionalidad, en:\nOperaciones con enteros: (de 8, 16, 32 y 64 bits dependiendo de la arquitectura de la CPU, en los sistemas muy viejos tambi\u00e9n de 12, 18, 24, 36 y 48 bits).\nEstas son operaciones realizadas por la Unidad aritm\u00e9tico l\u00f3gica de la CPU:\nOperaciones aritm\u00e9ticas. Como suma, resta, multiplicaci\u00f3n, divisi\u00f3n, m\u00f3dulo, cambio de signo\nOperaciones booleanas. Operaciones l\u00f3gicas bit a bit como AND, OR, XOR, NOT\nOperaciones de bits. Como desplazamiento o shift l\u00f3gico y rotaciones u Operadores a nivel de bits (hacia la derecha o hacia la izquierda, a trav\u00e9s del bit del acarreo o sin \u00e9l)\nComparaciones\nOperaciones de mover datos:\nDesde un registro a otro\nDesde un registro a un lugar de la memoria\nDesde un lugar de la memoria a un registro\nDesde un lugar a otro de la memoria\nUn valor inmediato a un registro\nUn valor inmediato a un lugar de memoria\nPUSH (escribe datos hacia el tope de la pila)\nPOP (lee datos desde el tope de la pila)\nINPUT Lectura desde un puerto de entrada\nOUTPUT Escritura hacia un puerto de salida\nOperaciones para el control del flujo del programa:\nLlamadas y retornos de subrutinas\nLlamadas y retornos de interrupciones\nSaltos condicionales de acuerdo al resultado de una comparaci\u00f3n\nSaltos incondicionales\nOperaciones con n\u00fameros reales:\nEl est\u00e1ndar para las operaciones con n\u00fameros reales en las CPU est\u00e1 definido por el IEEE 754.\nUna CPU puede tener operaciones de punto flotante con n\u00fameros reales mediante el coprocesador num\u00e9rico (si lo hay), como las siguientes:\nOperaciones aritm\u00e9ticas. Suma, resta, multiplicaci\u00f3n, divisi\u00f3n, cambio de signo, valor absoluto, parte entera\nOperaciones trigonom\u00e9tricas. Seno, coseno, tangente, arcotangente\nOperaciones con logaritmos, potencias y ra\u00edces\nOtras\nEl lenguaje ensamblador tiene mnem\u00f3nicos para cada una de las instrucciones de la CPU en adici\u00f3n a otros mnem\u00f3nicos a ser procesados por el programa ensamblador (como por ejemplo macros y otras sentencias en tiempo de ensamblado)."}, {"name": "Ensamblado", "text": "La transformaci\u00f3n del lenguaje ensamblador en c\u00f3digo m\u00e1quina la realiza un programa ensamblador, y la traducci\u00f3n inversa la puede efectuar un desensamblador. A diferencia de los lenguajes de alto nivel, aqu\u00ed hay usualmente una correspondencia 1 a 1 entre las instrucciones simples del ensamblador y el lenguaje de m\u00e1quina. Sin embargo, en algunos casos, un ensamblador puede proveer \"pseudo instrucciones\" que se expanden en un c\u00f3digo de m\u00e1quina m\u00e1s extenso a fin de proveer la funcionalidad necesaria y simplificar la programaci\u00f3n. Por ejemplo, para un c\u00f3digo m\u00e1quina condicional como \"si X mayor o igual que\", un ensamblador puede utilizar una pseudoinstrucci\u00f3n al grupo \"haga si menor que\", y \"si = 0\" sobre el resultado de la condici\u00f3n anterior. Los Ensambladores m\u00e1s completos tambi\u00e9n proveen un rico lenguaje de macros que se utiliza para generar c\u00f3digo m\u00e1s complejo y secuencias de datos.\nPara el mismo procesador y el mismo conjunto de instrucciones de CPU, diferentes programas ensambladores pueden tener, cada uno de ellos, variaciones y diferencias en el conjunto de mnem\u00f3nicos o en la sintaxis de su lenguaje ensamblador. Por ejemplo, en un lenguaje ensamblador para la arquitectura x86, se puede expresar la instrucci\u00f3n para mover 5 al registro AL de la siguiente manera: MOV AL, 5, mientras que para otro ensamblador para la misma arquitectura se expresar\u00eda al rev\u00e9s: MOV 5, AL. Ambos lenguajes ensambladores har\u00edan exactamente lo mismo, solo que est\u00e1 expresado de manera diferente. El primero usa la sintaxis de Intel, mientras que el segundo usa la sintaxis de AT&T.\nEl uso del ensamblador no resuelve definitivamente el problema de c\u00f3mo programar un sistema basado en microprocesador de modo sencillo ya que para hacer un uso eficiente del mismo, hay que conocer a fondo el microprocesador, los registros de trabajo de que dispone, la estructura de la memoria, y muchas cosas m\u00e1s referentes a su estructura b\u00e1sica de funcionamiento."}, {"name": "Ejemplos", "text": "Un programa escrito en lenguaje ensamblador consiste en una serie de instrucciones que corresponden al flujo de \u00f3rdenes ejecutables por un microprocesador.\nPor ejemplo, en el lenguaje ensamblador para un procesador x86:\nLa sentencia\nMOV AL, 61h\nAsigna el valor hexadecimal 61 (97 decimal) al registro \"AL\".\nEl programa ensamblador lee la sentencia de arriba y produce su equivalente binario en lenguaje de m\u00e1quina.\nBinario: 10110000 01100001 (hexadecimal: B061)\nEl mnem\u00f3nico MOV es un c\u00f3digo de operaci\u00f3n u \"opcode\". El opcode es seguido por una lista de argumentos o par\u00e1metros, completando una t\u00edpica instrucci\u00f3n de ensamblador. En el ejemplo, AL es un registro de 8 bits del procesador, al cual se le asignar\u00e1 el valor hexadecimal 61 especificado.\nEl c\u00f3digo de m\u00e1quina generado por el ensamblador consiste de 2 bytes. El primer byte contiene empaquetado la instrucci\u00f3n MOV y el c\u00f3digo del registro hacia donde se va a mover el dato:\nEn el segundo byte se especifica el n\u00famero 61h, escrito en binario como 01100001, que se asignar\u00e1 al registro AL, quedando la sentencia ejecutable como:\n10110000 01100001\nLa cual puede ser entendida y ejecutada directamente por el procesador."}]}, {"name": "Dise\u00f1o del lenguaje", "text": "", "subsections": [{"name": "Elementos b\u00e1sicos", "text": "Hay un grado grande de diversidad en la manera en que los autores de los ensambladores categorizan las sentencias y en la nomenclatura que usan. En particular, algunos describen cualquier cosa como pseudo-operaci\u00f3n (pseudo-Op), con excepci\u00f3n del mnem\u00f3nico de m\u00e1quina o del mnem\u00f3nico extendido.\nUn t\u00edpico lenguaje ensamblador consiste en 3 tipos de sentencias de instrucci\u00f3n que son usadas para definir las operaciones del programa:\nMnem\u00f3nicos de opcode\nSecciones de datos\nDirectivas de ensamblador\nMnem\u00f3nicos de opcode y mnem\u00f3nicos extendidos\nA diferencia de las instrucciones (sentencias) de los lenguajes de alto nivel, las instrucciones en el lenguaje ensamblador son generalmente muy simples. Generalmente, un mnem\u00f3nico es un nombre simb\u00f3lico para una sola instrucci\u00f3n en lenguaje de m\u00e1quina ejecutable (un opcode), y hay por lo menos un mnem\u00f3nico de opcode definido para cada instrucci\u00f3n en lenguaje de m\u00e1quina. Cada instrucci\u00f3n consiste t\u00edpicamente en una operaci\u00f3n u opcode m\u00e1s cero o m\u00e1s operandos. La mayor\u00eda de las instrucciones refieren a un solo valor, o a un par de valores. Los operandos pueden ser inmediatos (t\u00edpicamente valores de un byte, codificados en la propia instrucci\u00f3n), registros especificados en la instrucci\u00f3n, impl\u00edcitos o las direcciones de los datos localizados en otra parte de la memoria. Esto est\u00e1 determinado por la arquitectura subyacente del procesador, el ensamblador simplemente refleja c\u00f3mo trabaja esta arquitectura. Los mnem\u00f3nicos extendidos son frecuentemente usados para especificar una combinaci\u00f3n de un opcode con un operando espec\u00edfico, ej, el ensamblador del System/360 usa a B como un mnem\u00f3nico extendido para el BC con una m\u00e1scara de 15 y NOP al BC con una m\u00e1scara de 0.\nLos mnem\u00f3nicos extendidos son frecuentemente usados para soportar usos especializados de instrucciones, a menudo para prop\u00f3sitos no obvios con respecto al nombre de la instrucci\u00f3n. Por ejemplo, muchos CPU no tienen una instrucci\u00f3n expl\u00edcita de NOP (No Operaci\u00f3n), pero tienen instrucciones que puedan ser usadas para tal prop\u00f3sito. En el CPU 8086, la instrucci\u00f3n XCHG AX,AX (intercambia el registro AX consigo mismo) es usada para el NOP, con NOP siendo un pseudo-opcode para codificar la instrucci\u00f3n XCHG AX,AX. Algunos desensambladores reconocen esto y decodificar\u00e1n la instrucci\u00f3n XCHG AX,AX como NOP. Similarmente, los ensambladores de IBM para el System/360 usan los mnem\u00f3nicos extendidos NOP y NOPR con las m\u00e1scaras cero para BC y BCR.\nAlgunos ensambladores tambi\u00e9n soportan simples macroinstrucciones incorporadas que generan dos o m\u00e1s instrucciones de m\u00e1quina. Por ejemplo, con algunos ensambladores para el Z80, la instrucci\u00f3n\ngenera las instrucciones\nLD HL, BC es un pseudo-opcode, que en este caso simula ser una instrucci\u00f3n de 16 bits. Cuando se expande se producen dos instrucciones de 8 bits que equivalen a la simulada de 16 bits.\nSecciones de datos\nHay instrucciones usadas para definir elementos de datos para manejar datos y variables. Definen el tipo de dato, la longitud y la alineaci\u00f3n de los datos. Estas instrucciones tambi\u00e9n pueden definir si los datos est\u00e1n disponibles para programas exteriores (programas ensamblados separadamente) o solamente para el programa en el cual la secci\u00f3n de datos est\u00e1 definida. Algunos ensambladores clasifican estas instrucci\u00f3n como pseudo-instrucciones.\nDirectivas del ensamblador\nLas directivas del ensamblador, tambi\u00e9n llamadas pseudo opcodes, pseudo-operaciones o pseudo-ops, son instrucciones que son ejecutadas por un ensamblador en el tiempo de ensamblado, no por la CPU en tiempo de ejecuci\u00f3n. Pueden hacer al ensamblado del programa dependiente de par\u00e1metros especificados por el programador, de modo que un programa pueda ser ensamblado de diferentes maneras, quiz\u00e1s para diversas aplicaciones. Tambi\u00e9n pueden ser usadas para manipular la presentaci\u00f3n de un programa para hacerlo m\u00e1s f\u00e1cil de leer y mantener.\nPor ejemplo, las directivas pudieran ser usadas para reservar \u00e1reas de almacenamiento y opcionalmente para asignar su contenido inicial. Los nombres de las directivas a menudo comienzan con un punto para distinguirlas de las instrucciones de m\u00e1quina.\nLos ensambladores simb\u00f3licos le permiten a los programadores asociar nombres arbitrarios (etiquetas o s\u00edmbolos) a posiciones de memoria. Usualmente, cada constante y variable tiene un nombre para que las instrucciones puedan referir a esas ubicaciones por nombre, as\u00ed promoviendo el c\u00f3digo autodocumentado. En el c\u00f3digo ejecutable, el nombre de cada subprograma es asociado a su punto de entrada, as\u00ed que cualquier llamada a un subprograma puede usar su nombre. Dentro de subprogramas, a los destinos GOTO se le dan etiquetas. Algunos ensambladores soportan s\u00edmbolos locales que son l\u00e9xicamente distintos de los s\u00edmbolos normales (ej, el uso de \"10$\" como un destino GOTO).\nLa mayor\u00eda de los ensambladores proporcionan un manejo flexible de s\u00edmbolos, permitiendo a los programadores manejar diversos espacios de nombres, calcular autom\u00e1ticamente offsets dentro de estructuras de datos, y asignar etiquetas que refieren a valores literales o al resultado de c\u00e1lculos simples realizados por el ensamblador. Las etiquetas tambi\u00e9n pueden ser usadas para inicializar constantes y variables con direcciones relocalizables.\nLos lenguajes ensambladores, como la mayor\u00eda de los otros lenguajes de computador, permiten que sean a\u00f1adidos comentarios al c\u00f3digo fuente, que son ignorados por el programa ensamblador. El buen uso de los comentarios es a\u00fan m\u00e1s importante con c\u00f3digo ensamblador que con lenguajes de alto nivel, pues el significado y el prop\u00f3sito de una secuencia de instrucciones puede ser m\u00e1s dif\u00edcil de entender a partir del c\u00f3digo en s\u00ed mismo.\nEl uso sabio de estas facilidades puede simplificar significativamente los problemas de codificar y mantener el c\u00f3digo de bajo nivel. El c\u00f3digo fuente de lenguaje ensamblador crudo generado por compiladores o desensambladores - c\u00f3digo sin ning\u00fan comentario, ni s\u00edmbolos con alg\u00fan sentido, ni definiciones de datos - es muy dif\u00edcil de leer cuando deben hacerse cambios."}, {"name": "Macros", "text": "Muchos ensambladores soportan macros predefinidas, y otros soportan macros definidas (y repetidamente redefinibles) por el programador que implican secuencias de l\u00edneas del texto, en las cuales las variables y las constantes est\u00e1n embebidas. Esta secuencia de l\u00edneas de texto puede incluir opcodes o directivas. Una vez una macro se define, su nombre se puede usar en lugar de un mnem\u00f3nico. Cuando el ensamblador procesa tal sentencia, reemplaza la sentencia por las l\u00edneas del texto asociadas a esa macro. Entonces, las procesa como si hubieran existido en el archivo del c\u00f3digo fuente original (incluyendo, en algunos ensambladores, la expansi\u00f3n de cualquier macro que exista en el texto de reemplazo).\nPuesto que las macros pueden tener nombres cortos pero se expanden a varias, o de hecho, muchas l\u00edneas de c\u00f3digo, pueden usarse para hacer que los programas en lenguaje ensamblador parezcan ser mucho m\u00e1s cortos, requiriendo menos l\u00edneas de c\u00f3digo fuente, como sucede con los lenguajes de alto nivel. Tambi\u00e9n se pueden usar para a\u00f1adir niveles de estructura m\u00e1s altos a los programas ensamblador; opcionalmente introducen c\u00f3digo de depuraci\u00f3n integrado v\u00eda par\u00e1metros y otras caracter\u00edsticas similares.\nMuchos ensambladores tienen macros incorporadas (o predefinidas) para las llamadas de sistema y otras secuencias especiales de c\u00f3digo, tales como la generaci\u00f3n y el almacenamiento de los datos realizados a trav\u00e9s de avanzadas operaciones bitwise y operaciones booleanas usadas en juegos, software de seguridad, gesti\u00f3n de datos y criptograf\u00eda.\nLos macro ensambladores a menudo permiten a las macros tomar par\u00e1metros. Algunos ensambladores incluyen lenguajes macro sofisticados, incorporando elementos de lenguajes de alto nivel tales como par\u00e1metros opcionales, variables simb\u00f3licas, condiciones, manipulaciones de strings, operaciones aritm\u00e9ticas, todos usables durante la ejecuci\u00f3n de una macro dada, y permitiendo a las macros guardar el contexto o intercambiar informaci\u00f3n. As\u00ed una macro puede generar un gran n\u00famero de instrucciones o definiciones de datos en lenguaje ensamblador, basadas en los argumentos de la macro. Esto se podr\u00eda usar para generar, por ejemplo, estructuras de datos de estilo de r\u00e9cord o bucles \"desenrollados\", o podr\u00eda generar algoritmos enteros basados en par\u00e1metros complejos. Una organizaci\u00f3n, usando lenguaje ensamblador, que ha sido fuertemente extendido usando tal suite de macros, puede ser considerada que se est\u00e1 trabajando en un lenguaje de alto nivel, puesto que tales programadores no est\u00e1n trabajando con los elementos conceptuales de m\u00e1s bajo nivel del computador.\nLas macros se usaron para personalizar sistemas de software de gran escala para clientes espec\u00edficos en la era del mainframe. Tambi\u00e9n se emplearon macros por los usuarios mismos para satisfacer las necesidades de sus organizaciones haciendo versiones espec\u00edficas de los sistemas operativos del fabricante. Esto fue hecho, por ejemplo, por los programadores de sistema que trabajaban con el Conversational Monitor System / Virtual Machine (CMS/VM) de IBM y con los complementos real time transaction processing de IBM, CICS, Customer Information Control System, el airline/financial system que comenz\u00f3 en los a\u00f1os 1970 y todav\u00eda corre con muchos sistemas de reservaciones computarizados (CRS) y sistemas de tarjeta de cr\u00e9dito de hoy.\nTambi\u00e9n es posible usar solamente las habilidades de procesamiento de macros de un ensamblador para generar c\u00f3digo escrito en lenguajes completamente diferentes. Por ejemplo, para generar una versi\u00f3n de un programa en COBOL usando un programa macro ensamblador puro conteniendo l\u00edneas de c\u00f3digo COBOL dentro de operadores de tiempo ensamblaje dando instrucciones al ensamblador para generar c\u00f3digo arbitrario.\nEsto era porque, como en los a\u00f1os 1970 fue observado, el concepto de \"procesamiento de macro\" es independiente del concepto de \"ensamblaje\", siendo el anterior, en t\u00e9rminos modernos, m\u00e1s un procesamiento de textos, que una generaci\u00f3n de c\u00f3digo objeto. El concepto de procesamiento de macro apareci\u00f3, y aparece, en el lenguaje de programaci\u00f3n C, que soporta \"instrucciones de preprocesador\" de fijar variables, y hace pruebas condicionales en sus valores. Observe que a diferencia de ciertos macroprocesadores previos dentro de los ensambladores, el preprocesador de C no es Turing-completo porque carec\u00eda de la capacidad de bucle o go to, esto \u00faltimo permitiendo a los programas hacer bucles.\nA pesar del poder del procesamiento macro, este dej\u00f3 de usarse en muchos lenguajes de alto nivel (una importante excepci\u00f3n es C/C++), pero persisti\u00f3 en los ensambladores. Esto era porque muchos programadores estaban bastante confundidos por la sustituci\u00f3n de par\u00e1metros macro y no distingu\u00edan la diferencia entre procesamiento macro, el ensamblaje y la ejecuci\u00f3n.\nLa sustituci\u00f3n de par\u00e1metros macro es estrictamente por nombre: en el tiempo de procesamiento macro, el valor de un par\u00e1metro es sustituido textualmente por su nombre. La clase m\u00e1s famosa de Error de software resultantes era el uso de un par\u00e1metro que en s\u00ed mismo era una expresi\u00f3n y no un nombre primario cuando el escritor macro esperaba un nombre. En el macro:\nla intenci\u00f3n era que la rutina que llama proporcionar\u00eda el nombre de una variable, y la variable o constante \"global b\" ser\u00eda usada para multiplicar a \"a\". Si foo se llama con el par\u00e1metro a-c, ocurre la expansi\u00f3n macro load a-c*b. Para evitar cualquier posible ambig\u00fcedad, los usuarios de macro procesadores pueden encerrar en par\u00e9ntesis los par\u00e1metros formales dentro de las definiciones de macros, o las rutinas que llaman pueden envolver en par\u00e9ntesis los par\u00e1metros de entrada.[5]\u200b As\u00ed, el macro correcto, con los par\u00e9ntesis, ser\u00eda:\ny su expansi\u00f3n, dar\u00eda como resultado: load (a-c)*b\nEl PL/I y el C/C++ ofrecen macros, pero esta facilidad solo puede manipular texto. Por otra parte, los lenguajes homoic\u00f3nicos, tales como Lisp, Prolog, y Forth, retienen el poder de los macros de lenguaje ensamblador porque pueden manipular su propio c\u00f3digo como datos."}, {"name": "Soporte para programaci\u00f3n estructurada", "text": "Algunos ensambladores han incorporado elementos de programaci\u00f3n estructurada para codificar el flujo de la ejecuci\u00f3n. El ejemplo m\u00e1s temprano de este acercamiento estaba en el Concept-14 macro set, originalmente propuesto por el Dr. H.D. Mills (marzo de 1970), e implementado por Marvin Kessler en la Federal Systems Division de IBM, que extendi\u00f3 el macro ensamblador del S/360 con bloques de control de flujo IF/ELSE/ENDIF y similares.[6]\u200b Esto era una manera de reducir o eliminar el uso de operaciones GOTO en el c\u00f3digo en lenguaje ensamblador, uno de los principales factores que causaban c\u00f3digo espagueti en el lenguaje ensamblador. Este acercamiento fue ampliamente aceptado a principios de los a\u00f1os 1980 (los \u00faltimos d\u00edas del uso de lenguaje ensamblador en gran escala).\nUn curioso dise\u00f1o fue A-natural, un ensamblador \"orientado a la corriente\" (stream-oriented) para los procesadores 8080/Z80[cita\u00a0requerida] de Whitesmiths Ltd. (desarrolladores del sistema operativo Idris, similar al Unix), y lo que fue reportado como el primer compilador C comercial). El lenguaje fue clasificado como un ensamblador, porque trabajaba con elementos de m\u00e1quina crudos tales como opcodes, registros, y referencias de memoria; pero incorporaba una sintaxis de expresi\u00f3n para indicar el orden de ejecuci\u00f3n. Los par\u00e9ntesis y otros s\u00edmbolos especiales, junto con construcciones de programaci\u00f3n estructurada orientadas a bloques, controlaban la secuencia de las instrucciones generadas. A-natural fue construido como el lenguaje objeto de un compilador C, en vez de la codificaci\u00f3n manual, pero su sintaxis l\u00f3gica gan\u00f3 algunos seguidores.\nHa habido poca demanda aparente para ensambladores m\u00e1s sofisticados debido a la declinaci\u00f3n del desarrollo de lenguaje ensamblador de larga escala.[7]\u200b A pesar de eso, todav\u00eda se est\u00e1n desarrollando y aplicando en casos donde las limitaciones de recursos o las particularidades en la arquitectura de sistema objetivo previenen el efectivo uso de lenguajes de alto nivel.[8]\u200b"}]}, {"name": "Uso del lenguaje ensamblador", "text": "", "subsections": [{"name": "Perspectiva hist\u00f3rica", "text": "Los lenguajes ensambladores fueron primero desarrollados en los a\u00f1os 1950, cuando fueron referidos como lenguajes de programaci\u00f3n de segunda generaci\u00f3n. Por ejemplo, el SOAP (Symbolic Optimal Assembly Program) era un lenguaje ensamblador de 1957 para el computador IBM 650. Los lenguajes ensambladores eliminaron mucha de la propensi\u00f3n a errores y del consumo de tiempo de la programaci\u00f3n de los lenguajes de primera generaci\u00f3n, que se necesitaba con los primeros computadores, liberando a los programadores del tedio tal como recordar c\u00f3digos num\u00e9ricos y c\u00e1lculo de direcciones. Una vez fueron ampliamente usados para todo tipo de programaci\u00f3n. Sin embargo, por los a\u00f1os 1980 (1990 en los microcomputadores), su uso hab\u00eda sido en gran parte suplantado por los lenguajes de alto nivel,[cita\u00a0requerida] en la b\u00fasqueda de una mejorada productividad en programaci\u00f3n. Hoy en d\u00eda, aunque el lenguaje ensamblador es casi siempre manejado y generado por los compiladores, todav\u00eda se usa para la manipulaci\u00f3n directa del hardware, acceso a instrucciones especializadas del procesador, o para resolver problemas de desempe\u00f1o cr\u00edtico. Los usos t\u00edpicos son controladores/manejadores (drivers) de dispositivo, sistemas embebidos de bajo nivel, y sistemas de tiempo real.\nHist\u00f3ricamente, un gran n\u00famero de programas han sido escritos enteramente en lenguaje ensamblador. Los sistemas operativos fueron casi exclusivamente escritos en lenguaje ensamblador hasta la aceptaci\u00f3n amplia del lenguaje de programaci\u00f3n C en los a\u00f1os 1970 y principios de los 1980. Tambi\u00e9n, muchas aplicaciones comerciales fueron escritas en lenguaje ensamblador, incluyendo una gran cantidad del software escrito por grandes corporaciones para mainframes de IBM. Los lenguajes COBOL y FORTRAN finalmente desplazaron mucho de este trabajo, aunque un n\u00famero de organizaciones grandes conservaran las infraestructuras de aplicaciones en lenguaje ensamblador hasta bien entrados los a\u00f1os 1990.\nLa mayor\u00eda de los primeros microcomputadores confiaron en el lenguaje ensamblador codificado a mano, incluyendo la mayor\u00eda de los sistemas operativos y de las aplicaciones grandes. Esto era porque estos sistemas ten\u00edan limitaciones severas de recursos, impusieron idiosincr\u00e1ticas arquitecturas de memoria y de pantalla, y proporcionaron servicios de sistema limitados y con errores. Quiz\u00e1s m\u00e1s importante era la falta de compiladores de primera clase de lenguajes de alto nivel adecuados para el uso en el microcomputador. Un factor psicol\u00f3gico tambi\u00e9n pudo haber jugado un papel: la primera generaci\u00f3n de programadores de los microcomputadores conserv\u00f3 una actitud de aficionado de \"alambres y alicates\".\nEn un contexto m\u00e1s comercial, las m\u00e1s grandes razones para usar el lenguaje ensamblador era hacer programas con m\u00ednimo tama\u00f1o, m\u00ednima sobrecarga, mayor velocidad y confiabilidad.\nLos t\u00edpicos ejemplos de programas grandes en lenguaje ensamblador de ese tiempo son los sistemas operativos IBM PC DOS y aplicaciones tempranas tales como la hoja de c\u00e1lculo Lotus 1-2-3, y casi todos los juegos populares para la familia Atari 800 de computadores personales. Incluso en los a\u00f1os 1990, la mayor\u00eda de los videojuegos de consola fueron escritos en ensamblador, incluyendo la mayor\u00eda de los juegos para la Mega Drive/Genesis y el Super Nintendo Entertainment System.[cita\u00a0requerida] Seg\u00fan algunos insiders de la industria, el lenguaje ensamblador era el mejor lenguaje de programaci\u00f3n a usar para obtener el mejor desempe\u00f1o del Sega Saturn, una consola para la cual era notoriamente desafiante desarrollar y programar juegos.[9]\u200b El popular juego de arcade NBA Jam (1993) es otro ejemplo. El ensamblador ha sido por largo trecho, el lenguaje de desarrollo primario en los computadores hogare\u00f1os Commodore 64, Atari ST, as\u00ed como el ZX Spectrum. Esto fue as\u00ed en gran parte porque los dialectos del BASIC en estos sistemas ofrecieron insuficiente velocidad de ejecuci\u00f3n, as\u00ed como insuficientes caracter\u00edsticas para aprovechar completamente el hardware disponible. Algunos sistemas, m\u00e1s notablemente el Amiga, incluso tienen IDEs con caracter\u00edsticas de depuraci\u00f3n y macros altamente avanzados, tales como el freeware ASM-One assembler, comparable a las del Microsoft Visual Studio (el ASM-Uno precede al Microsoft Visual Studio).\nEl ensamblador para el VIC-20 fue escrito por Don French y publicado por French Silk. Con 1639 bytes de longitud, su autor cree que es el m\u00e1s peque\u00f1o ensamblador simb\u00f3lico jam\u00e1s escrito. El ensamblador soportaba el direccionamiento simb\u00f3lico usual y la definici\u00f3n de cadenas de caracteres o cadenas hexadecimales. Tambi\u00e9n permit\u00eda expresiones de direcciones que pod\u00edan combinarse con las operaciones de adici\u00f3n, sustracci\u00f3n, multiplicaci\u00f3n, divisi\u00f3n, AND l\u00f3gico, OR l\u00f3gico, y exponenciaci\u00f3n.[10]\u200b"}, {"name": "Uso actual", "text": "Siempre ha habido debates sobre la utilidad y el desempe\u00f1o del lenguaje ensamblador relativo a lenguajes de alto nivel. El lenguaje ensamblador tiene nichos espec\u00edficos donde es importante (ver abajo). Pero, en general, los modernos compiladores de optimizaci\u00f3n para traducir lenguajes de alto nivel en c\u00f3digo pueden correr tan r\u00e1pidamente como el lenguaje ensamblador escrito a mano, a pesar de los contraejemplos que pueden ser encontrados.[11]\u200b[12]\u200b[13]\u200b La complejidad de los procesadores modernos y del subsistema de memoria hace la optimizaci\u00f3n efectiva cada vez m\u00e1s dif\u00edcil para los compiladores, as\u00ed como para los programadores en ensamblador.[14]\u200b[15]\u200b Adicionalmente, y para la consternaci\u00f3n de los amantes de la eficiencia, el desempe\u00f1o cada vez mayor del procesador ha significado que la mayor\u00eda de los CPU est\u00e9n desocupados la mayor parte del tiempo, con retardos causados por embotellamientos predecibles tales como operaciones de entrada/salida y paginaci\u00f3n de memoria. Esto ha hecho que la velocidad de ejecuci\u00f3n cruda del c\u00f3digo no sea un problema para muchos programadores.\nHay algunas situaciones en las cuales los profesionales pudieran elegir utilizar el lenguaje ensamblador. Por ejemplo cuando:\nEs requerido un ejecutable binario independiente (stand-alone), es decir uno que deba ejecutarse sin recursos a componentes de tiempo de ejecuci\u00f3n o a bibliotecas asociadas con un lenguaje de alto nivel; \u00e9sta es quiz\u00e1s la situaci\u00f3n m\u00e1s com\u00fan. Son programas empotrados que solo almacenan una peque\u00f1a cantidad de memoria y el dispositivo est\u00e1 dirigido para hacer tareas para un simple prop\u00f3sito. Ejemplos consisten en tel\u00e9fonos, sistemas de combustible e ignici\u00f3n para autom\u00f3viles, sistemas de control del aire acondicionado, sistemas de seguridad, y sensores.\nInteractuando directamente con el hardware, por ejemplo en controladores (drivers) de dispositivo y manejadores de interrupci\u00f3n.\nUsando instrucciones espec\u00edficas del procesador no explotadas o disponibles por el compilador. Un ejemplo com\u00fan es la instrucci\u00f3n de rotaci\u00f3n bitwise en el n\u00facleo de muchos algoritmos de cifrado.\nCreando funciones vectorizadas para programas en lenguajes de alto nivel como C. En el lenguaje de alto nivel esto es a veces ayudado por funciones intr\u00ednsecas del compilador que mapean directamente a los mnem\u00f3nicos del SIMD, pero sin embargo resulta en una conversi\u00f3n de ensamblador de uno a uno para un procesador de vector asociado.\nEs requerida la optimizaci\u00f3n extrema, ej, en un bucle interno en un algoritmo intensivo en el uso del procesador. Los programadores de juegos toman ventaja de las habilidades de las caracter\u00edsticas del hardware en los sistemas, permitiendo a los juegos correr m\u00e1s r\u00e1pidamente. Tambi\u00e9n las grandes simulaciones cient\u00edficas requieren algoritmos altamente optimizados, ej, \u00e1lgebra lineal con BLAS o la transformada de coseno discreta (ej, la versi\u00f3n SIMD en ensamblador del x264,[16]\u200b (una biblioteca para codificar streams de video).\nUn sistema con severas limitaciones de recursos (ej, un sistema empotrado) debe ser codificado a mano para maximizar el uso de los limitados recursos; pero esto est\u00e1 llegando a ser menos com\u00fan a medida que el precio del procesador decrece y el desempe\u00f1o mejora.\nNo existe ning\u00fan lenguaje de alto nivel, en un procesador nuevo o especializado.\nEscribiendo programas de tiempo real que necesitan sincronizaci\u00f3n y respuestas precisas, tales como sistemas de navegaci\u00f3n de vuelo, y equipo m\u00e9dico. Por ejemplo, en un sistema fly-by-wire (vuelo por mandos el\u00e9ctricos), la telemetr\u00eda debe ser interpretada y hay que actuar dentro de limitaciones estrictas de tiempo. Tales sistemas deben eliminar fuentes de retrasos impredecibles, que pueden ser creados por (algunos) lenguajes interpretados, recolecci\u00f3n de basura autom\u00e1tica, operaciones de paginaci\u00f3n, o multitarea apropiativa. Sin embargo, algunos lenguajes de alto nivel incorporan componentes de tiempo de ejecuci\u00f3n e interfaces de sistema operativo que pueden introducir tales retrasos. Elegir el ensamblador o lenguajes de bajo nivel para tales sistemas da a los programadores mayor visibilidad y control sobre los detalles del procesamiento.\nEs requerido control total sobre el ambiente, en situaciones de seguridad extremadamente alta donde nada puede darse por sentado.\nSe escriben virus de computadora, bootloaders, ciertos controladores/manejadores de dispositivo, u otros elementos muy cerca del hardware o al sistema operativo de bajo nivel.\nSe escriben simuladores del conjunto de instrucciones para monitoreo, trazado y depuraci\u00f3n de errores donde la sobrecarga adicional es mantenida al m\u00ednimo.\nSe hace ingenier\u00eda inversa en binarios existentes que pueden o no haber sido escritos originalmente en un lenguaje de alto nivel, por ejemplo al crackear la protecci\u00f3n anticopia del software propietario.\nSe hace ingenier\u00eda inversa y modificaci\u00f3n de videojuegos (tambi\u00e9n denominado ROM hacking), que es posible por medio de varios m\u00e9todos. El m\u00e1s ampliamente implementado es alterando el c\u00f3digo del programa a nivel de lenguaje ensamblador.\nSe escribe c\u00f3digo automodificable (tambi\u00e9n conocido como polim\u00f3rfico), algo para lo que el lenguaje ensamblador se presta bien.\nSe escriben juegos y otros softwares para calculadoras gr\u00e1ficas.[17]\u200b\nSe escribe software compilador que genera c\u00f3digo ensamblador, y por lo tanto los desarrolladores deben ser programadores de lenguaje ensamblador.\nSe escriben algoritmos criptogr\u00e1ficos que siempre deben tomar estrictamente el mismo tiempo para ejecutar, previniendo ataques de tiempo.\nSin embargo, el lenguaje ensamblador es todav\u00eda ense\u00f1ado en la mayor\u00eda de los programas de ciencias de la computaci\u00f3n e ingenier\u00eda electr\u00f3nica. Aunque hoy en d\u00eda, pocos programadores trabajan regularmente con el lenguaje ensamblador como una herramienta, los conceptos fundamentales contin\u00faan siendo muy importantes. Tales t\u00f3picos fundamentales, como aritm\u00e9tica binaria, asignaci\u00f3n de memoria, procesamiento del stack, codificaci\u00f3n de conjunto de caracteres, procesamiento de interrupciones, y dise\u00f1o de compiladores, ser\u00edan duros de estudiar en detalle sin la comprensi\u00f3n de c\u00f3mo el computador opera a nivel del hardware. Puesto que el comportamiento del computador es fundamentalmente definido por su conjunto de instrucciones, la manera l\u00f3gica de aprender tales conceptos es estudiar un lenguaje ensamblador. La mayor\u00eda de los computadores modernos tienen un conjunto de instrucciones similares. Por lo tanto, estudiar un solo lenguaje ensamblador es suficiente para aprender: i) los conceptos b\u00e1sicos; ii) reconocer situaciones donde el uso de lenguaje ensamblador puede ser apropiado; y iii) ver c\u00f3mo el c\u00f3digo ejecutable eficiente puede ser creado por los lenguajes de alto nivel[18]\u200b"}, {"name": "Aplicaciones t\u00edpicas", "text": "El lenguaje ensamblador hard-coded es t\u00edpicamente usado en el ROM de arranque del sistema (BIOS en los sistemas compatible IBM PC). Este c\u00f3digo de bajo nivel es usado, entre otras cosas, para inicializar y probar el hardware del sistema antes de cargar el sistema operativo, y est\u00e1 almacenado en el ROM. Una vez que ha tomado lugar un cierto nivel de inicializaci\u00f3n del hardware, la ejecuci\u00f3n se transfiere a otro c\u00f3digo, t\u00edpicamente escrito en lenguajes de alto nivel; pero el c\u00f3digo corriendo inmediatamente despu\u00e9s de que es aplicada la energ\u00eda usualmente est\u00e1 escrito en lenguaje ensamblador. Lo mismo es cierto para los boot loaders.\nMuchos compiladores traducen lenguajes de alto nivel a lenguaje ensamblador primero, antes de la compilaci\u00f3n completa, permitiendo que el c\u00f3digo en ensamblador sea visto para prop\u00f3sitos de depuraci\u00f3n y optimizaci\u00f3n. Lenguajes de relativo bajo nivel, como C, con frecuencia proveen sintaxis especial para empotrar lenguaje ensamblador en cada plataforma de hardware. El c\u00f3digo portable del sistema entonces puede usar estos componentes espec\u00edficos a un procesador a trav\u00e9s de una interfaz uniforme.\nEl lenguaje ensamblador tambi\u00e9n es valioso en ingenier\u00eda inversa, puesto que muchos programas solamente son distribuidos en una forma de c\u00f3digo de m\u00e1quina. El c\u00f3digo de m\u00e1quina es usualmente f\u00e1cil de trasladar hacia lenguaje ensamblador para luego ser cuidadosamente examinado en esta forma, pero es muy dif\u00edcil de trasladar hacia un lenguaje de alto nivel. Herramientas como Interactive Disassembler, hacen uso extenso del desensamblador para tales prop\u00f3sitos.\nUn nicho que hace uso del lenguaje ensamblador es el demoscene. Ciertas competiciones requieren a los concursantes restringir sus creaciones a un muy peque\u00f1o tama\u00f1o (ej, 256 bytes, 1 KB, 4 KB o 64 KB), y el lenguaje ensamblador es el lenguaje de preferencia para alcanzar este objetivo.[19]\u200b Cuando los recursos son una preocupaci\u00f3n, es una necesidad la codificaci\u00f3n en ensamblador, especialmente en sistemas constre\u00f1idos por el procesamiento del CPU, como los primeros modelos del Amiga, y el Commodore 64. El c\u00f3digo optimizado en ensamblador es escrito \"a mano\" por los programadores en un intento de minimizar el n\u00famero de ciclos de CPU usados. Las limitaciones del CPU son tan grandes que cada ciclo cuenta. Usar tales m\u00e9todos ha habilitado, a sistemas como el Commodore 64, para producir gr\u00e1ficos en 3D en tiempo real con efectos avanzados, una haza\u00f1a que puede ser considerada improbable o incluso imposible para un sistema con un procesador de 0.99 MHz.[cita\u00a0requerida]"}]}, {"name": "Detalles adicionales", "text": "Para un determinado computador personal, mainframe, sistema empotrado, y consola de juegos, tanto del pasado como del presente, ha sido escrito al menos uno, y posiblemente docenas de ensambladores. Para algunos ejemplos, vea la lista de ensambladores.\nEn los sistemas Unix, el ensamblador es llamado tradicionalmente as, aunque no es un simple cuerpo de c\u00f3digo, siendo t\u00edpicamente escrito uno nuevo por cada port. Un n\u00famero de variantes de Unix usan el GAS\nDentro de los grupos de procesadores, cada ensamblador tiene su propio dialecto. A veces, algunos ensambladores pueden leer el dialecto de otro, por ejemplo, TASM puede leer el viejo c\u00f3digo del MASM, pero no al rev\u00e9s. FASM y NASM tienen una sintaxis similar, pero cada uno soporta diferentes macros que pueden ser dif\u00edcil de trasladar de uno al otro. Las cosas b\u00e1sicas son siempre las mismas, pero las caracter\u00edsticas avanzadas ser\u00e1n diferentes[20]\u200b\nTambi\u00e9n, los lenguajes ensambladores a veces pueden ser portables a trav\u00e9s de diferentes sistemas operativos en el mismo tipo de CPU. Las convenciones de llamadas entre los sistemas operativos con frecuencia difieren ligeramente o en nada. y con cuidado es posible ganar portabilidad en el lenguaje ensamblador, usualmente al enlazar con una biblioteca de lenguaje C que no cambia entre sistemas operativos. Un simulador de conjunto de instrucciones (que idealmente ser\u00eda escrito en lenguaje ensamblador) puede, en teor\u00eda, procesar el c\u00f3digo objeto/binario de cualquier ensamblador) para lograr la portabilidad incluso a trav\u00e9s de plataformas (con una sobrecargue no mayor que la de un interpretador de bytecode t\u00edpico). Esto es esencialmente lo que logra el microc\u00f3digo cuando una plataforma de hardware cambia internamente.\nPor ejemplo, muchas cosas en libc dependen del preprocesador para hacer, al programa antes de compilar, cosas que son espec\u00edficas del sistema operativo o espec\u00edficas del C. De hecho, algunas funciones y s\u00edmbolos ni siquiera est\u00e1n garantizados que existan fuera del preprocesador. Peor a\u00fan, el tama\u00f1o y el orden de los campos de las estructuras, tanto como el tama\u00f1o de ciertas typedefs como off_t, no est\u00e1n disponibles en lenguaje ensamblador sin la ayuda de un script de configuraci\u00f3n, y difieren incluso entre versiones de Linux, haciendo imposible portar llamadas de funciones en libc diferentes de los que toman simples enteros o punteros como par\u00e1metros. Para manejar estos problemas, el proyecto FASMLIB provee una biblioteca de lenguaje ensamblador portable para las plataformas Win32 y Linux, pero todav\u00eda est\u00e1 muy incompleta.[21]\u200b\nAlgunos lenguajes de muy alto nivel, como C y Borland/Pascal, soportan ensamblado en l\u00ednea, donde relativamente secciones cortas de c\u00f3digo en ensamblador puede ser empotradas dentro del c\u00f3digo del lenguaje de alto nivel. El lenguaje Forth com\u00fanmente contiene un ensamblador usado para codificar palabras.\nLa mayor\u00eda de la gente usa un emulador para depurar sus programas en lenguaje ensamblador.", "subsections": []}, {"name": "Ejemplos de lenguaje ensamblador", "text": "", "subsections": [{"name": "Ejemplo para la arquitectura x86", "text": "El siguiente es un ejemplo del programa cl\u00e1sico Hola mundo escrito para la arquitectura de procesador x86 (bajo el sistema operativo DOS).\n; "}, {"name": "-----------------------------------------", "text": "; Programa que imprime un string en la pantalla\n.model\nsmall\n; modelo de memoria\n.stack\n; segmento del stack\n.data\n; segmento de datos\nCadena1\nDB\n'\nHola\nMundo.\n; string a imprimir (finalizado en $)\n.code\n; segmento del c\u00f3digo\n; Inicio del programa\nprograma:\n; "}, {"name": "------------------------------------------------------------------------------------------------", "text": "; inicia el segmento de datos\nMOV\nAX\n,\n@\ndata\n; carga en AX la direcci\u00f3n del segmento de datos\nDS\n; mueve la direcci\u00f3n al registro de segmento por medio de AX\n; Imprime un string en pantalla\nDX\noffset\nCadena1\n; mueve a DX la direcci\u00f3n del string a imprimir\nAH\n9\n; AH = c\u00f3digo para indicar al MS DOS que imprima en la pantalla, el string en DS:DX\nINT\n21\nh\n; llamada al MS DOS para ejecutar la funci\u00f3n (en este caso especificada en AH)\n; Finaliza el programa\n20\n; llamada al MS DOS para finalizar el programa\nend\nprograma"}, {"name": "Ejemplo para el computador virtual (POCA)", "text": "Una selecci\u00f3n de instrucciones para una computadora virtual[22]\u200b) con las correspondientes direcciones de memoria en las que se ubicar\u00e1n las instrucciones. Estas direcciones NO son est\u00e1ticas. Cada instrucci\u00f3n se acompa\u00f1a del c\u00f3digo en lenguaje ensamblador generado (c\u00f3digo objeto) que coincide con la arquitectura de computador virtual, o conjunto de instrucciones ISA."}, {"name": "Ejemplo para el computador virtual (ARC)", "text": "ARC es un subconjunto del modelo de arquitectura basado en el procesador SPARC. ARC ( A RISC Computer) contiene la mayor\u00eda de las caracter\u00edsticas\nimportantes de la arquitectura SPARC. "}, {"name": "Ejemplo para el \u00b5C Intel 8051", "text": "C\u00f3digo en lenguaje ensamblador para \u00b5C Intel 80C51:\nORG\n8030\nH\ninclude\nT05SEG:\nSETB\nTR0\nJNB\nuSEG\nT05SEG\n;esta subrutina es utilizada\nCLR\n;para realizar una cuenta de\nCPL\n;0,5 segundos mediante la\nR1\nDPL\n;interrupci\u00f3n del timer 0.\nINVOKE\nR2\nDPH\nCJNE\n#07\n#78\nDPTR\n#0\nRET"}, {"name": "Ejemplo para el Microchip PIC16F84", "text": "C\u00f3digo en lenguaje ensamblador para el microcontrolador 16F84 de Microchip:\n0\nInicio\nbcf\nSTATUS\nRP0\nclrf\nPORTB\nmovlw\n0xFF\nmovwf\nPORTA\nbsf\nPrincipal\nmovf\nW\nContador\nmovf\nF\nbtfsc\nZ\ngoto\nPuntoDecimal\nsublw\nd\nbtfss\nC\nEND"}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Lenguaje ensamblador x86\nAnexo:Listados de instrucciones x86\nEnsamblador\nMacro ensamblador\nEnsamblador de alto nivel\nDesensamblador\nCompilador\nDecompilador\nInt\u00e9rprete (inform\u00e1tica)\nDepurador\nLenguaje de alto nivel\nLenguaje de bajo nivel\nLenguaje de m\u00e1quina\nConjunto de instrucciones\nTipos de datos m\u00e1quina\nLittle man computer\nEnsambladores\nComparaci\u00f3n de ensambladores\nHigh Level Assembly\nNetwide Assembler\nFlat assembler\nGNU Assembler\nMicrosoft Macro Assembler\nRosASM\nA86 y A386 assemblers\nTurbo Assembler\nGNU toolchain\nDesensambladores\nInteractive Disassembler\nDepuradores\nSoftICE\nGNU Debugger\nOllyDbg\nValgrind\nRosASM\nA86 y A386 assemblers\nData Display Debugger\nOtros\nSistemas operativos escritos completamente en assembler:\nMenuetOS\nKolibriOS\nBareMetal OS", "subsections": []}, {"name": "Referencias", "text": "\u2191 \"DSP: C versus Assembly\", Steven W. Smith, Ph.D., 2011\n\u2191 David Salomon (1993). Assemblers and Loaders\n\u2191 Beck, Leland L. (1996). \u00ab2\u00bb. System Software: An Introduction to Systems Programming. Addison Wesley.\u00a0\n\u2191 http://www.z80.de/z80/z80code.htm\n\u2191 \u00abMacros (C/C++), MSDN Library for Visual Studio 2008\u00bb. Microsoft Corp. Consultado el 22 de junio de 2010.\u00a0\n\u2191 \u00abConcept 14 Macros\u00bb. MVS Software. Consultado el 25 de mayo de 2009.\u00a0\n\u2191 Answers.com. \u00abassembly language: Definition and Much More from Answers.com\u00bb. Consultado el 19 de junio de 2008.\u00a0\n\u2191 NESHLA: The High Level, Open Source, 6502 Assembler for the Nintendo Entertainment System\n\u2191 \u00abEidolon's Inn\u00a0: SegaBase Saturn\u00bb. Archivado desde el original el 13 de julio de 2008. Consultado el 25 de julio de 2008.\u00a0\n\u2191 Jim Lawless (21 de mayo de 2004). \u00abSpeaking with Don French\u00a0: The Man Behind the French Silk Assembler Tools\u00bb. Archivado desde el original el 21 de agosto de 2008. Consultado el 25 de julio de 2008.\u00a0\n\u2191 \u00abWriting the Fastest Code, by Hand, for Fun: A Human Computer Keeps Speeding Up Chips\u00bb. New York Times, John Markoff. 28 de noviembre de 2005. Consultado el 4 de marzo de 2010.\u00a0\n\u2191 \u00abBit-field-badness\u00bb. hardwarebug.org. 30 de enero de 2010. Archivado desde el original el 5 de febrero de 2010. Consultado el 4 de marzo de 2010.\u00a0\n\u2191 \u00abGCC makes a mess\u00bb. hardwarebug.org. 13 de mayo de 2009. Archivado desde el original el 16 de marzo de 2010. Consultado el 4 de marzo de 2010.\u00a0\n\u2191 Randall Hyde. \u00abThe Great Debate\u00bb. Archivado desde el original el 16 de junio de 2008. Consultado el 3 de julio de 2008.\u00a0\n\u2191 \u00abCode sourcery fails again\u00bb. hardwarebug.org. 30 de enero de 2010. Archivado desde el original el 2 de abril de 2010. Consultado el 4 de marzo de 2010.\u00a0\n\u2191 \u00abx264.git/common/x86/dct-32.asm\u00bb. git.videolan.org. 29 de septiembre de 2010. Archivado desde el original el 4 de marzo de 2012. Consultado el 29 de septiembre de 2010.\u00a0\n\u2191 \u00ab68K Programming in Fargo II\u00bb. Consultado el 3 de julio de 2008.\u00a0\n\u2191 Hyde, Randall (30 de septiembre de 1996). \u00abForeword (\"Why would anyone learn this stuff?\"), op. cit.\u00bb. Archivado desde el original el 22 de febrero de 2010. Consultado el 5 de marzo de 2010.\u00a0\n\u2191 \u00ab256bytes demos archives\u00bb. Consultado el 3 de julio de 2008.\u00a0\n\u2191 Randall Hyde. \u00abWhich Assembler is the Best?\u00bb. Archivado desde el original el 18 de octubre de 2007. Consultado el 19 de octubre de 2007.\u00a0\n\u2191 \"vid\". \u00abFASMLIB: Features\u00bb. Consultado el 19 de octubre de 2007.\u00a0\n\u2191 Principles of Computer Architecture (POCA) \u2013 ARCTools computadora virtual disponible para descarga y ejecuci\u00f3n del c\u00f3digo, acceso el 24 de agosto de 2005\n\u2191 Murdocca, Miles J. y Heuring, Vincent P.:Principles of Computer Architecture (2000), Prentice Hall, ISBN 0-201-43664-7", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Dominic Sweetman: See MIPS Run. Morgan Kaufmann Publishers, 1999. ISBN 1-55860-410-3\nRobert Britton: MIPS Assembly Language Programming. Prentice Hall, 2003. ISBN 0-13-142044-5\nJohn Waldron: Introduction to RISC Assembly Language Programming. Addison Wesley, 1998. ISBN 0-201-39828-1\nASM Community Book \"An online book full of helpful ASM info, tutorials and code examples\" by the ASM Community\nJonathan Bartlett: Programming from the Ground Up. Bartlett Publishing, 2004. ISBN 0-9752838-4-7Also available online as PDF Archivado el 6 de febrero de 2009 en Wayback Machine.\nPaul Carter: PC Assembly Language. Free ebook, 2001.Website\nJeff Duntemann: Assembly Language Step-by-Step. Wiley, 2000. ISBN 0-471-37523-3\nRandall Hyde: The Art of Assembly Language. No Starch Press, 2003. ISBN 1-886411-97-2Draft versions available online as PDF and HTML\nPeter Norton, John Socha, Peter Norton's Assembly Language Book for the IBM PC, Brady Books, NY: 1986.\nMichael Singer, PDP-11. Assembler Language Programming and Machine Organization, John Wiley & Sons, NY: 1980.\nPrincipios de arquitectura de computadoras - Miles J. Murdocca - Vincent P. Heuring", "subsections": []}, {"name": "Enlaces externos", "text": " Wikilibros alberga un libro o manual sobre Programaci\u00f3n en lenguaje ensamblador.\nThe Art of Assembly Language Programming,\nComputer-Books.us, Online Assembly Language Brooks\nPC Assembly Tutorial using NASM and GCC by Paul Carter\nProgramming from the Ground Up by Jonathan Bartlett\nThe ASM Book by the ASM Community\nInline::ASM m\u00f3dulo Perl en CPAN para programar en lenguaje ensamblador dentro de programas Perl (en ingl\u00e9s)\nEjemplos pr\u00e1cticos de ensamblador en GNU/Linux", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Libra_esterlina", "title": "Libra esterlina", "summary": "en ingl\u00e9s\nReino Unido\nIslas Malvinas\nTerritorio Brit\u00e1nico del Oc\u00e9ano \u00cdndico\nIsla de Man\nJersey\n[\n]\n31 de agosto de 2024\nLa libra esterlina (pound sterling en ingl\u00e9s, s\u00edmbolo monetario: \u00a3) es la moneda oficial del Reino Unido as\u00ed como de las Dependencias de la Corona y de algunos territorios brit\u00e1nicos de ultramar. En sus dem\u00e1s territorios coloniales se usan diferentes divisas pero fijadas a la esterlina: la libra gibraltare\u00f1a, libra malvinense y libra de Santa Elena. En Egipto por ejemplo se usa la Libra egipcia a pesar de no formar parte del Reino Unido. Su s\u00edmbolo monetario es \u00a3 y proviene del lat\u00edn libra, que se refer\u00eda a la unidad de masa. Una libra se divide en cien peniques.\nEl nombre oficial completo, libra esterlina (en plural, libras esterlinas), es usado sobre todo en contextos formales y tambi\u00e9n cuando es necesario distinguir la moneda que se usa en el Reino Unido de las que se utilizan en otros pa\u00edses y que tienen el mismo nombre. El nombre de la divisa \u2014pero no los nombres de sus unidades\u2014 a veces es abreviado solamente a \"esterlina\", particularmente en los mercados financieros de venta al por mayor; por ejemplo \"pago aceptado en esterlinas\", pero no \"eso cuesta cinco esterlinas\". Las abreviaturas \"ster.\" o \"stg.\" son usadas ocasionalmente. El t\u00e9rmino libra brit\u00e1nica es usado com\u00fanmente en situaciones menos formales, aunque no es un nombre oficial de la divisa. La esterlina es una antigua moneda inglesa de plata esterlina, una aleaci\u00f3n de un 92,5\u00a0% de plata y un 7,5\u00a0% de cobre y/u otros metales, y con una masa de 1,555 gramos o 1/240 de una libra troy.\nLa libra fue originalmente el valor del peso de una Libra Torre de plata esterlina (de ah\u00ed que se llame \"libra esterlina\"). El s\u00edmbolo de la divisa es el s\u00edmbolo de la libra, originalmente \u20a4 con dos barras cruzadas, m\u00e1s tarde fue m\u00e1s com\u00fan \u00a3 con una sola barra. El s\u00edmbolo se deriva de la letra \"L\", de la abreviaci\u00f3n LSD \u2014librae, solidi, denarii\u2014 usada para las libras, chelines y peniques del sistema monetario duodecimal original. Libra era la unidad romana b\u00e1sica de peso, que se derivaba del lat\u00edn de \"balanza\". El c\u00f3digo ISO\u00a04217 es GBP (en ingl\u00e9s Great Britain pound, Libra de Gran Breta\u00f1a). Ocasionalmente es vista la abreviaci\u00f3n UKP, pero esta es incorrecta. Las Dependencias de la Corona usan sus propios c\u00f3digos (no ISO) cuando desean reflejar su distinci\u00f3n. Los recursos generalmente son intercambiados por peniques, as\u00ed que los comerciantes pueden referirse al penique esterlino, GBX (a veces BGp), cuando enlistan sus precios.\nDespu\u00e9s de la adopci\u00f3n del euro por varios pa\u00edses, la libra se convirti\u00f3 en la divisa m\u00e1s antigua del mundo a\u00fan en uso, y actualmente tiene la tercera porci\u00f3n m\u00e1s grande de monedas de reserva a nivel mundial, despu\u00e9s del d\u00f3lar estadounidense y el euro. La libra esterlina es la cuarta divisa m\u00e1s intercambiada en el mercado internacional de intercambio detr\u00e1s del d\u00f3lar, el euro y el yen japon\u00e9s.", "sections": [{"name": "Monedas con el mismo origen etimol\u00f3gico", "text": "La antigua moneda italiana lira tiene el mismo origen etimol\u00f3gico que la libra. La lira tambi\u00e9n es la moneda de otros pa\u00edses como L\u00edbano o Turqu\u00eda donde la moneda es la libra o la lira libanesa (en los billetes dice en \u00e1rabe \"lira\" y en franc\u00e9s \"livre\").", "subsections": []}, {"name": "Subdivisiones", "text": "Antes de la decimalizaci\u00f3n, la libra se divid\u00eda en 20 chelines (shilling), y el chel\u00edn en 12 peniques (penny, plural pence), haciendo un total de 240 peniques en una libra. El s\u00edmbolo del chel\u00edn era \"s\" \u2014no por la primera letra de la palabra en ingl\u00e9s, sino por la palabra latina solidus\u2014. El s\u00edmbolo del penique era \"d\", de la palabra francesa denier, que se originaba de la palabra latina denario (el s\u00f3lido bizantino y el denario eran antiguas monedas romanas). Una suma mezclada de chelines y peniques como \"dos chelines y seis peniques\" se escribir\u00eda como \"2/6\" o \"2s\u00a06d\", y se dir\u00eda \"dos y seis\". Cinco chelines se escribir\u00eda como \"5s\" o, m\u00e1s frecuentemente, \"5/-\". En la \u00e9poca de la decimalizaci\u00f3n, la unidad m\u00e1s peque\u00f1a era el penique, aunque en el pasado se hab\u00edan acu\u00f1ado monedas de menor valor.\nDesde la decimalizaci\u00f3n en 1971, la libra est\u00e1 dividida en 100 peniques. El s\u00edmbolo del penique es \"p\"; una cantidad como 50p (0,50\u00a0\u00a3) se pronuncia normalmente (en ingl\u00e9s) como \"cincuenta pee\" en lugar de \"cincuenta pence\" (esto para ayudar a distinguir entre los nuevos peniques y los viejos durante el cambio de un sistema a otro).\nDespu\u00e9s del D\u00eda Decimal (15 de febrero de 1971), el valor de la libra se mantuvo intacto, pero ahora estaba dividida en 100 nuevos peniques en lugar de 240 de los viejos. Cada penique decimal ten\u00eda el valor de 2,4 de los peniques pre-decimales. Unos cuantos a\u00f1os despu\u00e9s de la decimalizaci\u00f3n, al penique decimal se le llamaba com\u00fanmente \"nuevo penique\". Las monedas de las denominaciones de \u00bdp, 1p, 2p, 5p, 10p y 50p todas ten\u00edan la inscripci\u00f3n \"Nuevo penique\" hasta 1982, cuando la inscripci\u00f3n cambi\u00f3 a Medio penique, un penique, dos peniques, cinco peniques, y as\u00ed. Las viejas monedas de un chel\u00edn (\"1/-\") y dos chelines (\"2/-\", flor\u00edn) eran equivalentes a las monedas de 5p y 10p respectivamente, y continuaron como v\u00e1lidas en el sistema decimal hasta que las monedas de 5p y 10p fueron reemplazadas por versiones m\u00e1s peque\u00f1as en 1990 y 1992 respectivamente, mientras las viejas versiones eran quitadas de circulaci\u00f3n en 1991 y 1993. La vieja moneda de seis peniques tambi\u00e9n se mantuvo en circulaci\u00f3n, con valor de 2\u00bd nuevos peniques, antes de ser quitadas de circulaci\u00f3n en 1980.", "subsections": []}, {"name": "Moneda de curso legal y expediciones regionales", "text": "Las leyes de la moneda de curso legal en el Reino Unido son especialmente complejas: de acuerdo con la Royal Mint (Real Casa de la Moneda), moneda de curso legal significa \"que un deudor no puede ser demandado exitosamente por la suspensi\u00f3n del pago si paga en la corte con la moneda de curso legal. Esto no significa que cualquier transacci\u00f3n ordinaria tenga que realizarse con la moneda de curso legal o s\u00f3lo con la cantidad denominada por la legislaci\u00f3n. Ambas partes son libres de acordar cualquier forma de pago ya sea la moneda de curso legal o cualquier otra forma, de acuerdo con sus deseos. Para cumplir las estrictas reglas que gobiernan a la moneda en curso legal es necesario, por ejemplo, ofrecer el importe exacto debido porque no se puede reclamar ning\u00fan cambio\".[cita\u00a0requerida]\nEn Inglaterra y Gales, los billetes expedidos por el Banco de Inglaterra son moneda de curso legal, lo que significa que pueden ser aceptados como el pago de una deuda; no tienen que ser aceptados, pero el deudor tendr\u00eda una buena defensa legal contra una demanda por la suspensi\u00f3n del pago de la deuda. En Escocia e Irlanda del Norte, ning\u00fan billete es moneda de curso legal, y cada banco que expide billetes lo hace en la forma de sus propias letras de cambio. En las Islas del Canal y la Isla de Man, las variaciones locales en los billetes son moneda de curso legal en sus respectivas jurisdicciones.\nLos billetes escoceses, norirlandeses, de las Islas del Canal y maneses a veces son rechazados en las tiendas cuando se usan en Inglaterra. Los tenderos brit\u00e1nicos pueden rechazar cualquier forma de pago, aun siendo moneda de curso legal en esa jurisdicci\u00f3n, porque no existe ninguna deuda cuando la oferta de pago se hace. Cuando se paga una cuenta en un restaurante u otra deuda, las leyes de la moneda de curso legal s\u00ed se aplican, pero normalmente se acepta cualquier m\u00e9todo razonable de pago de la deuda (como tarjeta de cr\u00e9dito o cheque).\nLos billetes son expedidos por los cuatro grandes bancos en Irlanda del Norte \u2014 el Banco de Irlanda, el First Trust Bank (Primer Banco de Trust), el Northern Bank (Banco del Norte) y el Ulster Bank (Banco del \u00dalster). Los billetes impresos en el Banco de Irlanda, aunque son de libras esterlinas, son confunidos en Inglaterra con la antigua libra irlandesa y frecuentemente rechazados. En el a\u00f1o 2000, el Banco del Norte emiti\u00f3 el primer billete pl\u00e1stico en la historia del Reino Unido, correspondiendo en este caso al billete conmemorativo de \u00a35, que fue impreso en Australia.\nLos billetes escoceses son expedidos por el Banco de Escocia, el Banco Real de Escocia y el Clydesdale Bank (Banco Clydesdale), pero (al igual que en Irlanda del Norte) no son moneda de curso legal. Solo las monedas de la Real Casa de la Moneda son moneda de curso legal en Escocia, y solo las monedas de una y dos libras son moneda de curso legal para una cantidad indefinida. Este no siempre fue el caso, ya que durante la Segunda Guerra Mundial los billetes escoceses fueron convertidos en moneda de curso legal en 1939; este estatus fue revertido el 1 de enero de 1946. Algunos billetes del Banco de Inglaterra fueron moneda de curso legal en Escocia e Irlanda del Norte; no obstante, este estatus solo se aplicaba para los billetes de denominaciones inferiores a cinco libras, as\u00ed que despu\u00e9s de que el Banco de Inglaterra quitara de la circulaci\u00f3n el billete de una libra en 1985, ning\u00fan billete circulante est\u00e1 afectado por esta cl\u00e1usula.\nLa moneda de una libra del Reino Unido tiene muchos dise\u00f1os variados en su reverso, que difieren cada a\u00f1o con los nuevos dise\u00f1os que aparecen; sin embargo, todas son monedas de la Real Casa de la Moneda y de legalidad equivalente. Las Dependencias de la Corona: Islas del Canal (incluyendo a Alderney) y la Isla de Man expiden sus propias acu\u00f1aciones.\nTodas las monedas circulantes brit\u00e1nicas son de curso legal en todo el Reino Unido, en la mayor\u00eda de los casos tienen un l\u00edmite de uso por transacci\u00f3n, como la moneda conmemorativa de cinco libras y la de 25 peniques (\"corona\") que raramente se ven en circulaci\u00f3n. Muchas monedas de oro expedidas por la Real Casa de la Moneda siguen siendo de curso legal, pero debido a que tienen un valor met\u00e1lico mucho mayor que el valor que les fue asignado, nunca se usan en circulaci\u00f3n y tienden a ser conservadas por coleccionistas.\nLos territorios brit\u00e1nicos de ultramar de Gibraltar, Santa Elena y sus dependencias asociadas, as\u00ed como las Islas Malvinas, tambi\u00e9n expiden sus propias divisas, que se fijan al valor de la libra.\nLos pa\u00edses que usan la libra o estas divisas ligadas con la libra son conocidos como los pa\u00edses de la zona esterlina. Durante finales del siglo\u00a0XIX y hasta mediados del siglo\u00a0XX, un gran n\u00famero de dominios y colonias brit\u00e1nicas fueron miembros de la zona esterlina.\nLa ley brit\u00e1nica establece que las monedas de curso legal acu\u00f1adas para circular en el pa\u00eds deben tener el retrato del monarca que se encuentre en el trono. As\u00ed, distintos retratos oficiales de la reina Isabel II pueden observarse en las monedas brit\u00e1nicas a trav\u00e9s del tiempo. Asimismo, tras el fallecimiento de la monarca en 2022 fue necesario que la Royal Mint del Reino Unido comenzara a trabajar en los nuevos dise\u00f1os con la efigie del nuevo rey, Carlos III. No obstante, ello no significa que las monedas con el retrato de la reina anterior dejen de tener curso legal, siendo \u00e9stas perfectamente circulantes. Del mismo modo, muchos Estados de la Mancomunidad de Naciones (Commonwealth) y otros que tienen al monarca del Reino Unido como jefe de Estado tambi\u00e9n deber\u00e1n cambiar el dise\u00f1o de sus monedas y billetes. Este es el caso de pa\u00edses como Canad\u00e1, Australia, Nueva Zelanda y Belice, entre muchos otros.[2]\u200b\nNotar tambi\u00e9n que es la usanza, despu\u00e9s el siglo\u00a0XVII, por la cabeza de un nuevo monarca en los obversos de las monedas brit\u00e1nicas de hacer frente a la direcci\u00f3n opuesta de su antecesor. As\u00ed, perqu\u00e9 la cabeza de la reina Isabel II hace frente a la derecha sobre las monedas, la cabeza de Carlos III har\u00e1 frente a la izquierda. Hay una excepci\u00f3n a esta regla; ambas las cabezas de Jorge V y Jorge VI hacen frente a la izquierda, porqu\u00e9 Eduardo VIII - cuyas monedas estaban nunca puestas en circulaci\u00f3n - har\u00eda frente a la derecha.", "subsections": [{"name": "Billetes de pol\u00edmero", "text": "El billete de pol\u00edmero de \u00a35, fue emitido en el a\u00f1o 2000 por el Northern Bank (ahora Danske Bank) y fue el \u00fanico billete de pol\u00edmero en circulaci\u00f3n hasta 2016. El Banco de Inglaterra comenz\u00f3 a emitir billetes de pol\u00edmero de \u00a35 en septiembre de 2016 y retir\u00f3 de la circulaci\u00f3n los billetes de papel moneda de \u00a35 el 5 de mayo de 2016.[3]\u200b[4]\u200b El billete de pol\u00edmero de \u00a310 fue emitido el 14 de septiembre de 2017 y el de papel moneda fue retirado el 1 de marzo de 2018. En febrero de 2020 se puso en circulaci\u00f3n el billete de \u00a320 y en junio de 2021 el de \u00a350. De igual forma, se dispuso el retiro de circulaci\u00f3n de los billetes de papel de \u00a320 y \u00a350 para el 1 de octubre de 2022.[5]\u200b"}]}, {"name": "Historia", "text": "", "subsections": [{"name": "Antes de la libra esterlina", "text": "En los tiempos anglo-sajones, peque\u00f1as monedas de plata conocidas como sceattas eran usadas en el comercio: estas se derivaban de unos ejemplos frisios, y pesaban unos 20 granos (1,3\u00a0g).\nEl rey Offa de Mercia (790) introdujo un penique plateado de 22,5 granos (1,5 gramos). Doscientos cuarenta de estos fueron hechos de una medida de plata conocido como la libra Torre: aparentemente esta pesaba 5400 granos (349,9\u00a0g).\nEn 1526 el est\u00e1ndar fue cambiado por la libra Troy de 5760 granos (373,242\u00a0g)."}, {"name": "La libra esterlina", "text": "Como unidad monetaria, el t\u00e9rmino libra se origina del valor del peso de una libra de plata de gran pureza conocida como plata esterlina.\nLas primeras monedas de peniques (1/240 de libras (349,9 g) de plata) se acu\u00f1aron con plata casi pura (99,9\u00a0% de pureza), pero las monedas acu\u00f1adas de esta forma se desgastaban r\u00e1pidamente, por lo que, a partir de 1158, el Rey Enrique II comenz\u00f3 a acu\u00f1ar monedas de peniques con una aleaci\u00f3n que era 92,5\u00a0% de plata. Esta aleaci\u00f3n pas\u00f3 a denominarse plata esterlina (plata fuerte), debido a que las monedas acu\u00f1adas con esta aleaci\u00f3n no se desgastaban tan f\u00e1cilmente.[6]\u200b\nEl Gran Envilecimiento\nEntre 1544 y 1551 tuvo lugar la Pol\u00edtica del Gran Envilecimiento, que fue una pol\u00edtica monetaria que implicaba un envilecimiento de todas las denominaciones correspondientes la moneda oficial de Inglaterra, la libra esterlina. Esta medida, fue introducida en 1544 en Inglaterra por orden del Rey Enrique VIII, que redujo la cantidad de metal precioso en las monedas de oro y plata y, en algunos casos, la sustituy\u00f3 por completo por metales b\u00e1sicos con un valor monetario muy inferior, como lo era y sigue siendo el cobre.\nEl m\u00f3vil para la aplicaci\u00f3n de esta reforma, fue para financiar el excesivo gasto p\u00fablico de la corona de Enrique VIII al tener que tambi\u00e9n financiar una la costosa guerra de cortejo real contra la corona escocesa y la tercera guerra anglo-franca del siglo\u00a0XVI, para ello, el estado ingl\u00e9s debi\u00f3 recurrir a medidas desesperadas como la disoluci\u00f3n de los monasterios, en 1537, excus\u00e1ndose en un desacuerdo con las pol\u00edticas de la iglesia, que luego llev\u00f3 una confiscaci\u00f3n de cientos de propiedades, incluyendo no solo monasterios, sino tambi\u00e9n abad\u00edas y hasta parroquias, que pasaron a manos del estado ingl\u00e9s, las cuales se vendieron por un monto equivalente a \u00a33 millones (equivalente a \u00a32.5 mil millones en 2021), y varias colecciones de joyas, plater\u00eda y dem\u00e1s pertenencias personales de los funcionarios eclesi\u00e1sticos, con un valor aproximado de \u00a380,000 (equivalente a \u00a366 millones en 2021).[7]\u200b\nPara financiar ambos conflictos y un monto \"inespecificado\" para los gastos personales del monarca; junto a este cuantioso gasto, la corona tampoco escatim\u00f3 en endeudarse hasta niveles impagables: a principios de 1544, pidieron pr\u00e9stamos equivalentes a 400,000 marcos escoceses de plata, y los prestatarios naturalmente demandaron - infructosamente - el reintegro total de sus fondos al a\u00f1o fiscal siguiente, algo que la corona no pudo cumplir en tiempo y forma, y cuyos pagos cesaron hasta que se reanudaron y la deuda se sald\u00f3 reci\u00e9n en la d\u00e9cada de los 1550s. Por otro lado, para paliar la crisis, el rey comenz\u00f3 a otorgar pr\u00e9stamos, subsidios y \"benevolencias\" a miembros de la corte y el parlamento, que en dos a\u00f1os, dicha suma alcanz\u00f3 las \u00a3 300,000 (equivalente a \u00a3205 millones actuales).[8]\u200b\nDurante el proceso de envilecimiento, los est\u00e1ndares de oro se redujeron de manera dr\u00e1stica, m\u00e1s de un 17\u00a0% de recortes en el caso de las piezas acu\u00f1adas en oro, mientras que el contenido de la plata se redujo en proporciones muy superiores, un total de 67.5\u00a0%, pasando de una densidad del 92,5\u00a0%, a un m\u00ednimo del 25\u00a0% en 1551, cuatro a\u00f1os despu\u00e9s de la muerte de Enrique VIII, y momento en que se revirtieron los efectos de la reforma, restaur\u00e1ndose el poder adquisitivo de la libra mediante la reintroducci\u00f3n de patrones monetarios met\u00e1licos de alta densidad (se volvi\u00f3 al est\u00e1ndar del 92.5\u00a0%).\nEnrique, previendo un cataclismo econ\u00f3mico en el corto plazo, ya hab\u00eda avecinado la crisis dos a\u00f1os antes del comienzo de la guerra con Francia: en mayo de 1542, emiti\u00f3 un decreto secreto por el cual ordenaba que se redujeran de manera oculta, las proporciones de oro y plata en todas las denominaciones y tambi\u00e9n ordenaba la reintroducci\u00f3n del Testoon (equivalente a doce peniques, luego rebautizada como shilling, o chel\u00edn, en espa\u00f1ol). Durante los dos a\u00f1os siguientes, estas nuevas monedas envilecidas junto con los testoon, se fueron almacenando de manera progresiva y escalada en la Torre de las Joyas del Palacio de Westminster, mientras continuaba la producci\u00f3n de monedas con el est\u00e1ndar actual.\nEn mayo de 1544, la escasez de metales preciosos que estaban en posesi\u00f3n de la casa de la moneda, hizo que el gobierno hiciese efectivo aquel contrato secreto redactado dos a\u00f1os antes y permitiera que las monedas envilecidas se convirtieran en piezas de curso legal y entraran en circulaci\u00f3n. Sin embargo, dos meses m\u00e1s tarde, en julio de 1544, los comerciantes de los Pa\u00edses Bajos se dieron cuenta de que los groats (o gra\u00f1ones; piezas de cuatro peniques) de plata reci\u00e9n acu\u00f1ados hab\u00edan sido envilecidos y empezaron a ofrecerlos a un precio m\u00e1s bajo en moneda local. La introducci\u00f3n de estas monedas envilecidas hizo que desaparecieran de la circulaci\u00f3n monedas con un valor nominal similar pero con mayor contenido de metal precioso, demostrando la validez de la Ley de Gresham.[9]\u200b\nSin embargo, el descubrimiento del fraude no interrumpi\u00f3 el proceso, por lo que los est\u00e1ndares de oro y plata continuaron cayendo durante el reinado de Enrique VIII: en 1545 el oro se redujo a 22 quilates y nuevamente a 20 quilates en 1546. El contenido de plata tambi\u00e9n se redujo varias veces desde la plata esterlina (92,5\u00a0%) al 50\u00a0% en 1549 y nuevamente a 33\u00a0% en 1546. El cobre se utiliz\u00f3 como sustituto de la plata en las monedas.[10]\u200b\nDurante 1544, los est\u00e1ndares de oro y plata cayeron por primera vez, reduci\u00e9ndose, en el caso del oro, se pas\u00f3 de una graduaci\u00f3n de 24 quilates (99.99\u00a0%) a una algo inferior, de 22 quilates (91.67\u00a0%) en 1545 y luego a una de 20 quilates (83.25\u00a0%) al a\u00f1o siguiente, mientras que en el caso de la plata, se redujo de 92.5\u00a0% (plata esterlina) a 50\u00a0% en 1546 y nuevamente a un mero 33\u00a0% en 1549. Durante estos a\u00f1os, comenz\u00f3 el cobre como una alternativa para compensar la escasez de metales preciosos, tanto en las piezas de oro como en las de plata. En general, en la gran mayor\u00eda de estas piezas, el contenido neto de plata consist\u00eda en una delgada capa que ten\u00eda una tendencia progresiva a la erosi\u00f3n que se hac\u00eda evidente a medida que aumentaba su tiempo en circulaci\u00f3n, por lo cual, aquellas piezas degradadas dejaban entrever un contenido cobrizo intenso que se acentuaba particularmente en la zona que representaba la nariz del jefe de Estado, hecho que le vali\u00f3 el apodo de Old Coppernose (en espa\u00f1ol: Viejo Nariz de Cobre).[11]\u200b\nTras la muerte de Enrique VIII en 1547, fue sucedido ese mismo a\u00f1o por su hijo var\u00f3n de nueve a\u00f1os, Eduardo VI, por entonces, al cargo de sus tutores; Durante el reinado de este, las pol\u00edticas de envilecimiento continuaron de manera sostenida, hasta que se lleg\u00f3 a un punto cl\u00edmax en el que el contenido de plata en todas las denominaciones era de tan solo 25\u00a0% del total; En 1548, en un intento por revertir los efectos devaluatorios de la reforma, que por cierto, hicieron caer a la econom\u00eda a niveles presenciados en siglos anteriores, se reintrodujo un est\u00e1ndar met\u00e1lico de oro que fijaba la pureza en 22 quilates (conocido como \"est\u00e1ndar del oro corona\"), el caso de las denominaciones en plata, se tardaron tres a\u00f1os m\u00e1s en revertir sus efectos, (en octubre de 1551, se aboli\u00f3 esta pol\u00edtica de manera definitiva) principalmente debido a su prevalencia en las transacciones minoristas, que dificult\u00f3 de sobremanera la confianza en la introducci\u00f3n de nuevas monedas.\nRestauraci\u00f3n Monetaria del reinado de Isabel I (1558-1603)\nPara el momento en que Isabel I lleg\u00f3 al poder en 1558, la calidad de las monedas circulantes en el pa\u00eds, ya hab\u00eda afectado de manera contundente la reputaci\u00f3n de la corona y la confianza libra esterlina, la cual se la consideraba, hasta antes del envilecimiento, como una de las principales reservas de valor monetario. Los comerciantes extranjeros de todos los rubros, se negaban rotundamente a aceptar las monedas envilecidas como medio de pago. La reina, su consejero William Cecil y el banquero Thomas Gresham, descrifraron que la \u00fanica forma de solucionar esta crisis de desconfianza, era restaurar el contenido de oro y plata en todas las denominaciones, pero a costa de reducir su peso; Por ejemplo, el soberano de oro, que ten\u00eda un peso de 12.96 gramos antes de 1544, vio aumentada su pureza en dos quilates tras la reforma, pero a cambio, perdi\u00f3 2.02 gramos. Tambi\u00e9n se dieron cuerta de la importancia de remover las piezas envilecidas de circulaci\u00f3n: Para ello, la corona decret\u00f3 una ley que prohib\u00eda a la ciudadan\u00eda exportar las monedas a mercados extranjeros, y adem\u00e1s, declar\u00f3 inv\u00e1lidas todas aquellas piezas envilecidas producidas durante las dos d\u00e9cadas previas.\nLas antiguas monedas, con una pureza muy superior, eran atesoradas y rara vez se las ve\u00eda en circulaci\u00f3n de deudas, mientras que, las piezas envilecidas, de mucho menor valor, se las usaba para pagar deudas y/o comprar cosas en la vida cotidiana, este fen\u00f3meno fue retratado por Henry D. Macleod, a fines de siglo\u00a0XIX, y quien le otorg\u00f3 el nombre \"Ley de Gresham en honor al banquero (aunque este no fuera el primero en darla a conocer) a un principio que establece que \"el dinero malo (piezas envilecidas), reemplaza al bueno (piezas de alta pureza)\".\nEn 1560, bajo mandato real, Thomas Gresham retir\u00f3 de la circulaci\u00f3n todas las piezas envilecidas e hizo fundir las monedas retiradas y las sustituy\u00f3 por otras de nueva acu\u00f1aci\u00f3n con una elevada pureza.\nLa libra esterlina mantuvo su valor intr\u00ednseco \u2014\"un fetiche en la opini\u00f3n p\u00fablica\" lo llam\u00f3 Braudel\u2014 de manera \u00fanica entre las divisas europeas, a\u00fan despu\u00e9s de que el Reino Unido adopt\u00f3 oficialmente el patr\u00f3n oro, hasta despu\u00e9s de la Primera Guerra Mundial, soportando crisis financieras en 1621, en 1694-1696, cuando John Locke panflete\u00f3 por la libra esterlina como \"una unidad fundamental invariable\" y de nuevo en 1774 y 1797. Ni siquiera los violentos des\u00f3rdenes de la Guerra Civil devaluaron la libra esterlina en los mercados monetarios de Europa. Braudel atribuye el f\u00e1cil cr\u00e9dito de Inglaterra a la divisa restaurada, que nunca fue devaluada a trav\u00e9s de los siglos,[cita\u00a0requerida] que dio seguridad de contrato y una alza a una superioridad financiera durante el siglo\u00a0XVIII. La libra esterlina ha sido la moneda del Banco de Inglaterra desde sus inicios en 1694."}, {"name": "El patr\u00f3n oro", "text": "La libra se traslad\u00f3 extraoficialmente del patr\u00f3n plata al patr\u00f3n oro gracias a una sobrevaluaci\u00f3n del oro en Inglaterra que atrajo oro del extranjero y ocasion\u00f3 una importaci\u00f3n constante de la moneda de plata, a pesar de una revaluaci\u00f3n del oro en 1717 por Isaac Newton, maestro de la Real Casa de la Moneda. El patr\u00f3n oro de facto continu\u00f3 hasta su adopci\u00f3n oficial despu\u00e9s del fin de las guerras napole\u00f3nicas, en 1816. Este dur\u00f3 hasta que el Reino Unido, en acuerdo con muchos otros pa\u00edses, abandon\u00f3 el patr\u00f3n en 1914, al estallar la Primera Guerra Mundial, cuando los billetes del Banco de Inglaterra y del Tesoro se convirtieron en moneda de curso legal.\nAlgunas discusiones tuvieron lugar despu\u00e9s de la Conferencia Monetaria Internacional de 1865 en Par\u00eds concernientes a la posibilidad de que el Reino Unido se uniera a la Uni\u00f3n Monetaria Latina, y una Comisi\u00f3n Real de Acu\u00f1aci\u00f3n Internacional examin\u00f3 la cuesti\u00f3n, resultando en la decisi\u00f3n en contra de unirse a la Uni\u00f3n Monetaria.\nAntes de la Primera Guerra Mundial, el Reino Unido ten\u00eda una de las econom\u00edas m\u00e1s fuertes del mundo, reteniendo el 40\u00a0% de las inversiones de ultramar en el mundo. Sin embargo, al final de la Guerra, el pa\u00eds deb\u00eda \u00a3850 millones, la mayor parte a los Estados Unidos, con intereses que costaban al pa\u00eds un 40\u00a0% de todo el gasto del gobierno.[12]\u200b El gobierno brit\u00e1nico bajo el Primer Ministro David Lloyd George y el Canciller de la Hacienda Austen Chamberlain trat\u00f3 de compensar el d\u00e9ficit con una pol\u00edtica deflacionaria, pero esto s\u00f3lo condujo a la Depresi\u00f3n de 1920\u201321.[13]\u200b\nEn un intento de recobrar la estabilidad, en 1925, se introdujo el patr\u00f3n cambio oro que supon\u00eda una variaci\u00f3n del patr\u00f3n oro, bajo este sistema, el valor de la divisa fue fijada al precio del oro, en los niveles previos a la guerra, aunque la poblaci\u00f3n solo pod\u00eda intercambiar su dinero por oro en lingotes, en lugar de monedas."}, {"name": "Zona esterlina", "text": "La libra esterlina fue usada como la moneda de muchas partes del Imperio brit\u00e1nico. Al crearse la Mancomunidad Brit\u00e1nica de Naciones, los pa\u00edses de la Mancomunidad introdujeron sus propias divisas como la libra australiana o la libra irlandesa, esto llev\u00f3 a crear la denominada zona esterlina, donde esas divisas manten\u00edan una relaci\u00f3n fija con la libra esterlina."}, {"name": "Tras el abandono del patr\u00f3n oro", "text": "El 21 de septiembre, como resultado de la Gran Depresi\u00f3n, el Reino Unido abandon\u00f3 definitivamente el patr\u00f3n oro y la libra se devalu\u00f3 un 25\u00a0%.[14]\u200b A partir de esta fecha, la libra esterlina se convirti\u00f3 en una moneda emitida por decreto (o fiat) y a su vez fiduciaria, con su valor determinado por su continua aceptaci\u00f3n en la econom\u00eda nacional e internacional.\nDespu\u00e9s de dejar el patr\u00f3n oro, ha habido varios intentos de fijar el valor de libra a otras monedas, inicialmente el d\u00f3lar estadounidense.\nEn 1940, un acuerdo con los Estados Unidos fij\u00f3 la libra esterlina al d\u00f3lar estadounidense a una tasa de 1 libra = 4,03 d\u00f3lares estadounidenses.[15]\u200b Este tipo de cambio se mantuvo durante la Segunda Guerra Mundial y se convirti\u00f3 en parte del Sistema de Bretton Woods que rigi\u00f3 los tipos de cambio de la posguerra.\nEn 1946, La libra fue hecha completamente convertible como una condici\u00f3n por recibir un pr\u00e9stamo de Estados Unidos de 3750 millones de d\u00f3lares despu\u00e9s de la Segunda Guerra Mundial.\nEl 19 de septiembre de 1949, bajo una presi\u00f3n econ\u00f3mica continua, y a pesar de meses de negaciones de que lo evitar\u00edan, el gobierno devalu\u00f3 la libra un 30,5\u00a0% de una tasa de 1 libra = 4,04 d\u00f3lares a una tasa de 1 libra = 2,80 d\u00f3lares.[16]\u200b Esta devaluaci\u00f3n provoc\u00f3 que varias otras monedas se devaluaran frente al d\u00f3lar, entre ellos: Australia, Dinamarca, Irlanda, Egipto, India, Israel, Nueva Zelanda, Noruega y Sud\u00e1frica.[17]\u200b\nEn 1961, 1964 y 1966, la libra esterlina estuvo bajo una presi\u00f3n renovada, ya que los especuladores vend\u00edan libras por d\u00f3lares. En el verano de 1966, con la ca\u00edda del valor de la libra en los mercados de divisas, el gobierno laborista de Harold Wilson endureci\u00f3 los controles de cambio. Entre las medidas, se prohibi\u00f3 a los turistas sacar del pa\u00eds m\u00e1s de \u00a350 en cheques de viajero y remesas, m\u00e1s \u00a315 en efectivo;[18]\u200b esta restricci\u00f3n no se levant\u00f3 hasta 1979. El 18 de noviembre de 1967, la libra esterlina se devalu\u00f3 un 14,3\u00a0% a uma una tasa de 1 libra = 2,40 d\u00f3lares estadounidenses.[16]\u200b[19]\u200b\nLa libra, al igual que todas las otras monedas del mundo, ya no mantiene ninguna relaci\u00f3n con el oro, la plata o ning\u00fan otro metal precioso. El d\u00f3lar estadounidense fue la \u00faltima divisa en abandonar el oro, en 1971.\nCon la ruptura del del Sistema de Bretton Woods, la libra esterlina flot\u00f3 desde agosto de 1971 en adelante. Al principio se apreci\u00f3 un poco, subiendo a casi US$2,65 en marzo de 1972 desde US$2,42, el l\u00edmite superior de la banda en la que se hab\u00eda fijado. El \u00e1rea de la libra esterlina efectivamente termin\u00f3 en este momento, cuando la mayor\u00eda de sus miembros tambi\u00e9n optaron por flotar libremente frente a la libra esterlina y el d\u00f3lar.\nUna crisis posterior sigui\u00f3 en 1976, cuando aparentemente el Fondo Monetario Internacional (FMI) pens\u00f3 que la libra deber\u00eda establecerse a $1,50 d\u00f3lares, y como resultado la libra cay\u00f3 a $1,57, y el gobierno decidi\u00f3 que ten\u00eda que solicitar un pr\u00e9stamo de \u00a32,3 mil millones al FMI.\nA principios de la d\u00e9cada de 1980 la libra subi\u00f3 hasta el nivel de $2 al elevarse las tasas de inter\u00e9s en respuesta a la pol\u00edtica monetarista y la alta tasa de cambio fue ampliamente considerada culpable de la profunda recesi\u00f3n de 1981. En su punto m\u00e1s bajo, la libra se coloc\u00f3 a solo $1,05 d\u00f3lares en febrero de 1985, antes de regresar al nivel de 2 d\u00f3lares a principios de la d\u00e9cada de 1990.[20]\u200b\nAdopci\u00f3n del sistema decimal\nEl 15 de febrero de 1971, pas\u00f3 a la historia como el Decimal Day (D\u00eda decimal), dado que en esa fecha comenz\u00f3 la divisi\u00f3n de la libra esterlina bajo la forma m\u00e9trica decimal al establecer una nueva fracci\u00f3n de 100 peniques, antes de eso la libra esterlina brit\u00e1nica (s\u00edmbolo \"\u00a3\") se subdivid\u00eda en 20 chelines, cada uno de 12 peniques (antiguos), un total de 240 peniques. Con la decimalizaci\u00f3n, la libra mantuvo su antiguo valor y nombre, pero se aboli\u00f3 el chel\u00edn y se revalu\u00f3 el penique ajust\u00e1ndolo al nivel del centavo, de modo que la libra se subdividi\u00f3 en 100 de lo que originalmente se llam\u00f3 \"nuevos peniques\" (\"NP\"), y luego solo peniques (\"p\") cuando la confusi\u00f3n ya no era probable. Cada nuevo penique o centavo val\u00eda 2,4 peniques antiguos (abreviado \"d\")."}, {"name": "Siguiendo al marco alem\u00e1n", "text": "En 1988, el Canciller de la Hacienda del Reino Unido de Margaret Thatcher, Nigel Lawson, decidi\u00f3 que la libra deber\u00eda hacer sombra al marco alem\u00e1n de Alemania Occidental, con el resultado no deseado de un r\u00e1pido aumento de la inflaci\u00f3n a medida que la econom\u00eda florec\u00eda debido a las bajas tasas de inter\u00e9s.[21]\u200b\nDespu\u00e9s de la reunificaci\u00f3n alemana en 1990, ocurri\u00f3 lo contrario, ya que los altos costos de endeudamiento de Alemania para financiar la reconstrucci\u00f3n del Este, exacerbados por la decisi\u00f3n pol\u00edtica de sustituir el Marco de la Rep\u00fablica Democr\u00e1tica Alemana por su contraparte occidental en una proporci\u00f3n de 1:1, significaron que las tasas de inter\u00e9s en otros pa\u00edses ensombrecieron la divisa alemana, especialmente en el Reino Unido, era demasiado alto en relaci\u00f3n con las circunstancias internas, lo que provoc\u00f3 una disminuci\u00f3n de la vivienda y una recesi\u00f3n."}, {"name": "Siguiendo a la Unidad Monetaria Europea", "text": "En otro cambio de t\u00e1ctica, el 8 de octubre de 1990 el gobierno de Thatcher decidi\u00f3 unirse al Mecanismo Europeo de Tasa de Cambio, con la libra establecida en 2,95 marcos alemanes. No obstante, el pa\u00eds fue forzado a retirarse del sistema el Mi\u00e9rcoles Negro (16 de septiembre de 1992), ya que la ejecuci\u00f3n econ\u00f3mica brit\u00e1nica hac\u00eda la tasa de cambio insostenible.[22]\u200b[23]\u200b\nEl Mi\u00e9rcoles Negro vio a las tasas de inter\u00e9s saltar de 10\u00a0% a 12\u00a0%, y finalmente a 15\u00a0% en un vano intento de detener a la libra de caer debajo de los l\u00edmites del Mecanismo. La tasa de cambio cay\u00f3 a 2,20 marcos alemanes. Proponentes de una tasa de cambio m\u00e1s baja entre la libra y el marco (que despu\u00e9s fue reemplazado por el euro) fueron reivindicados, ya que la libra, m\u00e1s barata, foment\u00f3 las exportaciones y contribuy\u00f3 a la prosperidad econ\u00f3mica de la d\u00e9cada de 1990.[24]\u200b"}, {"name": "La d\u00e9cada de 2000", "text": "Las preocupaciones de la inflaci\u00f3n en el Reino Unido llevaron al Banco de Inglaterra a aumentar las tasas de inter\u00e9s al doble inesperadamente a fines de 2006 y principios de 2007, causando que la libra se elevara a su tasa m\u00e1s alta contra el euro desde enero de 2003. Futuros aumentos se esperaron en 2007. Esto ha tenido un efecto de golpe contra otras divisas mayores, y la libra alcanz\u00f3 su precio m\u00e1s alto en 26 a\u00f1os contra el d\u00f3lar el 8 de abril de 2007, habiendo pasado al nivel de los 2 d\u00f3lares por primera vez desde 1992.[cita\u00a0requerida]"}, {"name": "La crisis financiera de 2008", "text": "La libra esterlina se devalu\u00f3 gravemente tras la crisis financiera de 2008, hasta alcanzar el valor de \u20ac1,25 en abril de 2008[25]\u200b y $1,38 en enero de 2009.[26]\u200b La libra alcanzar\u00eda su valor m\u00e1s \u00ednfimo el 29 de diciembre de 2009, a \u20ac1,0219.[27]\u200b\nEl 5 de marzo de 2009, el Banco de Inglaterra anunci\u00f3 que inyectar\u00eda 75\u00a0000 millones en la econom\u00eda brit\u00e1nica, a trav\u00e9s de un proceso llamado expansi\u00f3n cuantitativa. A pesar de ser la primera vez que un proyecto de tal envergadura era llevado a cabo en la historia del Reino Unido, el entonces Gobernador del Banco de Inglaterra, Mervyn King sugiri\u00f3 que no se trataba de ning\u00fan experimento.[28]\u200b\nEste proceso, llev\u00f3 al Banco de Inglaterra a aumentar la masa monetaria, imprimiendo dinero, para poder comprar activos como deuda p\u00fablica, bonos corporativos, letras de cambio u obligaciones.[29]\u200b La cantidad inicial se estableci\u00f3 en 75\u00a0000 millones de libras, aunque el entonces Canciller de la Hacienda del Reino Unido, Alistair Darling, autoriz\u00f3 a emitir hasta 150\u00a0000 millones si fuera necesario.[30]\u200b Se esperaba que el proceso durara 3 meses, y con resultados a largo plazo. En noviembre de 2009 ya se hab\u00edan inyectado m\u00e1s de 175\u00a0000 millones mediante la expansi\u00f3n cuantitativa, reduciendo la efectividad del proceso a largo plazo. En julio de 2012, con la \u00faltima emisi\u00f3n, se hab\u00edan creado m\u00e1s de 375\u00a0000 millones de libras esterlinas, con las que se hab\u00eda comprado exclusivamente bonos del estado de Reino Unido, por valor de un tercio de la deuda soberana brit\u00e1nica.[31]\u200b"}, {"name": "El refer\u00e9ndum sobre la permanencia del Reino Unido en la Uni\u00f3n Europea de 2016", "text": "El resultado del refer\u00e9ndum sobre la permanencia del Reino Unido en la Uni\u00f3n Europea el 23 de junio de 2016 caus\u00f3 una gran incertidumbre acerca del futuro de las relaciones internacionales y la pol\u00edtica dom\u00e9stica brit\u00e1nica, causando un desplome de la libra esterlina contra las principales divisas internacionales.[32]\u200b La noche anterior al voto, la libra cotizaba a \u20ac1,30; al d\u00eda siguiente a \u20ac1,23, una devaluaci\u00f3n del 5\u00a0%. Frente al d\u00f3lar, la libra tambi\u00e9n registr\u00f3 una devaluaci\u00f3n inmediata, cayendo desde $1,466 a $1,3694 cuando se anunci\u00f3 el resultado del refer\u00e9ndum. En octubre del 2016, la libra cotizaba a $1,2232, registrando una ca\u00edda del 16\u00a0%.[33]\u200b"}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Zona esterlina\nChel\u00edn ingl\u00e9s\nPenique", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abUnited Kingdom Inflation Rate\u00bb (en ingl\u00e9s). Consultado el 31 de marzo de 2017.\u00a0\n\u2191 \u00abBruno Rodr\u00edguez Carapelle - La Muerte de la Reina y el Cambio del Cono Monetario (La Tercera, 13 de septiembre de 2022)\u00bb.\u00a0\n\u2191 \u00abEl nuevo billete de pl\u00e1stico de Reino Unido sirve tanto para pagar tus compras como para tocar vinilos\u00bb. Gizmodo en Espa\u00f1ol. Consultado el 15 de octubre de 2019.\u00a0\n\u2191 numismaticodigital.com. \u00abBillete pol\u00edmero para el Reino Unido dedicado a Churchill\u00bb. numismaticodigital.com. Consultado el 15 de octubre de 2019.\u00a0\n\u2191 \u00abCurrent bank notes\u00bb. bankofengland.co.uk (en ingl\u00e9s). Consultado el 6 de junio de 2022.\u00a0\n\u2191 Shaw, William Arthur (13 May 1896). \"The History of Currency, 1252\u20131894: Being an Account of the Gold and Silver Moneys and Monetary Standards of Europe and America, Together with an Examination of the Effects of Currency and Exchange Phenomena on Commercial and National Progress and Well-being\". Putnam.\n\u2191 \u00abThe English Crown's foreign debt by Wayne M. Kline\u00bb.\u00a0\n\u2191 \u00abSome Financial Expedients of Henry VIII by W.C Richardson\u00bb.\u00a0\n\u2191 \u00abThe Testoons of Henry VIII\u00bb. AMR Coins. Consultado el 2 de abril de 2017.\u00a0\n\u2191 Li, Ling-Fan (2009). After the Great Debasement, 1544-51: Did Gresham's Law Apply?\n\u2191 Owen, James (19 de diciembre de 2012). \u00abOld Coppernose \u2013 Quantitative easing, the medieval way\u00bb. Royal Mint. Archivado desde el original el 10 de abril de 2019. Consultado el 3 de abril de 2017.\u00a0\n\u2191 \"The Interest Burden of Inter-Government Debts\". The Economic World. 110: 342. 2 Septiembre 1922.\n\u2191 The pound sterling\u00a0: A history of English money, en ingl\u00e9s, consultado el 2/4/2023.\n\u2191 The Board of Trade Journal, 7 de enero de 1932.\n\u2191 A History of the Canadian Dollar, en ingl\u00e9s, consultado el 2/4/2023.\n\u2191 a b How the British pound plummeted, en ingl\u00e9s, consultado el 2/4/2023.\n\u2191 Borio, Claudio E. V.; Toniolo, Gianni (2006). One hundred and thirty years of central bank cooperation: a BIS perspective. Bank for International Settlements, Monetary and Economic Dept. p. 41.\n\u2191 \u00a3 50 en 1966 es alrededor de \u00a3 991 hoy.\n\u2191 British devalue pound, ask $1 million loan, en ingl\u00e9s, consultado el 2/4/2023.\n\u2191 GBP Forecast to See Support at 1.40 v US Dollar, But 1983 Lows a Step Too Far, en ingl\u00e9s, consultado el 04/04/2023.\n\u2191 Sometimes it can pay to break the rules, en ingl\u00e9s, consultado el 04/04/2023.\n\u2191 [ Naef, Alain (2022). An Exchange Rate History of the United Kingdom: 1945\u20131992. Studies in Macroeconomic History. Cambridge: Cambridge University Press. p. 214.]\n\u2191 James, Harold (2020). Making a Modern Central Bank: The Bank of England 1979\u20132003. Studies in Macroeconomic History. Cambridge: Cambridge University Press. p. 290.\n\u2191 Wren-Lewis, Simon, et al. (June 1991). \"Evaluating the U.K.'s Choice of Entry Rate into the ERM\", The Manchester School of Economic & Social Studies Vol. LIV Supplement, University of Manchester, pp. 1\u201322.\n\u2191 \u00abInformaci\u00f3n hist\u00f3rica - GBP/USD\u00bb.\u00a0\n\u2191 \u00abInformaci\u00f3n hist\u00f3rica - GBP/EUR\u00bb.\u00a0\n\u2191 \u00abLa libra alcanza otro negativo hist\u00f3rico contra el Euro (en ingl\u00e9s)\u00bb.\u00a0\n\u2191 \u00abEl Banco de Inglaterra inyectar\u00e1 75,000 millones a la econom\u00eda (en ingl\u00e9s)\u00bb.\u00a0\n\u2191 \u00abEl Banco Central Europeo y el Banco de Inglaterra recortan sus tipos de intereses hasta bajos m\u00ednimos (en ingl\u00e9s)\u00bb.\u00a0\n\u2191 \u00abEl Banco de Inglaterra imprime 75,000 millones y recorta las tasas de inter\u00e9s a la mitad (en ingl\u00e9s)\u00bb.\u00a0\n\u2191 \u00ab\u00bfQu\u00e9 es la expansi\u00f3n cuantitativa? (en ingl\u00e9s)\u00bb.\u00a0\n\u2191 Colin Lawrence. \u00abExchange Rates Today: British Pound Slumps Vs Euro, Dollar As UK Services Hits Record Low\u00bb (en ingl\u00e9s). Consultado el 14 de enero de 2019.\u00a0\n\u2191 \u00abBritish Pound (GBP) to US Dollar (USD) exchange rate history\u00bb (en ingl\u00e9s). Consultado el 14 de enero de 2019.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Krause, Chester L., y Clifford Mishler (2008). Standard Catalog of World Coins: (1901\u20132008). Krause Publications. ISBN 9780896897137.\nPick, Albert (2009). Standard Catalog of World Paper Money, Modern Issues, 1961-Present. Colin R. Bruce II y Neil Shafer (editores). Krause Publications. ISBN 0-87341-207-9.", "subsections": []}, {"name": "Enlaces externos", "text": " Wikcionario  tiene definiciones y otra informaci\u00f3n sobre libra esterlina.\n Wikinoticias tiene noticias relacionadas con la libra esterlina.\nConversor de libras a euros.\nBilletes\nMonedas brit\u00e1nicas (cat\u00e1logo y galer\u00eda)\nLos billetes de Reino Unido (en ingl\u00e9s) y (en alem\u00e1n)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Logotipo", "title": "Logotipo", "summary": "Busca fuentes: \u00abLogotipo\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nUn logotipo \u2014especialmente tambi\u00e9n llamado logo\u2014 es un signo gr\u00e1fico que identifica a una empresa, un producto comercial, un proyecto, o en general, a cualquier entidad p\u00fablica o privada.[1]\u200b\nAntes \nHist\u00f3ricamente, los artesanos del barro, del cristal, de la piedra, los fabricantes de espadas y artilugios de hierro fino, as\u00ed como los impresores, utilizaban marcas para se\u00f1alar su autor\u00eda.", "sections": [{"name": "El logotipo como elemento de comunicaci\u00f3n", "text": "Para que un logotipo resulte congruente y exitoso, debe ser conforme al principio fundamental del dise\u00f1o donde \u00abmenos es m\u00e1s\u00bb. Dicha simplicidad permite que sea:\nLegible - hasta el tama\u00f1o m\u00e1s peque\u00f1o.\nEscalable - a cualquier tama\u00f1o requerido.\nReproducible - sin restricciones materiales.\nDistinguible - tanto en positivo como en negativo.\nMemorable - que impacte y no se olvide.\nLas marcas construidas exclusivamente con letras llegan a tener tanta fuerza o m\u00e1s que aquellas que, si bien cuentan con un icono gr\u00e1fico, requieren la asociaci\u00f3n del texto para posicionarse desde el inicio; tal es el caso, por ejemplo, de las marcas de autom\u00f3viles. Posteriormente, la imagen queda intr\u00ednsecamente asociada al sonido del nombre de la marca original.\nEl logotipo puede ser el eje afirmador de la propiedad privada a trav\u00e9s del hecho de la autor\u00eda.\nUn logotipo se diferencia por:\nLa funcionalidad de un logotipo radica en su capacidad para comunicar el mensaje que se desea, como, por ejemplo: Somos una empresa responsable o Este producto es de alta calidad, y para conseguir esto se necesitan colores y formas que contribuyan a que el espectador final le d\u00e9 esta interpretaci\u00f3n.\nUn logotipo, en t\u00e9rminos generales, requiere el uso apropiado de la semi\u00f3tica como herramienta para lograr la adecuada comunicaci\u00f3n del mensaje y la interpretaci\u00f3n por parte del espectador m\u00e1s cercana a este mensaje. As\u00ed, por ejemplo, un c\u00edrculo amarillo puede interpretarse de diferentes formas y d\u00e1rsele diferentes significados como sol, moneda, huevo, queso u otros, mientras que si se encuentra adyacente a la palabra \"banco\", ambos elementos, el c\u00edrculo amarillo y la palabra banco, toman un solo significado: \"Instituci\u00f3n Bancaria\". Es decir, el logotipo, al momento de representar una entidad o grupo de personas, lo m\u00e1s apropiado es que mantenga congruencia semi\u00f3tica entre lo que se entiende y lo que realmente busca representar la imagen.", "subsections": []}, {"name": "\u00bfQu\u00e9 es una simbolog\u00eda?", "text": "La simbolog\u00eda es el estudio de los s\u00edmbolos o el conjunto de estos. Un s\u00edmbolo, por otra parte, es la representaci\u00f3n sensorial de una idea que guarda un v\u00ednculo convencional y arbitrario con su objeto.\nLa noci\u00f3n de simbolog\u00eda se utiliza para nombrar al sistema de los s\u00edmbolos que identifican a los diferentes elementos de alg\u00fan \u00e1mbito. La electricidad, la qu\u00edmica y la mec\u00e1nica, entre otros \u00e1mbitos del conocimiento, tienen su propia simbolog\u00eda.\nQuien conoce la simbolog\u00eda de una especialidad, puede expresarse mediante los s\u00edmbolos e interpretar diagramas o esquemas que apelen a los s\u00edmbolos en lugar de las palabras. Es posible clasificar la simbolog\u00eda seg\u00fan su objeto de estudio o \u00e1rea de incumbencia.", "subsections": []}, {"name": "Protecci\u00f3n del dise\u00f1o", "text": "Los logotipos y su dise\u00f1o pueden estar protegidos por derechos de autor, a trav\u00e9s de varias organizaciones de propiedad intelectual en todo el mundo que ponen a disposici\u00f3n los procedimientos de solicitud para registrar un dise\u00f1o y darle protecci\u00f3n legal. Por ejemplo, en el Reino Unido, la Oficina de Propiedad Intelectual (Reino Unido) rige los dise\u00f1os registrados, las patentes y las marcas comerciales. Por lo general, es el dise\u00f1o visual el que estar\u00e1 protegido, incluso si se reproduce en una variedad de otros colores o fondos.", "subsections": []}, {"name": "Marcas corporativas", "text": "Isologo, imagotipo, isotipo y logotipo son varias tipolog\u00edas posibles de la marca corporativa.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Derecho de autor\nDise\u00f1o gr\u00e1fico\nEmpaquetado neutro\nImprenta\nImpresi\u00f3n\nMarca de impresor\nMarca personal\nMarca (registro)\nReputaci\u00f3n de marca\nTipograf\u00eda", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00ablogotipo\u00bb. Diccionario Espa\u00f1ol de Ingenier\u00eda (1.0 edici\u00f3n). Real Academia de Ingenier\u00eda de Espa\u00f1a. 2014.\u00a0", "subsections": []}]}
