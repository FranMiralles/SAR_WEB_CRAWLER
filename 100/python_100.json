{"url": "https://es.wikipedia.org/wiki/python", "title": "Python", "summary": "[\n]\nPython es un lenguaje de alto nivel de programaci\u00f3n interpretado cuya filosof\u00eda hace hincapi\u00e9 en la legibilidad de su c\u00f3digo, se utiliza para desarrollar aplicaciones de todo tipo, ejemplos: Instagram, Netflix, Spotify, Panda3D, entre otros.[2]\u200b Se trata de un lenguaje de programaci\u00f3n multiparadigma, ya que soporta parcialmente la orientaci\u00f3n a objetos, programaci\u00f3n imperativa y, en menor medida, programaci\u00f3n funcional. Es un lenguaje interpretado, din\u00e1mico y multiplataforma.\nAdministrado por Python Software Foundation, posee una licencia de c\u00f3digo abierto, denominada Python Software Foundation License.[3]\u200b Python se clasifica constantemente como uno de los lenguajes de programaci\u00f3n m\u00e1s populares.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Caracter\u00edsticas y paradigmas\n3 Filosof\u00eda\n4 Modo interactivo\n5 Elementos del lenguaje y sintaxis\n5.1 Comentarios\n5.2 Variables\n5.3 Tipos de datos\n5.4 Condicionales\n5.5 Bucle for\n5.6 Bucle while\n5.7 Listas y Tuplas\n5.8 Diccionarios\n5.9 Sentencia switch-case\n5.9.1 Usando if, elif, else\n5.9.2 Usando diccionarios\n5.10 Conjuntos\n5.11 Listas por comprensi\u00f3n\n5.12 Funciones\n5.13 Clases\n5.14 M\u00f3dulos\n5.14.1 Instalaci\u00f3n de m\u00f3dulos (pip)\n5.14.2 Interfaz al sistema operativo\n5.14.3 Comodines de archivos\n5.14.4 Argumentos de l\u00ednea de \u00f3rdenes\n5.14.5 Matem\u00e1tica\n5.14.6 Fechas y horas\n5.14.7 M\u00f3dulo Turtle\n6 Sistema de objetos\n7 Biblioteca est\u00e1ndar\n8 Implementaciones\n9 Incidencias\n10 V\u00e9ase tambi\u00e9n\n11 Referencias\n12 Bibliograf\u00eda\n13 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "Art\u00edculo principal:\nPython fue creado a finales de los a\u00f1os ochenta[4]\u200b por Guido van Rossum en Stichting Mathematisch Centrum (CWI), en los Pa\u00edses Bajos, como un sucesor del lenguaje de programaci\u00f3n ABC, capaz de manejar excepciones e interactuar con el sistema operativo Amoeba.[5]\u200b\nEl nombre del lenguaje proviene de la afici\u00f3n de su creador por los humoristas brit\u00e1nicos Monty Python.[6]\u200b\nGuido van Rossum es el principal autor de Python, y su continuo rol central en decidir la direcci\u00f3n de Python es reconocido, refiri\u00e9ndose a \u00e9l como Benevolente Dictador Vitalicio (en ingl\u00e9s: Benevolent Dictator for Life, BDFL); sin embargo el 12 de julio de 2018 declin\u00f3 de dicha situaci\u00f3n de honor sin dejar un sucesor o sucesora y con una declaraci\u00f3n altisonante:[7]\u200b\nEl 20 de febrero de 1991, van Rossum public\u00f3 el c\u00f3digo por primera vez en alt.sources, con el n\u00famero de versi\u00f3n 0.9.0.[9]\u200b En esta etapa del desarrollo ya estaban presentes clases con herencia, manejo de excepciones, funciones y los tipos modulares, como: str, list, dict, entre otros. Adem\u00e1s en este lanzamiento inicial aparec\u00eda un sistema de m\u00f3dulos adoptado de Modula-3; van Rossum describe el m\u00f3dulo como \u00abuna de las mayores unidades de programaci\u00f3n de Python\u00bb.[4]\u200b El modelo de excepciones en Python es parecido al de Modula-3, con la adici\u00f3n de una cl\u00e1usula else.[5]\u200b En el a\u00f1o 1994 se form\u00f3 comp.lang.python, el foro de discusi\u00f3n principal de Python, marcando un hito en el crecimiento del grupo de usuarios de este lenguaje.\nPython alcanz\u00f3 la versi\u00f3n 1.0 en enero de 1994. Una caracter\u00edstica de este lanzamiento fueron las herramientas de la programaci\u00f3n funcional: lambda, reduce, filter y map.[10]\u200b Van Rossum explic\u00f3 que \u00abhace 12 a\u00f1os, Python adquiri\u00f3 lambda, reduce(), filter() y map(), cortes\u00eda de Amrit Perm, un hacker inform\u00e1tico de Lisp que las implement\u00f3 porque las extra\u00f1aba\u00bb.[11]\u200b\nLa \u00faltima versi\u00f3n liberada proveniente de CWI fue Python 1.2. En 1995, van Rossum continu\u00f3 su trabajo en Python en la Corporation for National Research Initiatives (CNRI) en Reston, Virginia, donde lanz\u00f3 varias versiones del software.\nDurante su estancia en CNRI, van Rossum lanz\u00f3 la iniciativa Computer Programming for Everybody (CP4E), con el fin de hacer la programaci\u00f3n m\u00e1s accesible a m\u00e1s gente, con un nivel de 'alfabetizaci\u00f3n' b\u00e1sico en lenguajes de programaci\u00f3n, similar a la alfabetizaci\u00f3n b\u00e1sica en ingl\u00e9s y habilidades matem\u00e1ticas necesarias por muchos trabajadores. Python tuvo un papel crucial en este proceso: debido a su orientaci\u00f3n hacia una sintaxis limpia, ya era id\u00f3neo, y las metas de CP4E presentaban similitudes con su predecesor, ABC. El proyecto fue patrocinado por DARPA.[12]\u200b Para el a\u00f1o 2007, el proyecto CP4E se encontraba inactivo[13]\u200b; a pesar de ello, Python contin\u00faa intentando ser f\u00e1cil de aprender y no muy arcano en su sintaxis y sem\u00e1ntica, con el objetivo de ser entendible incluso para no-programadores.\nEn el a\u00f1o 2000, el equipo principal de desarrolladores de Python se cambi\u00f3 a BeOpen.com para formar el equipo BeOpen PythonLabs. CNRI pidi\u00f3 que la versi\u00f3n 1.6 fuera p\u00fablica, continuando su desarrollo hasta que el equipo de desarrollo abandon\u00f3 CNRI; su programa de lanzamiento y el de la versi\u00f3n 2.0 ten\u00edan una significativa cantidad de traslapo.[14]\u200b Python 2.0 fue el primer y \u00fanico lanzamiento de BeOpen.com. Despu\u00e9s que Python 2.0 fuera publicado por BeOpen.com, Guido van Rossum y los otros desarrolladores de PythonLabs se unieron en Digital Creations.\nPython 2.0 tom\u00f3 una caracter\u00edstica mayor del lenguaje de programaci\u00f3n funcional Haskell: listas por comprensi\u00f3n. La sintaxis de Python para esta construcci\u00f3n es muy similar a la de Haskell, salvo por la preferencia de los caracteres de puntuaci\u00f3n en Haskell, y la preferencia de Python por palabras claves alfab\u00e9ticas. Python 2.0 introdujo adem\u00e1s un sistema de recolecci\u00f3n de basura capaz de recolectar referencias c\u00edclicas.[14]\u200b\nPosterior a este doble lanzamiento, y despu\u00e9s que van Rossum dejara CNRI para trabajar con desarrolladores de software comercial, qued\u00f3 claro que la opci\u00f3n de usar Python con software disponible bajo la GNU GPL era muy deseable. La licencia usada entonces, la Python License, inclu\u00eda una cl\u00e1usula estipulando que la licencia estaba gobernada por el estado de Virginia, por lo que, bajo la \u00f3ptica de los abogados de Free Software Foundation (FSF), se hac\u00eda incompatible con GPL. Para las versiones 1.61 y 2.1, CNRI y FSF  \nhicieron compatibles la licencia de Python con GPL, renombr\u00e1ndola como Python Software Foundation License. En el a\u00f1o 2001, van Rossum fue premiado con el FSF Award for the Advancement of Free Software.\nPython 2.1 fue un trabajo derivado de las versiones 1.6.1 y 2.0. Es a partir de este momento que  Python Software Foundation (PSF) pasa a dirigir el proyecto, organizada como una organizaci\u00f3n sin \u00e1nimo de lucro fundada en el a\u00f1o 2001, tomando como modelo a la Apache Software Foundation.[3]\u200b Incluida con este lanzamiento estuvo una implementaci\u00f3n del alcance de variables m\u00e1s parecida a las reglas del static scoping originado por Scheme.[15]\u200b\nUna innovaci\u00f3n mayor en Python 2.2 fue la unificaci\u00f3n de los tipos en Python (tipos escritos en C), y clases (tipos escritos en Python) dentro de una jerarqu\u00eda. Esa unificaci\u00f3n logr\u00f3 un modelo de objetos de Python puro y consistente.[16]\u200b Tambi\u00e9n fueron agregados los generadores, que fueron inspirados por el lenguaje Icon.[17]\u200b\nLas adiciones a la biblioteca est\u00e1ndar de Python y las decisiones sint\u00e1cticas fueron influenciadas fuertemente por Java en algunos casos: el paquete logging,[18]\u200b introducido en la versi\u00f3n 2.3, est\u00e1 basado en log4j; el parser SAX, introducido en 2.0; el paquete threading,[19]\u200b cuya clase Thread expone un subconjunto de la interfaz de la clase hom\u00f3nima en Java.\nPython 2.7.x (\u00faltima versi\u00f3n de la serie Python 2.x) fue oficialmente descontinuado el 1 de enero de 2020 (paso inicialmente planeado para 2015), por lo que ya no se publicar\u00e1n parches de seguridad y otras mejoras para \u00e9l.[20]\u200b[21]\u200b Con el final del ciclo de vida de Python 2, solo tienen soporte la rama Python 3.6.x[22]\u200b y posteriores.\nCon Python 3.5 llegar\u00eda el soporte incluido para entrada/salida as\u00edncrona a trav\u00e9s de la biblioteca asyncio, orientada a aplicaciones que requieren alto rendimiento de c\u00f3digo concurrente, como servidores web, bibliotecas de conexi\u00f3n de bases de datos y colas de tareas distribuidas.[23]\u200b\nEn la actualidad, Python se aplica en los campos de inteligencia artificial y machine learning.[24]\u200b", "subsections": []}, {"name": "Caracter\u00edsticas y paradigmas", "text": "Python es un lenguaje de programaci\u00f3n multiparadigma. Esto significa que m\u00e1s que forzar a los programadores a adoptar un estilo particular de programaci\u00f3n, permite varios estilos: programaci\u00f3n orientada a objetos, programaci\u00f3n imperativa y programaci\u00f3n funcional. Otros paradigmas est\u00e1n soportados mediante el uso de extensiones.\nPython usa tipado din\u00e1mico y conteo de referencias para la gesti\u00f3n de memoria.\nUna caracter\u00edstica importante de Python es la resoluci\u00f3n din\u00e1mica de nombres; es decir, lo que enlaza un m\u00e9todo y un nombre de variable durante la ejecuci\u00f3n del programa (tambi\u00e9n llamado enlace din\u00e1mico de m\u00e9todos).\nOtro objetivo del dise\u00f1o del lenguaje es la facilidad de extensi\u00f3n. Se pueden escribir nuevos m\u00f3dulos f\u00e1cilmente en C o C++. Python puede incluirse en aplicaciones que necesitan una interfaz programable.[25]\u200b\nAunque la programaci\u00f3n en Python podr\u00eda considerarse en algunas situaciones hostil a la programaci\u00f3n funcional tradicional expuesta por Lisp, existen bastantes analog\u00edas entre Python y los lenguajes minimalistas de la familia Lisp (como Scheme).", "subsections": []}, {"name": "Filosof\u00eda", "text": "Los usuarios de Python se refieren a menudo a la filosof\u00eda de Python, que es bastante similar a la filosof\u00eda de Unix. El c\u00f3digo que siga los principios de Python es reconocido como \"pyth\u00f3nico\". Estos principios fueron descritos por el desarrollador de Python Tim Peters en El Zen de Python:\nBello es mejor que feo.\nExpl\u00edcito es mejor que impl\u00edcito.\nSimple es mejor que complejo.\nComplejo es mejor que complicado.\nPlano es mejor que anidado.\nDisperso es mejor que denso.\nLa legibilidad cuenta.\nLos casos especiales no son tan especiales como para quebrantar las reglas.\nLo pr\u00e1ctico gana a lo puro.\nLos errores nunca deber\u00edan dejarse pasar silenciosamente.\nA menos que hayan sido silenciados expl\u00edcitamente.\nFrente a la ambig\u00fcedad, rechaza la tentaci\u00f3n de adivinar.\nDeber\u00eda haber una \u2014y preferiblemente solo una\u2014 manera obvia de hacerlo.\nAunque esa manera puede no ser obvia al principio a menos que usted sea holand\u00e9s.[26]\u200b\nAhora es mejor que nunca.\nAunque nunca es a menudo mejor que ya mismo.\nSi la implementaci\u00f3n es dif\u00edcil de explicar, es una mala idea.\nSi la implementaci\u00f3n es f\u00e1cil de explicar, puede que sea una buena idea.\nLos espacios de nombres (namespaces) son una gran idea. \u00a1Hagamos m\u00e1s de esas cosas!\nDesde la versi\u00f3n 2.1.2, Python incluye estos puntos (en su versi\u00f3n original en ingl\u00e9s) como un huevo de pascua que se muestra al ejecutar import this.[27]\u200b", "subsections": []}, {"name": "Modo interactivo", "text": "El int\u00e9rprete de Python est\u00e1ndar incluye un modo interactivo en el cual se escriben las instrucciones en una especie de int\u00e9rprete de comandos: las expresiones pueden ser introducidas una a una, pudiendo verse el resultado de su evaluaci\u00f3n inmediatamente, lo que da la posibilidad de probar porciones de c\u00f3digo en el modo interactivo antes de integrarlo como parte de un programa. Esto resulta \u00fatil tanto para las personas que se est\u00e1n familiarizando con el lenguaje como para los programadores m\u00e1s avanzados.\nExisten otros programas, como IDLE, bpython e IPython,[28]\u200b que a\u00f1aden funcionalidades extra al modo interactivo, como completamiento autom\u00e1tico de c\u00f3digo y coloreado de la sintaxis del lenguaje.\nEjemplo del modo interactivo:\n>>>\n1\n+\n2\na\n=\nrange\n(\n10\n)\nprint\nlist\n))\n[\n0\n,\n3\n4\n5\n6\n7\n8\n9\n]", "subsections": []}, {"name": "Elementos del lenguaje y sintaxis", "text": "Python est\u00e1 destinado a ser un lenguaje de f\u00e1cil lectura. Su formato es visualmente ordenado y, a menudo, usa palabras clave en ingl\u00e9s donde otros idiomas usan puntuaci\u00f3n. A diferencia de muchos otros lenguajes, no utiliza corchetes para delimitar bloques y se permiten puntos y coma despu\u00e9s de las declaraciones, pero rara vez, si es que alguna vez, se utilizan. Tiene menos excepciones sint\u00e1cticas y casos especiales que C o Pascal.\nDise\u00f1ado para ser le\u00eddo con facilidad, una de sus caracter\u00edsticas es el uso de palabras donde otros lenguajes utilizar\u00edan s\u00edmbolos. Por ejemplo, los operadores l\u00f3gicos !, || y && en Python se escriben not, or y and, respectivamente.\nEl contenido de los bloques de c\u00f3digo (bucles, funciones, clases, etc.) es delimitado mediante espacios o tabuladores, conocidos como sangrado o indentaci\u00f3n, antes de cada l\u00ednea de \u00f3rdenes pertenecientes al bloque.[29]\u200b Python se diferencia as\u00ed de otros lenguajes de programaci\u00f3n que mantienen como costumbre declarar los bloques mediante un conjunto de caracteres, normalmente entre llaves {}.[30]\u200b[31]\u200b Se pueden utilizar tanto espacios como tabuladores para sangrar el c\u00f3digo, pero se recomienda no mezclarlos.[32]\u200b \nint\n \nfactorial\nx\n{\n    \nif\n<\n||\n%\n!=\n        \nprintf\n\"x debe ser un numero entero mayor o igual a 0\"\n);\nreturn\n-1\n;\n// Error\n}\n==\n*\nfactorial\n-\ndef\n):\nassert\n>=\nand\n\"x debe ser un entero mayor o igual a 0.\"\n:\nelse\nDebido al significado sint\u00e1ctico de la sangr\u00eda, cada instrucci\u00f3n debe estar contenida en una sola l\u00ednea. No obstante, si por legibilidad se quiere dividir la instrucci\u00f3n en varias l\u00edneas, a\u00f1adiendo una barra invertida \\ al final de una l\u00ednea, se indica que la instrucci\u00f3n contin\u00faa en la siguiente.\nEstas instrucciones son equivalentes:\nlista\n'valor 1'\n'valor 2'\n'valor 3'\ncadena\n'Esto es una cadena bastante larga'\n'Esto es una cadena '\n'bastante larga'", "subsections": [{"name": "Comentarios", "text": "Los comentarios se pueden poner de dos formas. La primera y m\u00e1s apropiada para comentarios largos es utilizando la notaci\u00f3n ''' comentario ''', tres ap\u00f3strofos de apertura y tres de cierre. La segunda notaci\u00f3n utiliza el s\u00edmbolo #, que se extiende hasta el final de la l\u00ednea. \nEl int\u00e9rprete no tiene en cuenta los comentarios, lo cual es \u00fatil si deseamos poner informaci\u00f3n adicional en el c\u00f3digo. Por ejemplo, una explicaci\u00f3n sobre el comportamiento de una secci\u00f3n del programa.\n'''\nComentario m\u00e1s largo en una l\u00ednea en Python\n\"Hola mundo\"\n# Tambi\u00e9n es posible a\u00f1adir un comentario al final de una l\u00ednea de c\u00f3digo"}, {"name": "Variables", "text": "Las variables se definen de forma din\u00e1mica, lo que significa que no se tiene que especificar cu\u00e1l es su tipo de antemano y puede tomar distintos valores en otro momento, incluso de un tipo diferente al que ten\u00eda previamente. Se usa el s\u00edmbolo = para asignar valores.\n\"texto\"\n# Esto es posible porque los tipos son asignados din\u00e1micamente\nLos nombres de variables pueden contener n\u00fameros y letras pero deben comenzar con una letra. Adem\u00e1s, existen 35 palabras reservadas:[33]\u200b[34]\u200b\nand\nas\nassert\nasync\nawait\nbreak\nclass\ncontinue\ndef\ndel\nelif\nelse\nexcept\nFalse\nfinally\nfor\nfrom\nglobal\nif\nimport\nin\nis\nlambda\nNone\nnonlocal\nnot\nor\npass\nraise\nreturn\nTrue\ntry\nwhile\nwith\nyield\nA partir de Python 3.10 existen tambi\u00e9n soft keywords, palabras que son reservadas en ciertos contextos, pero que normalmente pueden ser usadas como nombres de variables. Estos identificadores son match, case y _."}, {"name": "Tipos de datos", "text": "Los tipos de datos b\u00e1sicos se pueden resumir en esta tabla:\nMutable: si su contenido (o dicho valor) puede cambiarse en tiempo de ejecuci\u00f3n.\nInmutable: si su contenido (o dicho valor) no puede cambiarse en tiempo de ejecuci\u00f3n."}, {"name": "Condicionales", "text": "Una sentencia condicional ejecuta su bloque de c\u00f3digo interno solo si se cumple cierta condici\u00f3n. Se define usando la palabra clave if seguida de la condici\u00f3n y el bloque de c\u00f3digo. Si existen condiciones adicionales, se introducen usando la palabra clave elif seguida de la condici\u00f3n y su bloque de c\u00f3digo. Las condiciones se eval\u00faan de manera secuencial hasta encontrar la primera que sea verdadera, y su bloque de c\u00f3digo asociado es el \u00fanico que se ejecuta. Opcionalmente, puede haber un bloque final (la palabra clave else, seguida de un bloque de c\u00f3digo) que se ejecuta solo cuando todas las condiciones anteriores fueron falsas.\nverdadero\nTrue\n# No es necesario poner \"verdadero == True\"\n...\n\"Verdadero\"\n\"Falso\"\nVerdadero\nlenguaje\n\"Python\"\n\"C\"\n# lenguaje no es \"C\", por lo que este bloque se obviar\u00e1 y evaluar\u00e1 la siguiente condici\u00f3n\n\"Lenguaje de programaci\u00f3n: C\"\nelif\n# Se pueden a\u00f1adir tantos bloques \"elif\" como se quiera\n\"Lenguaje de programaci\u00f3n: Python\"\n# En caso de que ninguna de las anteriores condiciones fuera cierta, se ejecutar\u00eda este bloque\n\"Lenguaje de programaci\u00f3n: indefinido\"\nLenguaje\nde\nprogramaci\u00f3n\nPython\n# Uso de \"and\" para comprobar que ambas condiciones son verdaderas\n\"Verdadero y Lenguaje de programaci\u00f3n: Python\"\ny"}, {"name": "Bucle for", "text": "El bucle for es similar a foreach en otros lenguajes. Recorre un objeto iterable, como una lista, una tupla o un generador, y por cada elemento del iterable ejecuta el bloque de c\u00f3digo interno. Se define con la palabra clave for seguida de un nombre de variable, seguido de in, seguido del iterable, y finalmente el bloque de c\u00f3digo interno. En cada iteraci\u00f3n, el elemento siguiente del iterable se asigna al nombre de variable especificado:\n\"a\"\n\"b\"\n\"c\"\nfor\ni\nin\n# Iteramos sobre una lista, que es iterable\nb\nc\n\"abcdef\"\n# Iteramos sobre una cadena, que tambi\u00e9n es iterable\nend\n', '\n# A\u00f1adiendo end=', ' al final hacemos que no introduzca un salto de l\u00ednea, sino una coma y un espacio\nd\ne\nf"}, {"name": "Bucle while", "text": "El bucle while eval\u00faa una condici\u00f3n y, si es verdadera, ejecuta el bloque de c\u00f3digo interno. Contin\u00faa evaluando y ejecutando mientras la condici\u00f3n sea verdadera. Se define con la palabra clave while seguida de la condici\u00f3n, y a continuaci\u00f3n el bloque de c\u00f3digo interno:\nnumero\nwhile\n\" \"\n+=\n# Un buen programador modificar\u00e1 las variables de control al finalizar el ciclo while"}, {"name": "Listas y Tuplas", "text": "Para declarar una lista se usan los corchetes [], en cambio, para declarar una tupla se usan los par\u00e9ntesis (). En ambas los elementos se separan por comas, y en el caso de las tuplas es necesario que tengan como m\u00ednimo una coma.\nTanto las listas como las tuplas pueden contener elementos de diferentes tipos. No obstante, las listas suelen usarse para elementos del mismo tipo en cantidad variable mientras que las tuplas se reservan para elementos distintos en cantidad fija.\nPara acceder a los elementos de una lista o tupla se utiliza un \u00edndice entero (empezando por \"0\", no por \"1\"). Se pueden utilizar \u00edndices negativos para acceder elementos a partir del final.\nLas listas se caracterizan por ser mutables, es decir, se puede cambiar su contenido en tiempo de ejecuci\u00f3n, mientras que las tuplas son inmutables ya que no es posible modificar el contenido una vez creadas.\n\"abc\"\n42\n3.1415\n# Acceder a un elemento por su \u00edndice\n'abc'\n# Acceder a un elemento usando un \u00edndice negativo\n.\nappend\n# A\u00f1adir un elemento al final de la lista\ndel\n# Borra un elemento de la lista usando un \u00edndice (en este caso: True)\n\"xyz\"\n# Re-asignar el valor del primer elemento de la lista\n# Mostrar los elementos de la lista del \u00edndice \"0\" al \"2\" (sin incluir este \u00faltimo)\n'xyz'\nlista_anidada\n]]\n# Es posible anidar listas\n[[\n],\n][\n# Acceder a un elemento de una lista dentro de otra lista (del segundo elemento, mostrar el primer elemento)\ntupla\n# No es posible borrar (ni a\u00f1adir) un elemento en una tupla, lo que provocar\u00e1 una excepci\u00f3n\nTraceback\nmost\nrecent\ncall\nlast\nFile\n\"<stdin>\"\nline\nmodule\n>\nTypeError\n'tuple'\nobject\ndoesn\n't support item deletion\n# Tampoco es posible re-asignar el valor de un elemento en una tupla, lo que tambi\u00e9n provocar\u00e1 una excepci\u00f3n\ndoes\nnot\nsupport\nitem\nassignment\n# Mostrar los elementos de la tupla del \u00edndice \"0\" al \"2\" (sin incluir este \u00faltimo)\ntupla_anidada\n# Tambi\u00e9n es posible anidar tuplas\n# Esto tambi\u00e9n es una tupla, aunque es recomendable ponerla entre par\u00e9ntesis (recuerde que requiere, al menos, una coma)\n# Aunque se encuentra entre par\u00e9ntesis, esto no es una tupla, ya que no posee al menos una coma, por lo que \u00fanicamente aparecer\u00e1 el valor\n,)\n# En cambio, en este otro caso, s\u00ed es una tupla\n# Con m\u00e1s de un elemento no es necesaria la coma final\n# Aunque agregarla no modifica el resultado"}, {"name": "Diccionarios", "text": "Para declarar un diccionario se usan las llaves {}. Contienen elementos separados por comas, donde cada elemento est\u00e1 formado por un par clave:valor (el s\u00edmbolo : separa la clave de su valor correspondiente).\nLos diccionarios son mutables, es decir, se puede cambiar el contenido de un valor en tiempo de ejecuci\u00f3n.\nEn cambio, las claves de un diccionario deben ser inmutables. Esto quiere decir, por ejemplo, que no podremos usar ni listas ni diccionarios como claves.\nEl valor asociado a una clave puede ser de cualquier tipo de dato, incluso un diccionario.\ndiccionario\n\"cadena\"\n\"numero\"\n\"lista\"\n]}\n# Diccionario que tiene diferentes valores por cada clave, incluso una lista\n# Usando una clave, se accede a su valor\n# Acceder a un elemento de una lista dentro de un valor (del valor de la clave \"lista\", mostrar el primer elemento)\n# Re-asignar el valor de una clave\n\"decimal\"\n3.1415927\n# Insertar un nuevo elemento clave:valor\ndiccionario_mixto\n\"tupla\"\n),\n\"diccionario\"\n# Tambi\u00e9n es posible que un valor sea un diccionario\n# Acceder a un elemento dentro de una lista, que se encuentra dentro de un diccionario\n{(\n,):\n# S\u00ed es posible que una clave sea una tupla, pues es inmutable\n{[\n]:\n# No es posible que una clave sea una lista, pues es mutable, lo que provocar\u00e1 una excepci\u00f3n\nunhashable\ntype\n'list'"}, {"name": "Sentencia switch-case", "text": "Python cuenta con la estructura switch-case desde la versi\u00f3n 3.10. Esta tiene el nombre de Structural Pattern Matching.\nmatch\nvariable\ncase\ncondicion\n# codigo\n_\nCabe destacar que esta funcionalidad es considerablemente m\u00e1s compleja que el conocido switch-case de la mayor\u00eda de lenguajes de programaci\u00f3n, ya que no solo permite realizar una comparaci\u00f3n del valor, si no que tambi\u00e9n puede comprobar el tipo del objeto, y sus atributos. Adem\u00e1s, puede realizar un desempaquetado directo de secuencias de datos, y comprobarlos de forma espec\u00edfica.\nEn el siguiente ejemplo, se comprueban los atributos de nuestra instancia de Punto. Si en estos no se cumple que x = 10 y y = 40, se pasar\u00e1 a la siguiente condici\u00f3n.\nEs importante anotar que Punto(x=10, y=40) no est\u00e1 construyendo un nuevo objeto, aunque pueda parecerlo.\nfrom\ndataclasses\nimport\ndataclass\n@dataclass\nclass\nPunto\nint\ncoordenada\nPunto\n34\n40\n# los atributos \"x\" e \"y\" tienen el valor specificado\n\"Coordenada 10, 40\"\n():\n# si es una instancia de Punto\n\"es un punto\"\n# ninguna condici\u00f3n cumplida (default)\n\"No es un punto\"\nEn versiones anteriores, existen diferentes formas de realizar esta operaci\u00f3n l\u00f3gica de forma similar:\nUsando if, elif, else\nPodemos usar la estructura de la siguiente manera:\ncondicion1\nhacer1\ncondicion2\nhacer2\ncondicion3\nhacer3\nhacer\nEn esa estructura se ejecutara controlando la condicion1, si no se cumple pasara a la siguiente y as\u00ed sucesivamente hasta entrar en el else.\nUn ejemplo pr\u00e1ctico ser\u00eda:\ncalculo\nop\n'sum'\n'rest'\n'mult'\n'div'\n/\nNone\ncalculo\nPodr\u00edamos decir que el lado negativo de la sentencia armada con if, elif y else es que si la lista de posibles operaciones es muy larga, las tiene que recorrer una por una hasta llegar a la correcta.\nUsando diccionarios\nPodemos usar un diccionario para el mismo ejemplo:\nlambda\nget\n)()\nDe esta manera, si las opciones fueran muchas, no recorrer\u00eda todas; solo ir\u00eda directamente a la operaci\u00f3n buscada en la \u00faltima l\u00ednea (.get(op, lambda: None)()) y estar\u00edamos dando una opci\u00f3n por defecto. El motivo por el que se usan expresiones lambda dentro del diccionario es para prevenir la ejecuci\u00f3n de las instrucciones que contienen a la hora de definir el diccionario. Este \u00fanicamente define funciones como valores del diccionario, y posteriormente, al obtener estas mediante get(), se llama a la funci\u00f3n, ejecutando la expresi\u00f3n que esta contiene."}, {"name": "Conjuntos", "text": "Los conjuntos se construyen mediante la expresi\u00f3n set(items), donde items es cualquier objeto iterable, como listas o tuplas. Los conjuntos no mantienen el orden ni contienen elementos duplicados.\nSe suelen utilizar para eliminar duplicados de una secuencia, o para operaciones matem\u00e1ticas como intersecci\u00f3n, uni\u00f3n, diferencia y diferencia sim\u00e9trica.\nconjunto_inmutable\nfrozenset\n([\n])\n# Se utiliza una lista como objeto iterable\n'a'\n'b'\nconjunto1\nset\n# Primer conjunto mutable\nconjunto2\n\"d\"\n# Segundo conjunto mutable\n'c'\n'd'\n# Los conjuntos no mantienen el orden, como los diccionarios\n&\n# Intersecci\u00f3n\n|\n# Uni\u00f3n\n# Diferencia (1)\n([])\n# Diferencia (2)\n^\n# Diferencia sim\u00e9trica"}, {"name": "Listas por comprensi\u00f3n", "text": "Una lista por comprensi\u00f3n (en ingl\u00e9s list comprehension) es una expresi\u00f3n compacta para definir listas. Al igual que lambda, aparece en lenguajes funcionales. Ejemplos:\n# La funci\u00f3n range devuelve una lista, empezando en 0 y terminando con el n\u00famero indicado menos uno\n)]\n# Por cada elemento del rango, lo multiplica por s\u00ed mismo y lo agrega al resultado\n16\n[("}, {"name": "Funciones", "text": "Las funciones se definen con la palabra clave def, seguida del nombre de la funci\u00f3n y sus par\u00e1metros. Otra forma de escribir funciones, aunque menos utilizada, es con la palabra clave lambda (que aparece en lenguajes funcionales como Lisp).\nEl valor devuelto en las funciones con def ser\u00e1 el dado con la instrucci\u00f3n return.\nLas funciones pueden recibir par\u00e1metros especiales para manejar el exceso de argumentos.\nEl par\u00e1metro *args recibe como una tupla un n\u00famero variable de argumentos posicionales.\nEl par\u00e1metro **kwargs recibe como un diccionario un n\u00famero variable de argumentos por palabras clave.\ndef:\nsuma\n# Retornar la suma del valor de la variable \"x\" y el valor de \"y\"\nsuma\n# La variable \"y\" no se modifica, siendo su valor: 2\n# La variable \"y\" s\u00ed se modifica, siendo su nuevo valor: 10\n14\n*args:\nargs\nresultado\n# Se itera la tupla de argumentos\nnum\n#  Suma todos los argumentos\n# Retorna el resultado de la suma\n# No importa el n\u00famero de variables posicionales que se pasen a la funci\u00f3n\n25\n**kwargs:\n**\nkwargs\n# Se itera el diccionario de argumentos\nkey\nvalue\nitems\n# Suma todos los valores de los argumentos\nz\n# No importa el n\u00famero de variables por clave que se pasen a la funci\u00f3n\n12\nlambda:"}, {"name": "Clases", "text": "Las clases se definen con la palabra clave class, seguida del nombre de la clase y, si hereda de otras clases, los nombres de estas.\nEn Python 2.x era recomendable que una clase heredase de object, en Python 3.x ya no hace falta.\nEn una clase, un m\u00e9todo equivale a una funci\u00f3n, y un atributo equivale a una variable.[35]\u200b\n__init__ es un m\u00e9todo especial que se ejecuta al instanciar la clase, se usa generalmente para inicializar atributos y ejecutar m\u00e9todos necesarios. Al igual que todos los m\u00e9todos en Python, debe tener al menos un par\u00e1metro (generalmente se utiliza self). El resto de par\u00e1metros ser\u00e1n los que se indiquen al instanciar la clase.\nLos atributos que se desee que sean accesibles desde fuera de la clase se deben declarar usando self. delante del nombre.\nEn Python no existe el concepto de encapsulamiento[36]\u200b, por lo que el programador debe ser responsable de asignar los valores a los atributos.\nPersona\n__init__\nself\nnombre\nedad\n# Un atributo cualquiera\n# Otro atributo cualquiera\nmostrar_edad\n# Es necesario que, al menos, tenga un par\u00e1metro, generalmente self\n# mostrando un atributo\nmodificar_edad\n# Modificando edad\n150\n# Se comprueba que la edad no sea menor que 0 (algo imposible) ni mayor que 150 (algo realmente dif\u00edcil)\nFalse\n# Si est\u00e1 en el rango 0-150, entonces se modifica la variable\n# Se modifica la edad\np\nPersona\n'Alicia'\n20\n# Instanciando la clase. Como se puede ver, no se especifica el valor de self\n# La variable \"nombre\" del objeto s\u00ed es accesible desde fuera\n'Andrea'\n# Y por tanto, se puede cambiar su contenido\nmostrar_edad\n()\n# Se llama a un m\u00e9todo de la clase\nmodificar_edad\n21\n# Es posible cambiar la edad usando el m\u00e9todo espec\u00edfico que hemos hecho para hacerlo de forma controlada"}, {"name": "M\u00f3dulos", "text": "Existen muchas propiedades que se pueden agregar al lenguaje importando m\u00f3dulos, conjuntos de funciones y clases para realizar determinadas tareas usualmente escritos tambi\u00e9n en Python. Un ejemplo es el m\u00f3dulo tkinter[37]\u200b, que permite crear interfaces gr\u00e1ficas basadas en la biblioteca Tk. Otro ejemplo es el m\u00f3dulo os, que provee acceso a muchas funciones del sistema operativo. Los m\u00f3dulos se agregan al c\u00f3digo escribiendo la palabra import, seguida del nombre del m\u00f3dulo que queramos usar.[38]\u200b\nInstalaci\u00f3n de m\u00f3dulos (pip)\nLa instalaci\u00f3n de m\u00f3dulos en Python se puede realizar mediante la herramienta de software Pip, que suele estar incluida en las instalaciones de Python. Esta herramienta permite la gesti\u00f3n de los distintos paquetes o m\u00f3dulos instalables para Python, incluyendo as\u00ed las siguientes caracter\u00edsticas:\nInstalaci\u00f3n de paquetes.\nInstalaci\u00f3n de versiones concretas de paquetes.\nInstalaci\u00f3n a partir de un archivo de configuraci\u00f3n.\nDesinstalaci\u00f3n.\nActualizaci\u00f3n.\nInterfaz al sistema operativo\nEl m\u00f3dulo os provee funciones para interactuar con el sistema operativo:\nos\nos\nname\n# Devuelve el nombre del sistema operativo\n'posix'\nmkdir\n\"/tmp/ejemplo\"\n# Crea un directorio en la ruta especificada\nPara tareas de administraci\u00f3n de archivos, el m\u00f3dulo shutil provee una interfaz de m\u00e1s alto nivel:\nshutil\nshutil\ncopyfile\n'datos.db'\n'informacion.db'\nmove\n'/build/programas'\n'dir_progs'\nComodines de archivos\nEl m\u00f3dulo glob provee una funci\u00f3n para crear listas de archivos a partir de b\u00fasquedas con comodines en carpetas:\nglob\nglob\n'*.py'\n'numeros.py'\n'ejemplo.py'\n'ejemplo2.py'\nArgumentos de l\u00ednea de \u00f3rdenes\nLos argumentos de l\u00ednea de \u00f3rdenes se almacenan en el atributo argv del m\u00f3dulo sys como una lista.\nsys\nsys\nargv\n'demostracion.py'\n'uno'\n'dos'\n'tres'\nMatem\u00e1tica\nEl m\u00f3dulo math permite acceder a las funciones de matem\u00e1tica de punto flotante:\nmath\nmath\ncos\npi\n0.494888338963\nlog\n1024\n10.0\nEl m\u00f3dulo random se utiliza para realizar selecciones al azar:\nrandom\nrandom\nchoice\n'durazno'\n'manzana'\n'frutilla'\nsample\n100\n# Elecci\u00f3n sin reemplazo\n30\n23\n17\n24\n81\n41\n80\n28\n13\n# Un float al azar en el intervalo [0, 1)\n0.23370387692726126\nrandrange\n# Un entero al azar en el intervalo [0, 6)\nEl m\u00f3dulo statistics se utiliza para estad\u00edstica b\u00e1sica, por ejemplo: media, mediana, varianza, etc.:\nstatistics\ndatos\n1.75\n2.75\n1.25\n0.5\n0.25\n3.5\nstatistics\nmean\n1.6071428571428572\nmedian\nvariance\n1.3720238095238095\nFechas y horas\nLos m\u00f3dulos time y datetime permiten trabajar con fechas y horas.\ndatetime\ndatetime\ntime\nnow\nisoformat\n# Devuelve la fecha y hora actual\n'2010-08-10T18:01:17.900401'\nstrftime\n\"%Y-%m-\n%d\n %H:%M:%S\"\n# Devuelve la fecha y/u hora actual con el formato especificado\n'2010-08-10 18:01:17'\ntime\n# M\u00e9todo equivalente\nM\u00f3dulo Turtle\nEl m\u00f3dulo turtle permite la implementaci\u00f3n de gr\u00e1ficas tortuga:\nturtle\nturtle\npensize\nleft\n120\nforward"}]}, {"name": "Sistema de objetos", "text": "En Python todo es un objeto (incluso las clases). Las clases, al ser objetos, son instancias de una metaclase. Python, adem\u00e1s, soporta herencia m\u00faltiple y polimorfismo.\n# Una cadena es un objeto de \"str\"\nupper\n# Al ser un objeto, posee sus propios m\u00e9todos\n'ABC'\n# Una lista es un objeto de \"list\"\n# Una lista (al igual que todo) es un objeto, y tambi\u00e9n posee sus propios m\u00e9todos", "subsections": []}, {"name": "Biblioteca est\u00e1ndar", "text": "Python tiene una gran biblioteca est\u00e1ndar, usada para una diversidad de tareas. Esto viene de la filosof\u00eda \"pilas incluidas\" (batteries included) en referencia a los m\u00f3dulos de Python. Los m\u00f3dulos de la biblioteca est\u00e1ndar pueden complementarse con m\u00f3dulos personalizados escritos en C o en Python. Debido a la gran variedad de herramientas incluidas en la biblioteca est\u00e1ndar, combinada con la habilidad de usar lenguajes de bajo nivel como C y C++ (los cuales son capaces de interactuar con otras bibliotecas), Python es un lenguaje que combina su clara sintaxis con el inmenso poder de lenguajes de m\u00e1s bajo nivel.[39]\u200b", "subsections": []}, {"name": "Implementaciones", "text": "Existen diversas implementaciones del lenguaje:\nCPython es la implementaci\u00f3n original, disponible para varias plataformas en el sitio oficial de Python.\nIronPython es la implementaci\u00f3n para .NET.\nStackless Python es la variante de CPython que trata de no usar el stack de C (www.stackless.com).\nJython es la implementaci\u00f3n hecha en Java.\nPippy es la implementaci\u00f3n realizada para Palm (pippy.sourceforge.net).\nPyPy es una implementaci\u00f3n de Python escrita en Python y optimizada mediante JIT (pypy.org).\nActivePython es una implementaci\u00f3n privativa de Python con extensiones, para servidores en producci\u00f3n y aplicaciones de misi\u00f3n cr\u00edtica desarrollado por ActiveState Software.", "subsections": []}, {"name": "Incidencias", "text": "A lo largo de su historia, Python ha presentado una serie de incidencias, de las cuales las m\u00e1s importantes han sido las siguientes:\nEl 13 de febrero de 2009 se lanz\u00f3 una nueva versi\u00f3n de Python bajo el nombre clave \"Python 3000\" o,[40]\u200b abreviado, \"Py3K\".[41]\u200b Esta nueva versi\u00f3n incluye toda una serie de cambios que requieren reescribir el c\u00f3digo de versiones anteriores. Para facilitar este proceso, junto con Python 3 se ha publicado una herramienta de traducci\u00f3n autom\u00e1tica llamada 2to3.[42]\u200b[43]\u200b\nEl sistema operativo Windows 10, a partir de su actualizaci\u00f3n de mayo de 2019, dispone de la caracter\u00edstica de preinstalaci\u00f3n asistida del lenguaje Python y varias de sus herramientas adicionales.[44]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "PyPI, repositorio de paquetes de software de terceros para Python.\nDjango, framework de desarrollo web.\nCython, lenguaje de programaci\u00f3n para simplificar la escritura de m\u00f3dulos de extensi\u00f3n para Python en C y C++.\nFlask, framework de desarrollo web.\nCubicWeb, framework de desarrollo web en plataforma sem\u00e1ntica.\nPygame, conjunto de m\u00f3dulos para la creaci\u00f3n de videojuegos en dos dimensiones.\nTkinter, binding de la biblioteca gr\u00e1fica Tcl/Tk para Python.\nPyGTK, binding de la biblioteca gr\u00e1fica GTK para Python.\nwxPython, binding de la biblioteca gr\u00e1fica wxWidgets para Python.\nPyQt y PySide, bindings de la biblioteca gr\u00e1fica Qt para Python.\nPlone, sistema de gesti\u00f3n de contenidos.\nBiopython, colecci\u00f3n de bibliotecas orientadas a la bioinform\u00e1tica para Python.\nNumPy, biblioteca que da soporte al c\u00e1lculo con matrices y vectores.\nSciPy, biblioteca que permite realizar an\u00e1lisis cient\u00edfico como optimizaci\u00f3n, \u00e1lgebra lineal, integraci\u00f3n y ecuaciones diferenciales, entre otras operaciones.\nPandas, biblioteca que permite el an\u00e1lisis de datos a trav\u00e9s de series y dataframes.\nPyomo, colecci\u00f3n de paquetes de software de Python para formular modelos de optimizaci\u00f3n\nScikit-learn, biblioteca que implementa algoritmos de aprendizaje autom\u00e1tico.", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abChangelog - Python Documentation\u00bb. python.org. Consultado el 9 de diciembre de 2022.\u00a0\n\u2191  \u00ab\u00bfQu\u00e9 es Python?\u00bb (html). LUCA. Archivado desde el original el 24 de febrero de 2020. Consultado el 24 de febrero de 2020.\u00a0 \n\u2191 a b History and License\n\u2191 a b The Making of Python\n\u2191 a b \u00abWhy was Python created in the first place?\u00bb. General Python FAQ.\u00a0\n\u2191 1. Whetting Your Appetite\n\u2191 Tannhausser (12 de julio de 2018). \u00abGuido van Rossum dimite como l\u00edder de Python\u00bb (html). La Mirada del Replicante. Archivado desde el original el 12 de julio de 2018. Consultado el 21 de julio de 2018. \u00abComo veis no solo transfiere el poder, sino que evita designar sucesor y deja en manos de los corel developers la tarea de organizar como ser\u00e1 la transici\u00f3n, as\u00ed como el modelo de gobierno en un futuro.\u00a0\u00bb\u00a0\n\u2191 van Rossum, Guido (12 de julio de 2018). \u00ab[python-committers] Transfer of power\u00bb (html). Mail Archive Com (en ingl\u00e9s). Archivado desde el original el 12 de julio de 2018. Consultado el 21 de julio de 2018. \u00abI am not going to appoint a successor. So what are you all going to do? Create a democracy? Anarchy? A dictatorship? A federation?\u00a0\u00bb\u00a0\n\u2191 van Rossum, Guido (20 de enero de 2009). \u00abA Brief Timeline of Python\u00bb. The History of Python (en ingl\u00e9s). Consultado el 14 de febrero de 2021.\u00a0\n\u2191 Chac\u00f3n Sartori, Camilo. Computaci\u00f3n y programaci\u00f3n funcional\u00a0: introducci\u00f3n al c\u00e1lculo lambda y la programaci\u00f3n funcional usando Racket y Python. [Barcelona]: Marcombo. ISBN\u00a08426732437.\u00a0\n\u2191 The fate of reduce() in Python 3000\n\u2191 Computer Programming for Everybody\n\u2191 Index of /cp4e\n\u2191 a b What's New in Python 2.0\n\u2191 PEP 227 -- Statically Nested Scopes\n\u2191 PEPs 252 and 253: Type and Class Changes\n\u2191 PEP 255: Simple Generators\n\u2191 PEP 282 -- A Logging System\n\u2191 threading \u2014 Higher-level threading interface\n\u2191 \u00abSunsetting Python 2\u00bb (en ingl\u00e9s). python.org. 21 de enero de 2020.\u00a0\n\u2191 \u00abPEP 373 -- Python 2.7 Release Schedule\u00bb (en ingl\u00e9s). python.org. 21 de enero de 2020.\u00a0\n\u2191 \u00abPython Developer's Guide \u2014 Python Developer's Guide\u00bb (en ingl\u00e9s). devguide.python.org. 21 de enero de 2020.\u00a0\n\u2191 \u00abasyncio \u2014 E/S as\u00edncrona\u00bb. docs.python.org. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abMachine Learning (aprendizaje autom\u00e1tico) con Python: una introducci\u00f3n pr\u00e1ctica\u00bb. edX (en ingl\u00e9s). Consultado el 6 de julio de 2020.\u00a0\n\u2191 Rocky. \u00abApplications for Python\u00bb.\u00a0\n\u2191 \"Holand\u00e9s\" hace referencia a Guido van Rossum, el autor del lenguaje de programaci\u00f3n Python, que es holand\u00e9s. Tambi\u00e9n hace referencia a la gran concentraci\u00f3n de desarrolladores holandeses conocidos en relaci\u00f3n con otras nacionalidades.\n\u2191 PEP 20 -- The Zen of Python\n\u2191 \u00abCopia archivada\u00bb. Archivado desde el original el 4 de agosto de 2018. Consultado el 25 de febrero de 2010.\u00a0\n\u2191 Python Software Foundation. \u00abMore control flow options\u00bb. Python v2.7.8 Documentation (en ingl\u00e9s). Consultado el 20 de julio de 2014.\u00a0\n\u2191 Eric Huss. \u00abFunction Definition\u00bb. The C Library Reference Guide (en ingl\u00e9s). Archivado desde el original el 18 de enero de 2015. Consultado el 20 de julio de 2014.\u00a0\n\u2191 \u00c1lvarez, Miguel \u00c1ngel (2 de noviembre de 2001). \u00abFunciones en Javascript\u00bb. desarrolloweb.com (en ingl\u00e9s). Consultado el 20 de julio de 2014.\u00a0\n\u2191 David Goodger. \u00abCode Like a Pythonista: Idiomatic Python\u00bb. Python.net (en ingl\u00e9s). Archivado desde el original el 27 de mayo de 2014. Consultado el 20 de julio de 2014.\u00a0\n\u2191  Downey, Allen; Elkner, Jeffrey (1 de abril de 2002). \u00abAprenda a Pensar Como un Programador con Python\u00bb (pdf). Argentina Python. p.\u00a040. Archivado desde el original el 23 de octubre de 2017. Consultado el 21 de marzo de 2020.\u00a0 \n\u2191 \u00ab2. An\u00e1lisis l\u00e9xico\u00bb. Python documentation. docs.python.org. Consultado el 19 de marzo de 2023.\u00a0\n\u2191  Recuero de los Santos, Paloma (13 de mayo de 2020). \u00abPython para todos: Diferencia entre m\u00e9todo y funci\u00f3n\u00bb (html). Archivado desde el original el 14 de mayo de 2020. Consultado el 13 de mayo de 2020.\u00a0 \n\u2191 Encapsulaci\u00f3n en Python\n\u2191 \u00abPython GUI Programming With Tkinter\u00bb. Codelivly. 2022.\u00a0\n\u2191 \u00abPeque\u00f1o paseo por la Biblioteca Est\u00e1ndar\u00bb. Tutorial de Python (y Django!) en Espa\u00f1ol. Archivado desde el original el 15 de septiembre de 2017. Consultado el 16 de agosto de 2017.\u00a0\n\u2191 \u00abLa Biblioteca Est\u00e1ndar de Python\u00bb. docs.python.org. Consultado el 26 de abril de 2021.\u00a0\n\u2191 Python 3.0.1\n\u2191 PEP 3000 -- Python 3000\n\u2191 2to3 - Automated Python 2 to 3 code translation\n\u2191  Novedades de Python 3.0\n\u2191  Dower, Steve (21 de mayo de 2019). \u00abWho put Python in the Windows 10 May 2019 Update?\u00bb (html). Microsoft Blog (en ingl\u00e9s). Consultado el 23 de mayo de 2019.\u00a0 ", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Knowlton, Jim (2009). Python. tr: Fern\u00e1ndez V\u00e9lez, Mar\u00eda Jes\u00fas (1 edici\u00f3n). Anaya Multimedia-Anaya Interactiva. ISBN\u00a0978-84-415-2513-9.\u00a0\nMartelli, Alex (2007). Python. Gu\u00eda de referencia. tr: Gorj\u00f3n Salvador, Bruno (1 edici\u00f3n). Anaya Multimedia-Anaya Interactiva. ISBN\u00a0978-84-415-2317-3.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Wikilibros: Python\nC\u00f3digos Python", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/ABC_(lenguaje_de_programaci%C3%B3n)", "title": "ABC (lenguaje de programaci\u00f3n)", "summary": "ABC es un lenguaje de programaci\u00f3n imperativo de prop\u00f3sito general y entorno de programaci\u00f3n desarrollado en el Centrum Wiskunde & Informatica de Pa\u00edses Bajos por Leo Geurts, Lambert Meertens y Steven Pemberton. Es interactivo, estructurado, de alto nivel y est\u00e1 pensado para ser utilizado en lugar de BASIC, Pascal o AWK. No pretende ser un lenguaje de programaci\u00f3n de sistemas, sino que est\u00e1 destinado a la ense\u00f1anza o la creaci\u00f3n de prototipos.\nEl lenguaje tuvo una gran influencia en el dise\u00f1o del lenguaje de programaci\u00f3n Python; Guido van Rossum, quien desarroll\u00f3 Python, trabaj\u00f3 anteriormente durante varios a\u00f1os en el sistema ABC a mediados de los a\u00f1os ochenta.[1]\u200b[2]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Caracter\u00edsticas\n2 Ejemplo\n3 Referencias\n3.1 Lectura adicional", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "Sus dise\u00f1adores afirman que los programas ABC suelen tener alrededor de una cuarta parte del tama\u00f1o de los programas equivalentes de Pascal o C, y son m\u00e1s legibles. Las caracter\u00edsticas clave incluyen:\nSolo cinco tipos de datos b\u00e1sicos\nNo requiere declaraci\u00f3n de variables.\nSoporte expl\u00edcito para programaci\u00f3n top-down.\nLa anidaci\u00f3n de instrucciones se indica mediante sangr\u00eda, a trav\u00e9s de la regla de fuera de juego.\nPrecisi\u00f3n arbitraria, Listas y cadenas de tama\u00f1o ilimitado, y otras caracter\u00edsticas que admiten la ortogonalidad y la facilidad de uso para los principiantes.\nComo sucede con otros int\u00e9rpretes, ABC es, adem\u00e1s de un lenguaje de programaci\u00f3n, un entorno interactivo de trabajo. No requiere de declaraciones de variables, cuenta con el apoyo de la programaci\u00f3n top-down. Proporciona una precisi\u00f3n aritm\u00e9tica infinita, ilimitada listas de cadenas, y otras caracter\u00edsticas que da gran facilidad al uso de los principiantes. Sus dise\u00f1adores afirman que los programas de ABC son t\u00edpicamente alrededor de una cuarta parte del tama\u00f1o de los programas equivalentes en lenguaje Pascal o en lenguaje C, y adem\u00e1s es m\u00e1s legible. \nOriginalmente fue una aplicaci\u00f3n monol\u00edtica, dando lugar a una incapacidad para adaptarse a las nuevas exigencias, como la creaci\u00f3n de una interfaz gr\u00e1fica de usuario. Con ABC no se pod\u00eda acceder directamente al sistema de archivos subyacente y el sistema operativo. \nIncluye un entorno de programaci\u00f3n con sintaxis de edici\u00f3n-dirigida, sugerencias, variables persistentes y m\u00faltiples espacios de trabajo. \nABC est\u00e1 disponible como un int\u00e9rprete / compilador, actualmente en la versi\u00f3n 1.05.02. Adem\u00e1s ha sido portado a Unix, DOS, Atari, y Apple Macintosh.\nABC tambi\u00e9n tuvo una gran influencia en el dise\u00f1o del lenguaje de programaci\u00f3n Python, Guido van Rossum, quien desarroll\u00f3 Python, que anteriormente trabaj\u00f3 durante varios a\u00f1os en el sistema ABC a principios de los a\u00f1os 1980.", "subsections": []}, {"name": "Ejemplo", "text": "Un ejemplo del lenguaje, de una funci\u00f3n para recoger el conjunto de todas las palabras de un documento:", "subsections": []}, {"name": "Referencias", "text": "\u2191 The A-Z of Programming Languages: Python (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima)..\n\u2191 An Interview with Guido van Rossum. (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima).", "subsections": [{"name": "Lectura adicional", "text": "ABC Programmer's Handbook\nA Short Introduction to the ABC Language"}]}]}
{"url": "https://es.wikipedia.org/wiki/Amoeba_(Inform%C3%A1tica)", "title": "Amoeba (sistema operativo)", "summary": "Amoeba es un sistema operativo distribuido de investigaci\u00f3n, basado en una arquitectura de micron\u00facleo. Fue desarrollado por Andrew S. Tanenbaum y otros en la Universidad Libre de \u00c1msterdam. El objetivo del proyecto Amoeba era construir un sistema de tiempo compartido que hiciera que una red entera de computadores pareciera a los ojos de un usuario como una m\u00e1quina \u00fanica.\nLos servicios suministrados por el n\u00facleo incluyen threads, segmentos de memoria, mecanismos de IPC (RPCs y mensajes) y E/S [160]. \nEl desarrollo parece detenido, dado que la fecha de la \u00faltima modificaci\u00f3n en el c\u00f3digo data de febrero de 2001.\nExisten versiones para varias plataformas, incluyendo i386, Sun-3 y SPARC.\nEl lenguaje de programaci\u00f3n Python fue originalmente desarrollado para esta plataforma.", "sections": [{"name": "Enlaces externos", "text": "P\u00e1gina oficial de Amoeba (en ingl\u00e9s)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Apache_Software_Foundation", "title": "Apache Software Foundation", "summary": "\u00a0\nApache Software Foundation (ASF) es una organizaci\u00f3n sin fines de lucro (una fundaci\u00f3n) creada para dar soporte a los proyectos de software bajo la denominaci\u00f3n Apache, incluyendo el popular servidor HTTP Apache. La ASF se form\u00f3 a partir del llamado Grupo Apache y fue registrada en Delaware (Estados Unidos), en marzo de 1996.\nApache Software Foundation es una comunidad descentralizada de desarrolladores que trabajan cada uno en sus propios proyectos de c\u00f3digo abierto. Los proyectos Apache se caracterizan por un modelo de desarrollo basado en el consenso y la colaboraci\u00f3n y en una licencia de software abierta y pragm\u00e1tica. Cada proyecto es gestionado por un grupo autoseleccionado de expertos t\u00e9cnicos que son participantes activos en dicho proyecto. La ASF es una meritocracia, de lo que se deriva que la pertenencia a la fundaci\u00f3n se permite solo a voluntarios que hayan contribuido significativamente a proyectos Apache.\nEntre los objetivos de la ASF se encuentran el de proporcionar protecci\u00f3n legal a los voluntarios que trabajan en proyectos Apache, y al propio nombre Apache de ser empleado por otras organizaciones. El proyecto Apache es el origen de la Licencia Apache y de todas las licencias que siguen un esquema similar (llamadas licencias \"estilo Apache\").", "sections": [{"name": "\u00cdndice", "text": "1 Financiaci\u00f3n\n2 V\u00e9ase tambi\u00e9n\n3 Referencias\n4 Enlaces externos", "subsections": []}, {"name": "Financiaci\u00f3n", "text": "Entre los patrocinadores conocidos se cuentan Google, Yahoo, Microsoft, Hewlett-Packard, Covalent, IONA, AirPlus International, BlueNog, Intuit, Joost, Matthew Mullenweg, Two Sigma Investments.\nLa propia Apache Software Foundation clasifica a estos patrocinadores en diferentes categor\u00edas:[1]\u200b\nLos patrocinadores reciben diversos tipos de apoyo por parte de la Apache Software Foundation (p.ej. \"comunicados de prensa conjuntos\"), siendo nombrados y honrados en las p\u00e1ginas web de la fundaci\u00f3n.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Anexo:Proyectos de Apache Software Foundation", "subsections": []}, {"name": "Referencias", "text": "\u2191 Apache Software Foundation: Sponsorship Thanks! (2009, en ingl\u00e9s)", "subsections": []}, {"name": "Enlaces externos", "text": "Proyecto Apache.\nWiki Proyecto Apache.\nConferencias de Apache\n\u00cdndice de Committer\n\u00cdndice de Proyectos", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Aprendizaje_autom%C3%A1tico", "title": "Aprendizaje autom\u00e1tico", "summary": "El aprendizaje autom\u00e1tico o aprendizaje automatizado o aprendizaje de m\u00e1quinas (del ingl\u00e9s, machine learning) es el subcampo de las ciencias de la computaci\u00f3n y una rama de  la inteligencia artificial, cuyo objetivo es desarrollar t\u00e9cnicas que permitan que las computadoras aprendan. Se dice que un agente aprende cuando su desempe\u00f1o mejora con la experiencia y mediante el uso de datos; es decir, cuando la habilidad no estaba presente en su genotipo o rasgos de nacimiento.[1]\u200b \"En el aprendizaje de m\u00e1quinas un computador observa datos, construye un modelo basado en esos datos y utiliza ese modelo a la vez como una hip\u00f3tesis acerca del mundo y una pieza de software que puede resolver problemas\".[2]\u200b\nEn muchas ocasiones el campo de actuaci\u00f3n del aprendizaje autom\u00e1tico se solapa con el de la estad\u00edstica inferencial, ya que las dos disciplinas se basan en el an\u00e1lisis de datos. Sin embargo, el aprendizaje autom\u00e1tico incorpora las preocupaciones de la complejidad computacional de los problemas. Muchos problemas son de clase NP-hard, por lo que gran parte de la investigaci\u00f3n realizada en aprendizaje autom\u00e1tico est\u00e1 enfocada al dise\u00f1o de soluciones factibles a esos problemas. El aprendizaje autom\u00e1tico tambi\u00e9n est\u00e1 estrechamente relacionado con el reconocimiento de patrones. El aprendizaje autom\u00e1tico puede ser visto como un intento de automatizar algunas partes del m\u00e9todo cient\u00edfico mediante m\u00e9todos matem\u00e1ticos. Por lo tanto es un proceso de inducci\u00f3n del conocimiento.\nEl aprendizaje autom\u00e1tico tiene una amplia gama de aplicaciones, incluyendo motores de b\u00fasqueda, diagn\u00f3sticos m\u00e9dicos, detecci\u00f3n de fraude en el uso de tarjetas de cr\u00e9dito, an\u00e1lisis de mercado para los diferentes sectores de actividad, clasificaci\u00f3n de secuencias de ADN, reconocimiento del habla y del lenguaje escrito, juegos y rob\u00f3tica.", "sections": [{"name": "\u00cdndice", "text": "1 Resumen\n1.1 Modelos\n2 Tipos de algoritmos\n3 T\u00e9cnicas de clasificaci\u00f3n\n3.1 \u00c1rboles de decisiones\n3.2 Reglas de asociaci\u00f3n\n3.3 Algoritmos gen\u00e9ticos\n3.4 Redes neuronales artificiales\n3.5 M\u00e1quinas de vectores de soporte\n3.6 Algoritmos de agrupamiento\n3.7 Redes bayesianas\n4 Conocimiento\n5 Distinci\u00f3n entre Aprendizaje supervisado y no supervisado\n6 Aplicaciones\n7 Temas del aprendizaje autom\u00e1tico\n8 Historia y relaci\u00f3n con otros temas\n9 Software\n9.1 Software de c\u00f3digo abierto\n9.2 Software comercial\n10 Sesgos\n11 V\u00e9ase tambi\u00e9n\n12 Referencias\n13 Bibliograf\u00eda\n14 Enlaces externos", "subsections": []}, {"name": "Resumen", "text": "Algunos sistemas de aprendizaje autom\u00e1tico intentan eliminar toda necesidad de intuici\u00f3n o conocimiento experto de los procesos de an\u00e1lisis de datos, mientras otros tratan de establecer un marco de colaboraci\u00f3n entre el experto y la computadora. De todas formas, la intuici\u00f3n humana no puede ser reemplazada en su totalidad, ya que el dise\u00f1ador del sistema ha de especificar la forma de representaci\u00f3n de los datos y los m\u00e9todos de manipulaci\u00f3n y caracterizaci\u00f3n de los mismos.\nSin embargo, las computadoras son utilizadas por todo el mundo con fines tecnol\u00f3gicos muy buenos.", "subsections": [{"name": "Modelos", "text": "El aprendizaje autom\u00e1tico tiene como resultado un modelo para resolver una tarea dada. Entre los modelos se distinguen[3]\u200b\nLos modelos geom\u00e9tricos, construidos en el espacio de instancias y que pueden tener una, dos o m\u00faltiples dimensiones. Si hay un borde de decisi\u00f3n lineal entre las clases, se dice que los datos son linealmente separables. Un l\u00edmite de decisi\u00f3n lineal se define como w * x = t, donde w es un vector perpendicular al l\u00edmite de decisi\u00f3n, x es un punto arbitrario en el l\u00edmite de decisi\u00f3n y t es el umbral de la decisi\u00f3n.\nLos modelos probabil\u00edsticos, que intentan determinar la distribuci\u00f3n de probabilidades descriptora de la funci\u00f3n que enlaza a los valores de las caracter\u00edsticas con valores determinados. Uno de los conceptos claves para desarrollar modelos probabil\u00edsticos es la estad\u00edstica bayesiana.\nLos modelos l\u00f3gicos, que transforman y expresan las probabilidades en reglas organizadas en forma de \u00e1rboles de decisi\u00f3n.\nLos modelos pueden tambi\u00e9n clasificarse como modelos de agrupamiento y modelos de gradiente. Los primeros tratan de dividir el espacio de instancias en grupos. Los segundos, como su nombre lo indican, representan un gradiente en el que se puede diferenciar entre cada instancia. Clasificadores geom\u00e9tricos como las m\u00e1quinas de vectores de apoyo son modelos de gradientes."}]}, {"name": "Tipos de algoritmos", "text": "Los diferentes algoritmos de Aprendizaje Autom\u00e1tico se agrupan en una taxonom\u00eda en funci\u00f3n de la salida de los mismos. Algunos tipos de algoritmos son:\nArt\u00edculo principal:\nEl an\u00e1lisis computacional y de rendimiento de los algoritmos de aprendizaje autom\u00e1tico es una rama de la estad\u00edstica conocida como teor\u00eda computacional del aprendizaje.\nEl aprendizaje autom\u00e1tico las personas lo llevamos a cabo de manera autom\u00e1tica ya que es un proceso tan sencillo para nosotros que ni nos damos cuenta de c\u00f3mo se realiza y todo lo que implica. Desde que nacemos hasta que morimos los seres humanos llevamos a cabo diferentes procesos, entre ellos encontramos el de aprendizaje por medio del cual adquirimos conocimientos, desarrollamos habilidades para analizar y evaluar a trav\u00e9s de m\u00e9todos y t\u00e9cnicas as\u00ed como tambi\u00e9n por medio de la experiencia propia. Sin embargo, a las m\u00e1quinas hay que indicarles c\u00f3mo aprender, ya que si no se logra que una m\u00e1quina sea capaz de desarrollar sus habilidades, el proceso de aprendizaje no se estar\u00e1 llevando a cabo, sino que solo ser\u00e1 una secuencia repetitiva.", "subsections": []}, {"name": "T\u00e9cnicas de clasificaci\u00f3n", "text": "", "subsections": [{"name": "\u00c1rboles de decisiones", "text": "Este tipo de aprendizaje usa un \u00e1rbol de decisiones como modelo predictivo. Se mapean observaciones sobre un objeto con conclusiones sobre el valor final de dicho objeto.\nLos \u00e1rboles son estructuras b\u00e1sicas en la inform\u00e1tica. Los \u00e1rboles de atributos son la base de las decisiones.\nUna de las dos formas principales de \u00e1rboles de decisiones es la desarrollada por Quinlan de medir la impureza de la entrop\u00eda en cada rama, algo que primero desarroll\u00f3 en el algoritmo ID3 y luego en el C4.5. Otra de las estrategias se basa en el \u00edndice GINI y fue desarrollada por Breiman, Friedman et alia. El algoritmo de CART es una implementaci\u00f3n de esta estrategia.[5]\u200b"}, {"name": "Reglas de asociaci\u00f3n", "text": "Los algoritmos de reglas de asociaci\u00f3n procuran descubrir relaciones interesantes entre variables. Entre los m\u00e9todos m\u00e1s conocidos se hallan el algoritmo a priori, el algoritmo Eclat y el algoritmo de Patr\u00f3n Frecuente."}, {"name": "Algoritmos gen\u00e9ticos", "text": "Los algoritmos gen\u00e9ticos son procesos de b\u00fasqueda heur\u00edstica que simulan la selecci\u00f3n natural. Usan m\u00e9todos tales como la mutaci\u00f3n y el cruzamiento para generar nuevas clases que puedan ofrecer una buena soluci\u00f3n a un problema dado."}, {"name": "Redes neuronales artificiales", "text": "Las redes de neuronas artificiales (RNA) son un paradigma de aprendizaje autom\u00e1tico inspirado en las neuronas de los sistemas nerviosos de los animales. Se trata de un sistema de enlaces de neuronas que colaboran entre s\u00ed para producir un est\u00edmulo de salida.\nLas conexiones tienen pesos num\u00e9ricos que se adaptan seg\u00fan la experiencia. De esta manera, las redes neurales se adaptan a un impulso y son capaces de aprender. La importancia de las redes neurales cay\u00f3 durante un tiempo con el desarrollo de los vectores de soporte y clasificadores lineales, pero volvi\u00f3 a surgir a finales de la d\u00e9cada de 2000 con la llegada del aprendizaje profundo."}, {"name": "M\u00e1quinas de vectores de soporte", "text": "Las MVS son una serie de m\u00e9todos de aprendizaje supervisado usados para clasificaci\u00f3n y regresi\u00f3n. Los algoritmos de MVS usan un conjunto de ejemplos de entrenamiento clasificado en dos categor\u00edas para construir un modelo que prediga si un nuevo ejemplo pertenece a una u otra de dichas categor\u00edas."}, {"name": "Algoritmos de agrupamiento", "text": "El an\u00e1lisis por agrupamiento (clustering en ingl\u00e9s) es la clasificaci\u00f3n de observaciones en subgrupos \u2014clusters\u2014 para que las observaciones en cada grupo se asemejen entre s\u00ed seg\u00fan ciertos criterios. \nLas t\u00e9cnicas de agrupamiento hacen inferencias diferentes sobre la estructura de los datos; se gu\u00edan usualmente por una medida de similitud espec\u00edfica y por un nivel de compactamiento interno (similitud entre los miembros de un grupo) y la separaci\u00f3n entre los diferentes grupos. \nEl agrupamiento es un m\u00e9todo de aprendizaje no supervisado y es una t\u00e9cnica muy popular de an\u00e1lisis estad\u00edstico de datos."}, {"name": "Redes bayesianas", "text": "Una red bayesiana, red de creencia o modelo ac\u00edclico dirigido es un modelo probabil\u00edstico que representa una serie de variables de azar y sus independencias condicionales a trav\u00e9s de un grafo ac\u00edclico dirigido. Una red bayesiana puede representar, por ejemplo, las relaciones probabil\u00edsticas entre enfermedades y s\u00edntomas. Dados ciertos s\u00edntomas, la red puede usarse para calcular las probabilidades de que ciertas enfermedades est\u00e9n presentes en un organismo. Hay algoritmos eficientes que infieren y aprenden usando este tipo de representaci\u00f3n."}]}, {"name": "Conocimiento", "text": "En el aprendizaje autom\u00e1tico podemos obtener 3 tipos de conocimiento, que son:\nLos tres tipos se efect\u00faan durante un proceso de aprendizaje autom\u00e1tico pero la importancia de cada tipo de conocimiento depende de las caracter\u00edsticas de lo que se est\u00e1 tratando de aprender.\nEl aprendizaje es m\u00e1s que una necesidad, es un factor primordial para satisfacer las necesidades de la inteligencia artificial.", "subsections": []}, {"name": "Distinci\u00f3n entre Aprendizaje supervisado y no supervisado", "text": "El aprendizaje supervisado se caracteriza por contar con informaci\u00f3n que especifica qu\u00e9 conjuntos de datos son satisfactorios para el objetivo del aprendizaje. Un ejemplo podr\u00eda ser un software que reconoce si una imagen dada es o no la imagen de un rostro: para el aprendizaje del programa tendr\u00edamos que proporcionarle diferentes im\u00e1genes, especificando en el proceso si se trata o no de rostros.\nEn el aprendizaje no supervisado, en cambio, el programa no cuenta con datos que definan qu\u00e9 informaci\u00f3n es satisfactoria o no. El objetivo principal de estos programas suele ser encontrar patrones que permitan separar y clasificar los datos en diferentes grupos, en funci\u00f3n de sus atributos. Siguiendo el ejemplo anterior un software de aprendizaje no supervisado no ser\u00eda capaz de decirnos si una imagen dada es un rostro o no pero s\u00ed podr\u00eda, por ejemplo, clasificar las im\u00e1genes entre aquellas que contienen rostros humanos, de animales, o las que no contienen. La informaci\u00f3n obtenida por un algoritmo de aprendizaje no supervisado debe ser posteriormente interpretada por una persona para darle utilidad.", "subsections": []}, {"name": "Aplicaciones", "text": "Motores de b\u00fasqueda\nDiagn\u00f3stico m\u00e9dico\nDetecci\u00f3n de fraudes con el uso de tarjetas de cr\u00e9dito\nAn\u00e1lisis del mercado de valores\nClasificaci\u00f3n de secuencias de ADN\nReconocimiento del habla\nRob\u00f3tica\nMiner\u00eda de datos\nBig Data\nPrevisiones de series temporales", "subsections": []}, {"name": "Temas del aprendizaje autom\u00e1tico", "text": "A continuaci\u00f3n se muestran una serie de temas que podr\u00edan formar parte del temario de un curso sobre aprendizaje autom\u00e1tico.\nModelado de funciones de densidad de probabilidad condicionadas: clasificaci\u00f3n y regresi\u00f3n\nRedes neuronales artificiales\n\u00c1rboles de decisi\u00f3n: El aprendizaje por \u00e1rboles de decisi\u00f3n usa un \u00e1rbol de decisi\u00f3n como modelo predictivo que mapea observaciones a conclusiones sobre el valor de un objeto dado.\nModelos de regresi\u00f3n m\u00faltiple no postulados\nRegresi\u00f3n en procesos Gaussianos\nAn\u00e1lisis de discriminantes lineales\nk-vecinos m\u00e1s pr\u00f3ximos\nPerceptr\u00f3n\nFunciones de base radial\nM\u00e1quinas de soporte vectorial\nModelado de funciones de densidad de probabilidad mediante modelos generativos\nAlgoritmo EM\nModelos gr\u00e1ficos, como las redes bayesianas y los campos aleatorios de Markov\nMapeado topogr\u00e1fico generativo\nT\u00e9cnicas de inferencia aproximada\nCadenas de Markov y M\u00e9todo de Montecarlo\nM\u00e9todos variacionales\nOptimizaci\u00f3n: La mayor\u00eda de los m\u00e9todos descritos arriba usan algoritmos de optimizaci\u00f3n o son por s\u00ed mismos instancias de problemas de optimizaci\u00f3n.", "subsections": []}, {"name": "Historia y relaci\u00f3n con otros temas", "text": "El aprendizaje autom\u00e1tico naci\u00f3 de la b\u00fasqueda de inteligencia artificial. Ya en los primeros d\u00edas de la IA como disciplina acad\u00e9mica, algunos investigadores se interesaron en hacer que las m\u00e1quinas aprendiesen. Trataron de resolver el problema con diversos m\u00e9todos simb\u00f3licos, as\u00ed como lo que ellos llamaron 'redes neurales' que eran en general perceptrones y otros modelos b\u00e1sicamente basados en modelos lineares generalizados como se conocen en las estad\u00edsticas.", "subsections": []}, {"name": "Software", "text": "Muchos lenguajes de programaci\u00f3n pueden usarse para implementar algoritmos de aprendizaje autom\u00e1tico. Los m\u00e1s populares para 2015 eran R y Python.[6]\u200b R es muy usado ante todo en el campo acad\u00e9mico, mientras que Python es m\u00e1s popular en la empresa privada. \nEntre los paquetes de software que incluyen algoritmos de aprendizaje automatizado, se hallan los siguientes:", "subsections": [{"name": "Software de c\u00f3digo abierto", "text": "TensorFlow: plataforma multilenguaje y multiplataforma desarrollada por Google y licenciada como Apache 2.\nApache Mahout: plataforma de Java de algoritmos escalables de aprendizaje autom\u00e1tico, en especial en las \u00e1reas de filtro colaborativo, clustering y clasificaci\u00f3n\ndlib: una biblioteca bajo licencia Boost para desarrollar en C++\nELKI: una plataforma para Java con licencia AGPLv3\nEncog\nH2O\nKNIME\nmlpy\nMLPACK\nMOA\nOpenCV\nTortilla JS\nOpenNN\nR: lenguaje de programaci\u00f3n estad\u00edstico con numerosas bibliotecas relacionadas al aprendizaje autom\u00e1tico (e1071, rpart, nnet, randomForest, entre otras)\nRapidMiner\nscikit-learn: biblioteca en Python que interact\u00faa con NumPy y SciPy\nSpark MLlib: una librer\u00eda que forma parte de Apache Spark, una plataforma para computaci\u00f3n de grupos\n Weka: una biblioteca en Java"}, {"name": "Software comercial", "text": "SPSS Modeler\nMathematica\nMATLAB\nMicrosoft Azure Machine Learning\nNeural Designer\nOracle Data Mining\nRCASE\nSTATISTICA\nSAS"}]}, {"name": "Sesgos", "text": "Los algoritmos de aprendizaje autom\u00e1tico a menudo pueden verse afectados por el sesgo que puedan tener los datos (Ver sesgo algoritmico). Por ejemplo, no se podr\u00e1n clasificar todos aquellas entradas de las que no se haya recibido ninguna informaci\u00f3n en la fase de entrenamiento. De hecho, cuando el entrenamiento se realiza con datos clasificados por el ser humano el aprendizaje autom\u00e1tico tiende a crear los mismos sesgos que hay en la sociedad. Algunos ejemplos de esto son cuando en 2015 el algoritmo de Google photos identificaba algunas personas negras con gorilas, o en 2016 cuando el bot de Twitter de Microsoft desarrollo comportamientos racistas y machistas a base de observar el tr\u00e1fico de datos en dicha red social. Por este motivo en los \u00faltimos a\u00f1os ha habido una tendencia a desarrollar m\u00e9todos para aumentar la equidad, es decir, para reducir el sesgo en este tipo algoritmos por parte de los expertos en IA. Citando a Fei-fei Li \"La IA no tiene nada de especial. Se inspira en personas, es creada por personas, y lo m\u00e1s importante impacta en las personas. Es una herramienta muy poderosa que tan solo hemos comenzado a entender, y esa es una gran responsabilidad\" [7]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Aprendizaje profundo\nDin\u00e1mica de sistemas\nInteligencia artificial\nInteligencia computacional\nInternet de las cosas\nSistema din\u00e1mico\nReconocimiento de patrones\nReglas de asociaci\u00f3n\nRobot aut\u00f3nomo\nEquidad (aprendizaje autom\u00e1tico)", "subsections": []}, {"name": "Referencias", "text": "\u2191 Russell, Stuart; Norvig, Peter (2009). Inteligencia Artificial: Un Enfoque Moderno (3rd edici\u00f3n). p.\u00a0229.\u00a0\n\u2191 Russell and Norvig (2021). Artificial Intelligence: A Modern Approach (en ingl\u00e9s). Pearson. p.\u00a0651. ISBN\u00a09780134610993.\u00a0\n\u2191 Flach 2012 P\u00e1gs. 20-21\n\u2191 Sutton, Richard S., Barto, Andrew G. Reinforcement Learning: An Introduction. The MIT Press.\u00a0\n\u2191 Flach 2012 P\u00e1gs. 155-156\n\u2191 Four main languages for analytics and data mining science (KD Nuggets)\n\u2191 \u00abFei-Fei Li's Quest to Make Machines Better for Humanity\u00bb. Wired (en ingl\u00e9s). ISSN\u00a01059-1028. Consultado el 17 de diciembre de 2019.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Bishop, Christopher (2008) Pattern Recognition and Machine Learning. Springer Verlag. ISBN=978-0-3873-1073-2.\nFlach, Peter (2012) Machine Learning: The Art and Science of Algorithms that Make Sense of Data. Cambridge University Press. ISBN 978-1-107-42222-3.\nGollapudi, Sunila (2016) Practical Machine Learning. Packt Publishing. ISBN=978-1-78439-968-4.\nIan H. Witten and Eibe Frank (2011). Data Mining: Practical machine learning tools and techniques Morgan Kaufmann, 664 p\u00e1g., ISBN 978-0-12-374856-0.\nMitchell, T. (1997). Machine Learning, McGraw Hill. ISBN 0-07-042807-7\nRaschka, Sebastian (2015). Python Machine Learning, Packt Open Source. ISBN 978-1-78355-513-0", "subsections": []}, {"name": "Enlaces externos", "text": "Ejemplos pr\u00e1cticos de Machine Learning en Espa\u00f1ol\nBlog sobre Aprendizaje Autom\u00e1tico - La biblia del Machine Learning\nEl Machine Learning cambiar\u00e1 el mundo\nMachine Learning Development with Perl (en ingl\u00e9s)\nEstudio y aplicaci\u00f3n de t\u00e9cnicas de aprendizaje autom\u00e1tico orientadas al \u00e1mbito m\u00e9dico: estimaci\u00f3n y explicaci\u00f3n de predicciones individuales. Universidad Aut\u00f3noma de Madrid\nAlphaGo Archivado el 4 de febrero de 2018 en Wayback Machine.\nMachine Learning explicado (podcast)\nMachine Learning: Selecci\u00f3n de m\u00e9tricas de clasificaci\u00f3n (en espa\u00f1ol)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Asincron%C3%ADa", "title": "Asincron\u00eda", "summary": "El t\u00e9rmino \"Asincron\u00eda\" hace referencia al suceso que no tiene lugar en total correspondencia temporal con otro suceso.\nPor ejemplo, podemos hablar de motor as\u00edncrono a aquel cuya velocidad de rotaci\u00f3n no corresponde con la frecuencia de corriente alterna que lo hace funcionar.\nDos se\u00f1ales son as\u00edncronas o no est\u00e1n sincronizadas, cuando sus correspondientes instantes significativos no coinciden. \nDe esta manera, podremos saber una asincronidad bas\u00e1ndonos en la ley de ohm.\nModo de transmisi\u00f3n de datos en el que el instante de emisi\u00f3n de cada car\u00e1cter o bloque de caracteres se fija arbitrariamente, sincronizando con Start-Stop.\nEn educaci\u00f3n a distancia (EaD), la asincron\u00eda se refiere a actividades que no requieren la conexi\u00f3n simult\u00e1nea del facilitador y los participantes, sino que cada quien participa en su propio tiempo. \nUn ejemplo son los foros as\u00edncronos, en los cuales todos participan en la conversaci\u00f3n, pero en diferentes momentos.\nEl bloger", "sections": []}
{"url": "https://es.wikipedia.org/wiki/Base_de_datos", "title": "Base de datos", "summary": "Una base de datos (del ingl\u00e9s: database) se encarga no solo de almacenar datos, sino tambi\u00e9n de conectarlos entre s\u00ed en una unidad l\u00f3gica. En t\u00e9rminos generales, una base de datos es un conjunto de datos estructurados que pertenecen a un mismo contexto y, en cuanto a su funci\u00f3n, se utiliza para administrar de forma electr\u00f3nica grandes cantidades de informaci\u00f3n.[1]\u200b En este sentido; una biblioteca puede considerarse una base de datos compuesta en su mayor\u00eda por documentos y textos impresos en papel e indexados para su consulta. Actualmente, y debido al desarrollo tecnol\u00f3gico de campos como la inform\u00e1tica y la electr\u00f3nica, la mayor\u00eda de las bases de datos est\u00e1n en formato digital, siendo este un componente electr\u00f3nico; por tanto, se ha desarrollado y se ofrece un amplio rango de soluciones al problema del almacenamiento de datos.\nHay programas denominados sistemas gestores de bases de datos, abreviado SGBD (del ingl\u00e9s Database Management System o DBMS), que permiten almacenar y posteriormente acceder a los datos de forma r\u00e1pida y estructurada. Las propiedades de estos DBMS, as\u00ed como su utilizaci\u00f3n y administraci\u00f3n, se estudian dentro del \u00e1mbito de la inform\u00e1tica.\nLas aplicaciones m\u00e1s usuales son para la gesti\u00f3n de empresas e instituciones p\u00fablicas. Tambi\u00e9n son ampliamente utilizadas en entornos cient\u00edficos con el objeto de almacenar la informaci\u00f3n experimental.\nAunque las bases de datos pueden contener muchos tipos de datos, algunos de ellos se encuentran mutuamente protegidos por las leyes de varios pa\u00edses. Por ejemplo en Espa\u00f1a, los datos personales se encuentran protegidos por la Ley Org\u00e1nica de Protecci\u00f3n de Datos de Car\u00e1cter Personal (LOPD), en M\u00e9xico por la Ley Federal de Transparencia y Acceso a la Informaci\u00f3n P\u00fablica Gubernamental y en Argentina por la Ley de Protecci\u00f3n de Datos Personales.[2]\u200b\nEn Argentina, el C\u00f3digo Penal sanciona ciertas conductas relacionadas con una base de datos: acceder ileg\u00edtimamente a un banco de datos personales, proporcionar o revelar informaci\u00f3n registrada en un archivo o en un banco de datos personales cuyo secreto estuviere obligado a guardar por ley o insertar o hacer insertar datos en un archivo de datos personales. Si el autor es funcionario p\u00fablico, sufre adem\u00e1s pena de inhabilitaci\u00f3n especial.", "sections": [{"name": "\u00cdndice", "text": "1 Clasificaci\u00f3n de bases de datos\n1.1 Seg\u00fan la variabilidad de la base de datos\n1.1.1 Bases de datos est\u00e1ticas\n1.1.2 Bases de datos din\u00e1micas\n1.2 Seg\u00fan el contenido\n1.2.1 Bases de datos bibliogr\u00e1ficas\n1.2.2 Bases de datos de texto completo\n1.2.3 Directorios\n1.2.4 Bases de datos o \"bibliotecas\" de informaci\u00f3n qu\u00edmica o biol\u00f3gica\n2 Sistema de Administraci\u00f3n de Bases de Datos (DBMS)\n3 Diferencias entre bases de datos y hojas de c\u00e1lculo\n4 Modelos de bases de datos\n4.1 Bases de datos jer\u00e1rquicas\n4.2 Base de datos de red\n4.3 Bases de datos transaccionales\n4.4 Bases de datos relacionales\n4.5 Bases de datos multidimensionales\n4.6 Bases de datos orientadas a objetos\n4.7 Bases de datos documentales\n4.8 Bases de datos deductivas\n4.8.1 Lenguaje\n4.8.2 Ventajas\n4.8.3 Fases\n4.8.4 Interpretaci\u00f3n\n4.8.5 Mecanismos\n4.9 Sistema de Gesti\u00f3n de bases de datos distribuida (SGBD)\n4.10 Base de datos orientada a grafos\n5 Otros tipos de base de datos\n6 Consulta a base de datos\n7 Investigaci\u00f3n\n8 V\u00e9ase tambi\u00e9n\n9 Referencias\n10 Enlaces externos", "subsections": []}, {"name": "Clasificaci\u00f3n de bases de datos", "text": "Las bases de datos pueden clasificarse de varias maneras, de acuerdo con el contexto que se est\u00e9 manejando, la utilidad de las mismas o las necesidades que satisfagan.", "subsections": [{"name": "Seg\u00fan la variabilidad de la base de datos", "text": "Bases de datos est\u00e1ticas\nSon bases de datos \u00fanicamente de lectura, utilizadas principalmente para almacenar datos hist\u00f3ricos que posteriormente se pueden utilizar para estudiar el comportamiento de un conjunto de datos a trav\u00e9s del tiempo, realizar proyecciones, tomar decisiones y realizar an\u00e1lisis de datos para inteligencia empresarial.\nBases de datos din\u00e1micas\nSon bases de datos donde la informaci\u00f3n almacenada se modifica con el tiempo, permitiendo operaciones como actualizaci\u00f3n, borrado y edici\u00f3n de datos, adem\u00e1s de las operaciones fundamentales de consulta. Un ejemplo puede ser la base de datos utilizada en un sistema de informaci\u00f3n de un supermercado. [3]\u200b "}, {"name": "Seg\u00fan el contenido", "text": "Bases de datos bibliogr\u00e1ficas\nSolo contienen una subrogante (representante) de la fuente primaria, que permite localizarla. Un registro t\u00edpico de una base de datos bibliogr\u00e1fica contiene informaci\u00f3n sobre el autor, fecha de publicaci\u00f3n, editorial, t\u00edtulo, edici\u00f3n, de una determinada publicaci\u00f3n, etc. Puede contener un resumen o extracto de la publicaci\u00f3n original, pero nunca el texto completo, porque si no, estar\u00edamos en presencia de una base de datos a texto completo (o de fuentes primarias \u2014ver m\u00e1s abajo). Como su nombre lo indica, el contenido son cifras o n\u00fameros. Por ejemplo, una colecci\u00f3n de resultados de an\u00e1lisis de laboratorio, ayuda mucho a la redundancia de datos.\nBases de datos de texto completo\nAlmacenan las fuentes primarias, como por ejemplo, todo el contenido de todas las ediciones de una colecci\u00f3n de revistas cient\u00edficas.\nDirectorios\nUn ejemplo son las gu\u00edas telef\u00f3nicas en formato electr\u00f3nica.\nEstos directorios se pueden clasificar en dos grandes tipos dependiendo de si son personales o empresariales (llamadas p\u00e1ginas blancas o amarillas respectivamente).\nLos directorios empresariales hay de tres tipos:\nTienen nombre de la empresa y direcci\u00f3n.\nContienen tel\u00e9fono y los m\u00e1s avanzados contienen correo electr\u00f3nico.\nContienen datos como facturaci\u00f3n o n\u00famero de empleados adem\u00e1s de c\u00f3digos nacionales que ayudan a su distinci\u00f3n.\nLos directorios personales solo hay de un tipo, ya que leyes como la LOPD en Espa\u00f1a protege la privacidad de los usuarios pertenecientes al directorio.\nLa b\u00fasqueda inversa est\u00e1 prohibida en los directorios personales (a partir de un n\u00famero de tel\u00e9fono saber el titular de la l\u00ednea).\nBases de datos o \"bibliotecas\" de informaci\u00f3n qu\u00edmica o biol\u00f3gica\nSon bases de datos que almacenan diferentes tipos de informaci\u00f3n proveniente de la qu\u00edmica, las ciencias de la vida o m\u00e9dicas.\nSe pueden considerar en varios subtipos:\nLas que almacenan secuencias de nucle\u00f3tidos o prote\u00ednas.\nLas bases de datos de rutas metab\u00f3licas.\nBases de datos de estructura, comprende los registros de datos experimentales sobre estructuras 3D de biomol\u00e9culas.\nBases de datos cl\u00ednicas.\nBases de datos bibliogr\u00e1ficas (biol\u00f3gicas, qu\u00edmicas, m\u00e9dicas y de otros campos): PubChem, Medline, EBSCOhost."}]}, {"name": "Sistema de Administraci\u00f3n de Bases de Datos (DBMS)", "text": "Las bases de datos requieren de un software  que permita la administraci\u00f3n de dicha base de datos. Estos programas especializados sirven como interfaz para que los usuarios puedan, administrar como se estructura y optimiza toda la informaci\u00f3n recopilada. Un sistema de administraci\u00f3n de bases de datos  tambi\u00e9n permite un gran n\u00famero de operaciones relacionadas con la administraci\u00f3n, tal como, supervisar  la productividad, ajustes,  backups y restauraci\u00f3n de los datos .\nEntre los gestores de bases de datos o DBMS m\u00e1s conocidos se encuentran Microsoft SQL Server, MySQL, Oracle Database, Microsoft Access, FileMaker y dBASE.[4]\u200b", "subsections": []}, {"name": "Diferencias entre bases de datos y hojas de c\u00e1lculo", "text": "Las bases de datos y las hojas de c\u00e1lculo (por ejemplo las hojas de c\u00e1lculo de los paquetes de ofim\u00e1tica) son formas convenientes de almacenar informaci\u00f3n. Las principales diferencias entre ambas son:[5]\u200b\nLa forma de manipular y guardar la informaci\u00f3n.\nLa cantidad de datos que se pueden almacenar.\nLa accesibilidad a esos datos almacenados.\nLas hojas de c\u00e1lculo desde sus comienzos fueron dise\u00f1adas para un usuario, y puede ser observado en sus caracter\u00edsticas. Son excelentes para uno o un peque\u00f1o n\u00famero de usuarios que no necesitan utilizar un gran volumen de datos complejos. Las bases de datos, por otro lado, fueron creadas para almacenar gran cantidad de informaci\u00f3n organizada, enormes cantidades en ocasiones. Las bases de datos permiten consultas multiusuario, que permite acceder y consultar los datos de forma r\u00e1pida y segura a muchos usuarios al mismo tiempo, utilizando una l\u00f3gica y un lenguaje altamente complejos.[5]\u200b", "subsections": []}, {"name": "Modelos de bases de datos", "text": "Adem\u00e1s de la clasificaci\u00f3n por la funci\u00f3n de las bases de datos, estas tambi\u00e9n se pueden clasificar de acuerdo a su modelo de administraci\u00f3n de datos.\nUn modelo de datos es b\u00e1sicamente una \"descripci\u00f3n\" de algo conocido como contenedor de datos (algo en donde se guardan los datos), as\u00ed como de los m\u00e9todos para almacenar y recuperar datos de esos contenedores. Los modelos de datos no son cosas f\u00edsicas: son abstracciones que permiten la implementaci\u00f3n de un sistema eficiente de base de datos; por lo general se refieren a algoritmos, y conceptos matem\u00e1ticos.\nAlgunos modelos con frecuencia utilizados en las bases de datos:", "subsections": [{"name": "Bases de datos jer\u00e1rquicas", "text": "Art\u00edculo principal:\nEn este modelo los datos se organizan en forma de \u00e1rbol invertido (algunos dicen ra\u00edz), en donde un nodo padre de informaci\u00f3n puede tener varios hijos. El nodo que no tiene padres es llamado ra\u00edz, y a los nodos que no tienen hijos se los conoce como hojas.\nLas bases de datos jer\u00e1rquicas son especialmente \u00fatiles en el caso de aplicaciones que manejan un gran volumen de informaci\u00f3n y datos muy compartidos permitiendo crear estructuras estables y de gran rendimiento.\nUna de las principales limitaciones de este modelo es su incapacidad de representar eficientemente la redundancia de datos."}, {"name": "Base de datos de red", "text": "Este es un modelo ligeramente distinto del jer\u00e1rquico; su diferencia fundamental es la modificaci\u00f3n del concepto de nodo: se permite que un mismo nodo tenga varios padres (posibilidad no permitida en el modelo jer\u00e1rquico). \nFue una gran mejora con respecto al modelo jer\u00e1rquico, ya que ofrec\u00eda una soluci\u00f3n eficiente al problema de redundancia de datos; pero, aun as\u00ed, la dificultad que significa administrar la informaci\u00f3n en una base de datos de red ha significado que sea un modelo utilizado en su mayor\u00eda por programadores m\u00e1s que por usuarios finales."}, {"name": "Bases de datos transaccionales", "text": "Son bases de datos cuyo \u00fanico fin es el env\u00edo y recepci\u00f3n de datos a grandes velocidades, estas bases son muy poco comunes y est\u00e1n dirigidas por lo general al entorno de an\u00e1lisis de calidad, datos de producci\u00f3n e industrial, es importante entender que su fin \u00fanico es recolectar y recuperar los datos a la mayor velocidad posible, por lo tanto la redundancia y duplicaci\u00f3n de informaci\u00f3n no es un problema como con las dem\u00e1s bases de datos, por lo general para poderlas aprovechar al m\u00e1ximo permiten alg\u00fan tipo de conectividad a bases de datos relacionales.\nUn ejemplo habitual de transacci\u00f3n es el traspaso de una cantidad de dinero entre cuentas bancarias. Normalmente se realiza mediante dos operaciones distintas, una en la que se debita el saldo de la cuenta origen y otra en la que acreditamos el saldo de la cuenta destino. Para garantizar la atomicidad del sistema (es decir, para que no aparezca o desaparezca dinero), las dos operaciones deben ser at\u00f3micas, es decir, el sistema debe garantizar que, bajo cualquier circunstancia (incluso una ca\u00edda del sistema), el resultado final es que, o bien se han realizado las dos operaciones, o bien no se ha realizado ninguna."}, {"name": "Bases de datos relacionales", "text": "Este es el modelo utilizado en la actualidad para representar problemas reales y administrar datos din\u00e1micamente. Tras ser postulados sus fundamentos en 1970 por Edgar Frank Codd,[6]\u200b de los laboratorios IBM en San Jos\u00e9 (California), no tard\u00f3 en consolidarse como un nuevo paradigma en los modelos de base de datos. Su idea fundamental es el uso de \"relaciones\". Estas relaciones podr\u00edan considerarse en forma l\u00f3gica como conjuntos de datos llamados \"tuplas\". Pese a que esta es la teor\u00eda de las bases de datos relacionales creadas por Codd, la mayor\u00eda de las veces se conceptualiza de una manera m\u00e1s f\u00e1cil de imaginar. Esto es pensando en cada relaci\u00f3n como si fuese una tabla que est\u00e1 compuesta por registros (las filas de una tabla), que representar\u00edan las tuplas, y campos (las columnas de una tabla).\nEn este modelo, el lugar y la forma en que se almacenen los datos no tienen relevancia (a diferencia de otros modelos como el jer\u00e1rquico y el de red). Esto tiene la considerable ventaja de que es m\u00e1s f\u00e1cil de entender y de utilizar para un usuario espor\u00e1dico de la base de datos. La informaci\u00f3n puede ser recuperada o almacenada mediante \"consultas\" que ofrecen una amplia flexibilidad y poder para administrar la informaci\u00f3n.\nEl lenguaje m\u00e1s habitual para construir las consultas a bases de datos relacionales es SQL, Structured Query Language o Lenguaje Estructurado de Consultas, un est\u00e1ndar implementado por los principales motores o sistemas de gesti\u00f3n de bases de datos relacionales.\nDurante su dise\u00f1o, una base de datos relacional pasa por un proceso al que se le conoce como normalizaci\u00f3n de una base de datos."}, {"name": "Bases de datos multidimensionales", "text": "Son bases de datos ideadas para desarrollar aplicaciones muy concretas, como creaci\u00f3n de Cubos OLAP. B\u00e1sicamente no se diferencian demasiado de las bases de datos relacionales (una tabla en una base de datos relacional podr\u00eda serlo tambi\u00e9n en una base de datos multidimensional), la diferencia est\u00e1 m\u00e1s bien a nivel conceptual; en las bases de datos multidimensionales los campos o atributos de una tabla pueden ser de dos tipos, o bien representan dimensiones de la tabla, o bien representan m\u00e9tricas que se desean aprender."}, {"name": "Bases de datos orientadas a objetos", "text": "Este modelo, bastante reciente, y propio de los modelos inform\u00e1ticos orientados a objetos, trata de almacenar en la base de datos los objetos completos (estado y comportamiento). \nUna base de datos orientada a objetos es una base de datos que incorpora todos los conceptos importantes del paradigma de objetos:\nEncapsulaci\u00f3n - Propiedad que permite ocultar la informaci\u00f3n al resto de los objetos, impidiendo as\u00ed accesos incorrectos o conflictos.\nHerencia - Propiedad a trav\u00e9s de la cual los objetos heredan comportamiento dentro de una jerarqu\u00eda de clases.\nPolimorfismo - Propiedad de una operaci\u00f3n mediante la cual puede ser aplicada a distintos tipos de objetos.\nEn bases de datos orientadas a objetos, los usuarios pueden definir operaciones sobre los datos como parte de la definici\u00f3n de la base de datos. Una operaci\u00f3n (llamada funci\u00f3n) se especifica en dos partes. La interfaz (o signatura) de una operaci\u00f3n incluye el nombre de la operaci\u00f3n y los tipos de datos de sus argumentos (o par\u00e1metros). La implementaci\u00f3n (o m\u00e9todo) de la operaci\u00f3n se especifica separadamente y puede modificarse sin afectar la interfaz. Los programas de aplicaci\u00f3n de los usuarios pueden operar sobre los datos invocando a dichas operaciones a trav\u00e9s de sus nombres y argumentos, sea cual sea la forma en la que se han implementado. Esto podr\u00eda denominarse independencia entre programas y operaciones.\nSQL:2003, es el est\u00e1ndar de SQL92 ampliado, soporta los conceptos orientados a objetos y mantiene la compatibilidad con SQL92."}, {"name": "Bases de datos documentales", "text": "Permiten la indexaci\u00f3n a texto completo, y en l\u00edneas generales realizar b\u00fasquedas m\u00e1s potentes, sirven para almacenar grandes vol\u00famenes de informaci\u00f3n de antecedentes hist\u00f3ricos.\nTesaurus es un sistema de \u00edndices optimizado para este tipo de bases de datos."}, {"name": "Bases de datos deductivas", "text": "Un sistema de base de datos deductiva, es un sistema de base de datos pero con la diferencia de que permite hacer deducciones a trav\u00e9s de inferencias. Se basa principalmente en reglas y hechos que son almacenados en la base de datos. Las bases de datos deductivas son tambi\u00e9n llamadas bases de datos l\u00f3gicas, a ra\u00edz de que se basa en l\u00f3gica matem\u00e1tica.\nEste tipo de base de datos surge debido a las limitaciones de la base de datos relacional de responder a consultas recursivas y de deducir relaciones indirectas de los datos almacenados en la base de datos.\nLenguaje\nUtiliza un subconjunto del lenguaje Prolog llamado Datalog el cual es declarativo y permite al ordenador hacer deducciones para contestar a consultas bas\u00e1ndose en los hechos y reglas almacenados.\nVentajas\nUso de reglas l\u00f3gicas para expresar las consultas.\nPermite responder consultas recursivas.\nCuenta con negaciones estratificadas\nCapacidad de obtener nueva informaci\u00f3n a trav\u00e9s de la ya almacenada en la base de datos mediante inferencia.\nUso de algoritmos que optimizan las consultas.\nSoporta objetos y conjuntos complejos.\nseguridad e integridad de los datos\neliminaci\u00f3n de datos inservibles r\u00e1pidamente (duplicados, innecesarios datos extras)\nfacilidad en el mantenimiento\nFases\nFase de Interrogaci\u00f3n: se encarga de buscar en la base de datos informaciones deducibles impl\u00edcitas. Las reglas de esta fase se denominan reglas de derivaci\u00f3n.\nFase de Modificaci\u00f3n: se encarga de a\u00f1adir a la base de datos nuevas informaciones deducibles. Las reglas de esta fase se denominan reglas de generaci\u00f3n.\nInterpretaci\u00f3n\nEncontramos dos teor\u00edas de interpretaci\u00f3n de las bases de datos deductiva por lo cual\nconsideramos las reglas y los hechos como axiomas. \nLos hechos son axiomas base que se consideran como verdaderos y no contienen variables.\nLas reglas son axiomas deductivos ya que se utilizan para deducir nuevos hechos.\nTeor\u00eda de Modelos: una interpretaci\u00f3n es llamada modelo cuando para un conjunto espec\u00edfico de reglas, estas se cumplen siempre para esa interpretaci\u00f3n. Consiste en asignar a un predicado todas las combinaciones de valores y argumentos de un dominio de valores constantes dado. A continuaci\u00f3n se debe verificar si ese predicado es verdadero o falso.\nMecanismos\nExisten dos mecanismos de inferencia:\nAscendente: donde se parte de los hechos y se obtiene nuevos aplicando reglas de inferencia.\nDescendente: donde se parte del predicado (objetivo de la consulta realizada) e intenta encontrar similitudes entre las variables que nos lleven a hechos correctos almacenados en la base de datos."}, {"name": "Sistema de Gesti\u00f3n de bases de datos distribuida (SGBD)", "text": "La base de datos y el software SGBD pueden estar distribuidos en m\u00faltiples sitios conectados por una red. Hay de dos tipos:\n1. Distribuidos homog\u00e9neos: utilizan el mismo SGBD en m\u00faltiples sitios.\n2. Distribuidos heterog\u00e9neos: Da lugar a los SGBD federados o sistemas multibase de datos en los que los SGBD participantes tienen cierto grado de autonom\u00eda local y tienen acceso a varias bases de datos aut\u00f3nomas preexistentes almacenados en los SGBD, muchos de estos emplean una arquitectura cliente-servidor.\nEstas surgen debido a la existencia f\u00edsica de organismos descentralizados. Esto les da la capacidad de unir las bases de datos de cada localidad y acceder as\u00ed a distintas universidades, sucursales de tiendas, etc."}, {"name": "Base de datos orientada a grafos", "text": "Una base de datos orientada a grafos (BDOG) representa la informaci\u00f3n como nodos de un grafo y sus relaciones con las aristas del mismo, de manera que se pueda usar teor\u00eda de grafos para recorrer la base de datos ya que esta puede describir atributos de los nodos (entidades) y las aristas (relaciones).\nUna BDOG debe estar absolutamente normalizada, esto quiere decir que cada tabla tendr\u00eda una sola columna y cada relaci\u00f3n tan solo dos, con esto se consigue que cualquier cambio en la estructura de la informaci\u00f3n tenga un efecto solamente local."}]}, {"name": "Otros tipos de base de datos", "text": "En la actualidad, existen muchos tipos de bases de datos, algunas menos comunes adaptadas a funciones financieras, funciones cient\u00edficas y otras funciones altamente espec\u00edficas, todo dependiendo de como va avanzando la tecnolog\u00eda. Entre algunas de ellas se pueden citar:[7]\u200b\nBases de datos en la nube. Una base de datos en la nube es una colecci\u00f3n de datos, pueden ser estructurados o no estructurados, que  se localiza en una plataforma de computaci\u00f3n en la nube privada, p\u00fablica o una combinaci\u00f3n de as dos anteriores (h\u00edbrida). Existen dos modelos de base de datos en la nube: tradicional y database as a service (DBaaS). Con DBaaS, donde las gestiones administrativas y el mantenimiento son realizados por un  proveedor de servicios.\nDe c\u00f3digo abierto. Un sistema de base de datos de c\u00f3digo abierto es aquel cuyo c\u00f3digo fuente es de c\u00f3digo abierto;  podr\u00edan ser bases de datos SQL o NoSQL.\nBase de datos documental/JSON.  para gestionar informaci\u00f3n basada en documentos, las bases de datos documentales son una forma moderna de almacenar datos en formato JSON en lugar de filas y columnas.\nBase de datos multimodelo.  combinan diferentes tipos de modelos de base de datos en un \u00fanico back-end integrado. de este modo  varios tipos de datos pueden convivir en una misma base de datos.\nBases de datos independientes. Las bases de datos independientes, es lo nuevo en base de datos, ( conocidas como bases de datos aut\u00f3nomas), se basan en la nube y utilizan el aprendizaje autom\u00e1tico para automatizar el ajuste, la seguridad, las copias de seguridad, las actualizaciones y otras tareas de administraci\u00f3n de rutina de las bases de datos que tradicionalmente realizan los administradores de bases de datos.[7]\u200b", "subsections": []}, {"name": "Consulta a base de datos", "text": "Una consulta es el m\u00e9todo para acceder a la informaci\u00f3n en las bases de datos. Con las consultas se puede modificar, borrar, mostrar y agregar datos en una base de datos, tambi\u00e9n pueden utilizarse como origen de registro para formularios. Para esto se utiliza un Lenguaje de consulta.\nLas consultas a la base de datos se realizan a trav\u00e9s de un Lenguaje de manipulaci\u00f3n de datos, el lenguaje de consultas a base de datos m\u00e1s utilizado es SQL.", "subsections": []}, {"name": "Investigaci\u00f3n", "text": "La tecnolog\u00eda de bases de datos ha sido un tema de investigaci\u00f3n activo desde la d\u00e9cada de 1960s, en el \u00e1mbito acad\u00e9mico y en los grupos de investigaci\u00f3n y desarrollo de la industria (por ejemplo IBM Research). Las actividades de investigaci\u00f3n incluye teor\u00eda y desarrollo de prototipos. Temas de investigaci\u00f3n notables han incluido modelos de datos, el concepto de transacci\u00f3n at\u00f3mica, t\u00e9cnicas de control de concurrencia, lenguajes de consulta y m\u00e9todos de optimizaci\u00f3n de consultas, RAID y m\u00e1s. El \u00e1rea de investigaci\u00f3n de bases de datos tiene varias revistas acad\u00e9micas dedicadas (por ejemplo, ACM Transactions on Database Systems, Data and Knowledge Engineering-DKE) y conferencias anuales (por ejemplo, ACM SIGMOD, ACM PODS, VLDB, IEEE ICDE).", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Sistema de gesti\u00f3n de base de datos\nModelo relacional, normalizaci\u00f3n de bases de datos\nBase de datos orientada a objetos\nAlmac\u00e9n de datos\nMiner\u00eda de datos\nBase de datos biol\u00f3gica\nBase de datos probabil\u00edstica\nModelo entidad relaci\u00f3n", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abBases de datos: qu\u00e9 tipos hay y para qu\u00e9 se usan\u00bb. IONOS Digitalguide. Consultado el 19 de abril de 2022.\u00a0\n\u2191 \u00abPROTECCION DE LOS DATOS\u00bb. 4 de octubre de 2000. Consultado el 10 de abril de 2016.\u00a0\n\u2191 Tipos de bases de datos\n\u2191 \u00ab\u00bfQu\u00e9 es un sistema de administraci\u00f3n de base de datos (DBMS)?\u00bb.\u00a0\n\u2191 a b \u00abDiferencias entre Bases de Datos y Hojas de C\u00e1lculo\u00bb.\u00a0\n\u2191 Diego Rafael Llanos Ferraris. Fundamentos de inform\u00e1tica y programaci\u00f3n en C. Paraninfo. ISBN\u00a0978-84-9732-792-3. Consultado el 16 de noviembre de 2017.\u00a0\n\u2191 a b \u00abTipos de Base de Datos\u00bb.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Base de datos.\nBase de datos en Open Directory Project\nIntroducci\u00f3n a la Ciencia de Datos y Herramientas de An\u00e1lisis para Investigaci\u00f3n\nDise\u00f1o de bases de datos\n\u00bfQu\u00e9 es la Nube\u00a0?", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Benevolent_Dictator_for_Life", "title": "Benevolent Dictator for Life", "summary": "Benevolent Dictator for Life (BDFL) es un t\u00edtulo informal que se otorga a ciertos individuos de la comunidad de desarrolladores de software de c\u00f3digo abierto que tienen la tarea de asignar las directrices generales y, en ciertas situaciones, las decisiones finales dentro del \u00e1mbito de un proyecto. La traducci\u00f3n de Benevolent Dictator for Life es Dictador Benevolente De por vida, lo que conlleva un tanto de informalidad y humor.\nEn 1995 Guido van Rossum, creador de Python, fue la primera persona sobre la que recay\u00f3 dicha distinci\u00f3n.[1]\u200b[2]\u200b\nN\u00f3tese la diferencia con su significado hist\u00f3rico usado en un contexto pol\u00edtico.[cita\u00a0requerida]", "sections": [{"name": "Lista de algunos BDFLs", "text": "Adrian Bowyer fundador y l\u00edder del proyecto RepRap.\nAdrian Holovaty y Jacob Kaplan-Moss en Django; el 13 de enero de 2014 declinaron de manera impl\u00edcita en el c\u00f3digo fuente del proyecto.[3]\u200b\nAlexandre Julliard mantenedor de Wine (Biblioteca libre de reimplementaci\u00f3n del API de Windows).\nAndrew \"Tridge\" Tridgell en Samba (implementaci\u00f3n libre protocolo NetBios).\nDries Buytaert fundador y l\u00edder del proyecto Drupal (CMS).[4]\u200b[5]\u200b\nFabien Potencier, creador de Symfony.\nGuido van Rossum creador de Python,[1]\u200b[6]\u200b[7]\u200b declin\u00f3 de tal honor el 12 de julio de 2018.[8]\u200b\nHans Reiser en ReiserFS.\nJimbo Wales creador de Wikipedia.\nJosef Drexler en TTDPatch.\nLarry Wall en Perl.[9]\u200b\nDaniel Robbins en Funtoo Linux\nLinus Torvalds creador de Linux kernel.[10]\u200b[9]\u200b\nMark Shuttleworth se llama a s\u00ed mismo el \"Auto-nombrado Dictador Benevolente de por vida\", o SABDFL (del ingl\u00e9s \"Self-Appointed Benevolent Dictator for Life\" y la comunidad de Ubuntu muchas veces usan este nombre para referirse a \u00e9l.[11]\u200b[12]\u200b[9]\u200b\nMatt Mullenweg en WordPress.\nPablo \"Zaskar\" Novara de PSeInt.[13]\u200b\nPatrick Volkerding, creador de Slackware, una distribuci\u00f3n de Linux.[9]\u200b\nRasmus Lerdorf, creador de PHP.[14]\u200b\nTheo de Raadt en el proyecto OpenBSD.[9]\u200b\nTon Roosendaal de Blender (aplicaci\u00f3n modelado 3D).\nTaylor Otwell creador de Laravel.[15]\u200b\nBram Moolenaar, creador de Vim.", "subsections": []}, {"name": "Dictador Benevolente", "text": "Entendemos por dictador benevolente aquella persona que tiene la autoridad final para la toma de decisiones, por su personalidad o experiencia y la aplica diariamente con un uso racional para el beneficio de una comunidad o de una familia en concreto.\nNo hay que asociar este concepto al t\u00f3pico de dictador que toma las decisiones por la fuerza o sin consenso com\u00fan. Los dictadores benevolentes no toman realmente las decisiones, dejan que las cosas fluyan libremente, esperan un intercambio de ideas, y mediante la experiencia, el razonamiento y la reflexi\u00f3n intentan llegar a un acuerdo. En caso de que no se consiga, el dictador benevolente cuenta con suficiente experiencia para poder tomar una decisi\u00f3n final que beneficiar\u00e1 a la sociedad.[16]\u200b \nPor otro lado, en muchos casos el dictador tendr\u00e1 que delegar responsabilidad en la toma de decisiones en quien considere que est\u00e9 capacitado para ejecutarlo.  \nUna de las caracter\u00edsticas que les une a los dictadores, es su rechazo en la toma de decisiones sin ser consensuada y entendida por todos los miembros de la sociedad, a lo que suelen decir \u201cas\u00ed tiene que ser\u201d, en el sentido de que es lo mejor para ti y para la sociedad porque ya lo he conocido a trav\u00e9s de la experiencia. \nSer dictador benevolente requiere una especial delicadeza a la hora de dirigirse a la comunidad. En primer lugar, cuando comienza la conversaci\u00f3n, el dictador permite que los individuos de la sociedad manifiesten sus opiniones libremente, dejando para el final sus opiniones constructivas para que los miembros de la comunidad no se sientan influenciados. Aunque en algunos casos, el dictador puede equivocarse, pero no por ello pierde su credibilidad. \nEs importante que el dictador sea el emprendedor del proyecto. Que re\u00fana las habilidades, tales como competencia t\u00e9cnica o habilidad de persuadir para poder liderar el proyecto y que los miembros de la sociedad conf\u00eden en tus ideas. As\u00ed el proyecto ser\u00e1 centralizado ya que sus conocimientos y aptitudes son aceptadas por el grupo. Pero en cambio si no hay un candidato con suficiente credibilidad, es mejor que el proyecto se descentralice en la toma de decisiones.", "subsections": []}, {"name": "Referencias", "text": "\u2191 a b Meyer, Robinson (17 de enero de 2014). \u00abOn the Reign of 'Benevolent Dictators for Life' in Software\u00bb (html). The Atlantic (en ingl\u00e9s). Archivado desde el original el 24 de marzo de 2018. Consultado el 21 de julio de 2018. \u00abIn 1995, the programming language Python had a small but growing community. Its leaders established a foundation to support the language\u2014Python\u2019s inventor, Guido van Rossum, had even just moved from the Netherlands to the United States to help the project. So as the foundation established itself\u2014at that point, it and the community were synonymous\u2014it appointed van Rossum the final arbiter of all developmental conflict. He was the first First-Interim Benevolent Dictator For Life.\u00a0\u00bb\u00a0\n\u2191 van Rossum, Guido (31 de julio de 2008). \u00abOrigin of BDFL\u00bb (html). Artima (en ingl\u00e9s). Archivado desde el original el 23 de junio de 2018. Consultado el 21 de julio de 2018. \u00abWhile I can't prove my title (with or without the First Interim prefix) was never used before, I'm pretty certain that it originated in this meeting.\u00a0\u00bb\u00a0\n\u2191 Holovaty, Adrian (13 de enero de 2014). \u00abRemoved BDFLs section from docs/internals/committers.txt\u00bb (html). GitHub (en ingl\u00e9s). Archivado desde el original el 21 de julio de 2018. Consultado el 21 de julio de 2018.\u00a0\n\u2191 \u00abDries set to be married!\u00bb.\u00a0\n\u2191 \u00abUrban Dictionary: BDFL\u00bb.\u00a0\n\u2191 Guido van Rossum \u00abBenevolent dictator for life\u00bb. Linux Format. 1 de febrero de 2005. Archivado desde el original el 1 de octubre de 2006. Consultado el 1 de noviembre de 2007.\u00a0 \n\u2191 \u00abThe Four Hundred--Next Up on the System i: Python\u00bb. www.itjungle.com. Consultado el 13 de mayo de 2008.\u00a0\n\u2191 van Rossum, Guido (12 de julio de 2018). \u00ab[python-committers] Transfer of power\u00bb (html). Mail Archive Com (en ingl\u00e9s). Archivado desde el original el 12 de julio de 2018. Consultado el 21 de julio de 2018. \u00abI am not going to appoint a successor. So what are you all going to do? Create a democracy? Anarchy? A dictatorship? A federation?\u00a0\u00bb\u00a0\n\u2191 a b c d e Tannhausser (12 de julio de 2018). \u00abGuido van Rossum dimite como l\u00edder de Python\u00bb (html). La Mirada del Replicante. Archivado desde el original el 12 de julio de 2018. Consultado el 21 de julio de 2018. \u00abComo os comentaba al principio Guido no es el \u00fanico BDFL (Benevolent Dictator For Life) en el mundo del software libre. Nombres como Linus Torvalds, Theo de Raadt (openBSD), Mark Shuttelworth (Ubuntu), Larry Wall (Perl) o Patrick Vokerding (Slackware) est\u00e1n en la mente de todos.\u00a0\u00bb\u00a0\n\u2191 Ingo, Henrik (2006). \u00abBenevolent dictator\u00bb. Open Life: The Philosophy of Open Source. ISBN\u00a0978-1-84728-611-6. Archivado desde el original el 6 de julio de 2011. Consultado el 5 de marzo de 2011.\u00a0\n\u2191 \u00abAbout Ubuntu: Governance\u00bb. Canonical Ltd. Consultado el 5 de marzo de 2011.\u00a0\n\u2191 \u00abUbuntu founder defuses rumors of impending Microsoft deal\u00bb. arstechnica.com. Consultado el 13 de mayo de 2008.\u00a0\n\u2191 \u00abZaskar: Ser\u00eda demasiado honor estar en esa lista\u00bb. 10 de marzo de 2014.\u00a0\n\u2191 Marneweck, Jacques (28 de febrero de 2006). \u00abJacques Marneweck's Blog: Rasmus's no-framework PHP MVC framework\u00bb. Powertrip.co.za. Archivado desde el original el 20 de noviembre de 2012. Consultado el 1 de junio de 2011.\u00a0\n\u2191  taylorotwell (9 de octubre de 2014). \u00abthe benefits of BDFL!\u00bb (tuit).\u00a0 \n\u2191 Meyer, Robinson (17 de enero de 2014). \u00abOn the Reign of 'Benevolent Dictators for Life' in Software\u00bb (html). The Atlantic (en ingl\u00e9s). Archivado desde el original el 24 de marzo de 2018. Consultado el 21 de julio de 2018. \u00abWhen a software platform goes truly open-source, it\u2019s entrusted to the community that runs it. Going forward, volunteer programmers (usually) must make all the decisions about which features should be added, which should be cut, and when all that should happen. (...) But what happens if a consensus doesn\u2019t form? What if a problem is intractable? The two teams could split, each forking the project and going their own ways. But even then, who keeps the spoils and the name of the project? Some open-source communities, therefore, have entrusted the power to make decisions in one or two people. These people get, to first approximation, the absolute raddest titles in technology. They are the Benevolent Dictators for Life.\u00a0\u00bb\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Biblioteca_(inform%C3%A1tica)", "title": "Biblioteca (inform\u00e1tica)", "summary": "En inform\u00e1tica, una biblioteca o, llamada por vicio del lenguaje, librer\u00eda (del ingl\u00e9s library) es un conjunto de implementaciones funcionales, codificadas en un lenguaje de programaci\u00f3n, que ofrece una interfaz bien definida para la funcionalidad que se invoca. \nA diferencia de un programa ejecutable, el comportamiento que implementa una biblioteca no espera ser utilizada de forma aut\u00f3noma (un programa s\u00ed: tiene un punto de entrada principal), sino que su fin es ser utilizada por otros programas, independientes y de forma simult\u00e1nea. Por otra parte, el comportamiento de una biblioteca no tiene por qu\u00e9 diferenciarse demasiado del que pudiera especificarse en un programa. Es m\u00e1s, unas bibliotecas pueden requerir de otras para funcionar, pues el comportamiento que definen refina, o altera, el comportamiento de la biblioteca original; o bien la hace disponible para otra tecnolog\u00eda o lenguaje de programaci\u00f3n.\nLas bibliotecas pueden vincularse a un programa (o a otra biblioteca) en distintos puntos del desarrollo o la ejecuci\u00f3n, seg\u00fan el tipo de v\u00ednculo que se quiera establecer, tal y como se detalla en el apartado de \"Tipos\".\nLa mayor\u00eda de los sistemas operativos modernos proporcionan bibliotecas que implementan los servicios del sistema. De esta manera, estos servicios se han convertido en una \u00abmateria prima\u00bb que cualquier aplicaci\u00f3n moderna espera que el sistema operativo ofrezca. Como tal, la mayor parte del c\u00f3digo utilizado por las aplicaciones modernas se ofrece en estas bibliotecas.", "sections": [{"name": "\u00cdndice", "text": "1 Nota terminol\u00f3gica\n2 Historia\n3 Tipos\n3.1 Las bibliotecas est\u00e1ticas\n3.2 Bibliotecas din\u00e1micas\n3.2.1 Relocalizaci\u00f3n\n3.2.2 Localizaci\u00f3n de bibliotecas en tiempo de ejecuci\u00f3n\n3.2.2.1 Sistemas Unix\n3.3 Carga din\u00e1mica\n3.4 Bibliotecas remotas\n4 V\u00e9ase tambi\u00e9n\n5 Referencias", "subsections": []}, {"name": "Nota terminol\u00f3gica", "text": "Habitualmente se emplea el t\u00e9rmino librer\u00eda para referirse a una biblioteca, por la similitud con el original ingl\u00e9s library. Ambos vocablos, \u00abbiblioteca\u00bb y \u00ablibrer\u00eda\u00bb, son correctos seg\u00fan las definiciones (biblioteca,[1]\u200b librer\u00eda[2]\u200b) de la RAE. No obstante lo anterior, atendiendo a una traducci\u00f3n literal la acepci\u00f3n correcta ser\u00eda biblioteca, ya que el t\u00e9rmino ingl\u00e9s para \u00ablibrer\u00eda\u00bb es bookstore o book shop (literalmente: \u00abtienda de libros\u00bb), o bien bookshelf (estanter\u00eda o mueble para guardar libros, librer\u00eda o librero). Una traducci\u00f3n m\u00e1s directa y literal que \u00ablibrer\u00eda\u00bb ser\u00eda el t\u00e9rmino: \u00ablibrero\u00bb. Tambi\u00e9n es habitual referirse a ella con el vocablo de origen anglosaj\u00f3n toolkit (conjunto, equipo, malet\u00edn, caja, estuche, juego (kit) de herramientas).", "subsections": []}, {"name": "Historia", "text": "Los primeros conceptos de programaci\u00f3n similares a las bibliotecas intentaban separar las definiciones de datos de la implementaci\u00f3n del programa. El concepto COMPOOL (Communication Pool) fue popularizado por JOVIAL en 1959, aunque tom\u00f3 la idea prestada del software de los grandes sistemas SAGE. Siguiendo los principios de las ciencias de la computaci\u00f3n de separaci\u00f3n de problemas (aislar problemas peque\u00f1os f\u00e1ciles de abordar) y ocultaci\u00f3n de informaci\u00f3n, \"el prop\u00f3sito del COMPOOL es permitir el intercambio de datos del sistema entre varios programas, proporcionando una descripci\u00f3n centralizada de los mismos\" (Wexelblat 1981:369).\nCOBOL incluy\u00f3 un primitivo sistema de bibliotecas en el a\u00f1o 1959 (Wexelblat 1981:274), pero Jean Sammet las describi\u00f3 retrospectivamente como recursos insuficientes de biblioteca (Wexelblat 1981:258).\nOtra de las grandes contribuciones al concepto moderno de biblioteca fue la innovaci\u00f3n de subprograma de FORTRAN. Estos pueden ser compilados con independencia unos de otros, pero el compilador carece de un enlazador, por lo que el chequeo de tipos entre los subprogramas resulta imposible (Wilson et. Al. 1988:126).\nPor \u00faltimo, se debe hablar de la influencia que Simula 67 tuvo en el concepto de 'biblioteca'. Simula es el primer lenguaje de programaci\u00f3n orientado a objetos, y sus clases son casi id\u00e9nticas que el concepto actual que se utiliza en Java, C++ y C#. El concepto de clase de Simula fue tambi\u00e9n el origen del paquete en Ada y el m\u00f3dulo de Modula-2 (Wilson et. Al. 1988:52). A pesar de haber sido desarrollado en 1965, las clases de Simula pod\u00edan ser incluidas en ficheros de biblioteca y a\u00f1adidas en tiempo de compilaci\u00f3n (Wexelblat 1981:716).", "subsections": []}, {"name": "Tipos", "text": "", "subsections": [{"name": "Las bibliotecas est\u00e1ticas", "text": "Art\u00edculo principal:\nHist\u00f3ricamente, las bibliotecas solo pod\u00edan ser est\u00e1ticas. Una biblioteca est\u00e1tica, tambi\u00e9n conocida como archivo, es un fichero contenedor con varios archivos de c\u00f3digo objeto empaquetados en su interior, que en el proceso de enlazado, durante la compilaci\u00f3n, ser\u00e1n copiados y relocalizados (si es necesario) en el fichero ejecutable final, junto con el resto de ficheros de c\u00f3digo objeto. Este proceso, y el archivo ejecutable, se conoce como una construcci\u00f3n est\u00e1tica de la aplicaci\u00f3n objetivo. En este caso, la biblioteca act\u00faa simplemente como un recipiente para ficheros de c\u00f3digo objeto que no se diferencian (m\u00e1s que sem\u00e1nticamente) de los ficheros objeto intermedios producidos durante la etapa previa de compilaci\u00f3n del programa. En la construcci\u00f3n est\u00e1tica de ficheros compilados se resuelven las direcciones de las subrutinas ensambladas en tiempo de compilaci\u00f3n (m\u00e1s espec\u00edficamente, en la etapa de enlazado), de modo que las referencias a subrutinas de la biblioteca se resuelven est\u00e1ticamente, del mismo modo que las referencias a cualquier otra funci\u00f3n del programa. As\u00ed, la direcci\u00f3n real, las referencias para saltos y otras llamadas a rutinas se almacenan en una direcci\u00f3n relativa o simb\u00f3lica.\nEl enlazador resuelve todas las direcciones no resueltas convirti\u00e9ndolas en direcciones fijas o relocalizables (desde una base com\u00fan) cargando todo el c\u00f3digo (incluyendo las bibliotecas) en posiciones de memoria en tiempo de ejecuci\u00f3n. Este proceso de enlazado puede durar incluso m\u00e1s tiempo que el proceso de compilaci\u00f3n, y debe ser realizado cada vez que alguno de los m\u00f3dulos es recompilado.\nUn enlazador puede trabajar sobre tipos espec\u00edficos de ficheros objeto, y por lo tanto requiere tipos espec\u00edficos (compatibles) de bibliotecas. Los ficheros objeto recompilados en una biblioteca pueden distribuirse y utilizarse f\u00e1cilmente. Un cliente, ya sea un programa u otra biblioteca, accede a una biblioteca objeto referenciando solo por su nombre. El proceso de enlazado resuelve las referencias buscando en las bibliotecas del orden dado. Por lo general, no se considera un error si un nombre puede encontrarse varias veces en un determinado conjunto de las bibliotecas."}, {"name": "Bibliotecas din\u00e1micas", "text": "Las bibliotecas din\u00e1micas, vinculadas din\u00e1micamente, o de v\u00ednculos din\u00e1micos son ficheros que contienen c\u00f3digo objeto construido de forma independiente de su ubicaci\u00f3n[3]\u200b de tal modo que est\u00e1n preparadas para poder ser requeridas y cargadas en tiempo de ejecuci\u00f3n por cualquier programa, en lugar de tener que ser enlazadas, previamente, en tiempo de compilaci\u00f3n. Por tanto, han de estar disponibles como ficheros independientes al programa ejecutable (generalmente en directorios del sistema). En el proceso de enlazado (en tiempo de compilaci\u00f3n) se genera un fichero ejecutable con anotaciones de qu\u00e9 bibliotecas din\u00e1micas requiere (pero no de d\u00f3nde encontrarlas), y funciones de \u00abesbozo\u00bb que se encargan de delegar la llamada a la funci\u00f3n al cargador din\u00e1mico (o dynamic-loader) (en Linux, ld.so). En el resto del programa, las llamadas a las funciones de la biblioteca se cambian por una llamada a la funci\u00f3n de esbozo generada por el enlazador.\nPor otra parte, cuando la aplicaci\u00f3n que se ejecute requiera acceder a las rutinas almacenadas en una biblioteca din\u00e1mica, y ejecute la funci\u00f3n de esbozo, el cargador de enlaces din\u00e1micos podr\u00e1 sustituir esta llamada por la funci\u00f3n real de la biblioteca din\u00e1mica, carg\u00e1ndola en memoria si no lo estuviera ya, y mapeando las p\u00e1ginas de esta en el espacio de memoria del proceso del programa.\nEn algunos sistemas operativos puede decidirse si una biblioteca ha de estar disponible inmediatamente o solamente cuando se haga referencia a una funci\u00f3n de ella. Si se decide esto \u00faltimo, aparecer\u00e1 un fen\u00f3meno denominado retraso de carga, derivado de tener que cargar de memoria secundaria la biblioteca, si no estuviera ya en memoria, y de ajustarla al espacio de direcciones del programa contra el que se vincula.\nVentajas del enlace din\u00e1mico respecto al est\u00e1tico son que se permite la reutilizaci\u00f3n no solo de c\u00f3digo, sino de espacio f\u00edsico: un mismo fichero de biblioteca compartida puede ser utilizada por varios programas sin que estos copien su contenido dentro de ellos. Esto puede llegar a ser bastante espacio, seg\u00fan el n\u00famero de bibliotecas que requiera un programa. Adem\u00e1s, puede reutilizarse memoria principal (RAM) para programas que utilicen la misma biblioteca (por ejemplo, puede ser necesario cargar las bibliotecas de Qt solo una vez para todos los programas que las utilicen).\nPor otra parte, el mayor inconveniente es el aumento del tiempo de carga (debido a tener que buscar el fichero de la biblioteca, cargarlo y relocalizar las llamadas en el programa) y el aumento de una indirecci\u00f3n a la hora de llamar a las funciones de la biblioteca.\nEl enlace din\u00e1mico, por su naturaleza, tiene tan solo las limitaciones establecidas por las licencias de software.\nLa tecnolog\u00eda que permite enlazar bibliotecas de forma din\u00e1mica es muy \u00fatil para la construcci\u00f3n de plugins, sobre todo cuando unas bibliotecas pueden ser sustituidas por otras con una interfaz similar, pero diferente funcionalidad. Se puede decir que un software tiene una \"arquitectura de plugin\" si utiliza bibliotecas con una funcionalidad b\u00e1sica con la intenci\u00f3n de que puedan ser sustituidas. Sin embargo, el uso de las bibliotecas enlazadas din\u00e1micamente en la arquitectura de una aplicaci\u00f3n no significa necesariamente que puedan ser sustituidas.\nEl enlace din\u00e1mico se desarroll\u00f3 originalmente en los sistemas operativos Multics a partir de 1964. Se trataba de una caracter\u00edstica del MTS (Michigan Terminal System), construido a finales de los 60.[4]\u200b\nEn distintos sistemas operativos toman distintos nombres, por ejemplo:\nEn Microsoft Windows: DLL (dynamic-link library)\nEn Linux: shared-objects\nEn Mac OS: \"bibliotecas din\u00e1micas\" (dylibs)\nRelocalizaci\u00f3n\nUno de los problemas que el cargador debe gestionar es que la localizaci\u00f3n real de los datos de la biblioteca no puede conocerse hasta que el ejecutable y todas las bibliotecas din\u00e1micas que se han enlazado han sido cargadas en memoria. Eso es debido a que las localizaciones en memoria dependen de qu\u00e9 bibliotecas din\u00e1micas se han cargado. No es posible depender de la direcci\u00f3n absoluta de los datos en el ejecutable, ni incluso en la biblioteca, ya que podr\u00edan producirse conflictos entre las diferentes bibliotecas: si dos de ellas utilizaran las mismas direcciones o sus direcciones se solaparan, ser\u00eda imposible utilizar ambas en el mismo programa.\nSin embargo, en la pr\u00e1ctica, en muchos de los sistemas las bibliotecas no cambian frecuentemente. Por tanto, es posible calcular una direcci\u00f3n de carga probable para cada biblioteca compartida en el sistema antes de que sea utilizada, y almacenar esa informaci\u00f3n en bibliotecas y ejecutables. Si cada biblioteca que es cargada es tratada as\u00ed, entonces cada una de ellas ser\u00e1 cargada en direcciones predeterminadas, lo que acelera el proceso de enlace din\u00e1mico. Esta optimizaci\u00f3n se conoce como Prebinding en Mac OS X y Prelinking en Linux.\nLas desventajas de esta t\u00e9cnica son el tiempo requerido de prec\u00e1lculo de las direcciones cada vez que las bibliotecas compartidas cambian, la incapacidad de usar t\u00e9cnicas como la aleatorizaci\u00f3n de los espacios de direcciones, y el consumo de espacio virtual de direcciones (un problema que queda mitigado por el uso de arquitecturas de 64 bits, al menos en la actualidad).\nUn antiguo m\u00e9todo era examinar el programa en tiempo de carga. Una vez que todas las bibliotecas fueran cargadas, se reemplazan todas las referencias a datos en las bibliotecas, con punteros a localidades de memoria apropiados. En Windows 3.1 (y algunos sistemas embebidos como las calculadoras Texas Instruments), las referencias eran manejadas como listas ligadas, permitiendo la f\u00e1cil enumeraci\u00f3n y reemplazo. Ahora, la mayor\u00eda de las bibliotecas din\u00e1micas ligan una tabla de s\u00edmbolos con direcciones en blanco dentro del programa en tiempo de compilaci\u00f3n. Todas las referencias a c\u00f3digo o datos en la biblioteca pasan a trav\u00e9s de esta tabla. En tiempo de carga, la tabla es modificada con la direcci\u00f3n de los datos/c\u00f3digo por el linker. Este proceso es lento y afecta significativamente la velocidad de los programas que llaman continuamente a otros programas, tal como algunos scripts de shell.\nLa biblioteca contiene una tabla de saltos de todos los m\u00e9todos que contiene, denominados puntos de entrada. Las llamadas dentro de la biblioteca \u00absaltan a lo largo\u00bb de la tabla, buscando la ubicaci\u00f3n del c\u00f3digo en memoria, y a continuaci\u00f3n solicit\u00e1ndolo. Estas solicitudes suponen un sobreesfuerzo, pero el retardo es habitualmente tan peque\u00f1o que es despreciable.\nLocalizaci\u00f3n de bibliotecas en tiempo de ejecuci\u00f3n\nLos enlazadores/cargadores din\u00e1micos tienen una funcionalidad muy amplia. Algunos dependen de rutas expl\u00edcitas a las bibliotecas almacenadas en los ejecutables. Cualquier cambio en la nomenclatura o el dise\u00f1o del sistema de ficheros har\u00e1 que estos sistemas fallen. Habitualmente solo se almacena en el ejecutable el nombre de la biblioteca (no la ruta), siendo el sistema operativo el que proporciona el mecanismo para encontrar la biblioteca en el disco mediante ciertos algoritmos.\nUna de las mayores desventajas del enlace din\u00e1mico es que el funcionamiento correcto de los ejecutables depende de una serie de bibliotecas almacenadas de forma aislada. Si la biblioteca es borrada, movida o renombrada, o si una versi\u00f3n incompatible de DLL es copiada en una ubicaci\u00f3n que aparece antes en la ruta de b\u00fasqueda, el ejecutable no se podr\u00e1 cargar. En Windows esto se conoce como infierno de las DLL.\nSistemas Unix\nLa mayor parte de los sistemas tipo Unix disponen de una \"ruta de b\u00fasqueda\" que especifica los directorios del sistema de archivos en los que buscar las bibliotecas din\u00e1micas. En algunos sistemas, la ruta por defecto es especificada en un archivo de configuraci\u00f3n; en otros, est\u00e1 prefijada (hard coded) en el cargador din\u00e1mico. Algunos formatos de fichero ejecutable pueden especificar directorios adicionales en los que buscar las bibliotecas de un determinado programa. Esto puede ser usualmente alterado por una variable de entorno, aunque es deshabilitado para programas que tengan setuid o setgid, de manera que el usuario no puede forzar a ese programa a ejecutar un c\u00f3digo arbitrario. Es aconsejable que los desarrolladores de bibliotecas pongan sus bibliotecas din\u00e1micas en directorios que se encuentren en la ruta de b\u00fasqueda por defecto. Por el contrario, esto puede hacer problem\u00e1tica la instalaci\u00f3n de nuevas bibliotecas, pues hace que esos directorios crezcan mucho haci\u00e9ndose complicada"}, {"name": "Carga din\u00e1mica", "text": ""}, {"name": "Bibliotecas remotas", "text": "Otra soluci\u00f3n al problema de las bibliotecas es usar ejecutables completamente separados (a menudo una versi\u00f3n ligera) y llamarlos mediante procedimiento remoto (RPC) sobre la red a otra computadora u ordenador. Este enfoque maximiza la reutilizaci\u00f3n del sistema operativo: el c\u00f3digo necesario para dar soporte a la biblioteca es el mismo que el usado para proveer a la aplicaci\u00f3n soporte y seguridad para cualquier otro programa.\nAdicionalmente, dichos sistemas no requerir\u00e1n que la biblioteca este grabada en la misma m\u00e1quina, pudiendo redirigir la petici\u00f3n por la red.\nSin embargo, tal enfoque implica que cada llamada a la biblioteca requerir\u00e1 una gran cantidad de gastos generales. Las llamadas RPC son mucho m\u00e1s costosas que llamadas a procedimiento en la propia m\u00e1quina. Este enfoque se usa com\u00fanmente en las arquitecturas distribuidas que hacen un uso intensivo de las RPC, en los sistemas cliente-servidor y en aplicaciones como Enterprise JavaBeans."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Biblioteca est\u00e1ndar de C", "subsections": []}, {"name": "Referencias", "text": "\u2191 RAE. \u00abDefinici\u00f3n de biblioteca\u00bb.\u00a0\n\u2191 RAE. \u00abDefinici\u00f3n de librer\u00eda\u00bb.\u00a0\n\u2191 en la Wikipedia en ingl\u00e9s\n\u2191 \u00abA History of MTS\u00bb. Information Technology Digest 5 (5).\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Biblioteca_(programaci%C3%B3n)", "title": "Biblioteca (inform\u00e1tica)", "summary": "En inform\u00e1tica, una biblioteca o, llamada por vicio del lenguaje, librer\u00eda (del ingl\u00e9s library) es un conjunto de implementaciones funcionales, codificadas en un lenguaje de programaci\u00f3n, que ofrece una interfaz bien definida para la funcionalidad que se invoca. \nA diferencia de un programa ejecutable, el comportamiento que implementa una biblioteca no espera ser utilizada de forma aut\u00f3noma (un programa s\u00ed: tiene un punto de entrada principal), sino que su fin es ser utilizada por otros programas, independientes y de forma simult\u00e1nea. Por otra parte, el comportamiento de una biblioteca no tiene por qu\u00e9 diferenciarse demasiado del que pudiera especificarse en un programa. Es m\u00e1s, unas bibliotecas pueden requerir de otras para funcionar, pues el comportamiento que definen refina, o altera, el comportamiento de la biblioteca original; o bien la hace disponible para otra tecnolog\u00eda o lenguaje de programaci\u00f3n.\nLas bibliotecas pueden vincularse a un programa (o a otra biblioteca) en distintos puntos del desarrollo o la ejecuci\u00f3n, seg\u00fan el tipo de v\u00ednculo que se quiera establecer, tal y como se detalla en el apartado de \"Tipos\".\nLa mayor\u00eda de los sistemas operativos modernos proporcionan bibliotecas que implementan los servicios del sistema. De esta manera, estos servicios se han convertido en una \u00abmateria prima\u00bb que cualquier aplicaci\u00f3n moderna espera que el sistema operativo ofrezca. Como tal, la mayor parte del c\u00f3digo utilizado por las aplicaciones modernas se ofrece en estas bibliotecas.", "sections": [{"name": "\u00cdndice", "text": "1 Nota terminol\u00f3gica\n2 Historia\n3 Tipos\n3.1 Las bibliotecas est\u00e1ticas\n3.2 Bibliotecas din\u00e1micas\n3.2.1 Relocalizaci\u00f3n\n3.2.2 Localizaci\u00f3n de bibliotecas en tiempo de ejecuci\u00f3n\n3.2.2.1 Sistemas Unix\n3.3 Carga din\u00e1mica\n3.4 Bibliotecas remotas\n4 V\u00e9ase tambi\u00e9n\n5 Referencias", "subsections": []}, {"name": "Nota terminol\u00f3gica", "text": "Habitualmente se emplea el t\u00e9rmino librer\u00eda para referirse a una biblioteca, por la similitud con el original ingl\u00e9s library. Ambos vocablos, \u00abbiblioteca\u00bb y \u00ablibrer\u00eda\u00bb, son correctos seg\u00fan las definiciones (biblioteca,[1]\u200b librer\u00eda[2]\u200b) de la RAE. No obstante lo anterior, atendiendo a una traducci\u00f3n literal la acepci\u00f3n correcta ser\u00eda biblioteca, ya que el t\u00e9rmino ingl\u00e9s para \u00ablibrer\u00eda\u00bb es bookstore o book shop (literalmente: \u00abtienda de libros\u00bb), o bien bookshelf (estanter\u00eda o mueble para guardar libros, librer\u00eda o librero). Una traducci\u00f3n m\u00e1s directa y literal que \u00ablibrer\u00eda\u00bb ser\u00eda el t\u00e9rmino: \u00ablibrero\u00bb. Tambi\u00e9n es habitual referirse a ella con el vocablo de origen anglosaj\u00f3n toolkit (conjunto, equipo, malet\u00edn, caja, estuche, juego (kit) de herramientas).", "subsections": []}, {"name": "Historia", "text": "Los primeros conceptos de programaci\u00f3n similares a las bibliotecas intentaban separar las definiciones de datos de la implementaci\u00f3n del programa. El concepto COMPOOL (Communication Pool) fue popularizado por JOVIAL en 1959, aunque tom\u00f3 la idea prestada del software de los grandes sistemas SAGE. Siguiendo los principios de las ciencias de la computaci\u00f3n de separaci\u00f3n de problemas (aislar problemas peque\u00f1os f\u00e1ciles de abordar) y ocultaci\u00f3n de informaci\u00f3n, \"el prop\u00f3sito del COMPOOL es permitir el intercambio de datos del sistema entre varios programas, proporcionando una descripci\u00f3n centralizada de los mismos\" (Wexelblat 1981:369).\nCOBOL incluy\u00f3 un primitivo sistema de bibliotecas en el a\u00f1o 1959 (Wexelblat 1981:274), pero Jean Sammet las describi\u00f3 retrospectivamente como recursos insuficientes de biblioteca (Wexelblat 1981:258).\nOtra de las grandes contribuciones al concepto moderno de biblioteca fue la innovaci\u00f3n de subprograma de FORTRAN. Estos pueden ser compilados con independencia unos de otros, pero el compilador carece de un enlazador, por lo que el chequeo de tipos entre los subprogramas resulta imposible (Wilson et. Al. 1988:126).\nPor \u00faltimo, se debe hablar de la influencia que Simula 67 tuvo en el concepto de 'biblioteca'. Simula es el primer lenguaje de programaci\u00f3n orientado a objetos, y sus clases son casi id\u00e9nticas que el concepto actual que se utiliza en Java, C++ y C#. El concepto de clase de Simula fue tambi\u00e9n el origen del paquete en Ada y el m\u00f3dulo de Modula-2 (Wilson et. Al. 1988:52). A pesar de haber sido desarrollado en 1965, las clases de Simula pod\u00edan ser incluidas en ficheros de biblioteca y a\u00f1adidas en tiempo de compilaci\u00f3n (Wexelblat 1981:716).", "subsections": []}, {"name": "Tipos", "text": "", "subsections": [{"name": "Las bibliotecas est\u00e1ticas", "text": "Art\u00edculo principal:\nHist\u00f3ricamente, las bibliotecas solo pod\u00edan ser est\u00e1ticas. Una biblioteca est\u00e1tica, tambi\u00e9n conocida como archivo, es un fichero contenedor con varios archivos de c\u00f3digo objeto empaquetados en su interior, que en el proceso de enlazado, durante la compilaci\u00f3n, ser\u00e1n copiados y relocalizados (si es necesario) en el fichero ejecutable final, junto con el resto de ficheros de c\u00f3digo objeto. Este proceso, y el archivo ejecutable, se conoce como una construcci\u00f3n est\u00e1tica de la aplicaci\u00f3n objetivo. En este caso, la biblioteca act\u00faa simplemente como un recipiente para ficheros de c\u00f3digo objeto que no se diferencian (m\u00e1s que sem\u00e1nticamente) de los ficheros objeto intermedios producidos durante la etapa previa de compilaci\u00f3n del programa. En la construcci\u00f3n est\u00e1tica de ficheros compilados se resuelven las direcciones de las subrutinas ensambladas en tiempo de compilaci\u00f3n (m\u00e1s espec\u00edficamente, en la etapa de enlazado), de modo que las referencias a subrutinas de la biblioteca se resuelven est\u00e1ticamente, del mismo modo que las referencias a cualquier otra funci\u00f3n del programa. As\u00ed, la direcci\u00f3n real, las referencias para saltos y otras llamadas a rutinas se almacenan en una direcci\u00f3n relativa o simb\u00f3lica.\nEl enlazador resuelve todas las direcciones no resueltas convirti\u00e9ndolas en direcciones fijas o relocalizables (desde una base com\u00fan) cargando todo el c\u00f3digo (incluyendo las bibliotecas) en posiciones de memoria en tiempo de ejecuci\u00f3n. Este proceso de enlazado puede durar incluso m\u00e1s tiempo que el proceso de compilaci\u00f3n, y debe ser realizado cada vez que alguno de los m\u00f3dulos es recompilado.\nUn enlazador puede trabajar sobre tipos espec\u00edficos de ficheros objeto, y por lo tanto requiere tipos espec\u00edficos (compatibles) de bibliotecas. Los ficheros objeto recompilados en una biblioteca pueden distribuirse y utilizarse f\u00e1cilmente. Un cliente, ya sea un programa u otra biblioteca, accede a una biblioteca objeto referenciando solo por su nombre. El proceso de enlazado resuelve las referencias buscando en las bibliotecas del orden dado. Por lo general, no se considera un error si un nombre puede encontrarse varias veces en un determinado conjunto de las bibliotecas."}, {"name": "Bibliotecas din\u00e1micas", "text": "Las bibliotecas din\u00e1micas, vinculadas din\u00e1micamente, o de v\u00ednculos din\u00e1micos son ficheros que contienen c\u00f3digo objeto construido de forma independiente de su ubicaci\u00f3n[3]\u200b de tal modo que est\u00e1n preparadas para poder ser requeridas y cargadas en tiempo de ejecuci\u00f3n por cualquier programa, en lugar de tener que ser enlazadas, previamente, en tiempo de compilaci\u00f3n. Por tanto, han de estar disponibles como ficheros independientes al programa ejecutable (generalmente en directorios del sistema). En el proceso de enlazado (en tiempo de compilaci\u00f3n) se genera un fichero ejecutable con anotaciones de qu\u00e9 bibliotecas din\u00e1micas requiere (pero no de d\u00f3nde encontrarlas), y funciones de \u00abesbozo\u00bb que se encargan de delegar la llamada a la funci\u00f3n al cargador din\u00e1mico (o dynamic-loader) (en Linux, ld.so). En el resto del programa, las llamadas a las funciones de la biblioteca se cambian por una llamada a la funci\u00f3n de esbozo generada por el enlazador.\nPor otra parte, cuando la aplicaci\u00f3n que se ejecute requiera acceder a las rutinas almacenadas en una biblioteca din\u00e1mica, y ejecute la funci\u00f3n de esbozo, el cargador de enlaces din\u00e1micos podr\u00e1 sustituir esta llamada por la funci\u00f3n real de la biblioteca din\u00e1mica, carg\u00e1ndola en memoria si no lo estuviera ya, y mapeando las p\u00e1ginas de esta en el espacio de memoria del proceso del programa.\nEn algunos sistemas operativos puede decidirse si una biblioteca ha de estar disponible inmediatamente o solamente cuando se haga referencia a una funci\u00f3n de ella. Si se decide esto \u00faltimo, aparecer\u00e1 un fen\u00f3meno denominado retraso de carga, derivado de tener que cargar de memoria secundaria la biblioteca, si no estuviera ya en memoria, y de ajustarla al espacio de direcciones del programa contra el que se vincula.\nVentajas del enlace din\u00e1mico respecto al est\u00e1tico son que se permite la reutilizaci\u00f3n no solo de c\u00f3digo, sino de espacio f\u00edsico: un mismo fichero de biblioteca compartida puede ser utilizada por varios programas sin que estos copien su contenido dentro de ellos. Esto puede llegar a ser bastante espacio, seg\u00fan el n\u00famero de bibliotecas que requiera un programa. Adem\u00e1s, puede reutilizarse memoria principal (RAM) para programas que utilicen la misma biblioteca (por ejemplo, puede ser necesario cargar las bibliotecas de Qt solo una vez para todos los programas que las utilicen).\nPor otra parte, el mayor inconveniente es el aumento del tiempo de carga (debido a tener que buscar el fichero de la biblioteca, cargarlo y relocalizar las llamadas en el programa) y el aumento de una indirecci\u00f3n a la hora de llamar a las funciones de la biblioteca.\nEl enlace din\u00e1mico, por su naturaleza, tiene tan solo las limitaciones establecidas por las licencias de software.\nLa tecnolog\u00eda que permite enlazar bibliotecas de forma din\u00e1mica es muy \u00fatil para la construcci\u00f3n de plugins, sobre todo cuando unas bibliotecas pueden ser sustituidas por otras con una interfaz similar, pero diferente funcionalidad. Se puede decir que un software tiene una \"arquitectura de plugin\" si utiliza bibliotecas con una funcionalidad b\u00e1sica con la intenci\u00f3n de que puedan ser sustituidas. Sin embargo, el uso de las bibliotecas enlazadas din\u00e1micamente en la arquitectura de una aplicaci\u00f3n no significa necesariamente que puedan ser sustituidas.\nEl enlace din\u00e1mico se desarroll\u00f3 originalmente en los sistemas operativos Multics a partir de 1964. Se trataba de una caracter\u00edstica del MTS (Michigan Terminal System), construido a finales de los 60.[4]\u200b\nEn distintos sistemas operativos toman distintos nombres, por ejemplo:\nEn Microsoft Windows: DLL (dynamic-link library)\nEn Linux: shared-objects\nEn Mac OS: \"bibliotecas din\u00e1micas\" (dylibs)\nRelocalizaci\u00f3n\nUno de los problemas que el cargador debe gestionar es que la localizaci\u00f3n real de los datos de la biblioteca no puede conocerse hasta que el ejecutable y todas las bibliotecas din\u00e1micas que se han enlazado han sido cargadas en memoria. Eso es debido a que las localizaciones en memoria dependen de qu\u00e9 bibliotecas din\u00e1micas se han cargado. No es posible depender de la direcci\u00f3n absoluta de los datos en el ejecutable, ni incluso en la biblioteca, ya que podr\u00edan producirse conflictos entre las diferentes bibliotecas: si dos de ellas utilizaran las mismas direcciones o sus direcciones se solaparan, ser\u00eda imposible utilizar ambas en el mismo programa.\nSin embargo, en la pr\u00e1ctica, en muchos de los sistemas las bibliotecas no cambian frecuentemente. Por tanto, es posible calcular una direcci\u00f3n de carga probable para cada biblioteca compartida en el sistema antes de que sea utilizada, y almacenar esa informaci\u00f3n en bibliotecas y ejecutables. Si cada biblioteca que es cargada es tratada as\u00ed, entonces cada una de ellas ser\u00e1 cargada en direcciones predeterminadas, lo que acelera el proceso de enlace din\u00e1mico. Esta optimizaci\u00f3n se conoce como Prebinding en Mac OS X y Prelinking en Linux.\nLas desventajas de esta t\u00e9cnica son el tiempo requerido de prec\u00e1lculo de las direcciones cada vez que las bibliotecas compartidas cambian, la incapacidad de usar t\u00e9cnicas como la aleatorizaci\u00f3n de los espacios de direcciones, y el consumo de espacio virtual de direcciones (un problema que queda mitigado por el uso de arquitecturas de 64 bits, al menos en la actualidad).\nUn antiguo m\u00e9todo era examinar el programa en tiempo de carga. Una vez que todas las bibliotecas fueran cargadas, se reemplazan todas las referencias a datos en las bibliotecas, con punteros a localidades de memoria apropiados. En Windows 3.1 (y algunos sistemas embebidos como las calculadoras Texas Instruments), las referencias eran manejadas como listas ligadas, permitiendo la f\u00e1cil enumeraci\u00f3n y reemplazo. Ahora, la mayor\u00eda de las bibliotecas din\u00e1micas ligan una tabla de s\u00edmbolos con direcciones en blanco dentro del programa en tiempo de compilaci\u00f3n. Todas las referencias a c\u00f3digo o datos en la biblioteca pasan a trav\u00e9s de esta tabla. En tiempo de carga, la tabla es modificada con la direcci\u00f3n de los datos/c\u00f3digo por el linker. Este proceso es lento y afecta significativamente la velocidad de los programas que llaman continuamente a otros programas, tal como algunos scripts de shell.\nLa biblioteca contiene una tabla de saltos de todos los m\u00e9todos que contiene, denominados puntos de entrada. Las llamadas dentro de la biblioteca \u00absaltan a lo largo\u00bb de la tabla, buscando la ubicaci\u00f3n del c\u00f3digo en memoria, y a continuaci\u00f3n solicit\u00e1ndolo. Estas solicitudes suponen un sobreesfuerzo, pero el retardo es habitualmente tan peque\u00f1o que es despreciable.\nLocalizaci\u00f3n de bibliotecas en tiempo de ejecuci\u00f3n\nLos enlazadores/cargadores din\u00e1micos tienen una funcionalidad muy amplia. Algunos dependen de rutas expl\u00edcitas a las bibliotecas almacenadas en los ejecutables. Cualquier cambio en la nomenclatura o el dise\u00f1o del sistema de ficheros har\u00e1 que estos sistemas fallen. Habitualmente solo se almacena en el ejecutable el nombre de la biblioteca (no la ruta), siendo el sistema operativo el que proporciona el mecanismo para encontrar la biblioteca en el disco mediante ciertos algoritmos.\nUna de las mayores desventajas del enlace din\u00e1mico es que el funcionamiento correcto de los ejecutables depende de una serie de bibliotecas almacenadas de forma aislada. Si la biblioteca es borrada, movida o renombrada, o si una versi\u00f3n incompatible de DLL es copiada en una ubicaci\u00f3n que aparece antes en la ruta de b\u00fasqueda, el ejecutable no se podr\u00e1 cargar. En Windows esto se conoce como infierno de las DLL.\nSistemas Unix\nLa mayor parte de los sistemas tipo Unix disponen de una \"ruta de b\u00fasqueda\" que especifica los directorios del sistema de archivos en los que buscar las bibliotecas din\u00e1micas. En algunos sistemas, la ruta por defecto es especificada en un archivo de configuraci\u00f3n; en otros, est\u00e1 prefijada (hard coded) en el cargador din\u00e1mico. Algunos formatos de fichero ejecutable pueden especificar directorios adicionales en los que buscar las bibliotecas de un determinado programa. Esto puede ser usualmente alterado por una variable de entorno, aunque es deshabilitado para programas que tengan setuid o setgid, de manera que el usuario no puede forzar a ese programa a ejecutar un c\u00f3digo arbitrario. Es aconsejable que los desarrolladores de bibliotecas pongan sus bibliotecas din\u00e1micas en directorios que se encuentren en la ruta de b\u00fasqueda por defecto. Por el contrario, esto puede hacer problem\u00e1tica la instalaci\u00f3n de nuevas bibliotecas, pues hace que esos directorios crezcan mucho haci\u00e9ndose complicada"}, {"name": "Carga din\u00e1mica", "text": ""}, {"name": "Bibliotecas remotas", "text": "Otra soluci\u00f3n al problema de las bibliotecas es usar ejecutables completamente separados (a menudo una versi\u00f3n ligera) y llamarlos mediante procedimiento remoto (RPC) sobre la red a otra computadora u ordenador. Este enfoque maximiza la reutilizaci\u00f3n del sistema operativo: el c\u00f3digo necesario para dar soporte a la biblioteca es el mismo que el usado para proveer a la aplicaci\u00f3n soporte y seguridad para cualquier otro programa.\nAdicionalmente, dichos sistemas no requerir\u00e1n que la biblioteca este grabada en la misma m\u00e1quina, pudiendo redirigir la petici\u00f3n por la red.\nSin embargo, tal enfoque implica que cada llamada a la biblioteca requerir\u00e1 una gran cantidad de gastos generales. Las llamadas RPC son mucho m\u00e1s costosas que llamadas a procedimiento en la propia m\u00e1quina. Este enfoque se usa com\u00fanmente en las arquitecturas distribuidas que hacen un uso intensivo de las RPC, en los sistemas cliente-servidor y en aplicaciones como Enterprise JavaBeans."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Biblioteca est\u00e1ndar de C", "subsections": []}, {"name": "Referencias", "text": "\u2191 RAE. \u00abDefinici\u00f3n de biblioteca\u00bb.\u00a0\n\u2191 RAE. \u00abDefinici\u00f3n de librer\u00eda\u00bb.\u00a0\n\u2191 en la Wikipedia en ingl\u00e9s\n\u2191 \u00abA History of MTS\u00bb. Information Technology Digest 5 (5).\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Biopython", "title": "Biopython", "summary": "El proyecto 'Biopython' es el nombre que recibe una serie de aplicaciones y programas inform\u00e1ticos pensados para cuantificar y hacer c\u00e1lculos con datos biol\u00f3gicos, programados por una comunidad internacional. Su objetivo principal es el de desarrollar el mayor n\u00famero posible de bibliotecas inform\u00e1ticas basadas en el lenguaje de programaci\u00f3n Python, que tengan aplicaciones bioinform\u00e1ticas y que est\u00e9n disponibles para un p\u00fablico lo m\u00e1s amplio posible.[1]\u200b[2]\u200b Esto es posible gracias a una licencia de c\u00f3digo abierto espec\u00edfica, llamada licencia Biopython, que es muy poco restrictiva.\nBiophython permite representar secuencias biol\u00f3gicas y anotaciones de genomas y es capaz de comunicar con las bases de datos biol\u00f3gicos en l\u00ednea del NCBI para hacer c\u00e1lculos. Adem\u00e1s, gracias a diversos m\u00f3dulos, puede ser utilizada para trabajar sobre proyectos relativos al alineamiento de secuencias, c\u00e1lculo de estructuras proteicas, gen\u00e9tica de poblaciones, filogen\u00e9tica e inteligencia artificial.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Dise\u00f1o\n3 Caracter\u00edsticas y ejemplos\n3.1 Secuencias\n3.2 Anotaci\u00f3n de secuencias gen\u00e9ticas\n3.3 Mecanismos de entrada y de salida\n3.4 Acceso a bases de datos en l\u00ednea\n3.5 Filogenia\n3.6 Diagramas de genoma\n3.7 Estructura macromolecular\n3.8 Gen\u00e9tica de poblaciones\n3.9 Controladores wrapper para herramientas de l\u00edneas de comandos\n4 V\u00e9ase tambi\u00e9n\n5 Referencias\n6 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "El desarrollo de Biopython comenz\u00f3 en 1999 y su primera versi\u00f3n fue publicada en julio de 2000. Fue desarrollado en un periodo de tiempo y con objetivos similares a los de otras aplicaciones bioinform\u00e1ticas, como BioPerl, BioRuby y BioJava. Entre los primeros desarrolladores se cuentan Jeff Chang, Andrew Dalke and Brad Chapman, aunque m\u00e1s de 100 colaboradores han contribuido al proyecto hasta la fecha. En 2007 comienza un proyecto similar llamado PyCogent.", "subsections": []}, {"name": "Dise\u00f1o", "text": "Siempre que es posible, en las aplicaciones Biopython se usa el lenguaje de programaci\u00f3n Python, de manera que sea m\u00e1s f\u00e1cil de utilizar para los usuarios de este lenguaje. Biopython es capaz de leer y modificar la mayor\u00eda de formatos habituales para cada una de sus \u00e1reas de actividad, y su licencia es compatible con la mayor\u00eda de licencias de c\u00f3digo abierto, de manera que puede ser utilizado para crear una gran variedad de proyectos inform\u00e1ticos.[2]\u200b", "subsections": []}, {"name": "Caracter\u00edsticas y ejemplos", "text": "", "subsections": [{"name": "Secuencias", "text": "Un concepto central de Biopython es la secuencia biol\u00f3gica, que aparece representada por la clase Seq.[3]\u200b El objeto Seq de Biopython es similar a las cadenas de caracteres Python en muchos aspectos: es capaz de sostener la notaci\u00f3n de secciones de Python, puede ser concatenada con otras cadenas de caracteres y es inmutable. Adem\u00e1s, es capaz incluir diferentes m\u00e9todos espec\u00edficos para secuencias determinadas y permite elegir el alfabeto biol\u00f3gico que se quiere utilizar.\n>>>\n# Este c\u00f3digo crea una secuencia de ADN y realiza ciertas manipulaciones t\u00edpicas.\nfrom\nBio.Seq\nimport\nSeq\nBio.Alphabet\nIUPAC\ndna_sequence\n=\n(\n'AGGCTTCTCGTA'\n,\n.\nunambiguous_dna\n)\nIUPACUnambiguousDNA\n())\n[\n2\n:\n7\n]\n'GCTTC'\nreverse_complement\n()\n'TACGAGAAGCCT'\nrna_sequence\ntranscribe\n'AGGCUUCUCGUA'\nIUPACUnambiguousRNA\ntranslate\n'RLLV'\nIUPACProtein"}, {"name": "Anotaci\u00f3n de secuencias gen\u00e9ticas", "text": "La clase SeqRecord describe secuencias gen\u00e9ticas, junto con informaci\u00f3n como su nombre, descripci\u00f3n y caracter\u00edsticas bajo la forma de objetos SeqFeature.  Cada objeto SeqFeature especifica el tipo de caracter\u00edstica y su ubicaci\u00f3n. Los tipos de caracter\u00edstica posible son \"gene\" (gen), \"CDS\" (secuencia codificante), \"repeat_region\" (repetici\u00f3n de la regi\u00f3n), \"mobile element\" (elemento m\u00f3vil) u otros, y la posici\u00f3n de estas caracter\u00edsticas en la secuencia puede ser exacta o aproximativa.\n# Este c\u00f3digo carga una secuencia anotada a partir de un archivo y muestra algunos de sus contenidos.\nBio\nSeqIO\nseq_record\nread\n'pTC2.gb'\n'genbank'\nname\n'NC_019375'\ndescription\n'Providencia stuartii plasmid pTC2, complete sequence.'\nfeatures\n14\nSeqFeature\nFeatureLocation\nExactPosition\n4516\n),\n5336\nstrand\n1\ntype\n'mobile_element'\nseq\n'GGATTGAATATAACCGACGTGACTGTTACATTTAGGTGGCTAAACCCGTCAAGC...GCC'\nIUPACAmbiguousDNA"}, {"name": "Mecanismos de entrada y de salida", "text": "Biopython es capaz de leer y escribir un cierto n\u00famero de formatos comunes de secuencias gen\u00e9ticas, incluyendo FASTA, FASTQ, GenBank, Clustal, PHYLIP y NEXUS.  Cuando lee archivos, la informaci\u00f3n descriptiva del archivo puede ser utilizada para completar los miembros de las clases Biopython, tales como SeqRecord.  Esto permite la conversi\u00f3n de archivos de un formato a otro.\nLos archivos de secuencias de gran tama\u00f1o pueden exceder los l\u00edmites de recursos memoria de un ordenador, as\u00ed que Biopython ofrece varias opciones para acceder a los registros de grandes archivos. Estos pueden ser cargados directamente en la memoria de las estructuras de datos de Python, como listas o diccionarios, proporcionando un acceso r\u00e1pido a ellos aunque m\u00e1s caro en memoria. Por otra parte, los archivos pueden ser le\u00eddos a partir del disco duro si es necesario, con un rendimiento m\u00e1s lento pero con requerimientos de memoria m\u00e1s reducidos.\n# Este c\u00f3digo carga un archivo que contiene m\u00faltiples secuencias y guarda cada una de ellas en un formato diferente.\ngenomes\nparse\n'salmonella.gb'\nfor\ngenome\nin\n...\nwrite\nid\n+\n'.fasta'\n'fasta'"}, {"name": "Acceso a bases de datos en l\u00ednea", "text": "Gracias al m\u00f3dulo Bio.Entrez, los usuarios de Biopython pueden descargar datos biol\u00f3gicos a partir de las bases de datos NCBI. Cada una de las funciones proporcionadas por el motor de b\u00fasqueda Entrez est\u00e1 disponible a trav\u00e9s de las funciones de este m\u00f3dulo, incluyendo la b\u00fasqueda y descarga de registros.\n# Este c\u00f3digo descarga genomas de la base de datos de nucle\u00f3tidos del NBIC y los guarda en un archivo FASTA.\nEntrez\noutput_file\nopen\n'all_records.fasta'\n\"w\"\nemail\n'my_email@example.com'\nrecords_to_download\n'FO834906.1'\n'FO203501.1'\nrecord_id\nhandle\nefetch\ndb\n'nucleotide'\nid\nrettype\n'gb'\nseqRecord\nformat\nclose\nformat\n))"}, {"name": "Filogenia", "text": "El m\u00f3dulo Bio.Phylo proporciona herramientas para visualizar y trabajar con \u00e1rboles filogen\u00e9ticos. Es posible leer y grabar varios tipos de formato, incluyendo los formatos Newick, NEXUS y phyloXML. Las manipulaciones habituales y transversales pueden ser realizadas gracias a los objetos Tree y Clade. Por ejemplo, se puede convertir y fusionar archivos de \u00e1rbol, extraer subconjuntos de un \u00e1rbol, cambiar las ra\u00edces de un \u00e1rbol y analizar caracter\u00edsticas de las ramas tales como su longitud o su puntuaci\u00f3n.[5]\u200b\nLos \u00e1rboles enraizados pueden ser dibujados en formato ASCII o usando matplotlib (ver Figura 1), y la biblioteca Graphviz puede ser utilizada para dibujar presentaciones sin enraizar (ver Figura 2)."}, {"name": "Diagramas de genoma", "text": "El m\u00f3dulo GenomeDiagram proporciona m\u00e9todos para visualizar secuencias en Biopython.[7]\u200b  Las secuencias pueden ser dibujadas en una forma linear o circular (ver Figura 3), y varios formatos de salida son posibles, incluyendo pdfs y pngs. Los diagramas son creados haciendo pistas y luego a\u00f1adiendo las caracter\u00edsticas de las secuencias en esas pistas. Si se hace un bucle con las caracter\u00edsticas de cada secuencia y se usan sus atributos para decidir c\u00f3mo y por qu\u00e9 se a\u00f1aden a las pistas del diagrama, se puede ejercer un control preciso sobre la apariencia final del diagrama. Tambi\u00e9n se pueden dibujar enlaces entre las diferentes pistas, lo cual permite comparar m\u00faltiples secuencias en un solo diagrama."}, {"name": "Estructura macromolecular", "text": "El m\u00f3dulo Bio.PDB permite cargar estructuras moleculares a partir de archivos tipo PDB y mmCIF, y fue a\u00f1adido a Biopython en 2003.[8]\u200b  El objeto Structure es central en este m\u00f3dulo, y organiza la estructura macromolecular de manera jer\u00e1rquica: los objetos Structure objects contienen objetos Model. Estos a su vez contienen objetos Chain, que contienen objetos Residue, que contienen objetos Atom. Los \u00e1tomos y residuos desordenados tienen sus propias clases, DisorderedResidue y DisorderedAtom, que describen sus posiciones imprecisas.\nUsando Bio.PDB, los usuarios pueden navegar entre los componentes individuales de un archivo de estructura macromolecular, pudiendo examinar cada \u00e1tomo de la prote\u00edna. Tambi\u00e9n se pueden realizar los an\u00e1lisis habituales, como medir distancias o \u00e1ngulos, comparar residuos y calcular la profundidad de los residuos."}, {"name": "Gen\u00e9tica de poblaciones", "text": "El m\u00f3dulo Bio.Popgen a\u00f1ade soporte a Biopython para Genepop, un paquete inform\u00e1tico para el an\u00e1lisis estad\u00edstico de gen\u00e9tica de poblaciones.[9]\u200b Esto permite hacer an\u00e1lisis basados en el Equilibrio de Hardy-Weinberger, el desequilibrio de ligamiento y otras caracter\u00edsticas de las frecuencias al\u00e9licas de una poblaci\u00f3n.\nEste m\u00f3dulo tambi\u00e9n puede realizar simulaciones de gen\u00e9tica de poblaciones utilizando la teor\u00eda de la coalescencia junto con el programa fastimcoal2.[10]\u200b"}, {"name": "Controladores wrapper para herramientas de l\u00edneas de comandos", "text": "Muchos de los m\u00f3dulos de Biopython contienen controladores wrapper de l\u00edneas de comandos para las herramientas m\u00e1s usadas, de manera que estas herramientas puedan ser usadas en el interior de Biopython. Estos controladores incluyen BLAST, Clustal, PhyML, EMBOSS y SAMtools. Los usuarios pueden subclasificar un controlador wrapper gen\u00e9rico para a\u00f1adir soporte para cualquier otra herramienta de l\u00edneas de comandos."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Open Bioinformatics Foundation\nBioSQL\nBioPerl\nBioRuby\nBioJS\nBioJava", "subsections": []}, {"name": "Referencias", "text": "\u2191 Cock, Peter JA; Antao, Tiago; Chang, Jeffrey T; Chapman, Brad A; Cox, Cymon J; Dalke, Andrew; Friedberg, Iddo; Hamelryck, Thomas; Kauff, Frank; Wilczynski, Bartek; de Hoon, Michiel JL (20 de marzo de 2009). \u00abBiopython: freely available Python tools for computational molecular biology and bioinformatics\u00bb. Bioinformatics (en ingl\u00e9s) 25 (11): 1422-3. PMC\u00a02682512. PMID\u00a019304878. doi:10.1093/bioinformatics/btp163. Consultado el 4 de enero de 2015.\u00a0\n\u2191 a b Ver la p\u00e1gina web de Biopython para buscar m\u00e1s art\u00edculos acad\u00e9micos que describen Biopython, y una lista de m\u00e1s de cien publicaciones que emplean o citan Biopython.\n\u2191 Chang, Jeff; Chapman, Brad; Friedberg, Iddo; Hamelryck, Thomas; de Hoon, Michiel; Cock, Peter; Antao, Tiago; Talevich, Eric et al. (29 de mayo de 2014). \u00abBiopython Tutorial and Cookbook\u00bb. Consultado el 4 de enero de 2015.\u00a0 Se sugiere usar |n\u00famero-autores= (ayuda)\n\u2191 Zmasek, Christian M; Zhang, Qing; Ye, Yuzhen; Godzik, Adam (24 de octubre de 2007). \u00abSurprising complexity of the ancestral apoptosis network\u00bb. Genome Biology (en ingl\u00e9s) 8 (10). doi:10.1186/gb-2007-8-10-r226. Consultado el 9 de septiembre de 2014.\u00a0\n\u2191 Talevich, Eric; Invergo, Brandon M; Cock, Peter JA; Chapman, Brad A (21 de agosto de 2012). \u00abBio.Phylo: A unified toolkit for processing, analyzing and visualizing phylogenetic trees in Biopython\u00bb. BMC Bioinformatics (en ingl\u00e9s) 13 (209). doi:10.1186/1471-2105-13-209. Consultado el 9 de septiembre de 2014.\u00a0\n\u2191 NCBI fechaacceso=10 de septiembre de 2014 (ed.). \u00abKlebsiella pneumoniae strain KPS77 plasmid pKPS77, complete sequence\u00bb (en ingl\u00e9s).\u00a0\n\u2191 Pritchard, Leighton; White, Jennifer A; Birch, Paul RJ; Toth, Ian K (marzo de 2006). \u00abGenomeDiagram: a python package for the visualization of large-scale genomic data\u00bb. Bioinformatics (en ingl\u00e9s) 22 (5): 616-617. doi:10.1093/bioinformatics/btk021.\u00a0\n\u2191 Hamelryck, Thomas; Manderick, Bernard (10 de mayo de 2003). \u00abPDB file parser and structure class implemented in Python\u00bb. Bioinformatics (en ingl\u00e9s) 19 (17). doi:10.1093/bioinformatics/btg299. Consultado el 10 de septiembre de 2014.\u00a0\n\u2191 Rousset, Fran\u00e7ois (enero de 2008). \u00abGENEPOP'007: a complete re-implementation of the GENEPOP software for Windows and Linux\u00bb. Molecular Ecology Resources (en ingl\u00e9s) 8. doi:10.1111/j.1471-8286.2007.01931.x. Consultado el 11 de septiembre de 2014.\u00a0\n\u2191 Excoffier, Laurent; Foll, Matthieu (1 de marzo de 2011). \u00abfastsimcoal: a continuous-time coalescent simulator of genomic diversity under arbitrarily complex evolutionary scenarios\u00bb. Bioinformatics (en ingl\u00e9s) 27 (9). doi:10.1093/bioinformatics/btr124. Consultado el 11 de septiembre de 2014.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "P\u00e1gina web oficial.\nTutorial y manual de Biopython (en ingl\u00e9s) (PDF)\nC\u00f3digo fuente de Biopython en GitHub.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Bloque_de_c%C3%B3digo", "title": "Bloque de c\u00f3digo", "summary": "El bloque de c\u00f3digo es un usuario o secci\u00f3n de c\u00f3digo con una o m\u00e1s declaraciones y sentencias. Un lenguaje de programaci\u00f3n que permite bloques, incluyendo bloques anidados dentro de otros bloques es llamado un lenguaje de programaci\u00f3n estructurado por bloques.\nIdeas de la estructura del bloque se desarrollaron en la d\u00e9cada de los a\u00f1os 1950, durante el desarrollo de los primeros autocodes y fueron formalizados en los informes de Algol 58 y Algol 60. Algol 58 introdujo la noci\u00f3n de la \"sentencia compuesta\", que estaba relacionada \u00fanicamente con control de flujo.[1]\u200b El posterior informe revisado que describe la sintaxis y la sem\u00e1ntica de Algol 60 introdujo la noci\u00f3n de un bloque, consistiendo en \"una secuencia de sentencias encerrada entre begin y end...\" en la que \"cada declaraci\u00f3n aparece en un bloque de esta manera y es v\u00e1lida solo para ese bloque\".[2]\u200b\nLa funci\u00f3n de los bloques de programaci\u00f3n es permitir que grupos sentencias sean tratados como si fueran una sola sentencia, y restringir el \u00e1mbito l\u00e9xico de las variables, los procedimientos y funciones declaradas en un bloque para que no entre en conflicto con variables con el mismo nombre utilizadas para diferentes prop\u00f3sitos en otras partes de un programa.\nLa noci\u00f3n de bloques es introducida por diferentes sintaxis en diferentes lenguajes, pero hay dos grandes familias: la familia del ALGOL en que los bloques est\u00e1n delimitados por las palabras clave begin y end, y la familia de C en la que los bloques est\u00e1n delimitados por llaves { y }. Algunas otras t\u00e9cnicas utilizadas son el uso de sangr\u00eda, y s-expression con una palabra clave sint\u00e1ctica como lambda o let (como en la familia del Lisp).\nEn un lenguaje de programaci\u00f3n estructurado en bloque, los nombres de las variables y otros objetos, como los procedimientos que son declarados en bloques externos son visibles dentro de otros bloques internos, a menos que sean sombreado por un objeto del mismo nombre.\nAlgunos lenguajes que soportan bloques con declaraciones de variables no soportan completamente todas las declaraciones; por ejemplo muchos lenguajes derivados de C no permitan la definici\u00f3n de una funci\u00f3n dentro de un bloque. Y a diferencia de su antecesor Algol, Pascal no soporta el uso de bloques con sus propias declaraciones dentro del begin y end de un bloque existente, s\u00f3lo sentencias compuestas permitiendo una secuencia de declaraciones agrupadas en if, while, repeat y otras sentencias de control.", "sections": [{"name": "\u00cdndice", "text": "1 Origen\n2 Sintaxis\n3 Uso\n4 Par\u00e1metros\n5 Uso\n6 Par\u00e1metros\n7 Beneficios\n8 Consecuencias\n9 Referencias\n10 Enlaces externos", "subsections": []}, {"name": "Origen", "text": "Con la aparici\u00f3n de miniprocesadores m\u00e1s potentes, la programaci\u00f3n planificada pierde sus fundamentos en favor de la programaci\u00f3n de sistemas dirigidos por datos. Esto marca el final del uso de la programaci\u00f3n monol\u00edtica gobernada por Assembler, C, Pascal y fundamentalmente COBOL. \nCon la liberaci\u00f3n de su Clipper versi\u00f3n 5.0, (en 1990) Nantucket proporciona un nuevo tipo de datos al cual llam\u00f3 CodeBlock.\nEste nace de la necesidad de suprimir el uso de macroinstrucciones o macrosubstituciones.\nEstas macroinstrucciones o macrosubstituciones tambi\u00e9n se abreviaron para pasar a llamarse simplemente \"macros\".\nEn la actualidad existen otros lenguajes de programaci\u00f3n que encontraron \u00fatiles la definici\u00f3n y conceptos subyacentes en el t\u00e9rmino CodeBlock.", "subsections": []}, {"name": "Sintaxis", "text": "", "subsections": []}, {"name": "Uso", "text": "Sea un arreglo con datos, el recorrido iterativo del mismo se produce con la instrucci\u00f3n AEVAL(), la cual posee la sintaxis:", "subsections": []}, {"name": "Par\u00e1metros", "text": "<aArreglo>\n<bBloqueDeCodigo>\n<nInicio>\n<nCantidad>\n<lAsignar>\nSea una porci\u00f3n de c\u00f3digo ejecutable agrupado en una rutina llamada \"Procedimiento()\".\nEn el ejemplo dado, el ciclo WHILE...ENDDO ser\u00e1 cerrado mientras el usuario no realice elecci\u00f3n alguna.\nSi el usuario presiona la tecla ESC, nElecci\u00f3n ser\u00e1 asignado con un 0 y el ciclo se romper\u00e1.\nCuando el usuario elija alguno de los elementos del men\u00fa entonces nEleccion ser\u00e1 distinto de cero pero tendr\u00e1 un valor entre 1 y 4.\nEn ese caso ser\u00e1 evaluada positivamente la comparaci\u00f3n nEleccion > 0 y ser\u00e1 evaluado el bloque de c\u00f3digo almacenado en el arreglo aAcciones.\nPr\u00e9stese especial atenci\u00f3n al \u00faltimo elemento de aAcciones, el cual implica una asignaci\u00f3n en tiempo de ejecuci\u00f3n.\nEsa asignaci\u00f3n produce la ruptura del ciclo.", "subsections": []}, {"name": "Uso", "text": "", "subsections": []}, {"name": "Par\u00e1metros", "text": "<ListaDeExpresiones,...>", "subsections": []}, {"name": "Beneficios", "text": "Los Bloques de C\u00f3digo son el intento de substituto de las macroinstrucciones de Clipper.\nLas macros tienen fundamento de existencia en la necesidad de crear variables din\u00e1micamente, construir expresiones regulares y ejecutarlas en tiempo de ejecuci\u00f3n.", "subsections": []}, {"name": "Consecuencias", "text": "Esa posibilidad, sobreexplotada, ocasiona una gran carga en los mantenimientos de los sistemas desarrollados con estas macros debido a que ocultan las fallas en tiempo de desarrollo y detonan en tiempo de ejecuci\u00f3n, en el ambiente del usuario final.\nGeneralmente las macros son preferidas para el desarrollo de aplicaciones con escasa o nula planificaci\u00f3n.", "subsections": []}, {"name": "Referencias", "text": "\u2191 Perlis, A.J.; Samelson, K. (1958). \u00abPreliminary report: international algebraic language\u00bb. Communications of the ACM 1 (12): 8-22. doi:10.1145/377924.594925.\u00a0\n\u2191 Backus, J. W.; Bauer, F. L.; Green, J.; Katz, C.; McCarthy, J.; Perlis, A. J.; Rutishauser, H.; Samelson, K.; Vauquois, B.; Wegstein, J. H.; van Wijngaarden, A.; Woodger, M. (mayo de 1960).  Naur, Peter, ed. Report on the Algorithmic Language ALGOL 60. Copenhagen. ISSN\u00a00001-0782. doi:10.1145/367236.367262. Consultado el 27 de octubre de 2009.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Definici\u00f3n de CodeBlocks\nCategor\u00edas de CodeBlocks", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Boo_(lenguaje_de_programaci%C3%B3n)", "title": "Boo (lenguaje de programaci\u00f3n)", "summary": "Boo es un lenguaje de programaci\u00f3n orientado a objetos, de tipos est\u00e1ticos para la Common Language Infrastructure con una sintaxis inspirada en  Python y un \u00e9nfasis en la extensibilidad del lenguaje y su compilador. Sus caracter\u00edsticas incluyen la inferencia de tipos, los generadores, multim\u00e9todos, duck typing opcional, macros, clausuras, currificaci\u00f3n y funciones de primera clase.\nBoo es software de c\u00f3digo abierto; tiene una licencia tipo MIT/BSD.\nBoo se integra sin fisuras con Microsoft.NET y Mono.", "sections": [{"name": "\u00cdndice", "text": "1 Ejemplos de c\u00f3digo\n1.1 Hola mundo\n1.2 Funci\u00f3n generadora de la Sucesi\u00f3n de Fibonacci\n1.3 Ejemplo simple de Windows Forms con clases, cierres y eventos\n1.4 Ejemplo simple de Gtk#\n1.5 Patr\u00f3n de dise\u00f1o as\u00edncrono con un cierre\n1.6 Currificaci\u00f3n\n2 V\u00e9ase tambi\u00e9n\n3 Enlaces externos", "subsections": []}, {"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": [{"name": "Hola mundo", "text": "Art\u00edculo principal:"}, {"name": "Funci\u00f3n generadora de la Sucesi\u00f3n de Fibonacci", "text": "Art\u00edculos principales:\n y "}, {"name": "Ejemplo simple de Windows Forms con clases, cierres y eventos", "text": ", "}, {"name": "Ejemplo simple de Gtk#", "text": ""}, {"name": "Patr\u00f3n de dise\u00f1o as\u00edncrono con un cierre", "text": ""}, {"name": "Currificaci\u00f3n", "text": "plusX es una funci\u00f3n que toma un entero a, que devuelve otra funci\u00f3n que toma un entero b y devuelve a+b.\""}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "IronPython - una implementaci\u00f3n de Python sobre CLI, an\u00e1loga a Jython.", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web de Boo\nRepositorio principal\nAntiguo sitio web de Boo\nBoo Google discussion group\nEjemplos de boo", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Bucle_while", "title": "Bucle while", "summary": "El bucle while o bucle mientras es un ciclo repetitivo basado en los resultados de una expresi\u00f3n l\u00f3gica; se encuentra en la mayor\u00eda de los lenguajes de programaci\u00f3n estructurados. El prop\u00f3sito es repetir un bloque de c\u00f3digo mientras una condici\u00f3n se mantenga verdadera.[1]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Sintaxis\n2 Condici\u00f3n\n2.1 Sentencias comparativas\n2.2 Particularidades de lenguajes\n3 Ejemplos (usando sintaxis de C++)\n4 V\u00e9ase tambi\u00e9n\n5 Referencias", "subsections": []}, {"name": "Sintaxis", "text": "La sintaxis en pseudoc\u00f3digo es la siguiente: \nm\ni\ne\nn\nt\nr\na\ns\nc\no\nn\nd\ni\nc\ni\no\n\u00b4\nn\nh\na\nc\ne\nr\n{\\displaystyle {\\color {Sepia}{\\mathit {mientras}}}\\;{\\color {OliveGreen}{\\mathit {condici{\\acute {o}}n}}}\\;{\\color {Sepia}{\\mathit {hacer}}}}\ni\nn\ns\nt\nr\nu\nc\nc\ni\no\nn\ne\ns\n{\\displaystyle {\\color {BlueViolet}{\\mathit {instrucciones}}}}\nf\ni\nn\nm\ni\ne\nn\nt\nr\na\ns\n{\\displaystyle {\\color {Sepia}{\\mathit {fin\\;mientras}}}}", "subsections": []}, {"name": "Condici\u00f3n", "text": "La condici\u00f3n ha de ser una sentencia que devuelva un valor booleano, y esta puede ser el valor booleano s\u00ed, verdadero (true) si la condici\u00f3n se cumple, o falso si esta no se cumple (false). Tambi\u00e9n puede contener el nombre de una variable booleana, y el valor de la expresi\u00f3n depender\u00e1 de su contenido. Se debe tener en cuenta que adem\u00e1s de las variables tambi\u00e9n puede haber llamadas a funciones que devuelvan un valor.", "subsections": [{"name": "Sentencias comparativas", "text": "La forma m\u00e1s obvia tal vez, y la m\u00e1s usada sin duda, son las sentencias comparativas, que usan los operandos igual, diferente, menor o igual, mayor o igual, menor y mayor. En el caso del lenguaje C, se utilizan los siguientes s\u00edmbolos para representar las comparaciones anteriores: ==,\u00a0!=, <=, >=, <, >."}, {"name": "Particularidades de lenguajes", "text": "En algunos lenguajes, se pueden utilizar variables no booleanas en la comparaci\u00f3n. Por ejemplo, si la variable vale 0 ser\u00e1 como si la condici\u00f3n no se cumpliera, y siempre que sea diferente de 0, se considerar\u00e1 que la condici\u00f3n se cumple"}]}, {"name": "Ejemplos (usando sintaxis de C++)", "text": "En el siguiente c\u00f3digo se usa un bucle que no se detendr\u00e1, ya que su condici\u00f3n es verdadera y no se modifica.\n#include\n \n<iostream>\nusing\nnamespace\nstd\n;\nint\nmain\n()\n{\n    \nwhile\n(\ntrue\n)\n        \ncout\n<<\n\"Mostrando bucle infinito.\"\nendl\n}\nEn este ejemplo el programa va a leer la entrada continuamente, mientras su valor no sea igual a 0.\n\t\nnumero\n=\n1\n!=\n0\n\t\t\n\"\n\\n\nIngresa un numero del 1 al 3, o 0 para salir: \"\ncin\n>>\nswitch\n\t\t    \ncase\n:\n\t\t        \n\"Saliendo del programa...\"\nbreak\n    \t\t\n    \t\t    \n\"Numero 1 ingresado.\"\n2\n\"Numero 2 ingresado.\"\n3\n\"Numero 3 ingresado.\"\ndefault\n\"No has ingresado un numero valido.\"\nreturn", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Bucle (programaci\u00f3n)\nBucle for\nBucle repetir\nEstructuras de control\nProgramaci\u00f3n estructurada", "subsections": []}, {"name": "Referencias", "text": "\u2191 Joyanes Aguilar, Luis (2013). Fundamentos generales de programaci\u00f3n. Mc Graw Hill. ISBN\u00a0978-607-15-0818-8.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/C%2B%2B", "title": "C++", "summary": "[\n]\nC++ es un lenguaje de programaci\u00f3n dise\u00f1ado en 1979 por Bjarne Stroustrup. La intenci\u00f3n de su creaci\u00f3n fue extender al lenguaje de programaci\u00f3n C y a\u00f1adir mecanismos que permiten la manipulaci\u00f3n de objetos. En ese sentido, desde el punto de vista de los lenguajes orientados a objetos, C++ es un lenguaje h\u00edbrido.\nPosteriormente se a\u00f1adieron facilidades de programaci\u00f3n gen\u00e9rica, que se sumaron a los paradigmas de programaci\u00f3n estructurada y programaci\u00f3n orientada a objetos. Por esto se suele decir que el C++ es un lenguaje de programaci\u00f3n multiparadigma.\nActualmente existe un est\u00e1ndar, denominado ISO C++, al que se han adherido la mayor\u00eda de los fabricantes de compiladores m\u00e1s modernos. Existen tambi\u00e9n algunos int\u00e9rpretes, tales como ROOT.\nEl nombre \"C++\" fue propuesto por Rick Mascitti en el a\u00f1o 1983, cuando el lenguaje fue utilizado por primera vez fuera de un laboratorio cient\u00edfico. Antes se hab\u00eda usado el nombre \"C con clases\". En C++, la expresi\u00f3n \"C++\" significa \"incremento de C\" y se refiere a que C++ es una extensi\u00f3n de C.", "sections": [{"name": "\u00cdndice", "text": "1 Caracter\u00edsticas de C++\n2 Ejemplos\n3 Tipos de datos\n3.1 Tama\u00f1os asociados\n3.2 Wchar_t\n3.3 La palabra reservada \"void\"\n3.4 La palabra \"NULL\"\n4 Principios\n5 El concepto de clase\n5.1 Constructores\n5.2 Destructores\n5.3 Funciones miembro\n5.4 Plantillas\n5.4.1 Especializaci\u00f3n\n5.5 Clases abstractas\n5.6 Espacios de nombres\n5.7 Herencia\n5.7.1 Herencia simple\n5.7.2 Herencia m\u00faltiple\n5.8 Sobrecarga de operadores\n6 Standard Template Library (STL)\n7 Biblioteca de entrada y salida\n7.1 Fstreams\n7.2 Sstreams\n7.3 Contenedores\n7.4 Iteradores\n7.5 Algoritmos\n8 C++11\n9 Actualidad y futuro\n10 Diferencias de tipos respecto a C\n11 Compiladores\n12 Entornos de desarrollo\n12.1 Bajo Microsoft Windows\n12.2 Bajo MacOS\n12.3 Bajo DOS\n12.4 Bajo GNU/Linux\n12.5 Software Creados y Programados con C++\n13 Cr\u00edticas\n14 V\u00e9ase tambi\u00e9n\n15 Referencias\n15.1 Bibliograf\u00eda\n16 Enlaces externos", "subsections": []}, {"name": "Caracter\u00edsticas de C++", "text": "Su sintaxis es heredada del lenguaje C.\nPrograma orientado a objetos (POO).\nPermite la agrupaci\u00f3n de instrucciones.\nEs port\u00e1til y tiene un gran n\u00famero de compiladores en diferentes plataformas y sistemas operativos.\nPermite la separaci\u00f3n de un programa en m\u00f3dulos que admiten compilaci\u00f3n independiente.\nEs un lenguaje de alto nivel.", "subsections": []}, {"name": "Ejemplos", "text": "A continuaci\u00f3n se cita un programa de ejemplo Hola mundo escrito en C++:\n/* Esta cabecera permite usar los objetos que encapsulan los descriptores stdout\ny stdin: cout(<<) y cin(>>)*/\n#include\n \n<iostream>\nusing\nnamespace\nstd\n;\nint\nmain\n()\n{\n    \ncout\n<<\n\"Hola mundo\"\nendl\nreturn\n0\n}\nAl usar la directiva #include se le dice al compilador que busque e interprete todos los elementos definidos en el archivo que acompa\u00f1a la directiva (en este caso, iostream). Para evitar sobrescribir los elementos ya definidos al ponerles igual nombre, se crearon los espacios de nombres o namespace del singular en ingl\u00e9s. En este caso hay un espacio de nombres llamado std, que es donde se incluyen las definiciones de todas las funciones y clases que conforman la biblioteca est\u00e1ndar de C++. Al incluir la sentencia using namespace std le estamos diciendo al compilador que usaremos el espacio de nombres std por lo que no tendremos que incluirlo cuando usemos elementos de este espacio de nombres, como pueden ser los objetos cout y cin, que representan el flujo de salida est\u00e1ndar (t\u00edpicamente la pantalla o una ventana de texto) y el flujo de entrada est\u00e1ndar (t\u00edpicamente el teclado).\nLa definici\u00f3n de funciones es igual que en C, salvo por la caracter\u00edstica de que si main no va a recoger argumentos, no tenemos por qu\u00e9 pon\u00e9rselos, a diferencia de C, donde hab\u00eda que ponerlos expl\u00edcitamente, aunque no se fueran a usar. Queda solo comentar que el s\u00edmbolo << se conoce como operador de inserci\u00f3n, y grosso modo est\u00e1 enviando a cout lo que queremos mostrar por pantalla para que lo pinte, en este caso la cadena \"Hola mundo\". El mismo operador << se puede usar varias veces en la misma sentencia, de forma que gracias a esta caracter\u00edstica podremos concatenar el objeto endl al final, cuyo resultado ser\u00e1 imprimir un retorno de l\u00ednea.", "subsections": []}, {"name": "Tipos de datos", "text": "C++ tiene los siguientes tipos fundamentales:\nCaracteres: char (tambi\u00e9n es un entero), wchar_t\nEnteros: short, int, long, long long\nN\u00fameros en coma flotante: float, double, long double\nBooleanos: bool\nVac\u00edo: void\nEl modificador unsigned se puede aplicar a enteros para obtener n\u00fameros sin signo (por omisi\u00f3n los enteros contienen signo), con lo que se consigue un rango mayor de n\u00fameros naturales.", "subsections": [{"name": "Tama\u00f1os asociados", "text": "Seg\u00fan la m\u00e1quina y el compilador que se utilice los tipos primitivos pueden ocupar un determinado tama\u00f1o en memoria. La siguiente lista ilustra el n\u00famero de bits que ocupan los distintos tipos primitivos en la arquitectura x86.\nOtras arquitecturas pueden requerir distintos tama\u00f1os de tipos de datos primitivos. C++ no dice nada acerca de cu\u00e1l es el n\u00famero de bits en un byte, ni del tama\u00f1o de estos tipos; m\u00e1s bien, ofrece solamente las siguientes \"garant\u00edas de tipos\":\nDe acuerdo al est\u00e1ndar C99, un tipo char debe ocupar exactamente un byte compuesto de un m\u00ednimo de 8 bits independientemente de la arquitectura de la m\u00e1quina.\nEl tama\u00f1o reconocido de char es de 1. Es decir, sizeof(char) siempre devuelve 1.\nUn tipo short tiene al menos el mismo tama\u00f1o que un tipo char.\nUn tipo long tiene al menos el doble tama\u00f1o en bytes que un tipo short.\nUn tipo int tiene un tama\u00f1o entre el de short y el de long, ambos incluidos, preferentemente el tama\u00f1o de un apuntador de memoria de la m\u00e1quina. Su valor m\u00e1ximo es 2147483647, usando 32 bits.\nUn tipo unsigned tiene el mismo tama\u00f1o que su versi\u00f3n signed."}, {"name": "Wchar_t", "text": "Para la versi\u00f3n del est\u00e1ndar que se public\u00f3 en 1998, se decidi\u00f3 a\u00f1adir el tipo de dato wchar_t, que permite el uso de caracteres UNICODE, a diferencia del tradicional char, que contempla simplemente al c\u00f3digo de caracteres ASCII extendido. A su vez, se ha definido para la mayor\u00eda de las funciones y clases, tanto de C como de C++, una versi\u00f3n para trabajar con wchar_t, donde usualmente se prefija el car\u00e1cter w al nombre de la funci\u00f3n (en ocasiones el car\u00e1cter es un infijo). Por ejemplo:\nstrcpy - wstrcpy\nstd::string - std::wstring\nstd::cout - std::wcout\nCabe resaltar que en C se define wchar_t como:\ntypedef\nunsigned\nshort\nwchar_t\nMientras que en C++ es en s\u00ed mismo un tipo de dato."}, {"name": "La palabra reservada \"void\"", "text": "La palabra reservada void define en C++ el concepto de no existencia o no atribuci\u00f3n de un tipo en una variable o declaraci\u00f3n. Es decir, una funci\u00f3n declarada como void no devolver\u00e1 ning\u00fan valor. Esta palabra reservada tambi\u00e9n puede usarse para indicar que una funci\u00f3n no recibe par\u00e1metros, como en la siguiente declaraci\u00f3n:\nfuncion\n(\nvoid\n);\nAunque la tendencia actual es la de no colocar la palabra \"void\".\nAdem\u00e1s se utiliza para determinar que una funci\u00f3n no retorna un valor, como en:\nparametro\nCabe destacar que void no es un tipo. Una funci\u00f3n como la declarada anteriormente no puede retornar un valor por medio de return: la palabra clave va sola. No es posible una declaraci\u00f3n del tipo:\nt\n//Est\u00e1 mal\nEn este sentido, void se comporta de forma ligeramente diferente a como lo hace en C, especialmente en cuanto a su significado en declaraciones y prototipos de funciones.\nSin embargo, la forma especial void * indica que el tipo de datos es un puntero. Por ejemplo:\n*\nmemoria\nIndica que memoria es un puntero a alguna parte, donde se guarda informaci\u00f3n de alg\u00fan tipo. El programador es responsable de definir estos \"alg\u00fan\", eliminando toda ambig\u00fcedad. Una ventaja de la declaraci\u00f3n \"void *\" es que puede representar a la vez varios tipos de datos, dependiendo de la operaci\u00f3n de cast escogida. La memoria que hemos apuntado en alguna parte, en el ejemplo anterior, bien podr\u00eda almacenar un entero, un flotante, una cadena de texto o un programa, o combinaciones de estos. Es responsabilidad del programador recordar qu\u00e9 tipo de datos hay y garantizar el acceso adecuado."}, {"name": "La palabra \"NULL\"", "text": "Adem\u00e1s de los valores que pueden tomar los tipos anteriormente mencionados, existe un valor llamado NULL, sea el caso num\u00e9rico para los enteros, car\u00e1cter para el tipo char, cadena de texto para el tipo string, etc. El valor NULL, expresa, por lo regular, la representaci\u00f3n de una Macro, asignada al valor \"0\".\nTenemos entonces que:\npuntero\n=\nNULL\nentero\nbool\nboleana\nchar\ncaracter\nEl valor de las variables anteriores nos dar\u00eda 0. A diferencia de la variable \"caracter\", que nos dar\u00eda el equivalente a NULL, '\\0', para caracteres.\nPara evitar ambig\u00fcedad en funciones sobrecargadas, puede emplearse la palabra clave nullptr. Esta palabra clave siempre representa un puntero. Por ejemplo:\nf\na\nfoo\nargc\n,\n**\nargv\n)\n        \nf\n// Se ejecuta f(int a)\nnullptr\n// Se ejecuta f(foo *a)"}]}, {"name": "Principios", "text": "Todo programa en C++ debe tener la funci\u00f3n principal main() (a no ser que se especifique en tiempo de compilaci\u00f3n otro punto de entrada, que en realidad es la funci\u00f3n que tiene el main())\n{}\nLa funci\u00f3n principal del c\u00f3digo fuente main debe tener uno de los siguientes prototipos:\nint main()\nint main(int argc, char** argv)\nAunque no es est\u00e1ndar algunas implementaciones permiten\nint main(int argc, char** argv, char** env)\nLa primera es la forma por omisi\u00f3n de un programa que no recibe par\u00e1metros ni argumentos. La segunda forma tiene dos par\u00e1metros: argc, un n\u00famero que describe el n\u00famero de argumentos del programa (incluyendo el nombre del programa mismo), y argv, un puntero a un array de punteros, de argc elementos, donde el elemento argv[i] representa el i-\u00e9simo argumento entregado al programa. En el tercer caso se a\u00f1ade la posibilidad de poder acceder a las variables de entorno de ejecuci\u00f3n de la misma forma que se accede a los argumentos del programa, pero reflejados sobre la variable env.\nEl tipo de retorno de main es un valor entero int. Al finalizar la funci\u00f3n main, debe incluirse el valor de retorno (por ejemplo, return 0;, aunque el est\u00e1ndar prev\u00e9 solamente dos posibles valores de retorno: EXIT_SUCCESS y EXIT_FAILURE, definidas en el archivo cstdlib), o salir por medio de la funci\u00f3n exit. Alternativamente puede dejarse en blanco, en cuyo caso el compilador es responsable de agregar la salida adecuada.", "subsections": []}, {"name": "El concepto de clase", "text": "V\u00e9ase tambi\u00e9n:\nLos objetos en C++ son abstra\u00eddos mediante una clase. Seg\u00fan el paradigma de la programaci\u00f3n orientada a objetos un objeto consta de:\nIdentidad, que lo diferencia de otros objetos (Nombre que llevar\u00e1 la clase a la que pertenece dicho objeto).\nM\u00e9todos o funciones miembro.\nAtributos o variables miembro.\nUn ejemplo de clase que podemos tomar es la clase perro. Cada perro comparte unas caracter\u00edsticas (atributos). Su n\u00famero de patas, el color de su pelaje o su tama\u00f1o son algunos de sus atributos. Las funciones que lo hagan ladrar, cambiar su comportamiento... esas son las funciones de la clase.\nEste es otro ejemplo de una clase:\nclass\nPunto\n//por omisi\u00f3n, los miembros son 'private' para que solo se puedan modificar desde la propia clase.\nprivate\n:\n// Variable miembro privada\nid\nprotected\n// Variables miembro protegidas\nx\ny\npublic\n// Constructor\nPunto\n();\n// Destructor\n~\n// Funciones miembro o m\u00e9todos\nObtenerX\nObtenerY\n};", "subsections": [{"name": "Constructores", "text": "Son unos m\u00e9todos especiales que se ejecutan autom\u00e1ticamente al crear un objeto de la clase. En su declaraci\u00f3n no se especifica el tipo de dato que devuelven, y poseen el mismo nombre que la clase a la que pertenecen.\nAl igual que otros m\u00e9todos, puede haber varios constructores sobrecargados, aunque no pueden existir constructores virtuales.\nComo caracter\u00edstica especial a la hora de implementar un constructor, justo despu\u00e9s de la declaraci\u00f3n de los par\u00e1metros, se encuentra lo que se llama \"lista de inicializadores\". Su objetivo es llamar a los constructores de los atributos que conforman el objeto a construir.\nCabe destacar que no es necesario declarar un constructor al igual que un destructor, pues el compilador lo puede hacer, aunque no es la mejor forma de programar.\nTomando el ejemplo de la Clase Punto, si deseamos que cada vez que se cree un objeto de esta\nclase las coordenadas del punto sean igual a cero podemos agregar un constructor como se muestra\na continuaci\u00f3n:\n  \nfloat\n// Coordenadas del punto\n                \n),\n){\n// Inicializamos las variables \"x\" e \"y\"\n// Main para demostrar el funcionamiento de la clase\n#\ninclude\n // Esto nos permite utilizar \"cout\"\nMiPunto\n         \n// creamos un elemento de la clase Punto llamado MiPunto\n\"Coordenada X: \"\n.\n// mostramos el valor acumulado en la variable x\n\"Coordenada Y: \"\n// mostramos el valor acumulado en la variable y\ngetchar\n// le indicamos al programa que espere al buffer de entrada (detenerse)\nSi compilamos y ejecutamos el anterior programa, obtenemos una salida que debe ser similar a la siguiente:\nCoordenada X: 0\nCoordenada Y: 0\nExisten varios tipos de constructores en C++:\nConstructor predeterminado. Es el constructor que no recibe ning\u00fan par\u00e1metro en la funci\u00f3n. Si no se definiera ning\u00fan constructor, el sistema proporcionar\u00eda uno predeterminado. Es necesario para la construcci\u00f3n de estructuras y contenedores de la STL.\nConstructor de copia. Es un constructor que recibe un objeto de la misma clase, y realiza una copia de los atributos del mismo. Al igual que el predeterminado, si no se define, el sistema proporciona uno.\nConstructor de conversi\u00f3n. Este constructor, recibe como \u00fanico par\u00e1metro, un objeto o variable de otro tipo distinto al suyo propio. Es decir, convierte un objeto de un tipo determinado a otro objeto del tipo que estamos generando.\nConstructores + Memoria heap\nUn objeto creado de la forma que se vio hasta ahora, es un objeto que vive dentro del scope(las llaves { }) en el que fue creado. Para que un objeto pueda seguir viviendo cuando se saque del scope en el que se cre\u00f3, se lo debe crear en memoria heap. Para esto, se utiliza el operador new, el cual asigna memoria para almacenar al objeto creado, y adem\u00e1s llama a su constructor(por lo que se le pueden enviar par\u00e1metros). El operador new se utiliza de la siguiente manera:\nunPunto\nnew\n//esto llama al constructor que se describe m\u00e1s arriba\ndelete\n               \n//no hay que olvidarse de liberar la memoria ocupada por el objeto(ver la secci\u00f3n destructores, m\u00e1s abajo)\nAdem\u00e1s, con el operador new[] se pueden crear arrays (colecciones o listas ordenadas) de tama\u00f1o din\u00e1mico:\nasignar\ncuantos\n[\n];\n//asigna un array de 'cuantos' puntos(se llama el constructor que se muestra m\u00e1s arriba), y se retorna."}, {"name": "Destructores", "text": "Los destructores son funciones miembro especiales llamadas autom\u00e1ticamente en la ejecuci\u00f3n del programa, y por tanto no tienen por qu\u00e9 ser llamadas expl\u00edcitamente por el programador. Sus principales cometidos son:\nLiberar los recursos computacionales que el objeto de dicha clase haya adquirido en tiempo de ejecuci\u00f3n al expirar este.\nQuitar los v\u00ednculos que pudiesen tener otros recursos u objetos con este.\nLos destructores son invocados autom\u00e1ticamente al alcanzar el flujo del programa el fin del \u00e1mbito en el que est\u00e1 declarado el objeto. El \u00fanico caso en el que se debe invocar expl\u00edcitamente al destructor de un objeto es cuando este fue creado mediante el operador new, es decir, que este vive en memoria heap, y no en la pila de ejecuci\u00f3n del programa. La invocaci\u00f3n del destructor de un objeto que vive en heap se realiza a trav\u00e9s del operador delete o delete[] para arrays. Ejemplo:\nunEntero\n12\n//asignamos un entero en memoria heap con el valor 12\narrayDeEnteros\n25\n//asignamos memoria para 25 enteros(no est\u00e1n inicializados)\n                     \n//liberamos la memoria que ocupaba unEntero\n[]\n           \n//liberamos la memoria ocupada por arrayDeEnteros\nSi no se utilizara el operador delete y delete[] en ese caso, la memoria ocupada por unEntero y arrayDeEnteros respectivamente, quedar\u00eda ocupada sin sentido. Cuando una porci\u00f3n de memoria queda ocupada por una variable que ya no se utiliza, y no hay forma de acceder a ella, se denomina un 'memory leak'. En aplicaciones grandes, si ocurren muchos memory leaks, el programa puede terminar ocupando bastante m\u00e1s memoria RAM de la que deber\u00eda, lo que no es para nada conveniente. Es por esto, que el manejo de memoria heap debe usarse conscientemente.\nExisten dos tipos de destructores pueden ser p\u00fablicos o privados, seg\u00fan si se declaran:\nSi es p\u00fablico se llama desde cualquier parte del programa para destruir el objeto.\nSi es privado no se permite la destrucci\u00f3n del objeto por el usuario.\nEl uso de destructores es clave en el concepto de Adquirir Recursos es Inicializar."}, {"name": "Funciones miembro", "text": "Funci\u00f3n miembro es aquella que est\u00e1 declarada en \u00e1mbito de clase. Son similares a las funciones habituales, con la salvedad de que el compilador realizara el proceso de Decoraci\u00f3n de nombre (Name Mangling en ingl\u00e9s): Cambiar\u00e1 el nombre de la funci\u00f3n a\u00f1adiendo un identificador de la clase en la que est\u00e1 declarada, pudiendo incluir caracteres especiales o identificadores num\u00e9ricos. Este proceso es invisible al programador. Adem\u00e1s, las funciones miembro reciben impl\u00edcitamente un par\u00e1metro adicional: El puntero this, que referencia al objeto que ejecuta la funci\u00f3n.\nLas funciones miembro se invocan accediendo primero al objeto al cual refieren, con la sintaxis: myobject.mymemberfunction(), esto es un claro ejemplo de una funci\u00f3n miembro.\nCaso especial es el de las funciones miembro est\u00e1ticas. A pesar de que son declaradas dentro de la clase, con el uso de la palabra clave static no recibir\u00e1n el puntero this. Gracias a esto no es necesario crear ninguna instancia de la clase para llamar a esta funci\u00f3n, sin embargo, solo se podr\u00e1 acceder a los miembros est\u00e1ticos de la clase dado que estos no est\u00e1n asociados al objeto sino al tipo. La sintaxis para llamar a esta funci\u00f3n est\u00e1tica es mytype::mystaticmember()."}, {"name": "Plantillas", "text": "Las plantillas son el mecanismo de C++ para implantar el paradigma de la programaci\u00f3n gen\u00e9rica. Permiten que una clase o funci\u00f3n trabaje con tipos de datos abstractos, especific\u00e1ndose m\u00e1s adelante cuales son los que se quieren usar. Por ejemplo, es posible construir un vector gen\u00e9rico que pueda contener cualquier tipo de estructura de datos. De esta forma se pueden declarar objetos de la clase de este vector que contengan enteros, flotantes, pol\u00edgonos, figuras, fichas de personal, etc.\nLa declaraci\u00f3n de una plantilla se realiza anteponiendo la declaraci\u00f3n template <typename A,....> a la declaraci\u00f3n de la estructura (clase, estructura o funci\u00f3n) deseado.\nPor ejemplo:\ntemplate\n<\ntypename\nT\n>\nT\nmax\nconst\n&\n?\n//si x > y, retorna x, sino retorna y\nLa funci\u00f3n max() es un ejemplo de programaci\u00f3n gen\u00e9rica, y dados dos par\u00e1metros de un tipo T (que puede ser int, long, float, double, etc.) devolver\u00e1 el mayor de ellos (usando el operador >). Al ejecutar la funci\u00f3n con par\u00e1metros de un cierto tipo, el compilador intentar\u00e1 \"calzar\" la plantilla a ese tipo de datos, o bien generar\u00e1 un mensaje de error si fracasa en ese proceso.\nEspecializaci\u00f3n\nEl siguiente ejemplo:\nA\nmyfunction\nA\ncrea una plantilla bajo la cual pueden ser definidas en el c\u00f3digo de cabecera cualesquiera funciones especializadas para un tipo de datos como int myfunction(int), int myfunction(std::string), int myfunction(bool), etc\u00e9tera:\nmyfunction\n     \n+\n5\nstd\n::\nstring\n-\nsize\nrand\n());\n//Si a es verdadero, devuelve un n\u00famero aleatorio; en caso contrario devuelve 0\nCada una de estas funciones tiene su propia definici\u00f3n (cuerpo). Cada cuerpo diferente, no equivalente (\"no convertible\") corresponde a una especializaci\u00f3n. Si una de estas funciones no fuera definida, el compilador tratar\u00e1 de aplicar las conversiones de tipos de datos que le fuesen permitidas para \"calzar\" una de las plantillas, o generar\u00e1 un mensaje de error si fracasa en ese proceso.\nTodas las definiciones habilitadas de una plantilla deben estar disponibles al momento de la compilaci\u00f3n, por lo cual no es posible actualmente \"compilar\" una plantilla como archivo de objeto, sino simplemente compilar especializaciones de la plantilla. Por lo tanto, las plantillas se distribuyen junto con el c\u00f3digo fuente de la aplicaci\u00f3n. En otras palabras, no es posible compilar la plantilla std::vector< > a c\u00f3digo objeto, pero s\u00ed es posible, por ejemplo, compilar un tipo de datos std::vector<std::string>."}, {"name": "Clases abstractas", "text": "En C++ es posible definir clases abstractas. Una clase abstracta, o clase base abstracta (ABC), es una que est\u00e1 dise\u00f1ada solo como clase padre de las cuales se deben derivar clases hijas. Una clase abstracta se usa para representar aquellas entidades o m\u00e9todos que despu\u00e9s se implementar\u00e1n en las clases derivadas, pero la clase abstracta en s\u00ed no contiene ninguna implementaci\u00f3n -- solamente representa los m\u00e9todos que se deben implementar. Por ello, no es posible instanciar una clase abstracta, pero s\u00ed una clase concreta que implemente los m\u00e9todos definidos en ella.\nLas clases abstractas son \u00fatiles para definir interfaces, es decir, un conjunto de m\u00e9todos que definen el comportamiento de un m\u00f3dulo determinado. Estas definiciones pueden utilizarse sin tener en cuenta la implementaci\u00f3n que se har\u00e1 de ellos.\nEn C++ los m\u00e9todos de las clases abstractas se definen como funciones virtuales puras.\nAbstracta\nvirtual\nmetodo\nConcretaA\nAbstracta\n      \n//haz algo\n2\nConcretaB\n//otra implementaci\u00f3n\nbaz\nEn el ejemplo, la clase ConcretaA es una implementaci\u00f3n de la clase Abstracta, y la clase ConcretaB es otra implementaci\u00f3n.\nDebe notarse que el = 0 es la notaci\u00f3n que emplea C++ para definir funciones virtuales puras."}, {"name": "Espacios de nombres", "text": "Una adici\u00f3n a las caracter\u00edsticas de C son los espacios de nombre (namespace en ingl\u00e9s), los cuales pueden describirse como \u00e1reas virtuales bajo las cuales ciertos nombres de variable o tipos tienen validez. Esto permite evitar las ocurrencias de conflictos entre nombres de funciones, variables o clases.\nEl ejemplo m\u00e1s conocido en C++ es el espacio de nombres std::, el cual almacena todas las definiciones nuevas en C++ que difieren de C (algunas estructuras y funciones), as\u00ed como las funcionalidades propias de C++ (streams) y los componentes de la biblioteca STL.\n// Las funciones en esta cabecera existen dentro del espacio de nombres std::\nmi_paquete\n   \nmi_valor\n3\nmi_paquete\n4\n'\\n'\n// imprime '3'\n// imprime '4'\nComo puede verse, las invocaciones directas a mi_valor dar\u00e1n acceso solamente a la variable descrita localmente; para acceder a la variable del espacio de nombres mi_paquete es necesario acceder espec\u00edficamente el espacio de nombres. Un atajo recomendado para programas sencillos es la directiva using namespace, que permite acceder a los nombres de variables del paquete deseado en forma directa, siempre y cuando no se produzca alguna ambig\u00fcedad o conflicto de nombres."}, {"name": "Herencia", "text": "Existen varios tipos de herencia entre clases en el lenguaje de programaci\u00f3n C++. Estos son:\nHerencia simple\nLa herencia en C++ es un mecanismo de abstracci\u00f3n creado para poder facilitar y mejorar el dise\u00f1o de las clases de un programa. Con ella se pueden crear nuevas clases a partir de clases ya hechas, siempre y cuando tengan un tipo de relaci\u00f3n especial.\nEn la herencia, las clases derivadas \"heredan\" los datos y las funciones miembro de las clases base, pudiendo las clases derivadas redefinir estos comportamientos (polimorfismo) y a\u00f1adir comportamientos nuevos propios de las clases derivadas.\nPara no romper el principio de encapsulamiento (ocultar datos cuyo conocimiento no es necesario para el uso de las clases), se proporciona un nuevo modo de visibilidad de los datos/funciones: \"protected\". Cualquier cosa que tenga visibilidad protected se comportar\u00e1 como p\u00fablica en la clase Base y en las que componen la jerarqu\u00eda de herencia, y como privada en las clases que NO sean de la jerarqu\u00eda de la herencia.\nAntes de utilizar la herencia, nos tenemos que hacer una pregunta, y si tiene sentido, podemos intentar usar esta jerarqu\u00eda: Si la frase <claseB> ES-UN <claseA> tiene sentido, entonces estamos ante un posible caso de herencia donde clase A ser\u00e1 la clase base y clase B la derivada.\nEjemplo: clases Barco, Acorazado, Carguero, etc. Un Acorazado ES-UN Barco, un Carguero ES-UN Barco, un Trasatl\u00e1ntico ES-UN Barco, etc.\nEn este ejemplo tendr\u00edamos las cosas generales de un Barco (en C++)\nBarco\nnombre\npeso\n//Constructores y dem\u00e1s funciones b\u00e1sicas de barco\ny ahora las caracter\u00edsticas de las clases derivadas, podr\u00edan (a la vez que heredan las de barco) a\u00f1adir cosas propias del subtipo de barco que vamos a crear, por ejemplo:\nCarguero\nBarco\n// Esta es la manera de especificar que hereda de Barco\n       \ncarga\n//El resto de cosas\nAcorazado\nnumeroArmas\nSoldados\n// El resto de cosas\nPor \u00faltimo, hay que mencionar que existen 3 clases de herencia que se diferencian en el modo de manejar la visibilidad de los componentes de la clase resultante:\nHerencia p\u00fablica (class Derivada: public Base ): Con este tipo de herencia se respetan los comportamientos originales de las visibilidades de la clase Base en la clase Derivada.\nHerencia privada (clase Derivada: private Base): Con este tipo de herencia todo componente de la clase Base, ser\u00e1 privado en la clase Derivada (las propiedades heredadas ser\u00e1n privadas aunque estas sean p\u00fablicas en la clase Base)\nHerencia protegida (clase Derivada: protected Base): Con este tipo de herencia, todo componente p\u00fablico y protegido de la clase Base, ser\u00e1 protegido en la clase Derivada, y los componentes privados, siguen siendo privados.\nHerencia m\u00faltiple\nLa herencia m\u00faltiple es el mecanismo que permite al programador hacer clases derivadas a partir, no de una sola clase base, sino de varias. Para entender esto mejor, pongamos un ejemplo:\nCuando ves a quien te atiende en una tienda, como persona que es, podr\u00e1s suponer que puede hablar, comer, andar, pero, por otro lado, como empleado que es, tambi\u00e9n podr\u00e1s suponer que tiene un jefe, que puede cobrarte dinero por la compra, que puede devolverte el cambio, etc. Si esto lo trasladamos a la programaci\u00f3n ser\u00eda herencia m\u00faltiple (clase empleado_tienda):\nPersona\n...\nHablar\nCaminar\nEmpleado\nPersona\njefe\nsueldo\nCobrar\nEmpleadoTienda\nEmpleado\nAlmacenarStock\nComprobarExistencias\nPor tanto, es posible utilizar m\u00e1s de una clase para que otra herede sus caracter\u00edsticas."}, {"name": "Sobrecarga de operadores", "text": "La sobrecarga de operadores es una forma de hacer polimorfismo. Es posible definir el comportamiento de un operador del lenguaje para que trabaje con tipos de datos definidos por el usuario. No todos los operadores de C++ son factibles de sobrecargar, y, entre aquellos que pueden ser sobrecargados, se deben cumplir condiciones especiales. En particular, los operadores sizeof y :: no son sobrecargables.\nNo es posible en C++ crear un operador nuevo.\nLos comportamientos de los operadores sobrecargados se implementan de la misma manera que una funci\u00f3n, salvo que esta tendr\u00e1 un nombre especial: Tipo de dato de devoluci\u00f3n operator<token del operador>(par\u00e1metros)\nLos siguientes operadores pueden ser sobrecargados:\nOperadores Unarios\nOperador * (de indirecci\u00f3n)\nOperador -> (de indirecci\u00f3n)\nOperador & (de direcci\u00f3n)\nOperador +\nOperador -\nOperador ++\nOperador --\nOperadores Binarios\nOperador ==\nOperador +\nOperador -\nOperador *\nOperador /\nOperador\u00a0%\nOperador <<\nOperador >>\nOperador &\nOperador ^\nOperador |\nOperador []\nOperador ()\nOperadores de Asignaci\u00f3n\nOperador =\nOperador +=\nOperador -=\nOperador *=\nOperador /=\nOperador\u00a0%=\nOperador <<=\nOperador >>=\nOperador &=\nOperador ^=\nOperador |=\nDado que estos operadores son definidos para un tipo de datos definido por el usuario, este es libre de asignarles cualquiera sem\u00e1ntica que desee. Sin embargo, se considera de primera importancia que las sem\u00e1nticas sean tan parecidas al comportamiento natural de los operadores como para que el uso de los operadores sobrecargados sea intuitivo. Por ejemplo, el uso del operador unario - debiera cambiar el \"signo\" de un \"valor\".\nLos operadores sobrecargados no dejan de ser funciones, por lo que pueden devolver un valor, si este valor es del tipo de datos con el que trabaja el operador, permite el encadenamiento de sentencias. Por ejemplo, si tenemos 3 variables A, B y C de un tipo T y sobrecargamos el operador = para que trabaje con el tipo de datos T, hay dos opciones: si el operador no devuelve nada una sentencia como \"A=B=C;\" (sin las comillas) dar\u00eda error, pero si se devuelve un tipo de datos T al implementar el operador, permitir\u00eda concatenar cuantos elementos se quisieran, permitiendo algo como \"A=B=C=D=...;\""}]}, {"name": "Standard Template Library (STL)", "text": "Art\u00edculo principal:\nLos lenguajes de programaci\u00f3n suelen tener una serie de bibliotecas de funciones integradas para la manipulaci\u00f3n de datos a nivel m\u00e1s b\u00e1sico. En C++, adem\u00e1s de poder usar las bibliotecas de C, se puede usar la nativa STL (Standard Template Library), propia del lenguaje. Proporciona una serie plantillas (templates) que permiten efectuar operaciones sobre el almacenado de datos, procesado de entrada/salida.", "subsections": []}, {"name": "Biblioteca de entrada y salida", "text": "Las clases basic_ostream y basic_stream, y los objetos cout y cin, proporcionan la entrada y salida est\u00e1ndar de datos (teclado/pantalla). Tambi\u00e9n est\u00e1 disponible cerr, similar a cout, usado para la salida est\u00e1ndar de errores.\nEstas clases tienen sobrecargados los operadores << y >>, respectivamente, con el objeto de ser \u00fatiles en la inserci\u00f3n/extracci\u00f3n de datos a dichos flujos. Son operadores inteligentes, ya que son capaces de adaptarse al tipo de datos que reciben, aunque tendremos que definir el comportamiento de dicha entrada/salida para clases/tipos de datos definidos por el usuario. Por ejemplo:\nostream\noperator\nfs\npunto\n\",\"\nDe esta forma, para mostrar un punto, solo habr\u00eda que realizar la siguiente expresi\u00f3n:\n//...\np\n\"Las coordenadas son: \"\np\nEs posible formatear la entrada/salida, indicando el n\u00famero de d\u00edgitos decimales a mostrar, si los textos se pasar\u00e1n a min\u00fasculas o may\u00fasculas, si los n\u00fameros recibidos est\u00e1n en formato octal o hexadecimal, etc.", "subsections": [{"name": "Fstreams", "text": "Tipo de flujo para el manejo de ficheros. La definici\u00f3n previa de ostreams/istreams es aplicable a este apartado.\nExisten tres clases (ficheros de lectura, de escritura o de lectura/escritura): ifstream,ofstream y fstream.\nComo abrir un fichero:\n(nombre_variable_fichero).open(\"nombre_fichero.dat/txt\", ios::in); para abrirlo en modo lectura.\n(nombrevariablefichero).open(\"nombre_fichero.dat/txt\", ios::out); para abrirlo en modo escritura.\nEjemplo:\nf.open(\"datos.txt\", ios::in);\nComo cerrar el fichero:\nnombre_variable_fichero.close();\nEjemplo:\nf.close();\nLeer un fichero:\n<fstream>\n<string>\nifstream\nentrada\nopen\n\"textoPlano.txt\"\nunString\nwhile\n>>\n\"Lei: \"\nEscribir un fichero:\nPueden abrirse pasando al constructor los par\u00e1metros relativos a la ubicaci\u00f3n del fichero y el modo de apertura:"}, {"name": "Sstreams", "text": "Se destacan dos clases, ostringstream e istringstream. Todo lo anteriormente dicho es aplicable a estas clases.\nTratan a una cadena como si de un flujo de datos se tratase. ostringstream permite elaborar una cadena de texto insertando datos cual flujo, e istringstream puede extraer la informaci\u00f3n contenida en una cadena (pasada como par\u00e1metro en su constructor) con el operador >>.\nEjemplos:\nostringstream\ns\nedad\nestatura\n6\nstr\nistringstream\ns\ncadena"}, {"name": "Contenedores", "text": "Son clases plantillas especiales utilizadas para almacenar tipos de datos gen\u00e9ricos, sean cuales sean. Todos los contenedores son homog\u00e9neos, es decir, una vez que se declaran para contener un tipo de dato determinado, en ese contenedor, solo se podr\u00e1n meter elementos de ese tipo.\nSeg\u00fan la naturaleza del almacenado, disponemos de varios tipos:\nVectores: Se definen por vector<tipo_de_dato> nombre_del_vector; Son arrays (o listas ordenadas) que se redimensionan autom\u00e1ticamente al agregar nuevos elementos, por lo que se le pueden agregar \"te\u00f3ricamente\", infinitos elementos. Los vectores nos permiten acceder a cualquier elemento que contenga, mediante el operador[]. Debe tenerse en cuenta que si se intenta acceder a una posici\u00f3n que excede los l\u00edmites del vector, este no har\u00e1 ning\u00fan chequeo, por lo que se debe ser cuidadoso al utilizar este operador. Para asegurar un acceso seguro al vector, se puede utilizar el m\u00e9todo at(int), que lanza una excepci\u00f3n de tipo std::out_of_range en caso de que esto ocurra.\nPara a\u00f1adir elementos al final del vector, se utiliza el m\u00e9todo push_back(const T&). Por otro lado, para eliminar un elemento del final del vector, se debe usar el m\u00e9todo pop_back().\n<vector>\n //librer\u00eda que contiene a la clase vector\nvector\nintVector\n//crea un vector de enteros (sin elementos)\npush_back\n//agrega el entero 25 al vector\n\"El primer elemento es: \"\nfront\n\" y mi vector tiene \"\n\" elementos.\"\n//imprime el primer elemento, retornado por el m\u00e9todo front()\n32\n//agrego el entero 32 al vector\n]\n//imprime 25\npop_back\n//elimina el \u00faltimo elemento del vector (i. e. 32)\n\"Ahora tengo: \"\n//imprimir\u00e1 1\nColas dobles: son parecidas a los vectores, pero tienen mejor eficiencia para agregar o eliminar elementos en las \"puntas\".deque<tipo_de_dato> nombre_de_la_cola;\nAdem\u00e1s de los m\u00e9todos push_back(const T&) y pop_back(), se agregan los m\u00e9todos push_front(const T&) y pop_front(), que realizan lo mismo que los ya explicados, pero en el comienzo de la cola.\n<deque>\n //librer\u00eda de deques\ndeque\nintDeque\npush_front\n())\n//borra todos los elementos\nListas: Son eficientes a la hora de agregar elementos. La diferencia con las colas dobles, es que son m\u00e1s eficientes para eliminar elementos que no est\u00e9n en alguna de las \"puntas\"list<tipo_de_dato> nombre_de_la_lista;\nAdaptadores de secuencia.\nContenedores asociativos: map y multimap, que permiten asociar una \"clave\" con un \"valor\". map no permite valores repetidos, mientras que multimap si.\n<map>\n //librer\u00eda que contiene a map y multimap\n //librer\u00eda de strings\n //librer\u00eda de entrada/salida\nmap\nintAString\n1\n\"uno\"\n10\n\"diez\"\n\"En intAString[1]: \"\n\"En intAString[10]: \"\nContenedores asociativos: set y multiset, que ofrecen solamente la condici\u00f3n de \"pertenencia\", sin la necesidad de garantizar un ordenamiento particular de los elementos que contienen."}, {"name": "Iteradores", "text": "Pueden considerarse como una generalizaci\u00f3n de la clase de \"puntero\". Un iterador es un tipo de dato que permite el recorrido y la b\u00fasqueda de elementos en los contenedores.\nComo las estructuras de datos (contenedores) son clases gen\u00e9ricas, y los operadores (algoritmos) que deben operar sobre ellas son tambi\u00e9n gen\u00e9ricos (funciones gen\u00e9ricas), Stepanov y sus colaboradores tuvieron que desarrollar el concepto de iterador como elemento o nexo de conexi\u00f3n entre ambos. El nuevo concepto resulta ser una especie de punteros que se\u00f1alan a los diversos miembros del contenedor (punteros gen\u00e9ricos que como tales no existen en el lenguaje)."}, {"name": "Algoritmos", "text": "Combinando la utilizaci\u00f3n de templates y un estilo espec\u00edfico para denotar tipos y variables, la STL ofrece una serie de funciones que representan operaciones comunes, y cuyo objetivo es \"parametrizar\" las operaciones en que estas funciones se ven involucradas de modo que su lectura, comprensi\u00f3n y mantenimiento, sean m\u00e1s f\u00e1ciles de realizar.\nUn ejemplo es la funci\u00f3n copy, la cual simplemente copia variables desde un lugar a otro. M\u00e1s estrictamente, copia los contenidos cuyas ubicaciones est\u00e1n delimitadas por dos iteradores, al espacio indicado por un tercer iterador. La sintaxis es: \n De este modo, todos los datos que est\u00e1n entre inicio_origen y fin_origen, excluyendo el dato ubicado en este \u00faltimo, son copiados a un lugar descrito o apuntado por inicio_destino.\nUn algoritmo muy importante que viene implementado en la biblioteca STL, es el sort. El algoritmo sort, ordena cualquier tipo de contenedor, siempre y cuando se le pasen como argumentos, desde donde y hasta donde se quiere ordenarlo.\n<algorithm>\n60\n54\n//para este momento, el vector tiene 60,12,54\nsort\nbegin\n(),\nend\n//listo, array ordenado, ahora tiene 12,54,60\n/*Notar que si en vez de un vector, fuese una deque, se ordenar\u00eda de la misma manera. */\nEntre las funciones m\u00e1s conocidas est\u00e1n swap (variable1, variable2), que simplemente intercambia los valores de variable1 y variable2; max (variable1, variable2) y su s\u00edmil min (variable1, variable2), que retornan el m\u00e1ximo o m\u00ednimo entre dos valores; find (inicio, fin, valor) que busca valor en el espacio de variables entre inicio y fin; etc\u00e9tera.\nLos algoritmos son muy variados, algunos incluso tienen versiones espec\u00edficas para operar con ciertos iteradores o contenedores, y proveen un nivel de abstracci\u00f3n extra que permite obtener un c\u00f3digo m\u00e1s \"limpio\", que \"describe\" lo que se est\u00e1 haciendo, en vez de hacerlo paso a paso expl\u00edcitamente."}]}, {"name": "C++11", "text": "El 12 de agosto de 2011, Herb Sutter, presidente del comit\u00e9 de est\u00e1ndares de C++, inform\u00f3 la aprobaci\u00f3n un\u00e1nime del nuevo est\u00e1ndar.[3]\u200b La publicaci\u00f3n del mismo se realiz\u00f3 en alg\u00fan momento del 2011.\nEntre las caracter\u00edsticas del nuevo est\u00e1ndar se pueden destacar:\nFunciones lambda;\nReferencias rvalue;\nLa palabra reservada auto;\nInicializaci\u00f3n uniforme;\nPlantillas con n\u00famero variable de argumentos.\nAdem\u00e1s se ha actualizado la biblioteca est\u00e1ndar del lenguaje.", "subsections": []}, {"name": "Actualidad y futuro", "text": "En 2011 C++11 inaugur\u00f3 una nueva era en la historia de C++, iniciando un ciclo trienal de lanzamiento de nuevas versiones.  A C++11 le sigui\u00f3 C++14 y luego C++17, que es la versi\u00f3n actual en 2019; C++20 se encuentra pr\u00f3ximo a estandarizarse, y ya se est\u00e1 trabajando en la versi\u00f3n C++23.  Los compiladores intentan adelantarse incorporando de manera experimental algunas novedades antes de los lanzamientos oficiales.  Pero cada nueva versi\u00f3n de C++ incluye tal cantidad de agregados que los compiladores m\u00e1s adelantados no suelen terminar de incorporarlos hasta dos o tres a\u00f1os despu\u00e9s del lanzamiento de esa versi\u00f3n.", "subsections": []}, {"name": "Diferencias de tipos respecto a C", "text": "En C++, cualquier tipo de datos que sea declarado completo (fully qualified, en ingl\u00e9s) se convierte en un tipo de datos \u00fanico. Las condiciones para que un tipo de datos T sea declarado completo son a grandes rasgos las siguientes:\nEs posible al momento de compilaci\u00f3n conocer el espacio asociado al tipo de datos (es decir, el compilador debe conocer el resultado de sizeof(T)).\nT Tiene al menos un constructor, y un destructor, bien declarados.\nSi T es un tipo compuesto, o es una clase derivada, o es la especificaci\u00f3n de una plantilla, o cualquier combinaci\u00f3n de las anteriores, entonces las dos condiciones establecidas previamente deben aplicar para cada tipo de dato constituyente.\nEn general, esto significa que cualquier tipo de datos definido haciendo uso de las cabeceras completas, es un tipo de datos completo.\nEn particular, y, a diferencia de lo que ocurr\u00eda en C, los tipos definidos por medio de struct o enum son tipos completos. Como tales, ahora son sujetos a sobrecarga, conversiones impl\u00edcitas, etc\u00e9tera.\nLos tipos enumerados, entonces, ya no son simplemente alias para tipos enteros, sino que son tipos de datos \u00fanicos en C++. El tipo de datos bool, igualmente, pasa a ser un tipo de datos \u00fanico, mientras que en C funcionaba en algunos casos como un alias para alguna clase de dato de tipo entero.", "subsections": []}, {"name": "Compiladores", "text": "Uno de los compiladores libres de C++ es el de GNU, el compilador G++ (parte del proyecto GCC, que engloba varios compiladores para distintos lenguajes). Otros compiladores comunes son Intel C++ Compiler, el compilador de Xcode, el compilador de Borland C++, el compilador de CodeWarrior C++, el compilador g++ de Cygwin, el compilador g++ de MinGW, el compilador de Visual C++, Carbide.c++, entre otros.", "subsections": []}, {"name": "Entornos de desarrollo", "text": "", "subsections": [{"name": "Bajo Microsoft Windows", "text": "Visual Studio Code\nCode::Blocks\nDev-C++\nVisual C++\nwxDev-C++\nZinjai\nOpen Watcom (IDE y Dialog Editor)\nCodeLite"}, {"name": "Bajo MacOS", "text": "Xcode\nZinjai\nCodeLite\nGeany"}, {"name": "Bajo DOS", "text": "Turbo C, reemplazado por C++Builder"}, {"name": "Bajo GNU/Linux", "text": "Code::Blocks\nNetBeans\nEclipse\nGeany\nEmacs\nZinjai\nKdevelop\nOpen Watcom (IDE y Dialog Editor)\nCodeLite\nClion (software)"}, {"name": "Software Creados y Programados con C++", "text": "Microsoft Edge\nGoogle Chrome\nBitcoin\n\u03bcTorrent\nBitTorrent (programa)\nHaiku (sistema operativo)\nWindows Phone 8.1\nOpen Broadcaster Software\nOpera (navegador)\nCATIA"}]}, {"name": "Cr\u00edticas", "text": "A pesar de su adopci\u00f3n generalizada, muchos programadores han criticado el lenguaje C ++, incluyendo Linus Torvalds,[4]\u200b Richard Stallman,[5]\u200b y Ken Thompson.[6]\u200b Los problemas incluyen una falta de reflexi\u00f3n o recolector de basura, tiempos de compilaci\u00f3n lentos, perceived feature creep,[7]\u200b y mensajes de error detallados, particularmente de la metaprogramaci\u00f3n de plantilla.[8]\u200b\nPara evitar los problemas que existen en C ++, y para aumentar la productividad,[9]\u200b algunas personas sugieren lenguajes alternativos m\u00e1s recientes que C ++, como D, Go, Rust y Vala.[10]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "A++\nC++/CX\nC++11\nC++14\nC++17", "subsections": []}, {"name": "Referencias", "text": "\u2191 https://www.iso.org/standard/68564.html\n\u2191 Stroustrup, Bjarne (1997). \u00ab1\u00bb. The C++ Programming Language (Third edici\u00f3n). ISBN\u00a00201889544. OCLC\u00a059193992. Consultado el 25 de febrero de 2010.\u00a0\n\u2191 http://herbsutter.com/2011/08/12/we-have-an-international-standard-c0x-is-unanimously-approved/\n\u2191 \u00abRe: [RFC Convert builin-mailinfo.c to use The Better String Library]\u00bb, 6 de septiembre de 2007, https://lwn.net/Articles/249460/, consultado el 31 de marzo de 2015.\u00a0\n\u2191 \u00abRe: Efforts to attract more users?\u00bb, 12 de julio de 2010, http://harmful.cat-v.org/software/c++/rms, consultado el 31 de marzo de 2015.\u00a0\n\u2191 Andrew Binstock (18 de mayo de 2011). \u00abDr. Dobb's: Interview with Ken Thompson\u00bb. Archivado desde el original el 13 de marzo de 2014. Consultado el 7 de febrero de 2014.\u00a0\n\u2191 Pike, Rob (2012). \u00abLess is exponentially more\u00bb.\u00a0\n\u2191 Kreinin, Yossi (13 de octubre de 2009). \u00abDefective C++\u00bb. Consultado el 3 de febrero de 2016.\u00a0\n\u2191 New Languages, and Why We Need Them, MIT Technology Review\n\u2191 The New Native Languages | Dr Dobb's", "subsections": [{"name": "Bibliograf\u00eda", "text": "Bjarne Stroustrup, El lenguaje de programaci\u00f3n C++, Addison Wesley, Madrid, 1998, ISBN 84-7829-019-2\nBjarne Stroustrup, The C++ Programming Language, Addison-Wesley Pub Co; Tercera edici\u00f3n (15 de febrero de 2000); ISBN 0-201-70073-5\nBjarne Stroustrup, The Design and Evolution of C++, Addison-Wesley Pub Cp; Primera edici\u00f3n (29 de marzo de 1994); ISBN 0-201-54330-3\nMargaret A. Ellis y Bjarne Stroustrup, The Annotated C++ Reference Manual, Addison-Wesley Pub Co; (1 de enero de 1990); ISBN 0-201-51459-1"}]}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre C++.\n\u00abCplusplus resources\u00bb (en ingl\u00e9s). Consultado el 10 de abril de 2015.\u00a0\n\u00abC/C++ Reference=C Programming and C++ Programming\u00bb (en ingl\u00e9s). Consultado el 10 de abril de 2015.\u00a0\n\u00abTecnoMate.xyz=Curso de Programaci\u00f3n C++\u00bb. Consultado el 1 de septiembre de 2019.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/C%C3%A1lculo_lambda", "title": "C\u00e1lculo lambda", "summary": "En l\u00f3gica matem\u00e1tica, el c\u00e1lculo lambda es un sistema formal dise\u00f1ado para investigar la definici\u00f3n de funci\u00f3n, la noci\u00f3n de aplicaci\u00f3n de funciones y la recursi\u00f3n. Fue introducido por Alonzo Church y Stephen Kleene en la d\u00e9cada de 1930 como parte de sus investigaciones sobre los fundamentos de las matem\u00e1ticas. Church us\u00f3 el c\u00e1lculo lambda en 1936 para resolver el Entscheidungsproblem. Puede ser usado para definir de manera limpia y precisa qu\u00e9 es una \"funci\u00f3n computable\".\nEl interrogante de si dos expresiones del c\u00e1lculo lambda son equivalentes no puede ser resuelto por un algoritmo general. Esta fue la primera pregunta, incluso antes que el problema de la parada, cuya indecidibilidad fue probada. El c\u00e1lculo lambda tiene una gran influencia sobre los lenguajes funcionales, como Lisp, ML y Haskell.\nSe puede considerar al c\u00e1lculo lambda como uno de los lenguajes universales de programaci\u00f3n m\u00e1s minimalistas. Consiste en una regla de transformaci\u00f3n simple (sustituci\u00f3n de variables) y un esquema simple para definir funciones.\nEl c\u00e1lculo lambda es universal porque cualquier funci\u00f3n computable puede ser expresada y evaluada a trav\u00e9s de \u00e9l. Por lo tanto, es equivalente a las m\u00e1quinas de Turing. Sin embargo, el c\u00e1lculo lambda no hace \u00e9nfasis en el uso de reglas de transformaci\u00f3n y no considera las m\u00e1quinas reales que pueden implementarlo. Se trata de una propuesta m\u00e1s cercana al software que al hardware.\nEste art\u00edculo se enfocar\u00e1 sobre el c\u00e1lculo lambda sin tipos, como fue dise\u00f1ado originalmente por Church. Desde entonces, algunos c\u00e1lculo lambda tipados fueron creados.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Introducci\u00f3n informal\n3 Definici\u00f3n formal\n3.1 Sintaxis\n3.2 Variables libres y ligadas\n3.3 \u03b1-conversi\u00f3n\n3.4 \u03b2-reducci\u00f3n\n3.5 \u03b7-conversi\u00f3n\n4 C\u00e1lculos aritm\u00e9ticos con lambda\n5 L\u00f3gica y predicados\n6 Pares\n7 Recursi\u00f3n\n8 Funciones computables y el c\u00e1lculo lambda\n9 Indecisi\u00f3n de equivalencia\n10 C\u00e1lculo lambda y los lenguajes de programaci\u00f3n\n11 Estrategias de reducci\u00f3n\n12 Concurrencia y paralelismo\n13 Reducci\u00f3n \u00f3ptima\n14 Sem\u00e1ntica\n15 Referencias\n16 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "Originalmente, Church hab\u00eda tratado de construir un sistema formal completo para modelizar la matem\u00e1tica;[1]\u200b pero en 1934 Kleene y Rosser publicaron una implementaci\u00f3n de la paradoja de Richard.[2]\u200b Desde ese punto, el c\u00e1lculo lambda fue usado para estudiar la computabilidad, culminando en la respuesta negativa al problema de la parada. En 1940, Church introdujo el C\u00e1lculo lambda simplemente tipado que es computacionalmente menos poderoso, pero l\u00f3gicamente consistente.[3]\u200b", "subsections": []}, {"name": "Introducci\u00f3n informal", "text": "Consid\u00e9rese las siguientes dos funciones. Por un lado, la funci\u00f3n identidad I(x) = x, que toma un \u00fanico argumento, x, e inmediatamente devuelve x. Por otro lado, la funci\u00f3n suma S(x,y) = x + y, que toma dos argumentos, x e y, y devuelve la suma de ambos: x + y. Usando estas dos funciones como ejemplo, es posible hacer algunas observaciones \u00fatiles acerca de varias ideas fundamentales del c\u00e1lculo lambda.\nLa primera observaci\u00f3n es que las funciones no necesitan ser expl\u00edcitamente nombradas. Esto es, la funci\u00f3n S(x,y) = x + y puede ser reescrita como una funci\u00f3n an\u00f3nima: x,y \u2192 x + y (que se lee: \u00abel par de x e y se mapea a x + y\u00bb). Del mismo modo, I(x) = x puede ser reescrita de forma an\u00f3nima como x \u2192 x, que se lee: \u00abel argumento x se mapea a s\u00ed mismo\u00bb.\nLa segunda observaci\u00f3n es que el nombre que se asigne a los argumentos de la funci\u00f3n es generalmente irrelevante. Esto es, x \u2192 x e y \u2192 y expresan la misma funci\u00f3n: la funci\u00f3n identidad. Del mismo modo, x,y \u2192 x + y y u,v \u2192 u + v expresan la misma funci\u00f3n: la funci\u00f3n suma.\nUna tercera observaci\u00f3n es que toda funci\u00f3n que requiere dos argumentos, como por ejemplo la funci\u00f3n suma, puede ser reescrita como una funci\u00f3n que acepta un \u00fanico argumento, pero que devuelve otra funci\u00f3n, la cual a su vez acepta un \u00fanico argumento. Por ejemplo, x,y \u2192 x + y puede ser reescrita como x \u2192 (y \u2192 x + y). Esta transformaci\u00f3n se conoce como currificaci\u00f3n, y puede generalizarse para funciones que aceptan cualquier n\u00famero de argumentos. Esto puede parecer dif\u00edcil de entender, pero se entiende mejor mediante un ejemplo. Consid\u00e9rese la funci\u00f3n suma no currificada:\nAl tomar a los n\u00fameros 2 y 3 como argumentos, se obtiene:\nLo cual es igual a 5. Consid\u00e9rese ahora la versi\u00f3n currificada de la funci\u00f3n:\nSi se toma al n\u00famero 2 como argumento, se obtiene la funci\u00f3n:\nY tomando luego al n\u00famero 3 como argumento, se obtiene:\nLo cual es igual a 5. De modo que la versi\u00f3n currificada devuelve el mismo resultado que la versi\u00f3n no currificada. En el c\u00e1lculo lambda, todas las expresiones representan funciones an\u00f3nimas de un solo argumento.\nUna cuarta observaci\u00f3n es que una funci\u00f3n puede aceptar como argumento a otra funci\u00f3n, siempre y cuando esta otra funci\u00f3n tenga ella misma un solo argumento. Por ejemplo, la funci\u00f3n identidad puede aceptar como argumento a la funci\u00f3n suma (currificada). Es decir, se toma a la funci\u00f3n x \u2192 (y \u2192 x + y) y se la pone como argumento en z \u2192 z. El resultado ser\u00e1 obviamente x \u2192 (z \u2192 x + z), (igual a la x \u2192 (y \u2192 x + y)) pues la funci\u00f3n identidad siempre devuelve lo mismo que se le da.\nEn el c\u00e1lculo lambda, las funciones est\u00e1n definidas por expresiones lambda, que dicen qu\u00e9 se hace con su argumento. Por ejemplo, la funci\u00f3n \"sumar 2\", \u00a0f(x) = x + 2\u00a0 se expresa en c\u00e1lculo lambda as\u00ed: \u00a0\u03bb x. x + 2\u00a0 (o, equivalentemente, \u00a0\u03bb y. y + 2\nya que el nombre de su argumento no es importante). Y el n\u00famero f(3) ser\u00eda escrito como \u00a0(\u03bb x. x + 2) 3. La aplicaci\u00f3n de funciones es asociativa a izquierda: \u00a0f x y = (f x) y.\u00a0\nConsiderando la funci\u00f3n que aplica una funci\u00f3n al n\u00famero 3:\u00a0\u03bb f. f 3.\u00a0, podemos pasarle \"sumar 2\", quedando as\u00ed: \u00a0(\u03bb f. f 3) (\u03bb x. x + 2).\u00a0\nLas tres expresiones:\nson equivalentes.\nNo todas las expresiones lambda pueden ser reducidas a un \"valor\" definido. Consid\u00e9rese la siguiente:\no\ntratar de reducir estas expresiones solo lleva a encontrarse con la misma expresi\u00f3n o algo m\u00e1s complejo. \u00a0(\u03bb x. x x)\u00a0 es conocido como \u03c9 combinador;\u00a0((\u03bb x. x x) (\u03bb x. x x))\u00a0\nse conoce como \u03a9,\n\u00a0((\u03bb x. x x x) (\u03bb x. x x x))\u00a0\ncomo \u03a92, etc.", "subsections": []}, {"name": "Definici\u00f3n formal", "text": "", "subsections": [{"name": "Sintaxis", "text": "En el c\u00e1lculo lambda, una expresi\u00f3n o t\u00e9rmino se define recursivamente a trav\u00e9s de las siguientes reglas de formaci\u00f3n:\nToda variable es un t\u00e9rmino: x, y, z, u, v, w, x1, x2, x3,...\nSi t es un t\u00e9rmino y x es una variable, entonces (\u03bbx.t) es un t\u00e9rmino (llamado una abstracci\u00f3n lambda).\nSi t y s son t\u00e9rminos, entonces (ts) es un t\u00e9rmino (llamado una aplicaci\u00f3n lambda).\nNada m\u00e1s es un t\u00e9rmino.\nSeg\u00fan estas reglas de formaci\u00f3n, las siguientes cadenas de caracteres son t\u00e9rminos:\nPor convenci\u00f3n se suelen omitir los par\u00e9ntesis externos, ya que no cumplen ninguna funci\u00f3n de desambiguaci\u00f3n. Por ejemplo se escribe (\u03bbz.z)z en vez de ((\u03bbz.z)z), y se escribe x(y(zx)) en vez de (x(y(zx))). Adem\u00e1s se suele adoptar la convenci\u00f3n de que la aplicaci\u00f3n de funciones es asociativa hacia la izquierda. Esto quiere decir, por ejemplo, que xyzz debe entenderse como (((xy)z)z), y que (\u03bbz.z)yzx debe entenderse como ((((\u03bbz.z)y)z)x).\nLas primeras dos reglas generan funciones, mientras que la \u00faltima describe la aplicaci\u00f3n de una funci\u00f3n a un argumento. Una abstracci\u00f3n lambda \u03bbx.t representa una funci\u00f3n an\u00f3nima que toma un \u00fanico argumento, y se dice que el signo \u03bb liga la variable x en el t\u00e9rmino t. En cambio, una aplicaci\u00f3n lambda ts representa la aplicaci\u00f3n de un argumento s a una funci\u00f3n t. Por ejemplo, \u03bbx.x representa la funci\u00f3n identidad x \u2192 x, y (\u03bbx.x)y representa la funci\u00f3n identidad aplicada a y. Luego, \u03bbx.y representa la funci\u00f3n constante x \u2192 y, que develve y sin importar qu\u00e9 argumento se le d\u00e9.\nLas expresiones lambda no son muy interesantes por s\u00ed mismas. Lo que las hace interesantes son las muchas nociones de equivalencia y reducci\u00f3n que pueden ser definidas sobre ellas."}, {"name": "Variables libres y ligadas", "text": "Las apariciones (ocurrencias) de variables en una\nexpresi\u00f3n son de tres tipos:\nOcurrencias de ligadura (binders)\nOcurrencias ligadas (bound occurrences)\nOcurrencias libres (free occurrences)\nLas variables de ligadura son aquellas que est\u00e1n entre el \u03bb y el punto. Por ejemplo, siendo E una expresi\u00f3n lambda:\n\u00a0(\u03bb x y z. E)\nLas ligaduras son x,y y z.\nLa ligadura de ocurrencias de una variable est\u00e1 definido recursivamente sobre la estructura de las expresiones lambda, de esta manera:\nEn expresiones de la forma \u00a0V,\u00a0 donde V es una variable, V es una ocurrencia libre.\nEn expresiones de la forma \u00a0\u03bb V. E,\u00a0 las ocurrencias son libres en E salvo aquellas de V. En este caso las V en E se dicen ligadas por el \u03bb antes V.\nEn expresiones de la forma \u00a0(E E\u2032),\u00a0 las ocurrencias libres son aquellas ocurrencias de E y E\u2032.\nExpresiones lambda tales como \u00a0\u03bb x. (x y)\u00a0 no definen funciones porque las ocurrencias de y est\u00e1n libres. Si la expresi\u00f3n no tiene variables libres, se dice que es cerrada.\nComo se permite la repetici\u00f3n del identificador de variables, cada ligadura tiene una zona de alcance asociada. Un ejemplo t\u00edpico es: \u00a0(\u03bbx.x(\u03bbx.x))x, donde el alcance de la ligadura m\u00e1s a la derecha afecta solo a la x que tiene ah\u00ed, la situaci\u00f3n del otro binding es an\u00e1loga, pero no incluye el scope de la primera. Por \u00faltimo la x m\u00e1s a la derecha est\u00e1 libre. Por lo tanto, esa expresi\u00f3n puede reexpresarse as\u00ed \u00a0(\u03bby.y(\u03bbz.z))x"}, {"name": "\u03b1-conversi\u00f3n", "text": "La regla de alfa-conversi\u00f3n fue pensada para expresar la idea siguiente: los nombres de las variables ligadas no son importantes. Por ejemplo \u00a0\u03bbx.x\u00a0 y \u00a0\u03bby.y\u00a0 son la misma funci\u00f3n. Sin embargo, esta regla no es tan simple como parece a primera vista. Hay algunas restricciones que hay que cumplir antes de cambiar el nombre de una variable por otra. Por ejemplo, si reemplazamos x por y en \u03bbx.\u03bby.x, obtenemos \u03bby.\u03bby.y, que claramente, no es la misma funci\u00f3n. Este fen\u00f3meno se conoce como captura de variables.\nLa regla de alfa-conversi\u00f3n establece que si V y W son variables, E es una expresi\u00f3n lambda, y\nE[V:= W]\nrepresenta la expresi\u00f3n E con todas las ocurrencias libres de V en E reemplazadas con W, entonces\nsi W no est\u00e1 libre en E y W no est\u00e1 ligada a un \u03bb donde se haya reemplazado a V. Esta regla nos dice, por ejemplo, que \u00a0\u03bb\u00a0x.\u00a0(\u03bb\u00a0x.\u00a0x)\u00a0x\u00a0 es equivalente a \u00a0\u03bb\u00a0y.\u00a0(\u03bb\u00a0x.\u00a0x)\u00a0y.\nEn un ejemplo de otro tipo, se ve que\nfor (int i = 0; i < max; i++) proc (i);\nes equivalente a\nfor (int j = 0; j < max; j++) proc (j);"}, {"name": "\u03b2-reducci\u00f3n", "text": "La regla de beta reducci\u00f3n expresa la idea de la aplicaci\u00f3n funcional. Enuncia que\nsi todas las ocurrencias de E\u2032 est\u00e1n libres en E[V:= E\u2032].\nUna expresi\u00f3n de la forma ((\u03bb V. E) E\u2032) es llamada un beta redex. Una lambda expresi\u00f3n que no admite ninguna beta reducci\u00f3n se dice que est\u00e1 en su forma normal. No toda expresi\u00f3n lambda tiene forma normal, pero si existe, es \u00fanica. M\u00e1s a\u00fan, existe un algoritmo para computar la forma normal: la reducci\u00f3n de orden normal. La ejecuci\u00f3n de este algoritmo termina si y solo si la expresi\u00f3n lambda tiene forma normal. El teorema de Church-Rosser nos dice que dos expresiones reducen a una misma si y solo si son equivalentes (salvo por el nombre de sus variables ligadas)"}, {"name": "\u03b7-conversi\u00f3n", "text": "Es la tercera regla, esta conversi\u00f3n, que podr\u00eda ser a\u00f1adida a las dos anteriores para formar una nueva relaci\u00f3n de equivalencia. La eta conversi\u00f3n expresa la idea de extensionalidad, que en este contexto implica que dos funciones son la misma si y solo si dan el mismo resultado para cualquier argumento. La eta conversi\u00f3n convierte entre \u00a0\u03bb x. f x\u00a0 y \u00a0f\u00a0 siempre que x no aparezca sola en f. Esto puede ser entendido como equivalente a la extensionalidad as\u00ed:\nSi f y g son extensionalmente equivalentes, es decir, si \u00a0f a== g a\u00a0 para cualquier expresi\u00f3n lambda a entonces, en particular tomando a como una variable x que no aparece sola en f ni en g, tenemos que \u00a0f\u00a0x\u00a0 ==\u00a0g\u00a0x\u00a0 y por tanto \u00a0\u03bb\u00a0x.\u00a0f\u00a0x\u00a0== \u00a0\u03bb\u00a0x.\u00a0g\u00a0x,\u00a0 y as\u00ed por eta conversi\u00f3n \u00a0f\u00a0 ==\u00a0g.\u00a0 Entonces, si aceptamos la eta conversi\u00f3n como v\u00e1lida, resulta que la extensionalidad es v\u00e1lida.\nInversamente, si aceptamos la extensionalidad como v\u00e1lida entonces, dado que por beta reducci\u00f3n de todo y tenemos que \u00a0(\u03bb\u00a0x.\u00a0f\u00a0x)\u00a0y\u00a0== \u00a0f\u00a0y,\u00a0 resulta que \u00a0\u03bb\u00a0x.\u00a0f\u00a0x\u00a0\u00a0 ==\u00a0\u00a0f;\u00a0 es decir, descubrimos que la eta conversi\u00f3n es v\u00e1lida."}]}, {"name": "C\u00e1lculos aritm\u00e9ticos con lambda", "text": "Hay varias formas posibles de definir los n\u00fameros naturales en el c\u00e1lculo lambda, pero el m\u00e1s com\u00fan son los n\u00fameros de Church, que pueden definirse como sigue:\ny as\u00ed sucesivamente. Instintivamente el n\u00famero n en el c\u00e1lculo lambda es una funci\u00f3n que toma a otra funci\u00f3n f como argumento y devuelve la n-\u00e9sima composici\u00f3n de f. As\u00ed que, un n\u00famero de Church es una funci\u00f3n de alto nivel -- toma una \u00fanica funci\u00f3n f como par\u00e1metro y otra funci\u00f3n de par\u00e1metro \u00fanico.\n(V\u00e9ase que en el c\u00e1lculo original lambda de Church era obligatorio que el par\u00e1metro formal de la expresi\u00f3n lambda apareciera al menos una vez en el cuerpo de la funci\u00f3n, lo que hace imposible definir el 0.)\nDada esta definici\u00f3n de los n\u00fameros de Church, se puede establecer una funci\u00f3n de sucesi\u00f3n que dado un n\u00famero n devuelve n + 1:\nLa suma se define as\u00ed:\nPLUS puede entenderse como una funci\u00f3n que toma dos n\u00fameros naturales como par\u00e1metros devolviendo otro; puede verificarse que\nson expresiones lambda equivalentes. La Multiplicaci\u00f3n se expresa como\nla idea es que multiplicar m y n es lo mismo que sumar m veces a n.\nDe otra manera:\nLa funci\u00f3n Predecesor \u00a0PRED n = n - 1\u00a0 de un entero positivo n es m\u00e1s compleja:\no alternativamente\nV\u00e9ase que el truco consiste en que (g 1) (\u03bb u. PLUS (g k) 1) k que devuelve k si el valor de g(1) es cero o g(k) + 1 en cualquier otro caso.", "subsections": []}, {"name": "L\u00f3gica y predicados", "text": "Para poder llegar a una definici\u00f3n de booleanos en c\u00e1lculo lambda, se comienza con su especificaci\u00f3n: TRUE, FALSE y ifthenelse deben ser \u03bb-expresiones en forma normal, tal que para todo par de \u03bb-expresiones P y Q\nCualquier par de expresiones que cumplan esto sirve.\nLa soluci\u00f3n m\u00e1s simple resulta de fijar ifthenelse como \u03bbb.\u03bbx.\u03bby. b x y, dejando que todo el trabajo de aplicar los booleanos recaiga sobre TRUE y FALSE, entonces:\nQuedando:\nLos booleanos (como era de esperarse) tambi\u00e9n son funciones. Es f\u00e1cil ver que es posible cambiar la \u03bb-expresi\u00f3n ifthenelse para que aplique los par\u00e1metros en orden inverso, cambiando la forma de TRUE y FALSE. Por eso, se adapta, por convenci\u00f3n, de esta manera (conocida como booleanos de Church). N\u00f3tese que FALSE es equivalente al n\u00famero de Church cero.\nLuego, con estas dos definiciones podemos definir algunos operadores l\u00f3gicos:\nAhora podemos reducir, por ejemplo:\ny vemos que AND TRUE FALSE es equivalente a FALSE.\nUn predicado es una funci\u00f3n que devuelve un valor booleano. El predicado m\u00e1s simple es ISZERO el cual nos devuelve TRUE si el n\u00famero de Church argumento es 0 o FALSE en otro caso.\nPor supuesto, esta definici\u00f3n nos sirve solo para los n\u00fameros naturales definidos previamente.", "subsections": []}, {"name": "Pares", "text": "Un par (2-tupla) puede ser definido en t\u00e9rminos de TRUE y FALSE.\nUna estructura de datos del tipo lista enlazada puede ser definida, tanto como NIL para la lista vac\u00eda, o como el CONS de un elemento y de la lista m\u00e1s peque\u00f1a en tal caso sea requerido.", "subsections": []}, {"name": "Recursi\u00f3n", "text": "Recursi\u00f3n es la definici\u00f3n de una funci\u00f3n usando la funci\u00f3n que se est\u00e1 definiendo. El c\u00e1lculo lambda no permite esto. Sin embargo, esta noci\u00f3n es un poco confusa. Considere por ejemplo la definici\u00f3n de la funci\u00f3n factorial f(n) definida recursivamente por:\nEn el c\u00e1lculo lambda, no es posible definir funciones que se incluyan a s\u00ed mismas. Para sortear esta dificultad, se comienza por definir una funci\u00f3n, denominada aqu\u00ed como g, que toma a una funci\u00f3n f como argumento y devuelve otra funci\u00f3n que toma n como argumento:\nLa funci\u00f3n que devuelve g es o bien la constante 1, o n veces la aplicaci\u00f3n de la funci\u00f3n f a n-1. Usando el predicado ISZERO, y las definiciones booleanas y algebraicas anteriores, la funci\u00f3n g puede ser definida en el c\u00e1lculo lambda.\nSin embargo, g todav\u00eda no es recursiva en s\u00ed misma; para usar g para crear la funci\u00f3n factorial recursiva, la funci\u00f3n pasada a g como f debe tener unas propiedades espec\u00edficas. A saber, la funci\u00f3n pasada como f debe expandirse a la funci\u00f3ng llamada con un argumento -- y que el argumento debe ser la funci\u00f3n que ha sido pasado como f de nuevo.\nEn otras palabras, f debe expandir a g(f). Esta llamada a g expandir\u00e1 a la siguiente a la funci\u00f3n factorial y calcular\u00e1 otro nivel de recursi\u00f3n. En la expansi\u00f3n la funci\u00f3n f aparecer\u00e1 nuevamente, y nuevamente expandir\u00e1 a g(f) y continuara la recursi\u00f3n. Este tipo de funci\u00f3n, donde f = g(f), es llamada un fixed-point de g, y resulta que puede ser implementado en el c\u00e1lculo lambda usando lo que es conocido como el paradoxical operator or fixed-point operator y es representado como Y -- el Y combinator:\nEn el c\u00e1lculo lambda, Y g es un punto fijo de g, debido a que expande a g (Y g). Ahora, para completar nuestra llamada recursiva a la funci\u00f3n factorial, simplemente llamar\u00eda \u00a0g (Y g) n,\u00a0 donde n es el n\u00famero del cual queremos calcular el factorial.\nDado, por ejemplo n = 5, esta se expandir\u00e1 como:\nY as\u00ed, se va evaluando la estructura del algoritmo de forma recursiva. Cada funci\u00f3n recursiva definida puede ser vista como un punto fijo de otra funci\u00f3n adecuada, y por lo tanto, utilizando Y, cada funci\u00f3n recursiva definida puede expresarse como una expresi\u00f3n lambda. En particular, ahora podemos definir limpiamente la resta, la multiplicaci\u00f3n y la comparaci\u00f3n de predicado de los n\u00fameros naturales de forma recursiva.", "subsections": []}, {"name": "Funciones computables y el c\u00e1lculo lambda", "text": "Una funci\u00f3n F: N \u2192 N de n\u00fameros naturales es una funci\u00f3n computable si y solo si existe una expresi\u00f3n lambda f tal que para todo par de x, y in N, \u00a0F(x) = y\u00a0 si y solo si \u00a0f x\u00a0==\u00a0y,\u00a0 donde x e y son numerales de Church correspondientes a x e y, respectivamente. Esta solo es una de tantas maneras de definir computabilidad; v\u00e9ase tesis de Church-Turing para una discusi\u00f3n, otras aproximaciones y sus equivalencias.", "subsections": []}, {"name": "Indecisi\u00f3n de equivalencia", "text": "No hay un algoritmo que tome dos expresiones lambda arbitrarias y produzca TRUE o FALSE dependiendo de si las dos expresiones son o no equivalentes. Este fue hist\u00f3ricamente el primer problema para el cual la irresolubilidad pudo ser probada. Por supuesto, de manera previa para hacer esto, la noci\u00f3n de algoritmo tuvo que ser definida de forma clara; Church la defini\u00f3 usando funciones recursivas, la cual se sabe que es equivalente a todas las otras definiciones razonables de esta noci\u00f3n.\nLa primera prueba de Church reduce el problema de determinar si una expresi\u00f3n lambda dada tiene una forma normal. Una forma normal es una expresi\u00f3n equivalente irreductible. Entonces se asume que este predicado es computable y que puede ser expresado de aqu\u00ed en adelante en notaci\u00f3n de c\u00e1lculo lambda. Bas\u00e1ndose en un trabajo previo de Kleene y construyendo una numeraci\u00f3n de G\u00f6del para expresiones lambda, Church construy\u00f3 una expresi\u00f3n lambda e que segu\u00eda la prueba del teorema de incompletitud de G\u00f6del. Si e se aplica a su propio n\u00famero G\u00f6del, se produce una contradicci\u00f3n.", "subsections": []}, {"name": "C\u00e1lculo lambda y los lenguajes de programaci\u00f3n", "text": "Como lo menciona Peter Landin en su libro cl\u00e1sico Correspondencia entre ALGOL 60 y el c\u00e1lculo lambda de Church, la mayor\u00eda de los lenguajes de programaci\u00f3n tienen sus ra\u00edces en el c\u00e1lculo lambda, lo que provee los mecanismos b\u00e1sicos para las abstracciones de procedimiento y abstracciones de aplicaciones (subprogramas).\nLa implementaci\u00f3n del c\u00e1lculo lambda en una computadora involucra tratar a las \"funciones\" como objetos de primera clase, lo que aumenta la complejidad de su implementaci\u00f3n. Un problema particularmente dif\u00edcil es la implementaci\u00f3n de funciones de orden superior, conocido como el problema de Funarg. \nLas contrapartes m\u00e1s prominentes del c\u00e1lculo lambda en programaci\u00f3n son los lenguajes de programaci\u00f3n funcional, que esencialmente implementa el c\u00e1lculo aumentado con algunas constantes y tipos de dato. \nLos lenguajes funcionales no son los \u00fanicos que soportan las funciones como objetos de primera clase. Muchos lenguajes de programaci\u00f3n imperativa, como Pascal, hace tiempo que permiten pasar subprogramas como argumentos a otros subprogramas. En C y su derivado C++ el resultado equivalente se obtiene pasando punteros al c\u00f3digo de las funciones (subprogramas). Estos mecanismos est\u00e1n limitados a subprogramas escritos expl\u00edcitamente en el c\u00f3digo, y no soportan directamente funciones de alto nivel. Algunos lenguajes imperativos orientados a objetos, tiene notaciones que representan funciones de cualquier orden; tales mecanismos est\u00e1n disponibles en C++, Smalltalk y m\u00e1s recientemente en (\"agentes\" de ) Eiffel y (\"delegados\" de) C#. Como ejemplo, la expresi\u00f3n de \"agente en l\u00ednea\" de Eiffel\ndenota un objeto correspondiente a la expresi\u00f3n lambda \u03bb x. x*x (con llamada por valor). Puede ser tratada como cualquier otra expresi\u00f3n, por ejemplo, asignarla a una variable o pasada a una rutina. Si el valor de square es el de la expresi\u00f3n de agente anterior, entonces el resultado de aplicar square a un valor (una reducci\u00f3n \u03b2) es expresada como square.item ([a]), donde el argumento es pasado como una tupla.\nUn ejemplo en Python usa la forma lambda de funciones:\nfunc\n=\nlambda\nx\n:\n*\nLo anterior crea una funci\u00f3n an\u00f3nima llamada func que puede ser pasada como par\u00e1metros a otras funciones, ser almacenada en variables, etc. Python tambi\u00e9n puede tratar cualquier otra funci\u00f3n creada con la sentencia est\u00e1ndar def como un first-class object.\nLo mismo se aplica a la siguiente expresi\u00f3n en Smalltalk:\n:\nx\n|\n*\nEste es un objeto de primera clase (clausura de bloque), que puede ser guardado en variables, pasado como argumento, etc.\nUn ejemplo similar en C++ (usando la biblioteca Boost.Lambda):\nfor_each\n(\nv\n.\nbegin\n(),\n \nend\ncout\n<<\n_1\nendl\n;);\nAqu\u00ed, la funci\u00f3n de librer\u00eda est\u00e1ndar for_each itera sobre todos los miembros del vector (o lista) v, e imprime el cuadrado de cada elemento. La notaci\u00f3n _1 es la convenci\u00f3n Boost de Lambda para representar el elemento contenedor, representado como x en cualquier otro lado.\nUn delegado simple de c# que toma una variable y retorna el cuadrado. Esta variable funci\u00f3n puede ser pasada a otros m\u00e9todos (o delegados de funciones)\n// Declare a delegate signature\ndelegate\ndouble\nMathDelegate\ni\n);\n// Create an delegate instance\nMathDelegate\nf\n=\n)\n{\nreturn\nMath\nPow\n,\n2\n};\n// Passing 'f' function variable to another method, executing,\n// and returning the result of the function\nExecute\n\t\nfunc\n100\n}", "subsections": []}, {"name": "Estrategias de reducci\u00f3n", "text": "El que un t\u00e9rmino llegue a una forma normal o no, y cuanto trabajo debe realizarse para ello si se puede, depende sustancialmente de la estrategia de reducci\u00f3n utilizada. La distinci\u00f3n entre las estrategias de reducci\u00f3n est\u00e1 relacionada con la distinci\u00f3n en lenguajes de programaci\u00f3n funcional entre evaluaci\u00f3n estricta y evaluaci\u00f3n perezosa.\nEl orden aplicativo no es una estrategia de normalizaci\u00f3n. El ejemplo m\u00e1s t\u00edpico es el siguiente: se define Q = \u03c9\u03c9 donde \u03c9 = \u03bbx.xx. Esta expresi\u00f3n solo contiene una redex (la expresi\u00f3n completa), la cual resulta al ser reducida otra vez en Q. Como es la \u00fanica reducci\u00f3n posible, Q no tiene forma normal bajo ninguna estrategia de reducci\u00f3n. Utilizando orden aplicativo, la expresi\u00f3n KI\u03a9 = (\u03bbx.\u03bby.x) (\u03bbx.x)\u03a9 es reducida reduciendo primero Q, pero como no tiene forma normal, esta estrategia fracasa a la hora de encontrar una forma normal para KIQ.\nEn contraposici\u00f3n, el orden normal siempre encuentra la forma normal si esta existe. En el ejemplo anterior, KIQ es reducido bajo orden normal a I, una forma normal. Uno de los inconvenientes es que las redexes en los argumentos pueden ser copiadas, resultando en trabajo duplicado. En ese caso, el orden aplicativo se encuentra en ventaja, porque nunca sustituye argumentos que contengan redexes, y el trabajo es realizado una \u00fanica vez.\nLa mayor\u00eda de lenguajes de programaci\u00f3n funcionales puros (sobre todo Miranda y sus descendientes, incluyendo Haskell) utilizan evaluaci\u00f3n perezosa, que es esencialmente id\u00e9ntica a la llamada por necesidad. Esta es similar a la reducci\u00f3n por orden normal, pero evita la duplicaci\u00f3n de trabajo mediante la representaci\u00f3n indirecta de los t\u00e9rminos repetidos, abstra\u00edda de su posici\u00f3n real y accedida de forma indirecta (y por tanto, varias posiciones pueden compartir el mismo t\u00e9rmino).", "subsections": []}, {"name": "Concurrencia y paralelismo", "text": "La propiedad Church-Rosser del c\u00e1lculo lambda significa que la evaluaci\u00f3n (reducci\u00f3n-\u03b2) puede ser llevada a cabo en \"cualquier orden\", incluso al mismo tiempo (de hecho, el c\u00e1lculo lambda es de transparencia referencial). Aunque esto significa que el c\u00e1lculo lambda puede crear un modelo de diversas estrategias de evaluaci\u00f3n no deterministas, no ofrece ninguna noci\u00f3n acerca de la computaci\u00f3n paralela, ni expresa ning\u00fan lenguaje de programaci\u00f3n simult\u00e1neo (o concurrente). Procesadores de c\u00e1lculo tales como el CSP, CSS, el C\u00e1lculo-\u03c0 y el C\u00e1lculo ambiente han sido dise\u00f1ados para tales prop\u00f3sitos.\nA pesar de que el c\u00e1lculo lambda no determinista es capaz de expresar cualquier \"funci\u00f3n\" parcial recursiva, no es capaz de expresar cualquier \"computaci\u00f3n\". Por ejemplo, no es capaz de expresar no-determinismos infinitos (como cualquier expresi\u00f3n lamba no determinista que termine; terminar\u00e1 en un n\u00famero finito de expresiones). Sin embargo, hay programas concurrentes que garantizan la interrupci\u00f3n de ese t\u00e9rmino en un n\u00famero infinito de estados [Clinger 1981, Hewitt 2006].", "subsections": []}, {"name": "Reducci\u00f3n \u00f3ptima", "text": "L\u00e9vy define en su publicaci\u00f3n de 1988 \"Sharing in the Evaluation of lambda Expressions\" la noci\u00f3n de compartir \u00f3ptimamente, de forma que no se duplique el trabajo. Por ejemplo, realizar una reducci\u00f3n beta en orden normal sobre (\u03bbx.xx) (II) la reduce a II (II). El argumento II es duplicado por la aplicaci\u00f3n al primer t\u00e9rmino lambda. Si la reducci\u00f3n se realiz\u00f3 en orden aplicativo primero, se ahorra trabajo porque no se duplican esfuerzos: (\u03bbx.xx) (II) se reduce a (\u03bbx.xx) I. Por otra parte, emplear orden aplicativo puede resultar en reducciones redundantes o incluso nunca reducirse a una forma normal. Por ejemplo, realizar una reducci\u00f3n beta en orden normal en (\u03bbf.f I) (\u03bby.(\u03bbx.xx) (y I)) resulta en (\u03bby.(\u03bbx.xx) (y I)) I, (\u03bbx.xx) (II), que puede ser realizado sin duplicar esfuerzos. Hacer lo mismo pero en orden aplicativo resulta en (\u03bbf.f I) (\u03bby.y I (y I)), (\u03bby.y I (y I)) I, I I (I I), por lo que ahora el trabajo se duplica.\nL\u00e9vy muestra la existencia de t\u00e9rminos lambda donde no existe una secuencia de reducciones que las reduzca sin duplicar el trabajo a realizar. El siguiente t\u00e9rmino lambda es un ejemplo de estos t\u00e9rminos:\nEst\u00e1 compuesto de tres t\u00e9rminos similares, x=((\u03bbg. ... ) (\u03bbh.y)), y=((\u03bbf. ...) (\u03bbw.z) ) y z=\u03bbw.(h(w(\u03bby.y))). Solo hay dos reducciones beta posibles, sobre x y sobre y. Reducir el t\u00e9rmino x externo primero resulta en t\u00e9rminos duplicados (el t\u00e9rmino interno y el t\u00e9rmino y), y cada copia debe ser reducida; pero reducir el t\u00e9rmino y primero duplica su argumento z, que causar\u00e1 que se duplique el trabajo cuando se conozcan los valores de h y w. Curiosamente, dicho t\u00e9rmino se reduce a la funci\u00f3n identidad (\u03bby.y), y se construye realizando encapsulaciones sucesivas.\nLa noci\u00f3n precisa de trabajo duplicado se basa en darse cuenta de que tras hacerse la primera reducci\u00f3n a I I, el valor de otro I I puede determinarse, porque tienen la misma estructura (y tienen de hecho el mismo valor), y resultan de un ancestro com\u00fan. A dichas estructuras similares se les puede asignar una etiqueta que puede ser rastreada durante las reducciones. Si un nombre es asignado a la redex que produce todos los t\u00e9rminos II resultantes, despu\u00e9s todas las ocurrencias duplicadas de II pueden ser localizadas y reducidas de una vez. Sin embargo, no es obvio si una redex producir\u00e1 el t\u00e9rmino II. Identificar las estructuras que son similares en partes diferentes de un t\u00e9rmino lambda puede requerir de algoritmos complejos y puede conllevar incluso una complejidad igual al historial de la reducci\u00f3n misma.\nMientras L\u00e9vy define la noci\u00f3n de compartir \u00f3ptimamente, no proporciona un algoritmo para hacerlo. En la publicaci\u00f3n de Vincent van Oostrom, Kees-Jan van de Looij y Marijn Zwitserlood Lambdascope: Another optimal implementation of the lambda-calculus, se proporciona tal algoritmo transformando t\u00e9rminos lambda en redes de interacci\u00f3n, que despu\u00e9s son reducidas. En t\u00e9rminos generales, la reducci\u00f3n resultante es \u00f3ptima porque cada t\u00e9rmino que tuviese la misma etiqueta seg\u00fan el trabajo de L\u00e9vy ser\u00edan el mismo grafo en la red de interacci\u00f3n. En la publicaci\u00f3n, mencionan que su prototipo de Lambdascope rinde de forma similar a la versi\u00f3n optimizada de la implementaci\u00f3n de referencia de la BOHM.", "subsections": []}, {"name": "Sem\u00e1ntica", "text": "El hecho de que los t\u00e9rminos del c\u00e1lculo lambda puedan actuar como funciones sobre otros t\u00e9rminos, o incluso sobre s\u00ed mismos, llev\u00f3 a cuestionarse la sem\u00e1ntica del c\u00e1lculo lambda. \u00bfSe le puede asignar un significado a los t\u00e9rminos del c\u00e1lculo lambda? La sem\u00e1ntica natural era encontrar un conjunto D isom\u00f3rfico al espacio de funciones D \u2192 D, de funciones de s\u00ed mismo. Sin embargo, no puede existir tal D que no sea trivial, por restricciones de cardinalidad, porque el conjunto de todas las funciones de D a D tiene mayor cardinalidad que D a menos que sea un conjunto unitario\nEn 1970, Dana Scott mostr\u00f3 que, si solo se consideran funciones continuas, un conjunto o dominio D con las propiedades necesarias se puede encontrar, proporcionando por tanto un modelo para el c\u00e1lculo lambda.\nEste trabajo tambi\u00e9n sent\u00f3 las bases para la sem\u00e1ntica denotacional de los lenguajes de programaci\u00f3n", "subsections": []}, {"name": "Referencias", "text": "\u2191 A. Church, \"A set of postulates for the foundation of logic\", Annals of Mathematics, Series 2, 33:346-366 (1932).\n\u2191 Kleene, S. C. & Rosser, J. B. (1935). \u00abThe inconsistency of certain formal logics\u00bb. Annals of Mathematics 36 (3): 630-636. doi:10.2307/1968646.\u00a0\n\u2191 Church, A. \u00abA Formulation of the Simple Theory of Types\u00bb. Journal of Symbolic Logic 5: 1940.\u00a0\nAbelson, Harold & Gerald Jay Sussman. Structure and Interpretation of Computer Programs. [[The MIT Press]]. ISBN 0-262-51087-1.\nBarendregt, Henk, The lambda calculus, its syntax and semantics, North-Holland (1984), is the comprehensive reference on the (untyped) lambda calculus; see also the paper Introduction to Lambda Calculus.\nBarendregt, Henk, The Type Free Lambda Calculus pp1091-1132 of Handbook of Mathematical Logic, North-Holland (1977) ISBN 0-7204-2285-X\nChurch, Alonzo, An unsolvable problem of elementary number theory, American Journal of Mathematics, 58 (1936), pp. 345-363. This paper contains the proof that the equivalence of lambda expressions is in general not decidable.\nClinger, William, Foundations of Actor Semantics. MIT Mathematics Doctoral Dissertation, June 1981.\nPunit, Gupta, Amit & Ashutosh Agte, Untyped lambda-calculus, alpha-, beta- and eta- reductions and recursion\nHenz, Martin, The Lambda Calculus. Formally correct development of the Lambda calculus.\nHewitt, Carl, What is Commitment? Physical, Organizational, and Social Archivado el 11 de febrero de 2021 en Wayback Machine. COIN@AAMAS. April 27, 2006.\nKleene, Stephen, A theory of positive integers in formal logic, American Journal of Mathematics, 57 (1935), pp. 153-173 and 219-244. Contains the lambda calculus definitions of several familiar functions.\nLandin, Peter, A Correspondence Between ALGOL 60 and Church's Lambda-Notation, Communications of the ACM, vol. 8, no. 2 (1965), pages 89-101. Available from the ACM site. A classic paper highlighting the importance of lambda-calculus as a basis for programming languages.\nLarson, Jim, An Introduction to Lambda Calculus and Scheme. A gentle introduction for programmers.\nSome parts of this article are based on material from FOLDOC, used with permission.\nMiguel \u00c1ngel Jim\u00e9nez Santana, Lambda Calculus Graphical Interpreter", "subsections": []}, {"name": "Enlaces externos", "text": "L. Allison, Algunos ejemplos ejecutables de c\u00e1lculo-\u03bb (en ingl\u00e9s)\nChris Barker, Lambda tutorial Some executable (Javascript) Ejemplos simples, con anotaciones. (en ingl\u00e9s)\nGeorg P. Loczewski, The Lambda Calculus and A++\nRa\u00fal Rojas, A Tutorial Introduction to the Lambda Calculus -(PDF)\nDavid C. Keenan, To Dissect a Mockingbird: A Graphical Notation for the Lambda Calculus with Animated Reduction\nBret Victor, Alligator Eggs: A Puzzle Game Based on Lambda Calculus\nMiguel \u00c1ngel Jim\u00e9nez Santana, Lambda Calculus Graphical Interpreter\nCamilo Chac\u00f3n Sartori, Introducci\u00f3n al c\u00e1lculo lambda usando Racket (espa\u00f1ol)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/C%C3%B3digo_abierto", "title": "C\u00f3digo abierto", "summary": "El c\u00f3digo abierto (en ingl\u00e9s: open source) es un modelo de desarrollo de software basado en la colaboraci\u00f3n abierta.[1]\u200b Se enfoca en los beneficios pr\u00e1cticos (acceso al c\u00f3digo fuente) y en cuestiones \u00e9ticas o de libertad que tanto se destacan en el software libre.[2]\u200b Para muchos el t\u00e9rmino \u00ablibre\u00bb hace referencia al hecho de adquirir un software de manera gratuita. Sin embargo, de lo que se trata es de abaratar los costos y ampliar la participaci\u00f3n; que sea libre no necesariamente implica que sea gratuito, lo importante sigue siendo ampliar la participaci\u00f3n y extender libertades.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Movimiento del c\u00f3digo abierto\n3 Programas en c\u00f3digo abierto\n4 C\u00f3digo abierto en educaci\u00f3n\n5 Extensiones del concepto\n6 V\u00e9ase tambi\u00e9n\n7 Referencias\n8 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "Art\u00edculo principal:\nSe utiliz\u00f3 por primera vez en 1990 en las comunidades de software libre, tratando de usarlo como reemplazo al ambiguo nombre original en ingl\u00e9s del software libre (free software). Lo cual implica, para el caso que nos ocupa, \u00absoftware que podemos usar, escribir, modificar y redistribuir libremente\u00bb.\nLa expresi\u00f3n, para algunos, no result\u00f3 apropiada como reemplazo para el ya tradicional free software, pues eliminaba la idea de libertad, confundida con la simple gratuidad.[3]\u200b No obstante contin\u00faa siendo ambivalente, puesto que se usa en la actualidad por parte de programadores que no ofrecen software libre pero, en cambio, s\u00ed ofrecen el c\u00f3digo fuente de los programas para su revisi\u00f3n o modificaci\u00f3n previamente autorizada por parte de sus pares acad\u00e9micos.\nDada la ausencia de tal ambig\u00fcedad en la lengua espa\u00f1ola, el t\u00e9rmino software libre es adecuado para referirse a programas que se ofrecen con total libertad de modificaci\u00f3n, uso y distribuci\u00f3n bajo la regla impl\u00edcita de no modificar dichas libertades hacia el futuro. De hecho en ingl\u00e9s tambi\u00e9n se usa el t\u00e9rmino \u00ablibre software\u00bb para evitar ambig\u00fcedades sem\u00e1nticas.\nDesde el punto de vista de una \u00abtraducci\u00f3n estrictamente literal\u00bb, el significado textual de c\u00f3digo abierto es que \u00abse puede examinar el c\u00f3digo fuente\u00bb, por lo que puede ser interpretado como un t\u00e9rmino m\u00e1s d\u00e9bil y flexible que el del software libre. Sin embargo, ambos movimientos reconocen el mismo conjunto de licencias y mantienen principios equivalentes.\nSin embargo, hay que diferenciar los programas de c\u00f3digo abierto, que dan a los usuarios la libertad de mejorarlos, de los programas que simplemente tienen el c\u00f3digo fuente disponible, previa restricciones sobre su uso o modificaci\u00f3n.\nEn la actualidad el c\u00f3digo abierto se utiliza para definir un movimiento nuevo de software (la Iniciativa Open Source),[4]\u200b diferente al movimiento del software libre, incompatible con este \u00faltimo desde el punto de vista filos\u00f3fico, y completamente equivalente desde el punto de vista pr\u00e1ctico, de hecho, ambos movimientos trabajan juntos en el desarrollo pr\u00e1ctico de proyectos.\nLa idea bajo el concepto de c\u00f3digo abierto es sencilla: cuando los programadores (en Internet) pueden leer, modificar y redistribuir el c\u00f3digo fuente de un programa, este evoluciona, se desarrolla y mejora. Los usuarios lo adaptan a sus necesidades, corrigen sus errores con un tiempo de espera menor a la aplicada en el desarrollo de software convencional o cerrado, dando como resultado la producci\u00f3n de un mejor software.", "subsections": []}, {"name": "Movimiento del c\u00f3digo abierto", "text": "La idea del c\u00f3digo abierto se centra en la premisa de que al compartir el c\u00f3digo, el programa resultante tiende a ser de calidad superior al software propietario, es una visi\u00f3n t\u00e9cnica. Por otro lado, el software libre tiene tendencias filos\u00f3ficas e incluso morales:[5]\u200b el software propietario, al no poder compartirse, es \u00abanti\u00e9tico\u00bb dado que prohibir compartir entre seres humanos va en contra del sentido com\u00fan. Ninguna adaptaci\u00f3n ni cambios que no haya realizado previamente la empresa fabricante.\nAl igual que el software libre, el c\u00f3digo abierto tiene una serie de requisitos necesarios para que un programa pueda considerarse dentro de este movimiento,[6]\u200b estos son:\nLibre redistribuci\u00f3n: el software debe poder ser regalado o vendido libremente.\nC\u00f3digo fuente: el c\u00f3digo fuente debe estar incluido u obtenerse libremente.\nTrabajos derivados: la redistribuci\u00f3n de modificaciones debe estar permitida.\nIntegridad del c\u00f3digo fuente del autor: las licencias pueden requerir que las modificaciones sean redistribuidas solo como parches.\nLa licencia no debe discriminar a ninguna persona o grupo: nadie puede dejarse fuera.\nSin discriminaci\u00f3n de \u00e1reas de iniciativa: los usuarios comerciales no pueden ser excluidos.\nDistribuci\u00f3n de la licencia: deben aplicarse los mismos derechos a todo el que reciba el programa.\nLa licencia no debe ser espec\u00edfica de un producto: el programa no puede licenciarse solo como parte de una distribuci\u00f3n mayor.\nLa licencia no debe restringir otro software: la licencia no puede obligar a que alg\u00fan otro software que sea distribuido con el software abierto deba tambi\u00e9n ser de c\u00f3digo abierto.\nLa licencia debe ser tecnol\u00f3gicamente neutral: no debe requerirse la aceptaci\u00f3n de la licencia por medio de un acceso por clic de rat\u00f3n o de otra forma espec\u00edfica del medio de soporte del software.\nEste dec\u00e1logo es compatible con las cuatro libertades del software libre.", "subsections": []}, {"name": "Programas en c\u00f3digo abierto", "text": "Sistemas operativos: los m\u00e1s conocidos, Red Hat (Centos), Ubuntu y Debian, basados en Linux. Android, de Google, para tel\u00e9fonos inteligentes y tabletas.\nProgramas: Existen programas de c\u00f3digo abierto en diferentes \u00e1reas, algunos de ellos son: las suites ofim\u00e1ticas LibreOffice y Open Office , el navegador Firefox, el cliente de correo electr\u00f3nico Thunderbird, el reproductor multimedia VLC, editores de im\u00e1genes GIMP o InkScape, editor de video Kdenlive, editor de audio Audacity, videojuegos Frets on fire, 0 A.D., Hypnotix[7]\u200b es una aplicaci\u00f3n de transmisi\u00f3n de IPTV con soporte para transmisi\u00f3n en vivo, pel\u00edculas y programas. Tambi\u00e9n puedes obtener una enorme lista de canales de televisi\u00f3n gratuitos de todo el mundo. Apertium   Apertium[8]\u200b es una plataforma de software libre y de c\u00f3digo abierto para la traducci\u00f3n autom\u00e1tica, con licencia GNU. La plataforma ofrece: traducci\u00f3n autom\u00e1tica independiente del idioma; herramientas de recogida de datos ling\u00fc\u00edsticos para la traducci\u00f3n autom\u00e1tica; datos ling\u00fc\u00edsticos de un gran n\u00famero de pares de lenguas. Apertium es utilizado en particular por la Fundaci\u00f3n Wikimedia para la traducci\u00f3n de art\u00edculos\nAntivirus: ClamWin\nLos programas de Apache Software Foundation y Github.\nEl lenguaje de programaci\u00f3n de Apple Swift 2.\nPlataformas de ense\u00f1anza como Moodle Chamilo (un ejemplo es sloodle)\nHyperledger Fabric:  Proyecto de c\u00f3digo abierto de Linux Foundation, es una infraestructura modular de blockchain.[9]\u200b", "subsections": []}, {"name": "C\u00f3digo abierto en educaci\u00f3n", "text": "El software libre o de c\u00f3digo abierto est\u00e1 siendo implementado en la educaci\u00f3n, debido tanto a razones pragm\u00e1ticas (menor coste, estabilidad, seguridad, eficiencia) como a razones \u00e9ticas, sociales y pol\u00edticas.[10]\u200b Autores como Stallman insisten en que, a nivel educativo, deber\u00eda utilizarse solamente software de c\u00f3digo abierto, debido a que:[11]\u200b\nDan la libertad de copiar y redistribuir, por lo que se genera un ahorro para las instituciones educativas.\nPromueven que se siga utilizando software libre, lo que ayuda al desarrollo de ciudadanos m\u00e1s independientes en materia de tecnolog\u00eda.\nPermite a los alumnos aprender realmente c\u00f3mo funciona el software y a compartir lo aprendido dentro de una comunidad.", "subsections": []}, {"name": "Extensiones del concepto", "text": "Recientemente se est\u00e1 aplicando por extensi\u00f3n el t\u00e9rmino \u00abc\u00f3digo abierto\u00bb o su equivalente en ingl\u00e9s open source a creaciones que no son programas inform\u00e1ticos. En concreto se habla popularmente de cine open source para referirse a cine bajo distintos tipos de licencias libres.[cita\u00a0requerida] Otro ejemplo es el proyecto de una econom\u00eda de c\u00f3digo abierto de la plataforma Open Source Ecology, comenzado con el desarrollo de m\u00e1quinas industriales de c\u00f3digo abierto.[12]\u200b  Otro ejemplo es lo que sucede con el movimiento social para que liberen las vacunas contra el coronavirus COVID-19.[13]\u200b ", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "C\u00f3digo cerrado\nDise\u00f1o abierto\nEconom\u00eda de c\u00f3digo abierto\nMovimiento del software de c\u00f3digo abierto\nOpen Source Initiative\nSoftware libre y de c\u00f3digo abierto\nSoftware libre y Hardware libre\nSoftware no libre", "subsections": []}, {"name": "Referencias", "text": "\u2191 Levine, Sheen S.; Prietula, Michael (16 de septiembre de 2013). Open Collaboration for Innovation: Principles and Performance (ID 1096442). Social Science Research Network. Consultado el 5 de noviembre de 2017.\u00a0\n\u2191 Izquierdo, Robin (30 de julio de 2018). \u00abIoT y c\u00f3digo abierto. \u00bfCu\u00e1les son sus ventajas e inconvenientes?\u00bb (html). Pandora FMS. Archivado desde el original el 30 de julio de 2018. Consultado el 30 de julio de 2018. \u00abEn una descripci\u00f3n muy breve, podemos decir que el c\u00f3digo abierto (open source) es una forma de desarrollar software basada en la colaboraci\u00f3n entre desarrolladores. El concepto de c\u00f3digo abierto se desarrolla en el \u00e1mbito del \u201csoftware libre\u201d, y aunque no es exactamente lo mismo, se imbuye de su filosof\u00eda. Para que un lego en la materia pueda entenderlo: con frecuencia, cuando una empresa crea un software, oculta su c\u00f3digo, de forma que el resto de desarrolladores no puede conocerlo ni modificarlo. Habitualmente, las empresas hacen esto tanto por motivos comerciales (no desean que su software se distribuya de forma gratuita) como para mantener la integridad del c\u00f3digo (no desean que sufra modificaciones).\u00a0\u00bb\u00a0\n\u2191 \u00abGoodbye, \"free software\"; hello, \"open source\"\u00bb. www.catb.org. Consultado el 16 de octubre de 2021.\u00a0\n\u2191 \u00abAbout the Open Source Initiative | Open Source Initiative\u00bb. opensource.org. Consultado el 16 de octubre de 2021.\u00a0\n\u2191 Stallman, Richard (11 de octubre de 2017). \u00abPor qu\u00e9 el \u00abc\u00f3digo abierto\u00bb pierde de vista lo esencial del software libre\u00bb (html). Free Software Foundation. Archivado desde el original el 11 de julio de 2018. Consultado el 30 de julio de 2018.\u00a0\n\u2191 \u00abThe Open Source Definition | Open Source Initiative\u00bb. opensource.org. Consultado el 12 de octubre de 2016.\u00a0\n\u2191 \u00abAplicaci\u00f3n Hipnotix. Para reproducir radio y TV\u00bb.\u00a0\n\u2191 \u00abApertium. Aplicaci\u00f3n para traducci\u00f3n autom\u00e1tica\u00bb.\u00a0\n\u2191 \u00abHyperledger Fabric en IBM\u00bb.\u00a0\n\u2191 Segura, Jordi Adell; Mu\u00f1oz, Iolanda Bernab\u00e9 (2007). \u00abSoftware libre en educaci\u00f3n\u00bb. Tecnolog\u00eda educativa, 2007, ISBN 84-481-5613-7, p\u00e1gs. 173-194 (McGraw-Hill): 173-194. ISBN\u00a0978-84-481-5613-8. Consultado el 6 de mayo de 2020.\u00a0\n\u2191 Stallman, R. M. (2013). \u00abPor qu\u00e9 las escuelas deben usar exclusivamente software libre\u00bb.\u00a0\n\u2191 \u00abAbout\u00bb. Open Source Ecology (en ingl\u00e9s estadounidense). 7 de febrero de 2014. Consultado el 12 de octubre de 2016.\u00a0\n\u2191 \u00abLiberaci\u00f3n de patentes para enfrentar el COVID-19\u00bb.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Open Source Initiative\nCr\u00edtica de la FSF al t\u00e9rmino c\u00f3digo abierto (open source)\nObservatorio Nacional del Software de Fuentes Abiertas\nComunidad para la difusi\u00f3n del Open Source y de Gnu Linux\nVarios, \"Producir Software de C\u00f3digo Abierto: Como Llevar a Buen Puerto un Proyecto de C\u00f3digo Libre\". O'Reilly, 2007. PDF | OpenLibra Libro gratuito (espa\u00f1ol).\nVideo explicativo sobre software Libre", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/CPython", "title": "CPython", "summary": "CPython es la implementaci\u00f3n oficial y m\u00e1s ampliamente utilizada del lenguaje de programaci\u00f3n Python. Est\u00e1 escrita en C. Adem\u00e1s de CPython, hay otras implementaciones con calidad para producci\u00f3n: Jython, escrita en Java; IronPython, escrita para el Common Language Runtime y PyPy, escrita en un subconjunto del propio lenguaje Python. \nCPython es un int\u00e9rprete de bytecode. Tiene una interfaz de funciones for\u00e1neas para varios lenguajes (incluyendo C, C++ y Fortran)[1]\u200b con el que se pueden codificar bindings para bibliotecas escritas en lenguajes diferentes a Python.[2]\u200b\nAdem\u00e1s de CPython, existen otras implementaciones de Python: Jython, IronPython, PyPy y Stackless Python.", "sections": [{"name": "Referencias", "text": "\u2191 Al Sweigar (2019). Automate the Boring Stuff with Python. No Starch Press. ISBN\u00a0978-1593279929.\u00a0\n\u2191 https://wiki.python.org/moin/PythonImplementations \u00abCPython runtime core (the de-facto reference Python implementation)\u00bb", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n)", "title": "C (lenguaje de programaci\u00f3n)", "summary": "Por favor, ed\u00edtalo para mejorarlo:\nNecesita referencias adicionales para su verificaci\u00f3n.\nExisten dudas o desacuerdos sobre la exactitud de su redacci\u00f3n. Por favor, debate este problema en la p\u00e1gina de discusi\u00f3n.\nPodr\u00eda contener informaci\u00f3n desactualizada.\nPodr\u00eda ser dif\u00edcil de entender para lectores interesados en el tema.\nC\u00f3digo simple en C]\nB (BCPL, CPL), ALGOL 68,[1]\u200b:\u200a201-208\u200a\nC es un lenguaje de programaci\u00f3n de prop\u00f3sito general[2]\u200b:\u200a1\u200a originalmente desarrollado por Dennis Ritchie entre 1969 y 1972 en los Laboratorios Bell,[1]\u200b como evoluci\u00f3n del anterior lenguaje B, a su vez basado en BCPL.[2]\u200b:\u200a1\u200a[3]\u200b[4]\u200b\nAl igual que B, es un lenguaje orientado a la implementaci\u00f3n de sistemas operativos, concretamente Unix. C es apreciado por la eficiencia del c\u00f3digo que produce y es el lenguaje de programaci\u00f3n m\u00e1s popular para crear softwares de sistemas y aplicaciones.\nSe trata de un lenguaje de tipos de datos est\u00e1ticos, d\u00e9bilmente tipado, que dispone de las estructuras t\u00edpicas de los lenguajes de alto nivel pero, a su vez, dispone de construcciones del lenguaje que permiten un control a bajo nivel. Los compiladores suelen ofrecer extensiones al lenguaje que posibilitan mezclar c\u00f3digo en ensamblador con c\u00f3digo C o acceder directamente a memoria o dispositivos perif\u00e9ricos.\nLa primera estandarizaci\u00f3n del lenguaje C fue en ANSI, con el est\u00e1ndar X3.159-1989. El lenguaje que define este est\u00e1ndar fue conocido vulgarmente como ANSI C. Posteriormente, en 1990, fue ratificado como est\u00e1ndar ISO (ISO/IEC 9899:1990).\nLa adopci\u00f3n de este est\u00e1ndar es muy amplia por lo que, si los programas creados lo siguen, el c\u00f3digo es portable entre plataformas y/o arquitecturas.", "sections": [{"name": "\u00cdndice", "text": "1 Filosof\u00eda\n1.1 Propiedades\n1.2 Precauciones que se debe tener por ser un lenguaje de bajo nivel\n1.3 Algunas caracter\u00edsticas de las que carece C\n2 Historia\n2.1 Desarrollo inicial\n2.2 El C de Kernighan y Ritchie\n2.3 ANSI C e ISO C\n2.3.1 Palabras reservadas de ANSI-C\n2.4 C99\n2.5 C11\n2.6 C embebido\n2.7 C18\n3 Lenguajes derivados de C\n4 Proceso de compilaci\u00f3n\n4.1 Ejemplo de c\u00f3digo\n5 Herramientas de programaci\u00f3n\n6 Aplicabilidad\n6.1 Aplicaciones embebidas\n7 Bibliotecas C\n8 V\u00e9ase tambi\u00e9n\n9 Referencias\n10 Enlaces externos", "subsections": []}, {"name": "Filosof\u00eda", "text": "Uno de los objetivos de dise\u00f1o del lenguaje C es que solo sean necesarias unas pocas instrucciones en lenguaje m\u00e1quina para traducir cada elemento del lenguaje, sin que haga falta un soporte intenso en tiempo de ejecuci\u00f3n. Es muy posible escribir C a bajo nivel de abstracci\u00f3n; de hecho, C se us\u00f3 como intermediario entre diferentes lenguajes.\nEn parte, a causa de ser de relativamente bajo nivel y de tener un modesto conjunto de caracter\u00edsticas, se pueden desarrollar compiladores de C f\u00e1cilmente. En consecuencia, el lenguaje C est\u00e1 disponible en un amplio abanico de plataformas (m\u00e1s que cualquier otro lenguaje). Adem\u00e1s, a pesar de su naturaleza de bajo nivel, el lenguaje se desarroll\u00f3 para incentivar la programaci\u00f3n independiente de la m\u00e1quina. Un programa escrito cumpliendo los est\u00e1ndares e intentando que sea port\u00e1til puede compilarse en muchos computadores.\nC se desarroll\u00f3 originalmente (conjuntamente con el sistema operativo Unix, con el que ha estado asociado mucho tiempo) por programadores para programadores. Sin embargo, ha alcanzado una popularidad enorme, y se ha usado en contextos muy alejados de la programaci\u00f3n de software de sistema, para la que se dise\u00f1\u00f3 originalmente.", "subsections": [{"name": "Propiedades", "text": "N\u00facleo del lenguaje simple, con funcionalidades a\u00f1adidas importantes, como funciones matem\u00e1ticas y de gesti\u00f3n de archivos, proporcionadas por bibliotecas.\nEs un lenguaje estructurado, i.e. tiene estructuras de control y tipos de datos estructurados definidos por el programador a partir de los tipos at\u00f3micos t\u00edpicos y mediante arreglos, estructuras, uniones y punteros, incluidos los que apuntan a una funci\u00f3n.\nEn su primera edici\u00f3n no hab\u00eda advertencias sobre asignar a una variable un valor un tipo distinto. Por lo que hab\u00eda un programa llamado lint que detectaba este tipo de errores. Actualmente los compiladores pueden detectar inconsistencias de tipos y otros errores.\nUsa un lenguaje de preprocesado, el preprocesador de C, para tareas como definir macros e incluir m\u00faltiples archivos de c\u00f3digo fuente.\nAcceso a memoria de bajo nivel mediante el uso de punteros.\nManejo de Interrupciones mediante la biblioteca signal.\nUn conjunto reducido de palabras clave.\nEl llamado a funciones es por valor. Aunque se pueden pasar punteros a variables para hacer llamados por referencia.\nDistintos tipos de almacenamiento que permiten un dise\u00f1o modular.\nLa palabra clave static permite encapsular variables y funciones.\nLas estructuras se declaran mediante la palabra clave struct, implementan el producto cartesiano de tipos tambi\u00e9n llamados registros. Y la uni\u00f3n disyunta, tambi\u00e9n llamada suma, co-producto o tipos variantes, se declara con la palabra clave union.\nLas estructuras y uniones permiten la implementaci\u00f3n de \u00e1rboles.\nLenguaje muy eficiente puesto que es posible utilizar sus caracter\u00edsticas de bajo nivel para realizar implementaciones \u00f3ptimas.\nSe dise\u00f1\u00f3 como un lenguaje de programaci\u00f3n de sistemas port\u00e1til.\nEs muy poco lo que requiere uso de ensamblador, lo que permiti\u00f3 portar Unix y otros sistemas operativos a distintos equipos.\nDistingue entre may\u00fasculas y min\u00fasculas, pero conserva su portabilidad en equipos que manejan caracteres de 6 bits, como las computadoras Cyber de CDC que ten\u00edan una palabra de 60 bits, (10 caracteres), porque usan trigr\u00e1ficos para codificar s\u00edmbolos especiales.\nSu compilador de C se ha portado a casi todos los sistemas conocidos. Porque adem\u00e1s de que no se requiere codificar en ensamblador, interact\u00faa con los lenguajes especializados YACC y LEX. tambi\u00e9n escritos en C como parte de Unix.\nFacilita la programaci\u00f3n modular gracias a que cuenta con distintos tipos de almacenamiento de las variables y compilaci\u00f3n separada. Adem\u00e1s del macro procesador integrado cpp, que permite declarar los encabezados de las funciones y los tipos de datos en archivos con extensi\u00f3n h. En el caso de las bibliotecas del sistema Unix y de C se necesita incluir los prototipos con la macros #include por ejemplo #include <system.h>. Ello \u00fanicamente sirve para automatizar la declaraci\u00f3n de objetos externos que se usar\u00e1n en el programa, por lo que es necesario pasar los nombres de las bibliotecas como par\u00e1metros del compilador que este pasa al encadenador (linker loader)."}, {"name": "Precauciones que se debe tener por ser un lenguaje de bajo nivel", "text": "Los programadores novatos deben tener cuidado con la gesti\u00f3n de la memoria; en C el programador ha de reservar y liberar la memoria expl\u00edcitamente. En otros lenguajes (como C# o Java) la memoria es gestionada de forma transparente para el programador. Esto alivia la carga de trabajo y evita errores, pero le quita flexibilidad al lenguaje para escribir controladores del hardware.\nPor esta raz\u00f3n es muy importante que los reci\u00e9n iniciados adopten buenas pr\u00e1cticas a la hora de escribir en C y manejar la memoria, como por ejemplo un uso intensivo de indentaci\u00f3n y conocer a fondo todo lo que implica el manejo de punteros y direcciones de memoria."}, {"name": "Algunas caracter\u00edsticas de las que carece C", "text": "Recolecci\u00f3n de basura nativa, sin embargo se encuentran a tal efecto bibliotecas como la \"libgc\" desarrollada por Sun Microsystems, o el Recolector de basura de Boehm.\nSoporte para programaci\u00f3n orientada a objetos, aunque la implementaci\u00f3n original de C++ fue un preprocesador que traduc\u00eda c\u00f3digo fuente de C++ a C. V\u00e9ase tambi\u00e9n la librer\u00eda GObject.\nFunciones anidadas, aunque GCC tiene esta caracter\u00edstica como extensi\u00f3n.\nSoporte nativo para programaci\u00f3n multihilo. Disponible usando librer\u00edas como libpthread.\nAunque la lista de las caracter\u00edsticas \u00fatiles de las que carece C es larga, este factor ha sido importante para su aceptaci\u00f3n, porque escribir r\u00e1pidamente nuevos compiladores para nuevas plataformas, mantiene lo que realmente hace el programa bajo el control directo del programador, y permite implementar la soluci\u00f3n m\u00e1s natural para cada plataforma. Esta es la causa de que a menudo C sea m\u00e1s eficiente que otros lenguajes. T\u00edpicamente, solo la programaci\u00f3n cuidadosa en lenguaje ensamblador produce un c\u00f3digo m\u00e1s r\u00e1pido, pues da control total sobre la m\u00e1quina, aunque los avances en los compiladores de C y la complejidad creciente de los microprocesadores modernos han reducido gradualmente esta diferencia.\nEl lenguaje se puede extender mediante bibliotecas y macros. Por ejemplo, la implementaci\u00f3n original de C++ consist\u00eda en un preprocesador que traduc\u00eda c\u00f3digo fuente C++ a C."}]}, {"name": "Historia", "text": "", "subsections": [{"name": "Desarrollo inicial", "text": "El desarrollo inicial de C se llev\u00f3 a cabo en los Laboratorios Bell de AT&T entre 1969 y 1973; seg\u00fan Dennis Ritchie, el periodo m\u00e1s creativo tuvo lugar en 1972. [1]\u200b Se le dio el nombre \"C\" porque muchas de sus caracter\u00edsticas fueron tomadas de un lenguaje anterior llamado\n\"B\".\nHay muchas leyendas acerca del origen de C y el sistema operativo con el que est\u00e1 \u00edntimamente relacionado, Unix. Algunas de ellas son:\nEl desarrollo de C fue el resultado del deseo de los programadores de jugar con Space Travel. Hab\u00edan estado jugando en el mainframe de su compa\u00f1\u00eda, pero debido a su poca capacidad de proceso y al tener que soportar 100 usuarios, Ken Thompson y Dennis Ritchie no ten\u00edan suficiente control sobre la nave para evitar colisiones con los asteroides, por ese motivo decidieron portar el juego a un PDP-7 de la oficina que no se utilizaba; pero esa m\u00e1quina no ten\u00eda sistema operativo, as\u00ed que decidieron escribir uno. Finalmente decidieron portar el sistema operativo del PDP-11 que hab\u00eda en su oficina, pero era muy costoso, pues todo el c\u00f3digo estaba escrito en lenguaje ensamblador. Entonces decidieron usar un lenguaje de alto nivel y port\u00e1til para que el sistema operativo se pudiera portar f\u00e1cilmente de un ordenador a otro, consideraron usar B pero carec\u00eda de las funcionalidades necesarias para aprovechar algunas caracter\u00edsticas avanzadas del PDP-11 entonces empezaron a crear un nuevo lenguaje: C.\nLa justificaci\u00f3n para obtener el ordenador original que se us\u00f3 para desarrollar Unix fue crear un sistema que automatizase el archivo de patentes. La versi\u00f3n original de Unix se desarroll\u00f3 en lenguaje ensamblador. M\u00e1s tarde, el lenguaje C se desarroll\u00f3 para poder reescribir el sistema operativo.\nEn 1973, el lenguaje C se hab\u00eda vuelto tan potente que la mayor parte del kernel Unix, originalmente escrito en el lenguaje ensamblador PDP-11, fue reescrita en C.[1]\u200b Este fue uno de los primeros n\u00facleos de sistema operativo implementados en un lenguaje distinto al ensamblador. (Algunos casos anteriores son el sistema Multics, escrito en PL/I, y Master Control Program para el B5000 de Burroughs, escrito en ALGOL en 1961)."}, {"name": "El C de Kernighan y Ritchie", "text": "En 1978, Ritchie y Brian Kernighan publicaron la primera edici\u00f3n de El lenguaje de programaci\u00f3n C, tambi\u00e9n conocido como La biblia de C. Este libro fue durante a\u00f1os la especificaci\u00f3n informal del lenguaje.[2]\u200b:\u200a2\u200a El lenguaje descrito en este libro recibe habitualmente el nombre de \"el C de Kernighan y Ritchie\" o simplemente \"K&R C\" (La segunda edici\u00f3n del libro cubre el est\u00e1ndar ANSI C, descrito m\u00e1s abajo).\nKernighan y Ritchie introdujeron las siguientes caracter\u00edsticas al lenguaje:\nEl tipo de datos struct.\nEl tipo de datos long int.\nEl tipo de datos unsigned int.\nLos operadores =+ y =- fueron sustituidos por += y -= para eliminar la ambig\u00fcedad sint\u00e1ctica de expresiones como i=-10, que se podr\u00eda interpretar bien como i\u00a0=-\u00a010 o bien como i\u00a0=\u00a0-10.\nEl C de Kernighan y Ritchie es el subconjunto m\u00e1s b\u00e1sico del lenguaje que un compilador debe de soportar. Durante muchos a\u00f1os, incluso tras la introducci\u00f3n del ANSI C, fue considerado \"el m\u00ednimo com\u00fan denominador\" en el que los programadores deb\u00edan programar cuando deseaban que sus programas fueran transportables, pues no todos los compiladores soportaban completamente ANSI, y el c\u00f3digo razonablemente bien escrito en K&R C es tambi\u00e9n c\u00f3digo ANSI C v\u00e1lido.\nEn las primeras versiones del lenguaje, la definici\u00f3n de funciones se hac\u00eda mediante un 'prototipo de funci\u00f3n' (function prototype), el cual indicaba al compilador el tipo de retorno de la funci\u00f3n. Aunque este m\u00e9todo tiene una gran desventaja respecto al nuevo, debido a que no comprueba el n\u00famero ni el tipo en la lista de argumentos; en otras palabras, es mucho m\u00e1s f\u00e1cil cometer errores al hacer una llamada a una funci\u00f3n con argumentos incorrectos.\nEjemplo del \"viejo estilo\":\nint\n \npower\n();\n/* Se podr\u00eda usar este prototipo \n                para llamar a la funci\u00f3n. \n                Simplemente power(); \n                u omitirlo dado que el tipo \n                por default es int */\npower\n(\na\n,\nb\n)\n;\n{\n\t\nn\nfor\n=\n1\n>\n0\n--\n\t\t\n*=\nreturn\n}\nEjemplo de la nueva definici\u00f3n:\n    \n        \n(*) Por defecto, el tipo de retorno en C es int, por lo que la declaraci\u00f3n entera int power(); podr\u00eda haberse omitido.\nEn los a\u00f1os siguientes a la publicaci\u00f3n del C de Kernighan y Ritchie, se a\u00f1adieron al lenguaje muchas caracter\u00edsticas no oficiales, que estaba soportadas por los compiladores de AT&T, entre otros. Algunas de estas caracter\u00edsticas eran:\nFunciones void y el tipo de datos void *.\nFunciones que retornaban tipos de datos struct o union (en lugar de punteros).\nAsignaci\u00f3n de tipos de datos struct.\nCalificador const, que hace que un objeto sea de solo lectura.\nUna biblioteca est\u00e1ndar, que incorporaba la mayor\u00eda de las funcionalidades implementadas por varios desarrolladores de compiladores.\nEnumeraciones."}, {"name": "ANSI C e ISO C", "text": "Art\u00edculo principal:\nA finales de la d\u00e9cada de 1970, C empez\u00f3 a sustituir a BASIC como lenguaje de programaci\u00f3n de microcomputadores predominante. Durante la d\u00e9cada de 1980 se empez\u00f3 a usar en los IBM PC, lo que increment\u00f3 su popularidad significativamente.\nAl mismo tiempo, Bjarne Stroustrup empez\u00f3 a trabajar con algunos compa\u00f1eros de Bell Labs para a\u00f1adir funcionalidades de programaci\u00f3n orientada a objetos a C.\nEl lenguaje que crearon, llamado C++, es hoy en d\u00eda el lenguaje de programaci\u00f3n de aplicaciones m\u00e1s com\u00fan en el sistema operativo Microsoft Windows; mientras que C sigue siendo m\u00e1s popular en el entorno Unix. Otro lenguaje que se desarroll\u00f3 en esa \u00e9poca, Objective C, tambi\u00e9n a\u00f1adi\u00f3 caracter\u00edsticas de programaci\u00f3n orientada a objetos a C. Aunque hoy en d\u00eda no es tan popular como C++, se usa para desarrollar aplicaciones Cocoa para Mac OS X.\nEn 1983, el Instituto Nacional Estadounidense de Est\u00e1ndares (ANSI) organiz\u00f3 un comit\u00e9, X3j11, para establecer una especificaci\u00f3n est\u00e1ndar de C. Tras un proceso largo y arduo, se complet\u00f3 el est\u00e1ndar en 1989 y se ratific\u00f3 como el \"Lenguaje de Programaci\u00f3n C\" ANSI X3.159-1989. Esta versi\u00f3n del lenguaje se conoce a menudo como ANSI C, o a veces como C89 (para distinguirla de C99).\nEn 1990, el est\u00e1ndar ANSI (con algunas modificaciones menores) fue adoptado por la Organizaci\u00f3n Internacional para la Estandarizaci\u00f3n (ISO) en el est\u00e1ndar ISO/IEC 9899:1990. Esta versi\u00f3n se conoce a veces como C90. No obstante, \"C89\" y \"C90\" se refieren en esencia al mismo lenguaje.\nUno de los objetivos del proceso de estandarizaci\u00f3n del ANSI C fue producir una extensi\u00f3n al C de Kernighan y Ritchie, incorporando muchas funcionalidades no oficiales. Sin embargo, el comit\u00e9 de estandarizaci\u00f3n incluy\u00f3 tambi\u00e9n muchas funcionalidades nuevas, como prototipos de funci\u00f3n, y un preprocesador mejorado. Tambi\u00e9n se cambi\u00f3 la sintaxis de la declaraci\u00f3n de par\u00e1metros para hacerla semejante a la empleada habitualmente en C++:\nmain\nargc\nargv\n  \nchar\n**\n...\npas\u00f3 a ser:\nmain\n*\n[])\nANSI C est\u00e1 soportado hoy en d\u00eda por casi la totalidad de los compiladores. La mayor\u00eda del c\u00f3digo C que se escribe actualmente est\u00e1 basado en ANSI C. Cualquier programa escrito s\u00f3lo en C est\u00e1ndar sin c\u00f3digo que dependa de un hardware determinado funciona correctamente en cualquier plataforma que disponga de una implementaci\u00f3n de C compatible. Sin embargo, muchos programas han sido escritos de forma que solo pueden compilarse en una cierta plataforma, o con un compilador concreto, esto puede ser debido a diversos motivos:\nLa utilizaci\u00f3n de bibliotecas no est\u00e1ndar, como interfaces gr\u00e1ficas de usuario.\nEl uso de compiladores que no cumplen las especificaciones del est\u00e1ndar.\nEl uso de tipos de datos suponiendo que tendr\u00e1n el mismo tama\u00f1o u orden de los bits en todas las plataformas.\nLa macro __STDC__ puede usarse para dividir el c\u00f3digo en secciones ANSI y K&R para el compilador.\n# if __STDC__\nextern\ngetopt\nconst\n);\n# else\n# endif\nAlgunos programadores recomiendan usar \"#if __STDC__\", como en el ejemplo, en lugar de \"#ifdef __STDC__\" porque algunos compiladores le asignan el valor cero a __STDC__ para indicar que no son compatibles con ANSI.\nEn el siguiente ejemplo, el programa pide al usuario que introduzca un n\u00famero. El programa dividir\u00e1 dicho n\u00famero entre 2 e imprimir\u00e1 el resultado mientras que este sea par, y terminar\u00e1 cuando el n\u00famero sea impar:\n#include\n<stdio.h>\n()\nnumero\nfputs\n\"Introduzca un numero entero par: \"\nstdout\nif\nscanf\n\"%d\"\n&\n!=\n\"Error: numero no valido.\n\\n\n\"\nstderr\n-1\ni\n%\n2\n==\n++\nprintf\n\"%.3d| %d/2 = \"\n/=\n\"%d\n\"No se puede seguir dividiendo: El numero %d es impar.\ngetchar\nPalabras reservadas de ANSI-C\nauto\n      \ndouble\n   \n       \nstruct\nbreak\n     \nelse\nlong\nswitch\ncase\nenum\nregister\ntypedef\nunion\nconst\nfloat\nshort\nunsigned\ncontinue\nsigned\nvoid\ndefault\ngoto\nsizeof\nvolatile\ndo\nstatic\nwhile"}, {"name": "C99", "text": "Para mejorarla, pulsa  junto a su t\u00edtulo:\nPodr\u00eda contener informaci\u00f3n desactualizada.\nTras el proceso de estandarizaci\u00f3n de ANSI, la especificaci\u00f3n del lenguaje C permaneci\u00f3 relativamente estable durante alg\u00fan tiempo, mientras que C++ sigui\u00f3 evolucionando.\nSin embargo, el est\u00e1ndar continu\u00f3 bajo revisi\u00f3n a finales de la d\u00e9cada de 1990, lo que llev\u00f3 a la publicaci\u00f3n del est\u00e1ndar ISO 9899:1999 en 1999.[5]\u200b\nEste est\u00e1ndar se denomina habitualmente \"C99\". Se adopt\u00f3 como est\u00e1ndar ANSI en marzo de 2000.\nLas nuevas caracter\u00edsticas de C99 incluyen:[6]\u200b:\u200axi\u2013xii\u200a\nLas variables pueden declararse en cualquier sitio (como en C++), en lugar de poder declararse solo tras otra declaraci\u00f3n o al comienzo de una declaraci\u00f3n compuesta.\nMuchos tipos de datos, incluyendo long int (para reducir el engorro de la transici\u00f3n de 32 bits a 64 bits), un tipo de dato booleano, y un tipo complex que representa n\u00fameros complejos.\nArrays de longitud variable.\nSoporte para comentarios de una l\u00ednea que empiecen con //, como en BCPL o en C++, caracter\u00edstica para la que muchos compiladores hab\u00edan dado soporte por su cuenta.\nMuchas funciones nuevas, como snprintf()\nAlgunos headers nuevos, como stdint.h.\nEl compilador GCC, entre muchos otros, soportan hoy en d\u00eda la mayor\u00eda de las nuevas caracter\u00edsticas de C99. Sin embargo, este nuevo est\u00e1ndar ha tenido poca acogida entre algunos desarrolladores de compiladores, como Microsoft y Borland, que se han centrado en C++. Brandon Bray, de Microsoft, dijo a este respecto: "}, {"name": "C11", "text": "C11 (antes conocido como C1X) es un nombre informal para ISO/IEC 9899:2011[8]\u200b. El borrador final, N1570, fue publicado en abril de 2011.[9]\u200b El nuevo est\u00e1ndar super\u00f3 su \u00faltima revisi\u00f3n el 10 de octubre de 2011 y fue oficialmente ratificado por la ISO y publicado el 8 de diciembre de 2011."}, {"name": "C embebido", "text": "Hist\u00f3ricamente la programaci\u00f3n en C embebido ha requerido extensiones no est\u00e1ndar del lenguaje C para implementar caracter\u00edsticas no oficiales tales como aritm\u00e9tica de punto fijo y operaciones b\u00e1sicas de entrada y salida.\nEn 2008 el comit\u00e9 de estandarizaci\u00f3n de C, para implementar estas caracter\u00edsticas no oficiales, public\u00f3 un informe t\u00e9cnico en el que extend\u00eda el lenguaje C proporcionando un est\u00e1ndar com\u00fan al que todas las implementaciones se pod\u00edan adherir. Inclu\u00eda varias caracter\u00edsticas no disponibles en C normal, tales como aritm\u00e9tica de punto fijo, espacios de direcciones con nombres y direccionamiento por hardware de entrada y salida b\u00e1sico."}, {"name": "C18", "text": "El \u00faltimo est\u00e1ndar publicado para C ISO/IEC 9899:2018.[10]\u200b"}]}, {"name": "Lenguajes derivados de C", "text": "Desde el inicio del lenguaje han surgido varias ramas de evoluci\u00f3n que han generado varios lenguajes:\nObjective-C es un primer intento de proporcionar soporte para la programaci\u00f3n orientada a objetos en C, pero actualmente usado en Mac OS X, iOS y GNUstep.\nC++ (pronunciado C Plus Plus) dise\u00f1ado por Bjarne Stroustrup fue el segundo intento de proporcionar orientaci\u00f3n a objetos a C y es la variante m\u00e1s difundida y aceptada. Esta versi\u00f3n combina la flexibilidad y el acceso de bajo nivel de C con las caracter\u00edsticas de la programaci\u00f3n orientada a objetos como abstracci\u00f3n, encapsulaci\u00f3n y ocultaci\u00f3n.\nTambi\u00e9n se han creado numerosos lenguajes inspirados en la sintaxis de C, pero que no son compatibles con \u00e9l:\nJava, que une una sintaxis inspirada en la del C++ con una orientaci\u00f3n a objetos m\u00e1s similar a la de Smalltalk y Objective C.\nJavaScript, un lenguaje de scripting creado en Netscape e inspirado en la sintaxis de Java dise\u00f1ado para dar a las p\u00e1ginas web mayor interactividad. A la versi\u00f3n estandarizada se la conoce como ECMAScript.\nC# (pronunciado C Sharp) es un lenguaje desarrollado por Microsoft derivado de C/C++ y Java.", "subsections": []}, {"name": "Proceso de compilaci\u00f3n", "text": "La compilaci\u00f3n de un programa C se realiza en varias fases que normalmente son automatizadas y ocultadas por los entornos de desarrollo:\nPreprocesado consistente en modificar el c\u00f3digo fuente en C seg\u00fan una serie de instrucciones (denominadas directivas de preprocesado) simplificando de esta forma el trabajo del compilador. Por ejemplo, una de las acciones m\u00e1s importantes es la modificaci\u00f3n de las inclusiones (#include) por las declaraciones reales existentes en el archivo indicado.\nCompilaci\u00f3n que genera el c\u00f3digo objeto a partir del c\u00f3digo ya preprocesado.\nEnlazado que une los c\u00f3digos objeto de los distintos m\u00f3dulos y bibliotecas externas (como las bibliotecas del sistema) con el c\u00f3digo objeto generado en el paso anterior para generar el programa ejecutable final.", "subsections": [{"name": "Ejemplo de c\u00f3digo", "text": "El siguiente programa imprime en pantalla la frase \"Hola Mundo\" (C99).\n// necesario para utilizar printf()\n#\ninclude\n\"Hola Mundo\nEl siguiente programa muestra el uso de punteros en C.\n(){\n// Variable\n99\n// Puntero a variable\np\n// Asignaci\u00f3n de puntero\n// Acceso al valor de la variable a la que apunta el puntero\n\"Numero: %d\n// Acceso a la direcci\u00f3n a la que apunta el puntero\n\"Direccion: %d\n// Cambio de valor de la variable a la que apunta el puntero\nEl siguiente escribe \"Hola Mundo\" en C89\n/* comentarios con '//' no permitidos en C89, s\u00ed en C99 */\n  /* necesario para utilizar printf */\n/* tipo 'int' de retorno impl\u00edcito */\nEstructura de control \"else if\"\ncondicion\nsentencia\nsentencias\npor\ndefecto"}]}, {"name": "Herramientas de programaci\u00f3n", "text": "Al programar en C, es habitual usar algunas herramientas de programaci\u00f3n de uso muy extendido, sobre todo en entorno de tipo Unix:\nmake: automatizador del proceso de compilaci\u00f3n y enlazado;\nlint: detector de c\u00f3digo sospechoso, confuso o incompatible entre distintas arquitecturas;\nvalgrind: detector de posibles fugas de memoria;\ngdb: depurador (debugger) usado en GNU;\ndbx: depurador preinstalado en Unix;\nddd: interfaz gr\u00e1fico para los depuradores gdb o dbx.", "subsections": []}, {"name": "Aplicabilidad", "text": "Hecho principalmente para la fluidez de programaci\u00f3n en sistemas Unix. Se usa tambi\u00e9n para el desarrollo de otros sistemas operativos como Windows o GNU/Linux. Igualmente para aplicaciones de escritorio como GIMP, cuyo principal lenguaje de programaci\u00f3n es C.\nDe la misma forma, es muy usado en aplicaciones cient\u00edficas (para experimentos inform\u00e1ticos, f\u00edsicos, qu\u00edmicos, matem\u00e1ticos, entre otros, parte de ellos conocidos como modelos y simuladores), industriales (industria rob\u00f3tica, cibern\u00e9tica, sistemas de informaci\u00f3n y base de datos para la industria petrolera y petroqu\u00edmica. Predominan tambi\u00e9n todo lo que se refiere a simulaci\u00f3n de m\u00e1quinas de manufactura), simulaciones de vuelo (es la m\u00e1s delicada, ya que se tienen que usar demasiados recursos tanto de hardware como de software para desarrollar aplicaciones que permitan simular el vuelo real de una aeronave). Se aplica por tanto, en diversas \u00e1reas desconocidas por gran parte de los usuarios noveles.\nLos ordenadores de finales de los 90 son varios \u00f3rdenes de magnitud m\u00e1s potentes que las m\u00e1quinas en que C se desarroll\u00f3 originalmente. Programas escritos en lenguajes de tipo din\u00e1mico y f\u00e1cil codificaci\u00f3n (Ruby, Python, Perl...) que anta\u00f1o hubieran resultado demasiado lentos, son lo bastante r\u00e1pidos como para desplazar en uso a C. Aun as\u00ed, se puede seguir encontrando c\u00f3digo C en grandes desarrollos de animaciones, modelados y escenas en 3D en pel\u00edculas y otras aplicaciones multimedia.\nActualmente, los grandes proyectos de software se dividen en partes, dentro de un equipo de desarrollo. Aquellas partes que son m\u00e1s \"burocr\u00e1ticas\" o \"de gesti\u00f3n\" con los recursos del sistema, se suelen realizar en lenguajes de tipo din\u00e1mico o de guion (script), mientras que aquellas partes \"cr\u00edticas\", por su necesidad de rapidez de ejecuci\u00f3n, se realizan en un lenguaje de tipo compilado, como C o C++. Si, despu\u00e9s de hacer la divisi\u00f3n, las partes cr\u00edticas no superan un cierto porcentaje del total (aproximadamente el 10%) entonces todo el desarrollo se realiza con lenguajes din\u00e1micos. Si la parte cr\u00edtica no llega a cumplir las expectativas del proyecto, se comparan las alternativas de una inversi\u00f3n en nuevo hardware frente a invertir en el coste de un programador para que reescriba dicha parte cr\u00edtica.", "subsections": [{"name": "Aplicaciones embebidas", "text": "C es el lenguaje com\u00fan para programar sistemas embebidos.[cita\u00a0requerida] El c\u00f3digo ligero que un compilador C genera, combinado con la capacidad de acceso a capas del software cercanas al hardware son la causa de su popularidad en estas aplicaciones.\nUna caracter\u00edstica donde C demuestra comodidad de uso particularmente valiosa en sistemas embebidos es la manipulaci\u00f3n de bits. Los sistemas contienen registros mapeados en memoria (en ingl\u00e9s, MMR) a trav\u00e9s de los cuales los perif\u00e9ricos se configuran. Estos registros mezclan varias configuraciones en la misma direcci\u00f3n de memoria, aunque en bits distintos. Con C es posible modificar f\u00e1cilmente uno de estos bits sin alterar el resto. Por ejemplo:\nmmr\n/* puntero al registro que queremos modificar */\n0x40008ABC\n/* direcci\u00f3n de memoria del registro */\n|=\n<<\n7\n/* pone a 1 el bit 8 sin modificar los dem\u00e1s */\n&=\n~\n12\n/* pone a 0 el bit 13 sin modificar los dem\u00e1s */\nEste tipo de manipulaci\u00f3n es muy tediosa o sencillamente imposible en otros lenguajes de alto nivel, dado que se utilizan operaciones comunes del lenguaje ensamblador como las operaciones a nivel bit OR, AND, SHL y CPL pero que est\u00e1n disponibles en el lenguaje C.\nOtras caracter\u00edsticas de C consideradas desventajas en la programaci\u00f3n para PC -como la ausencia de control de memoria autom\u00e1tico- se convierten en ventajas cuando los sistemas embebidos necesitan c\u00f3digo peque\u00f1o y optimizado. Ese es el caso de los sistemas basados en microcontroladores de poca potencia como el intel 8051 o muchos sistemas ARM."}]}, {"name": "Bibliotecas C", "text": "Una biblioteca de C es una colecci\u00f3n de funciones utilizadas en el lenguaje de programaci\u00f3n C. Las bibliotecas m\u00e1s comunes son la biblioteca est\u00e1ndar de C y la biblioteca del est\u00e1ndar ANSI C, la cual provee las especificaciones de los est\u00e1ndares que son ampliamente compartidas entre bibliotecas. La biblioteca ANSI C est\u00e1ndar, incluye funciones para la entrada y salida de archivos, alojamiento de memoria y operaciones con datos comunes: funciones matem\u00e1ticas, funciones de manejo de cadenas de texto y funciones de hora y fecha.\nOtras bibliotecas C son aquellas utilizadas para desarrollar sistemas Unix, las cuales proveen interfaces hacia el n\u00facleo. Estas funciones son detalladas en varios est\u00e1ndares tales como POSIX y el Single UNIX Specification.\nYa que muchos programas han sido escritos en el lenguaje C existe una gran variedad de bibliotecas disponibles. Muchas bibliotecas son escritas en C debido a que C genera c\u00f3digo objeto r\u00e1pido; los programadores luego generan interfaces a la biblioteca para que las rutinas puedan ser utilizadas desde lenguajes de mayor nivel, tales como Java, Perl y Python.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Anexo:Operadores de C y C++\nC++", "subsections": []}, {"name": "Referencias", "text": "\u2191 a b c d Ritchie, Dennis (1993). \u00abThe Development of the C Language\u00bb. ACM SIGPLAN Notices (en ingl\u00e9s) (ACM Press) 28 (3): 201-208. doi:10.1145/155360.155580. Consultado el 10 de marzo de 2019.\u00a0\n\u2191 a b c Kernighan, Brian W.; Ritchie, Dennis M. (1991). El lenguaje de programaci\u00f3n C (2\u00aa edici\u00f3n). Prentice Hall Hispanoamericana. ISBN\u00a0968-880-205-0.\u00a0\n\u2191 Raymond, Eric S. (2003). The Art of Unix Programming (en ingl\u00e9s). Addison-Wesley. ISBN\u00a00-13-142901-9.\u00a0\n\u2191 Raymond, Eric S. (2003). \u00abEvolution of C\u00bb. The Art of Unix Programming (en ingl\u00e9s). Consultado el 7 de mayo de 2019.\u00a0\n\u2191 \u00abISO/IEC 9899:1999\u00bb. International Organization for Standardization (en ingl\u00e9s). Consultado el 10 de marzo de 2019.\u00a0\n\u2191 \u00abWG14/N1256 Committee Draft \u2014 Septermber 7, 2007 ISO/IEC 9899:TC3\u00bb (PDF). International Organization for Standardization (en ingl\u00e9s). 7 de septiembre de 2007. Consultado el 7 de mayo de 2019.\u00a0\n\u2191 \u00abContent not found\u00bb. Consultado el 2009.\u00a0\n\u2191 \u00abISO/IEC 9899:2011\u00bb. International Organization for Standardization (en ingl\u00e9s). Consultado el 10 de marzo de 2019.\u00a0\n\u2191 \u00abN1570 Committee Draft \u2014 April 12, 2011 ISO/IEC 9899:201x\u00bb (PDF). International Organization for Standardization (en ingl\u00e9s). 12 de abril de 2011. Consultado el 7 de mayo de 2019.\u00a0\n\u2191 14:00-17:00. \u00abISO/IEC 9899:2018\u00bb. ISO (en ingl\u00e9s). Consultado el 18 de mayo de 2019.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikiversidad alberga proyectos de aprendizaje sobre C (lenguaje de programaci\u00f3n).\n Wikilibros alberga un libro o manual sobre Programaci\u00f3n en C.\nP\u00e1gina web oficial del est\u00e1ndar ISO/IEC 9899 - lenguaje de programaci\u00f3n C\nP\u00e1gina web oficial del grupo de trabajo de ISO/IEC JTC1/SC22/WG14 encargado de la estandarizaci\u00f3n del lenguaje de programaci\u00f3n C", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Clase_(inform%C3%A1tica)", "title": "Clase (inform\u00e1tica)", "summary": "En inform\u00e1tica, una clase es una plantilla para el objetivo de la creaci\u00f3n de objetos de datos seg\u00fan un modelo predefinido. Las clases se utilizan para representar entidades o conceptos, como los sustantivos en el lenguaje. Cada clase es un modelo que define un conjunto de variables y m\u00e9todos apropiados para operar con dichos datos. Cada objeto creado a partir de la clase se denomina instancia de la clase.\nLa programaci\u00f3n orientada a objetos es la base principal para los tipos de objetos. Permiten abstraer los datos y sus operaciones asociadas al modo de una caja negra. Los lenguajes de programaci\u00f3n que soportan clases difieren sutilmente en su soporte para diversas caracter\u00edsticas relacionadas con clases. La mayor\u00eda soportan diversas formas de herencia. Muchos lenguajes tambi\u00e9n soportan caracter\u00edsticas para proporcionar encapsulaci\u00f3n, como especificadores de acceso.\nUna clase tambi\u00e9n puede tener una representaci\u00f3n (metaobjeto) en tiempo de ejecuci\u00f3n, que proporciona apoyo en tiempo de ejecuci\u00f3n para la manipulaci\u00f3n de los metadatos relacionados con la clase.", "sections": [{"name": "\u00cdndice", "text": "1 Componentes\n1.1 Campos de datos\n1.2 M\u00e9todos en las clases\n1.3 Propiedades\n2 V\u00e9ase tambi\u00e9n", "subsections": []}, {"name": "Componentes", "text": "Las clases se componen de elementos, llamados gen\u00e9ricamente \u00abmiembros\u00bb, de varios tipos:\ncampos de datos: almacenan el estado de la clase por medio de variables, estructuras de datos e incluso otras clases.\nm\u00e9todos: subrutinas de manipulaci\u00f3n de dichos datos.\nciertos lenguajes permiten un tercer tipo de miembro: las \u00abpropiedades\u00bb, a medio camino entre los campos y los m\u00e9todos.\nUtilizando un s\u00edmil con el lenguaje, si las clases representan sustantivos, los campos de datos pueden ser sustantivos o adjetivos, y los m\u00e9todos son los verbos.\nLa sintaxis t\u00edpica de una clase es: \n \nclass\nNombre\n{\n     \n// Variables miembro (habitualmente privadas)\nmiembro_1\n;\n//lista de miembros \nmiembro_2\nmiembro_3\n// Funciones o m\u00e9todos (habitualmente p\u00fablicas)\nfuncion_miembro_1\n(\n);\n// funciones miembro conocidas \nfuncion_miembro_2\n// funciones como m\u00e9todos \n// Propiedades (habitualmente p\u00fablicas)\npropiedad_1\npropiedad_2\npropiedad_3\npropiedad_4\n}", "subsections": [{"name": "Campos de datos", "text": "Los miembros o variables se utilizan para contener datos que reflejan el estado de la clase. Los datos pueden estar almacenados en variables, o estructuras m\u00e1s complejas, como structs, uniones e incluso otras clases.\nHabitualmente, las variables miembro son privadas al objeto (siguiendo las directrices de dise\u00f1o del Principio de ocultaci\u00f3n) y su acceso se realiza mediante propiedades o m\u00e9todos que realizan comprobaciones adicionales."}, {"name": "M\u00e9todos en las clases", "text": "Los m\u00e9todos implementan la funcionalidad asociada al objeto. Los m\u00e9todos son el equivalente a las funciones en programaci\u00f3n estructurada. Se diferencian de ellos en que es posible acceder a las variables de la clase de forma impl\u00edcita o incluida.\nCuando se desea realizar una acci\u00f3n sobre un objeto, se dice que se le manda un mensaje invocando a un m\u00e9todo que realizar\u00e1 la acci\u00f3n."}, {"name": "Propiedades", "text": "Las propiedades son los atributos de la computadora. Debido a que suele ser com\u00fan que las variables miembro sean privadas para controlar el acceso y mantener la coherencia, surge la necesidad de permitir consultar o modificar su valor mediante pares de m\u00e9todos.\nLos lenguajes orientados a objetos m\u00e1s modernos  a\u00f1aden la construcci\u00f3n de propiedad, que es una sintaxis simplificada para dichos m\u00e9todos."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Estructura de datos\nUnion (programaci\u00f3n)\nObjeto (inform\u00e1tica)\nProgramaci\u00f3n orientada a objetos", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Codigo_fuente", "title": "C\u00f3digo fuente", "summary": "El c\u00f3digo fuente de un programa inform\u00e1tico (o software) es un conjunto de l\u00edneas de texto con los pasos que debe seguir la computadora para ejecutar un cargador.[1]\u200b\nEl c\u00f3digo fuente de un programa est\u00e1 escrito por un programador en alg\u00fan lenguaje de programaci\u00f3n legible por humanos, normalmente en forma de texto plano.[2]\u200b Sin embargo, el programa escrito en un lenguaje legible por humanos no es directamente ejecutable por la computadora en su primer estado, sino que debe ser traducido a otro lenguaje o c\u00f3digo binario; as\u00ed ser\u00e1 m\u00e1s f\u00e1cil para la m\u00e1quina interpretarlo  (lenguaje m\u00e1quina o c\u00f3digo objeto que s\u00ed pueda ser ejecutado por el hardware de la computadora). Para esta traducci\u00f3n se usan los llamados compiladores, ensambladores, int\u00e9rpretes y otros sistemas de traducci\u00f3n.\nEl t\u00e9rmino c\u00f3digo fuente tambi\u00e9n se usa para hacer referencia al c\u00f3digo fuente de otros elementos del software, como, por ejemplo, el c\u00f3digo fuente de una p\u00e1gina web, que est\u00e1 escrito en lenguaje de marcado HTML o en Javascript, u otros lenguajes de programaci\u00f3n web, y que es posteriormente ejecutado por el navegador web para visualizar dicha p\u00e1gina cuando es visitada.\nEl \u00e1rea de la inform\u00e1tica que se dedica a la creaci\u00f3n de programas, y por tanto a la creaci\u00f3n de su c\u00f3digo fuente, es la ingenier\u00eda de software.", "sections": [{"name": "\u00cdndice", "text": "1 Licencias\n2 V\u00e9ase tambi\u00e9n\n3 Referencias\n4 Enlaces externos", "subsections": []}, {"name": "Licencias", "text": "Un aspecto interesante a tener en cuenta cuando se habla del c\u00f3digo fuente de un programa inform\u00e1tico es si su licencia permite que dicho c\u00f3digo fuente est\u00e9 disponible para que cualquiera pueda estudiarlo, modificarlo o reutilizarlo. Cuando se cumple este aspecto se dice que el programa es de c\u00f3digo abierto y son, en general, software libre, en contraposici\u00f3n al software privativo sobre el cual no se tiene ninguno de estos permisos.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Software de c\u00f3digo abierto\nLenguaje de programaci\u00f3n", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00ab\u00bfQu\u00e9 es c\u00f3digo fuente? - Tecnolog\u00eda F\u00e1cil\u00bb. tecnologia-facil.com. Consultado el 9 de abril de 2021.\u00a0\n\u2191 \u00abEl c\u00f3digo fuente: \u00bfqu\u00e9 es y c\u00f3mo se escribe?\u00bb. IONOS Digitalguide. Consultado el 28 de febrero de 2022.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Source Code Definition by The Linux Information Project (LINFO).\n\u00abObligatory accreditation system for IT security products (2008-09-22), may start from may of 2009, reported by Yomiuri on 24 de abril, 2009.\u00bb. MetaFilter.com. Consultado el 24 de abril de 2009.\u00a0\nSame program written in multiple languages", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Coloreado_de_sintaxis", "title": "Resaltado de sintaxis", "summary": "El resaltado de sintaxis, a veces llamado coloreado de sintaxis, es una capacidad de algunas aplicaciones para tratamiento de textos (como los editores de texto), para diferenciar elementos de texto (especialmente el llamado c\u00f3digo fuente) mediante diversos colores o estilos tipogr\u00e1ficos, dependiendo de las categor\u00edas sint\u00e1cticas de sus t\u00e9rminos, conforme a las reglas de alg\u00fan lenguaje formal concreto.\nEste resaltado se utiliza a modo de notaci\u00f3n secundaria, habitualmente para mejorar la legibilidad del c\u00f3digo fuente de programas o de textos escritos en alg\u00fan lenguaje de marcado, permitiendo aumentar la productividad de los programadores. Los estilos aplicados por defecto dependen de cada programa inform\u00e1tico, alguno de los cuales permiten configurar los estilos e incluso reconocer diversos lenguajes.\nLa interpretaci\u00f3n del texto no var\u00eda en absoluto al resaltar sus elementos. Los cambios en la representaci\u00f3n del texto cumplen una funci\u00f3n visual identificativa y no sem\u00e1ntica, s\u00f3lo se usan para transmitir informaci\u00f3n al lector humano. Por tanto, en el caso del c\u00f3digo fuente de un programa, los int\u00e9rpretes y los compiladores lo ignoran. No forman parte ni del lenguaje formal en s\u00ed, ni del texto, por lo que tampoco se guardan en el fichero, sino que se analiza cada vez que se carga.", "sections": [{"name": "Ejemplo", "text": "Abajo se muestra una porci\u00f3n de c\u00f3digo en lenguaje C:\n/* Hello World */\n#include\n \n<stdlib.h>\n<stdio.h>\nint\nmain\n()\n{\n    \nprintf\n(\n\"Hello World\n\\n\n\"\n);\nreturn\n0\n;\n}\nA veces, estos editores pueden resaltar las llaves, par\u00e9ntesis y corchetes de forma que al posicionar el cursor sobre uno de ellos, se destacan los dos elementos, tanto el de apertura, como el de cierre \u2014incluso con etiquetas HTML. Esto es de gran ayuda al escribir programas con gran n\u00famero de anidamientos hechos con estos elementos.", "subsections": []}, {"name": "Programas con resaltado de sintaxis", "text": "Scintilla\nNotepad++\nNotepad2\nSciTE\nGeany\nVim\nEmacs\ngedit\nEl visor de c\u00f3digo fuente de la mayor\u00eda de los navegadores web.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Editor de p\u00e1ginas web\nEditor de texto\nWYSIWYG\nWYSIWYM", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Colt_Python", "title": "Colt Python", "summary": "\u00a0\nEl Colt Python es un rev\u00f3lver calibre .357 que era fabricado por la empresa Colt Manufacturing Company de Hartford, Connecticut. A veces es mencionado como \"Magnum de combate\".[1]\u200b Fue introducido al mercado en 1955, el mismo a\u00f1o que el rev\u00f3lver Modelo 29 calibre 11 mm de Smith & Wesson. El ya descontinuado Colt Python iba dirigido al segmento del mercado de rev\u00f3lveres de lujo. Algunos coleccionistas de armas de fuego y escritores como Jeff Cooper, Ian V. Hogg, Chuck Hawks, Leroy Thompson, y Ren\u00e9e Smeets han descrito al Python como uno de los mejores rev\u00f3lveres jam\u00e1s fabricados.[2]\u200b[3]\u200b[4]\u200b[5]\u200b[6]\u200b[7]\u200b[1]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Descripci\u00f3n\n2 Historia\n2.1 Cese de producci\u00f3n\n3 Modelos y variantes\n4 Uso\n5 Cr\u00edticas\n6 Apariciones en televisi\u00f3n y videojuegos\n7 V\u00e9ase tambi\u00e9n\n8 Notas\n9 Enlaces externos", "subsections": []}, {"name": "Descripci\u00f3n", "text": "El Colt Python es un rev\u00f3lver de doble acci\u00f3n calibrado para el potente cartucho .357 Magnum y que emplea el gran armaz\u00f3n \"I\" de Colt. Los Python son reconocidos por su precisi\u00f3n, disparador de recorrido suave y tambor que se cierra s\u00f3lidamente.[2]\u200b", "subsections": []}, {"name": "Historia", "text": "El Colt Python fue introducido por primera vez en 1955 como modelo de lujo de la l\u00ednea Colt y originalmente iba a ser un rev\u00f3lver Target que disparar\u00eda el cartucho .38 Special con armaz\u00f3n grande.[3]\u200b Por lo tanto, tiene un alza y un punto de mira de precisi\u00f3n ajustables, un gatillo suave, construcci\u00f3n s\u00f3lida y m\u00e1s piezas met\u00e1licas. Los Python tienen una apariencia caracter\u00edstica debido al resalte que abarca toda la parte inferior del ca\u00f1\u00f3n, la banda ventilada de este y sus mecanismos de punter\u00eda ajustables.[3]\u200b Originalmente Colt fabricaba los Python con resaltes huecos, pero los dej\u00f3 macizos para que funcionen como un contrapeso estabilizador del ca\u00f1\u00f3n. Cuando el rev\u00f3lver est\u00e1 amartillado, en el momento de presionar el gatillo, el tambor se mantiene fijo durante la duraci\u00f3n del impacto del martillo. Otros rev\u00f3lveres tienen cierta soltura, incluso cuando est\u00e1n amartillados. El espacio entre el tambor y el cono de fuerza es muy estrecho, ayudando a incrementar la precisi\u00f3n y la velocidad.[2]\u200b El ca\u00f1\u00f3n de cada rev\u00f3lver Python fue revisado en la f\u00e1brica con un l\u00e1ser, siendo el primer rev\u00f3lver producido en serie en emplear este m\u00e9todo.[3]\u200b", "subsections": [{"name": "Cese de producci\u00f3n", "text": "En octubre de 1999, Colt Manufacturing Co. anunci\u00f3 el cese de producci\u00f3n de los rev\u00f3lveres Python. En una carta de disculpa dirigida a los distribuidores en 2000, la empresa indicaba como principales motivos del cese de la serie Python, as\u00ed como de otros modelos, las cambiantes condiciones del mercado y los costos de los procesos judiciales.[8]\u200b La Colt Custom Gun Shop continu\u00f3 haciendo un n\u00famero limitado de Pythons bajo pedido hasta 2005, cuando incluso esta producci\u00f3n limitada ces\u00f3.[2]\u200b"}]}, {"name": "Modelos y variantes", "text": "El Python estaba originalmente disponible en dos acabados: Pavonado y N\u00edquel Brillante. El modelo N\u00edquel Brillante fue descontinuado tras la introducci\u00f3n del modelo Ultimate Stainless con acabados satinado y pulido espejo m\u00e1s durables.[2]\u200b Los acabados de acero inoxidable y Pavonado fueron ofrecidos por Colt hasta el 2003 en el modelo Python Elite.\nLos Python estaban disponibles con ca\u00f1ones de 6,4 cm (2,5 pulgadas), 7,6 cm (3 pulgadas), 10 cm (4 pulgadas), 15 cm (6 pulgadas) y 20 cm (8 pulgadas).[2]\u200b El modelo de 15 cm fue el m\u00e1s popular en general y el modelo de 20 cm estaba destinado a la caza. Se puede coleccionar un rev\u00f3lver con ca\u00f1\u00f3n de 7,6 cm, aunque no es raro.[3]\u200b\nEn 1980 se fabric\u00f3 el modelo Python Hunter, con ca\u00f1\u00f3n de 20 cm y mira telesc\u00f3pica Leupold 2X instalada de f\u00e1brica.[9]\u200b El Python Hunter fue el primer paquete de rev\u00f3lver de cacer\u00eda listo para emplear hecho por un importante productor de armas.[9]\u200b La mira telesc\u00f3pica fue montada sobre el ca\u00f1\u00f3n usando soportes Redfield y el rev\u00f3lver iba dentro de un malet\u00edn Haliburton.[9]\u200b Fue descontinuado en 1990 y se ofreci\u00f3 brevemente como un modelo Custom Shop despu\u00e9s.[9]\u200b Un modelo de Python Target se hizo durante varios a\u00f1os solamente en calibre .38 Special, con acabados pavonado y n\u00edquel.\nLa Colt fabric\u00f3 en peque\u00f1as cantidades dos variantes del Python. El primero fue el Colt Boa de 1985, un rev\u00f3lver calibre.357 Magnum de producci\u00f3n limitada, hecho para la Horton Lew Distributing Company de Massachusetts. Ten\u00eda un ca\u00f1\u00f3n de Python acoplado a un armaz\u00f3n de Trooper Mk V. Se fabricaron 600 rev\u00f3lveres con ca\u00f1ones de 15 cm (6 pulgadas) y 600 rev\u00f3lveres con ca\u00f1ones de 10 cm (4 pulgadas), de los cuales 100 iban en pareja. Aunque visualmente se parece a un Python, es sustancialmente diferente en lo que a sus mecanismos respecta. El segundo fue el Colt Grizzly de acero inoxidable de 1994, otro rev\u00f3lver calibre.357 Magnum de producci\u00f3n limitada. Ten\u00eda un ca\u00f1\u00f3n de Python acoplado a un armaz\u00f3n de Colt King Cobra. Se fabicaron 500 rev\u00f3lveres de este modelo con ca\u00f1ones Magna-Ported de 15 cm (6 pulgadas) y tambores lisos sin estr\u00edas. El ca\u00f1\u00f3n con banda ventilada lleva grabada una huella de oso. Similar al Grizzly fue el Colt Kodiak, que era un Colt Anaconda con un ca\u00f1\u00f3n Magna-Ported y un tambor liso. Se fabricaron aproximadamente unos 2000 rev\u00f3lveres Kodiak.\nSeg\u00fan R.L. Wilson, el historiador de la Colt, los rev\u00f3lveres Colt Python han sido coleccionados por Elvis Presley y varios reyes en el sentido tradicional: \"Su Majestad (SM) Hussein I de Jordania encarg\u00f3 un n\u00famero limitado de rev\u00f3lveres Python, con ca\u00f1ones de 10 cm (4 pulgadas) y 15 cm (6 pulgadas), como regalos para sus amigos selectos. La caja de transporte y el ca\u00f1\u00f3n fueron grabados con el escudo de Su Majestad. El Python para el Rey Juan Carlos de Espa\u00f1a llevaba su nombre ba\u00f1ado en oro sobre la placa lateral. Entre otros destinatarios c\u00e9lebres figural: el Rey Khalid y el Pr\u00edncipe Fahed (Arabia Saudita), el Rey Hassan (Marruecos), el jeque Zyed (Emiratos \u00c1rabes Unidos), el presidente Anwar Sadat (Egipto) y el presidente Hafez Assad (Siria).\"[4]\u200b", "subsections": []}, {"name": "Uso", "text": "El Python inmediatamente hizo incursiones en el mercado policial cuando fue introducido, siendo popular entre los polic\u00edas uniformados el modelo con ca\u00f1\u00f3n de 15 cm (6 pulgadas) y considerado como \u00f3ptimo el modelo con ca\u00f1\u00f3n de 10 cm (4 pulgadas) para los polic\u00edas de civil.[3]\u200b Sin embargo, desde entonces ha ca\u00eddo en desuso (junto a todos los dem\u00e1s rev\u00f3lveres) debido a que las cambiantes necesidades de las agencias policiales favorecieron la adopci\u00f3n de pistolas semiautom\u00e1ticas. Cuando las agencias policiales se dieron cuenta de que las pistolas semiautom\u00e1ticas de 9 mm disparaban un cartucho con caracter\u00edsticas similares al .38 Special y ten\u00edan mayor capacidad de munici\u00f3n, empezaron a reemplazar sus rev\u00f3lveres por pistolas semiautom\u00e1ticas y sus respectivas municiones.[10]\u200b[11]\u200b Los rev\u00f3lveres Colt Python contin\u00faan siendo populares en el mercado de armas de segunda mano, a pesar de alcanzar altos precios.\nLa Patrulla del Estado de Colorado utiliz\u00f3 rev\u00f3lveres Python pavonados con ca\u00f1ones de 10 cm (4 pulgadas) hasta que los reemplazaron con pistolas semiautom\u00e1ticas S&W calibre 10 mm.[12]\u200b La Patrulla del Estado de Georgia y la Patrulla de Carretera de Florida suministraron rev\u00f3lveres Python a sus oficiales.[12]\u200b", "subsections": []}, {"name": "Cr\u00edticas", "text": "El historiador oficial de la Colt, R.L. Wilson, describi\u00f3 al Colt Python como \"el Rolls-Royce de los rev\u00f3lveres Colt\"[4]\u200b y el historiador de las armas de fuego Ian V. Hogg lo llamaba \"el mejor rev\u00f3lver del mundo\".[7]\u200b Sin embargo, al rev\u00f3lver no le faltan detractores. La contraparte a la precisi\u00f3n del Colt Python es su tendencia a quedarse \"atrasado\" tras disparar continuamente.[13]\u200b Esto es cuando el tambor no queda exactamente alineado con el cono de fuerza de la rec\u00e1mara, por lo cual el tirador puede ser rociado con p\u00f3lvora quemada cuando dispara el rev\u00f3lver o este no disparar\u00e1 al apretar el gatillo.[13]\u200b Cuando esto ocurre, el fijador del tambor necesita ser reajustado.[13]\u200b\nMartin Dougherty indica que el peso del Python es una desventaja, ya que es bastante pesado para un rev\u00f3lver, oscilando entre 1,08 kg (2,4 libras) y 1,17 kg (2,6 libras), apenas un poco m\u00e1s ligero que el M29 calibre.44 Magnum (el rev\u00f3lver de \"Harry el Sucio\").[1]\u200b", "subsections": []}, {"name": "Apariciones en televisi\u00f3n y videojuegos", "text": "Este rev\u00f3lver aparece c\u00f3mo una de las armas m\u00e1s potentes del primer juego de la saga Resident Evil. Una variante del mismo aparece en el juego Call of Duty: Black Ops, como arma secundaria en donde puede ser equipado con una mira ACOG o cambiar el ca\u00f1\u00f3n por uno m\u00e1s corto. Aparece tambi\u00e9n en otros juegos destacados como Grand Theft Auto: Vice City, Grand Theft Auto: Vice City Stories y la saga Half-Life, siendo en cada uno de ellos un rev\u00f3lver muy potente, generalmente capaz de matar con un solo disparo. Tambi\u00e9n aparece en la serie The Walking Dead, en la cual es el arma emblema y principal de Rick Grimes. En el videojuego de Naughty Dog: The Last of Us, es una de las armas principales en la supervivencia de los protagonistas, Joel y Ellie; otro juego tambi\u00e9n en el que aparece es en Dead Frontier como un arma no muy potente pero muy eficaz para los principiantes, Otra aparici\u00f3n de esta arma es en el juego de supervivencia de mundo abierto Rust (videojuego) como una pistola de alta eficacia.\nHay una pel\u00edcula francesa de 1975 llamada Police Python 357 protagonizada por Yves Montand que porta un rev\u00f3lver de 6\" de esta marca y que es el protagonista secundario de la trama.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Colt Anaconda\nColt Diamondback", "subsections": []}, {"name": "Notas", "text": "\u2191 a b c Dougherty, Martin Small Arms: From the Civil War to the Present Day, New York City: Fall River Press, 2005, page 48. ISBN 978-0-7607-6329-2\n\u2191 a b c d e f The Colt Python.357 Magnum Revolver by Chuck Hawks at www.chuckhawks.com accessed Apr 27, 2009\n\u2191 a b c d e f Thompson, Leroy; Rene Smeets (1 de octubre de 1993). Great Combat Handguns: A Guide to Using, Collecting and Training With Handguns. London: Arms & Armour Publication. pp.\u00a0256. ISBN\u00a09781854091680.\u00a0\n\u2191 a b c Wilson, R.L., The Colt Heritage, New York City: Simon & Schuster, 1987, P. 272.\n\u2191 Wilson, R.L., Colt: An American Legend, New York City: Abbeville Press, 1985, P 272.\n\u2191 Cooper, Jeff, \"Cooper on Handguns,\" Los Angeles, Petersen Publishing Co., 1974, P. 189.\n\u2191 a b Hogg, Ian V. (1994)Military Small Arms: 300 Years of Soldiers' Firearms, Salamander Publishing\n\u2191 Update from Colt's Manufacturing Company, Inc. Archivado el 20 de febrero de 2007 en Wayback Machine.\n\u2191 a b c d Metcalf, Dick (1994). \u00abTop 10 Hunt Guns\u00bb. HandGunning (PJS Publications) 8 (5): 52-58.\u00a0\n\u2191 Bailey, William G (1995). The Encyclopedia of Police Science. Taylor & Francis. p.\u00a0309 |p\u00e1gina= y |p\u00e1ginas= redundantes (ayuda). ISBN\u00a00815313314.\u00a0\n\u2191 New York City Police to Replace Revolvers With Semiautomatics The New York Times, By CRAIG WOLFF, Saturday, August 21, 1993, Accessed April 27, 2009.\n\u2191 a b Ayoob, Massad(2003)The Colt Python, The Accurate Rifle Magazine, November 2003\n\u2191 a b c C&S Python.357MAG By Rich Grassi, Originally Published in Combat Handguns May 2005, accessed at Cylinder and Slide April 27, 2009", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Colt Python.\nRev\u00f3lver Colt Python (en ingl\u00e9s)\nManual de Instrucciones y Seguridad Oficial (.pdf en ingl\u00e9s)\nN\u00fameros de serie de los rev\u00f3lveres Colt Python", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Comentario_(inform%C3%A1tica)", "title": "Comentario (inform\u00e1tica)", "summary": "rojo\nverde\nazul\nEn la programaci\u00f3n de computadoras, un comentario es una construcci\u00f3n del lenguaje de programaci\u00f3n[1]\u200b destinada a incrustar anotaciones legibles al programador en el c\u00f3digo fuente de un Programa inform\u00e1tico.[2]\u200b Estas anotaciones son potencialmente significativas para los programadores, pero usualmente ignorados por los compiladores e int\u00e9rpretes.[3]\u200b[4]\u200b Los comentarios son a\u00f1adidos usualmente con el prop\u00f3sito de hacer el c\u00f3digo fuente m\u00e1s f\u00e1cil de entender con vistas a su mantenimiento o reutilizaci\u00f3n. La sintaxis y reglas para los comentarios var\u00edan y usualmente son definidas en la especificaci\u00f3n del lenguaje de programaci\u00f3n.\nSe ha de tener en cuenta que los comentarios necesitan mantenimiento igual que el c\u00f3digo y, por tanto, que un comentario preciso y conciso es m\u00e1s f\u00e1cil de mantener que uno largo, repetitivo y complicado.\nLos comentarios tienen una amplia gama de posibles usos: desde la mejora del c\u00f3digo fuente con descripciones b\u00e1sicas hasta la generaci\u00f3n de documentaci\u00f3n externa. Tambi\u00e9n se utilizan para la integraci\u00f3n con sistemas de control de versiones y otros tipos de herramientas de programaci\u00f3n externas.\nLa flexibilidad proporcionada por los comentarios da pie a un amplio abanico de formas de uso distintas y a la inclusi\u00f3n de informaci\u00f3n in\u00fatil dentro del c\u00f3digo fuente. Para evitar este inconveniente, muchos programadores y analistas de software adoptan alguna de las \"filosof\u00edas\" o metodolog\u00edas para la correcta utilizaci\u00f3n de los comentarios.", "sections": [{"name": "\u00cdndice", "text": "1 Informaci\u00f3n general\n2 Usos\n2.1 Planificaci\u00f3n / Revisi\u00f3n\n2.2 Descripci\u00f3n de c\u00f3digo\n2.3 Descripci\u00f3n algor\u00edtmica\n2.4 Inclusi\u00f3n de recursos\n2.5 Depuraci\u00f3n\n2.6 Generaci\u00f3n de documentaci\u00f3n\n3 Estilos\n3.1 Etiquetas\n4 Curiosidades\n5 Ejemplos\n5.1 Ensamblador\n5.2 Java\n5.3 Delphi\n5.4 Lua\n5.5 Ruby\n5.6 Python\n5.7 Perl\n5.8 Javascript\n5.9 c\u00f3digo HTML\n5.10 SQL\n5.11 Visual Basic\n5.12 Pascal\n5.13 PHP\n5.14 Cobol\n6 Referencias\n7 Enlaces externos", "subsections": []}, {"name": "Informaci\u00f3n general", "text": "Los comentarios adoptan por norma general un formato o bien de \"bloque\" (tambi\u00e9n denominado de \"pr\u00f3logo\") o bien de \"fin de l\u00ednea\" (tambi\u00e9n denominado \"inline\").[5]\u200b\nUn comentario de bloque delimita una zona del c\u00f3digo fuente en la cual es permitido expandirse a varias l\u00edneas de texto. Esta regi\u00f3n se reconoce por un delimitador de inicio y un delimitador de final del comentario. Algunos lenguajes de programaci\u00f3n admiten que los comentarios se aniden recursivamente (e.g., MATLAB), pero otros lenguajes no lo admiten (e.g., Java).[6]\u200b[7]\u200b[8]\u200b\nUn comentario de fin de l\u00ednea comienza con un delimitador y contin\u00faa hasta el final de la l\u00ednea de texto (es decir, no es necesario un segundo delimitador). En otros casos, el comentario de fin de l\u00ednea comienza en una cierta columna dentro del c\u00f3digo fuente no siendo necesario un delimitador.[8]\u200b\nLos delimitadores son una secuencia conocida de caracteres y suelen ser distintos para los comentarios de bloque que para los de fin de l\u00ednea. Por ejemplo, el lenguaje C++ usa, para los comentarios de bloque, los delimitadores /* y */ mientras que los comentarios de fin de l\u00ednea utiliza el delimitador //. Otros lenguajes solamente admiten un tipo de comentario. Por ejemplo, ADA solamente dispone de comentarios de fin de l\u00ednea mediante el delimitador --.[8]\u200b", "subsections": []}, {"name": "Usos", "text": "La mejor manera de dar uso a los comentarios es objeto de controversia con posiciones a menudo enfrentadas.[9]\u200b[10]\u200b Hay una gran variedad de formas de escribir comentarios y muchos comentaristas que ofrecen, en ocasiones, consejos contradictorios.[10]\u200b", "subsections": [{"name": "Planificaci\u00f3n / Revisi\u00f3n", "text": "Los comentarios se pueden utilizar como una forma de pseudoc\u00f3digo para describir la intenci\u00f3n antes de escribir el c\u00f3digo real. En este caso se debe explicar la l\u00f3gica detr\u00e1s del c\u00f3digo en lugar del c\u00f3digo en s\u00ed mismo.\n/* itera hacia atr\u00e1s por todos los elementos retornados por el servidor (estos deben ser procesados cronol\u00f3gicamente)*/\nfor\n \n(\ni\n=\nnumElementsReturned\n-\n1\n);\n>=\n0\n;\n--\n){\n    \n/* procesa los datos de cada elemento */\nupdatePattern\n,\nreturnedElements\n[\n]);\n}\nSi se deja este tipo de comentario luego de escribir el c\u00f3digo, se simplifica el proceso de revisi\u00f3n al permitir la comparaci\u00f3n directa del c\u00f3digo con los resultados previstos. Una falacia l\u00f3gica com\u00fan es que el c\u00f3digo f\u00e1cil de entender hace lo que tiene que hacer."}, {"name": "Descripci\u00f3n de c\u00f3digo", "text": "Los comentarios pueden ser utilizados para resumir el c\u00f3digo o para explicar la intenci\u00f3n del programador. Seg\u00fan esta escuela de pensamiento, re-explicar el c\u00f3digo en lenguaje natural se considera superfluo y la necesidad de volver a explicar el c\u00f3digo puede ser un signo de que es demasiado complejo y debe ser reescrito.\nLos comentarios tambi\u00e9n pueden ser utilizados para explicar por qu\u00e9 un bloque de c\u00f3digo no se ajusta a las convenciones o las buenas pr\u00e1cticas. Esto est\u00e1 especialmente relacionado con proyectos de escaso tiempo de desarrollo, o en la correcci\u00f3n de errores. Por ejemplo:\n' Se asigna una segunda variable debido a que se producen errores \n' en el servidor cuando se reutilizan los datos del formulario. No se encontr\u00f3 documentaci\u00f3n\n' sobre el comportamiento extra\u00f1o del servidor, as\u00ed que simplemente se codific\u00f3 para resolverlo.\nvtx\nserver\n.\nmappath\n\"local settings\"\n)"}, {"name": "Descripci\u00f3n algor\u00edtmica", "text": "A veces, el c\u00f3digo fuente contiene una soluci\u00f3n nueva o digna de mencionarse a un problema espec\u00edfico. En tales casos, los comentarios pueden contener una explicaci\u00f3n de la metodolog\u00eda. Estas explicaciones pueden incluir diagramas y pruebas matem\u00e1ticas formales. Esto puede ser la explicaci\u00f3n del c\u00f3digo, en lugar de una clarificaci\u00f3n de sus intenciones, pero otros encargados del mantenimiento del c\u00f3digo pueden encontrar como fundamental esta explicaci\u00f3n. Esto puede ser especialmente cierto en el caso de problemas de dominios de alta especializaci\u00f3n; as\u00ed como en optimizaciones, construcciones o llamadas a funciones de uso no cotidiano.[13]\u200b\nPor ejemplo, un programador puede agregar un comentario para explicar por qu\u00e9 se eligi\u00f3 un Ordenamiento por inserci\u00f3n en lugar de quicksort, pues el primero es, en teor\u00eda, m\u00e1s lento que el segundo. Esto podr\u00eda escribirse de la siguiente manera:\nlist\n[\nf\nb\n),\nc\nd\na\n...\n]\n// Se requiere un ordenamiento estable, mientras el desempe\u00f1o realmente no importa.\ninsertion_sort"}, {"name": "Inclusi\u00f3n de recursos", "text": "Logotipos, diagramas y diagramas de flujo consistentes en construcciones de arte ASCII pueden ser insertados en el c\u00f3digo fuente en forma de comentario.[14]\u200b Adem\u00e1s, puede incrustarse como comentarios avisos de derechos de autor, fecha de creaci\u00f3n, versi\u00f3n del producto, contacto con el propietario y/o creador, etc..\nEl fragmento de c\u00f3digo que sigue es un simple diagrama ASCII que representa el flujo de proceso para un script de administraci\u00f3n de sistemas contenido en un Fichero Windows Script que se ejecuta en Windows Script Host A pesar de que la secci\u00f3n que marca el c\u00f3digo aparece como un comentario, el diagrama de hecho aparece en una secci\u00f3n XML CDATA secci\u00f3n, que t\u00e9cnicamente se considera distinta de los comentarios, pero que puede servir para prop\u00f3sitos similares.[15]\u200b\n<!-- begin: wsf_resource_nodes -->\n<resource\nid=\n\"ProcessDiagram000\"\n>\n<![CDATA[\n HostApp (Main_process)\n    |\n    V\nscript.wsf (app_cmd) --> ClientApp (async_run, batch_process)\n                |\n                V\n         mru.ini (mru_history)   \n]]>\n</resource>\nAun cuando este diagrama f\u00e1cilmente podr\u00eda haber sido incluido como un comentario, el ejemplo ilustra un caso en que el programador puede optar por no utilizar los comentarios, como una forma de incluir recursos en el c\u00f3digo fuente.[15]\u200b"}, {"name": "Depuraci\u00f3n", "text": "Una pr\u00e1ctica com\u00fan entre programadores es comentar un fragmento de c\u00f3digo, es decir, agregar delimitadores de modo que un bloque de c\u00f3digo se convierta en un comentario, y por tanto no se ejecutar\u00e1 en el programa final. Esto podr\u00eda hacerse para excluir algunas piezas del c\u00f3digo del programa o, de manera m\u00e1s com\u00fan, para encontrar la causa de un error. Comentando sistem\u00e1ticamente y ejecutando partes del programa, la causa del error puede ser determinada, permitiendo su correcci\u00f3n. A continuaci\u00f3n un ejemplo de c\u00f3mo comentar c\u00f3digo con el prop\u00f3sito de excluirlo:\nif\nopt\nequals\n\"e\"\n))\n   \nopt_enabled\ntrue\n/*\n  if (opt.equals (\"d\"))\n   opt_debug = true;\n // */\n//*\n\"v\"\nopt_verbose\n// */\nEl fragmento de c\u00f3digo de arriba sugiere que el programador opt\u00f3 por desactivar la opci\u00f3n de depuraci\u00f3n por alguna raz\u00f3n. Este estilo espec\u00edfico de comentario es m\u00e1s adecuado para la depuraci\u00f3n. Un car\u00e1cter de barra simple delante del delimitador de apertura es el que permite habilitar o deshabilitar el comentarios de bloque completo.\nMuchos EIDs permiten agregar o remover r\u00e1pidamente este tipo de comentarios con opciones del men\u00fa singulares o atajos del teclado. El programador solamente debe marcar la parte de texto que desea comentar o descomentar y elegir la opci\u00f3n apropiada. Esto es particularmente \u00fatil con fragmentos grandes de c\u00f3digo."}, {"name": "Generaci\u00f3n de documentaci\u00f3n", "text": "Art\u00edculo principal:\nLas herramientas de programaci\u00f3n en ocasiones incorporan documentaci\u00f3n y metadatos en los comentarios.[16]\u200b Estas pueden incluir las posiciones de inserci\u00f3n para la inclusi\u00f3n autom\u00e1tica de archivos de cabecera, comandos para configurar el modo de resaltado de sintaxis[17]\u200b o el n\u00famero de revisi\u00f3n del archivo.[18]\u200b Estos comentarios de control funcional son tambi\u00e9n conocidos com\u00fanmente como anotaciones. Mantener la documentaci\u00f3n dentro de comentarios en el c\u00f3digo fuente es considerado como una forma de simplificar el proceso de documentaci\u00f3n, as\u00ed como un aumento en las posibilidades de que la documentaci\u00f3n se mantendr\u00e1 al d\u00eda con los cambios en el c\u00f3digo.[19]\u200b Habitualmente este tipos de comentarios requiere utilizar una sintaxis b\u00e1sica para que puedan ser interpretados por el generador de documentaci\u00f3n a diferencia de los comentarios anteriores donde no necesariamente se debe de utilizar una sintaxis predefinida.\nC#, F# e implementan una caracter\u00edstica similar llamada comentarios XML, que son le\u00eddos por IntelliSense para los ensamblados compilados del entorno.NET.[20]\u200b"}]}, {"name": "Estilos", "text": "Hay muchas alternativas cuando se considera como los comentarios deben aparecer en el c\u00f3digo fuente. Para grandes proyectos, los estilos de los comentarios se agregan apenas comienzan el proyecto. Normalmente los programadores prefieren estilos que son consistentes, no obstructivos, f\u00e1ciles de modificar, y dif\u00edciles de romper.\nLos siguientes fragmentos de c\u00f3digo en C son solo un ejemplo de como los comentarios pueden variar de estilo, mientras todos contienen la misma informaci\u00f3n b\u00e1sica:\n/* \n     Este es el cuerpo del comentario.\n     Variante 1\n*/\n/***********************************\\\n* *\n* Este es el cuerpo del comentario. *\n* Variante 2. *\n\\************************************/\nFactores tales como la preferencia personal, la flexibilidad de las herramientas de programaci\u00f3n, y otras consideraciones tienden a influir en las variantes de estilo utilizado en el c\u00f3digo fuente.", "subsections": [{"name": "Etiquetas", "text": "Algunas etiquetas se utilizan en los comentarios para ayudar en la indexaci\u00f3n de los problemas comunes. Tales etiquetas son com\u00fanmente resaltado de sintaxis y permite b\u00fasquedas con herramientas de programaci\u00f3n com\u00fan, como la utilidad grep de UNIX. Ejemplos de convenios etiqueta son:\nFIXME: para marcar c\u00f3digo problem\u00e1tico potencial que requiere una atenci\u00f3n especial y/o revisi\u00f3n.\nNOTE: peligros potenciales para documentar el funcionamiento interno del c\u00f3digo y de indicar.\nTODO: para indicar las mejoras planificadas.\nXXX: para advertir a otros programadores de c\u00f3digo problem\u00e1tico o equivoco.\nExiste el riesgo de que las etiquetas se acumulan con el tiempo, es conveniente incluir la fecha y el propietario de etiqueta en el comentario de etiquetas para facilitar el seguimiento."}]}, {"name": "Curiosidades", "text": "Whitespace es un lenguaje de programaci\u00f3n esot\u00e9rico en el cual la sintaxis consiste \u00fanicamente en espacios en blanco, tabulador y l\u00edneas nuevas, cualquier otro car\u00e1cter es ignorado, por lo que en este lenguaje cualquier escrito es un comentario.", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": [{"name": "Ensamblador", "text": ""}, {"name": "Java", "text": "Que la l\u00ednea son instrumentos que utilizamos en una variante de series"}, {"name": "Delphi", "text": "En delphi se pueden anidar comentarios de bloque siempre que no usen el mismo delimitador, e.g."}, {"name": "Lua", "text": "\u2014Un comentario de l\u00ednea"}, {"name": "Ruby", "text": ""}, {"name": "Python", "text": ""}, {"name": "Perl", "text": ""}, {"name": "Javascript", "text": "En archivo.js pueden darse las siguientes formas:"}, {"name": "c\u00f3digo HTML", "text": "En las p\u00e1ginas webs .html se introduce el comentario entre "}, {"name": "SQL", "text": ""}, {"name": "Visual Basic", "text": ""}, {"name": "Pascal", "text": ""}, {"name": "PHP", "text": ""}, {"name": "Cobol", "text": ""}]}, {"name": "Referencias", "text": "\u2191 Para los prop\u00f3sitos de este art\u00edculo, los comentarios de un lenguaje de programaci\u00f3n son tratados indistintamente de comentarios que aparecen en lenguajes de marcas, archivos de configuraci\u00f3n u otros contextos similares. M\u00e1s a\u00fan, los lenguajes de marcas con frecuencia se relacionan de manera cercana con c\u00f3digo de lenguajes de programaci\u00f3n, especialmente en el contexto de generaci\u00f3n de c\u00f3digo. Ver por ejemplo Ganguli, Madhushree (2002). Making Use of Jsp (en ingl\u00e9s). Nueva\u00a0York: Wiley. ISBN\u00a00471219746.\u00a0, Hewitt, Eben (2003). Java for Coldfusion Developers (en ingl\u00e9s). Upper Saddle River: Pearson Education. ISBN\u00a00130461806.\u00a0\n\u2191 Source code can be divided into program code (which consists of machine-translatable instructions); and comments (which include human-readable notes and other kinds of annotations in support of the program code).Penny Grubb, Armstrong Takang (2003). Software Maintenance: Concepts and Practice (en ingl\u00e9s). World Scientific. pp.\u00a07, 120\u2013121. ISBN\u00a0981238426X.\u00a0\n\u2191 Algunos entornos de programaci\u00f3n incluyen los comentarios como uno de los elementos de la sintaxis del lenguaje que son retenidos para procesamiento posterior, en lugar de ser descartados una vez han sido reconocidos por el procesador de lenguaje.\n\u2191 Los comentarios deben ser indicados de tal manera que sea posible para el procesador de c\u00f3digo fuente reconocerlos como tal. Esto es usualmente simplificado al decir que los comentarios son \"ignorados\" (luego de ser reconocidos y desechados) por el procesador.\n\u2191 Dixit, J.B. (2003). Computer Fundamentals and Programming in C (en ingl\u00e9s). Laxmi Publications. ISBN\u00a08170088828.\u00a0\n\u2191 Desmond, Higham (2005). MATLAB Guide (en ingl\u00e9s). SIAM. ISBN\u00a00898715784.\u00a0\n\u2191 Vermeulen, Al (2000). The Elements of Java Style (en ingl\u00e9s). Cambridge University Press. ISBN\u00a00521777682.\u00a0\n\u2191 a b c \u00abUsing the right comment in Java\u00bb (en ingl\u00e9s). Consultado el 24 de julio de 2007.\u00a0\n\u2191 W. R., Dietrich (2003). Applied Pattern Recognition: Algorithms and Implementation in C++ (en ingl\u00e9s). Springer. p.\u00a066. ISBN\u00a03528355581.\u00a0 ofrece puntos de vista sobre el uso adecuado de comentarios en el c\u00f3digo fuente\n\u2191 a b Keyes, Jessica (2003). Software Engineering Handbook (en ingl\u00e9s). CRC Press. p.\u00a0256. ISBN\u00a00849314798.\u00a0 discute los comentarios y la ciencia de la documentaci\u00f3n\n\u2191 The Elements of Programming Style, Kernighan & Plauger\n\u2191 Code Complete, McConnell\n\u2191 Spinellis, Diomidis (2003). Code reading: The Open Source Perspective (en ingl\u00e9s). Addison-Wesley. ISBN\u00a00201799405.\u00a0\n\u2191 \u00abCodePlotter 1.6 - Add and edit diagrams in your code with this 'Visio-like' tool\u00bb. Archivado desde el original el 14 de julio de 2007. Consultado el 24 de julio de 2007.\u00a0\n\u2191 a b Niederst, Jennifer (2006). Web Design in a Nutshell: A Desktop Quick Reference (en ingl\u00e9s). O'Reilly. ISBN\u00a00596009879.\u00a0En ocasiones la diferencia entre un \"comentario\" y otros elementos de la sintaxis de un lenguaje de programaci\u00f3n o de marcas implica matices sutiles. Niederst indica una situaci\u00f3n tal al decir: \"Unfortunately, XML software thinks of comments as unimportant information and may simply remove the comments from a document before processing it. To avoid this problem, use an XML CDATA section instead.\"\n\u2191 V\u00e9ase e.g., Wynne-Powell, Rod (2008). Mac Os X for Photographers: Optimized Image Workflow for the Mac User (en ingl\u00e9s). Oxford: Focal Press. p.\u00a0243. ISBN\u00a00240520270.\u00a0\n\u2191 Lamb, Linda (1998). Learning the VI Editor (en ingl\u00e9s). Sebastopol: O'Reilly & Associates. ISBN\u00a01565924266.\u00a0 describe el uso de sintaxis modeline en los archivos de configuraci\u00f3n de Vim\n\u2191 Ver e.g., Berlin, Daniel (2006). Practical Subversion, Second Edition (en ingl\u00e9s). Berkeley: APress. p.\u00a0168. ISBN\u00a01590597532.\u00a0\n\u2191 Ambler, Scott (2004). The Object Primer: Agile Model-Driven Development with UML 2.0 (en ingl\u00e9s). Cambridge University Press. ISBN\u00a01397805218.\u00a0\n\u2191 Murach. C# 2005. p.\u00a056.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "13 consejos para comentar tu c\u00f3digo\nComo escribir comentarios (en ingl\u00e9s)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Compilaci%C3%B3n_en_tiempo_de_ejecuci%C3%B3n", "title": "Compilaci\u00f3n en tiempo de ejecuci\u00f3n", "summary": "En inform\u00e1tica, la compilaci\u00f3n en tiempo de ejecuci\u00f3n (tambi\u00e9n conocida por sus siglas inglesas, JIT, just-in-time), tambi\u00e9n conocida como traducci\u00f3n din\u00e1mica, es una t\u00e9cnica para mejorar el rendimiento de sistemas de programaci\u00f3n que compilan a bytecode, consistente en traducir el bytecode a  c\u00f3digo m\u00e1quina nativo en tiempo de ejecuci\u00f3n. La compilaci\u00f3n en tiempo de ejecuci\u00f3n se construye a partir de dos ideas anteriores relacionadas con los entornos de ejecuci\u00f3n: la compilaci\u00f3n a bytecode y la compilaci\u00f3n din\u00e1mica.\nEn un sistema que use interpretaci\u00f3n de bytecode como por ejemplo Smalltalk, Perl, GNU CLISP o las primeras versiones de Java, el c\u00f3digo fuente es traducido a un c\u00f3digo intermedio llamado bytecode. El bytecode no es el c\u00f3digo m\u00e1quina de ninguna computadora en particular, y puede por tanto ser portable entre diferentes arquitecturas. El bytecode es entonces interpretado, o ejecutado por una m\u00e1quina virtual.\nUn entorno con compilaci\u00f3n din\u00e1mica es aquel en el que el compilador puede ser usado durante la ejecuci\u00f3n. Por ejemplo, la mayor\u00eda de los sistemas Commons Lisp tienen una funci\u00f3n compile que permite compilar nuevas funciones creadas durante la ejecuci\u00f3n del programa. Aunque ventajoso en la depuraci\u00f3n interactiva, la compilaci\u00f3n din\u00e1mica es menos \u00fatil en un sistema en explotaci\u00f3n desatendido. Ese m\u00e9todo es m\u00e1s com\u00fan en emuladores modernos y frecuentemente comerciales que requieren mucha velocidad, como el Qemu y el VirtualPC (PC) o el Executor (Macintosh 68k).\nEn un entorno de compilaci\u00f3n en tiempo de ejecuci\u00f3n, la compilaci\u00f3n a bytecode es el primer paso, reduciendo el c\u00f3digo fuente a una representaci\u00f3n intermedia portable y optimizable. El bytecode se despliega en el sistema de destino. Cuando dicho c\u00f3digo se ejecuta, el compilador en tiempo de ejecuci\u00f3n lo traduce a c\u00f3digo m\u00e1quina nativo. Esto puede realizarse a nivel de fichero (programa) o de funciones, compil\u00e1ndose en este \u00faltimo caso el c\u00f3digo correspondiente a una funci\u00f3n justo cuando va a ejecutarse (de aqu\u00ed el nombre de just-in-time, \u00abjusto a tiempo\u00bb).\nEl objetivo es combinar muchas de las ventajas de la compilaci\u00f3n a c\u00f3digo nativo y a bytecode: la mayor\u00eda del \u00abtrabajo pesado\u00bb de procesar el c\u00f3digo fuente original y realizar optimizaciones b\u00e1sicas se realiza en el momento de compilar a bytecode, mucho antes del despliegue: as\u00ed, la compilaci\u00f3n a c\u00f3digo m\u00e1quina del programa resulta mucho m\u00e1s r\u00e1pida que partiendo del c\u00f3digo fuente. El bytecode desplegado es portable, a diferencia del c\u00f3digo m\u00e1quina para cualquier arquitectura concreta. Los compiladores din\u00e1micos son m\u00e1s f\u00e1ciles de escribir, pues el compilador a bytecode ya realiza buena parte del trabajo.\n7", "sections": [{"name": "Uso de compilaci\u00f3n JIT en emuladores", "text": "Al momento de emular la CPU, el programa traduce el c\u00f3digo m\u00e1quina del software [1]\u200b emulado en c\u00f3digo nativo de la m\u00e1quina emuladora y lo escribe en una cach\u00e9 con permisos de ejecuci\u00f3n y escritura (generalmente en UNIX o en sistemas compatibles con POSIX se asigna este permiso con la funci\u00f3n mprotect()). La traducci\u00f3n se detiene cuando se encuentra cualquier instrucci\u00f3n que provoque un cambio en el contador de programa, como una interrupci\u00f3n, una instrucci\u00f3n de salto o una llamada a subrutina y es interpretado como un retorno de rutina al compilador o a otras tareas del programa. Luego el emulador ejecuta el c\u00f3digo contenido en la cach\u00e9.\nLa ventaja de este m\u00e9todo es que si el tama\u00f1o de la cach\u00e9 es grande, el emulador no necesita recompilar el c\u00f3digo, lo que aumenta mucho la velocidad. Sin embargo, surgen problemas cuando el programa emulado escribe su c\u00f3digo, y es necesario volver a recompilar dicho c\u00f3digo, a menos que el c\u00f3digo emulado tenga permisos de solo lectura, por ejemplo, en sistemas UNIX con memoria protegida.", "subsections": []}, {"name": "Referencias", "text": "\u2191 ASALE, RAE-. \u00absoftware | Diccionario de la lengua espa\u00f1ola\u00bb. \u00abDiccionario de la lengua espa\u00f1ola\u00bb - Edici\u00f3n del Tricentenario. Consultado el 14 de noviembre de 2022.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Conteo_de_referencias", "title": "Conteo de referencias", "summary": "Conteo de referencias, en ingl\u00e9s Reference counting, es una t\u00e9cnica para contabilizar las veces que un determinado recurso est\u00e1 siendo referido. Por lo general ese recurso son bloques de memoria y la t\u00e9cnica permite establecer cuando no existe ninguna referencia a ese bloque y este puede ser liberado. Es una t\u00e9cnica de muy f\u00e1cil implementaci\u00f3n, pero tiene una importante desventaja: Si las referencias forman un ciclo los objetos involucrados no se liberar\u00e1n nunca. Otra t\u00e9cnica m\u00e1s efectiva es el uso de un recolector de basura.", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "Recolector de basura\nFuga de memoria\nConteo de referencia autom\u00e1tica", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/CubicWeb", "title": "CubicWeb", "summary": "CubicWeb es un framework de c\u00f3digo abierto para el desarrollo de aplicaciones con funciones integradas de web sem\u00e1ntica, escrito en Python. El framework est\u00e1 formado por componentes (clases programadas en Python) llamados cubos, que pueden ser reutilizados para construir sistemas m\u00e1s complejos. CubicWeb sigue los principios de la programaci\u00f3n orientada objetos.\nSe viene desarrollando desde 2000 pero es hasta 2008 cuando la empresa Logilab decide liberar el c\u00f3digo bajo una licencia LGPL.", "sections": [{"name": "\u00cdndice", "text": "1 Caracter\u00edsticas principales\n2 Soporte de bases de datos\n3 Premios\n4 V\u00e9ase tambi\u00e9n\n5 Ejemplos de sitios p\u00fablicos realizados con CubicWeb\n6 Enlaces externos\n7 Referencias", "subsections": []}, {"name": "Caracter\u00edsticas principales", "text": "CubicWeb se utiliz\u00f3 principalmente para sistemas internos de organismos y empresas europeas, antes de pasar a ser sistema libre.\nAlgunas aplicaciones de CubicWeb rebasan las 100,000 visitas diarias.[1]\u200b y es la aplicaci\u00f3n seleccionada para administrar la interfaz de datos sem\u00e1ntica de la Biblioteca Nacional de Francia. \nSus caracter\u00edsticas principales son:\nUn motor que permite generar el sitio guiado por un modelo de datos propio a la applicaci\u00f3n\nUn Lenguaje de consulta RQL similar a SPARQL del W3C (este \u00faltimo en proceso de integraci\u00f3n)[2]\u200b\nUn mecanismo para seleccionar y generar vistas con formato  XHTML, XML, JSON o texto\nUna biblioteca de componentes (modelos de datos y vistas) gen\u00e9ricos\nLa utilizaci\u00f3n del lenguaje de programaci\u00f3n python\nIntegraci\u00f3n de bases de datos SQL, directorios LDAP y como gesti\u00f3n de c\u00f3digo Subversion y Mercurial.\nIntegrado con el cubo OrbUI, CubicWeb utiliza HTML5, CSS3 y el framework flexible de Bootstrap.", "subsections": []}, {"name": "Soporte de bases de datos", "text": "CubicWeb es un sistema multi base de datos. Funciona principalmente con PostgreSQL y MySQL.", "subsections": []}, {"name": "Premios", "text": "CubicWeb fue recompensado en febrero de 2013, concurso DataConnexions del gobierno de Francia en la categor\u00eda \"Utilidad P\u00fablica\".\nPremio Stanford para la Innovaci\u00f3n en Investigaci\u00f3n Bibliotecaria SPRIL, para la Biblioteca Nacional De Francia, Proyecto Discovery del sitio data.bnf.fr construido en CubicWeb.[3]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Sesame\nJena\nMercurial\nDjango\nPython\nOrbUI", "subsections": []}, {"name": "Ejemplos de sitios p\u00fablicos realizados con CubicWeb", "text": "Estos son algunos de los sitios que utilizan CubicWeb,\nhttp://www.logilab.org\nhttps://web.archive.org/web/20081214082405/http://www.musees-haute-normandie.fr/collections/\nhttp://www.118000.fr\nhttp://data.bnf.fr\nhttps://web.archive.org/web/20170421211315/http://zemantica.com/", "subsections": []}, {"name": "Enlaces externos", "text": "CubicWeb\nRepositorio del c\u00f3digo libre de la empresa Logilab\nSitio de Python\nProyecto para incluir HTML5 y dise\u00f1o flexible a CubicWeb", "subsections": []}, {"name": "Referencias", "text": "\u2191  Telegate . Anuario Franc\u00e9s realizado con Cubiweb\n\u2191  VanRees, Reinout . Semantic applications with CubicWeb\n\u2191 Stanford SPIRL Premio Stanford (SPIRL) 2013 para Discovery BNF, construido en CubicWeb", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Cython", "title": "Cython", "summary": "Cython es un lenguaje de programaci\u00f3n para simplificar la escritura de m\u00f3dulos de extensi\u00f3n para Python en C y C++. Siendo estrictos, la sintaxis de Cython es la misma de Python pero con algunos agregados:\nSe pueden llamar funciones en C, o funciones/m\u00e9todos de C++, directamente desde el c\u00f3digo en Cython.\nEs posible usar tipos est\u00e1ticos en las variables (enteros, flotantes, o cualquier tipo de dato).\nCython compila a c\u00f3digo en C o C++ desde Python, y el resultado puede ser usado desde Python como un \"Modulo de extensi\u00f3n\", o como una aplicaci\u00f3n embebida en el int\u00e9rprete CPython.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Ventajas\n3 Compatibilidad\n4 Usos\n5 Referencias\n6 P\u00e1ginas externas", "subsections": []}, {"name": "Historia", "text": "Cython es un proyecto derivado de Pyrex, pero implementa m\u00e1s funcionalidades y optimizaciones que este.[1]\u200b\nLos archivos Cython tienen una extensi\u00f3n .pyx. En su forma m\u00e1s b\u00e1sica, el c\u00f3digo Cython se ve exactamente como el c\u00f3digo Python.[2]\u200b[3]\u200b Sin embargo, mientras que Python est\u00e1ndar se escribe din\u00e1micamente, en Cython, los tipos se pueden proporcionar opcionalmente, lo que permite un rendimiento mejorado, permitiendo que los bucles se conviertan en bucles C siempre que sea posible. Por ejemplo:[4]\u200b\ndef\nprimes\n(\nint\nkmax\n):\n# The argument will be converted to int or raise a TypeError.\ncdef\nint\nn\n,\nk\ni\n# These variables are declared with C types.\np\nAnother\nC\ntype\nresult\n=\n[]\n# A Python type\nif\n>\n1000\n:\nk\n0\nn\n2\nwhile\n<\ni\nand\n%\np\n[\n]\n!=\n+\n1\n==\n.\nappend\n)\nreturn", "subsections": []}, {"name": "Ventajas", "text": "La ventaja esencial de este enfoque, es que al entremezclar perfectamente c\u00f3digo Python/C (es decir, C usando <python.h>) es que el c\u00f3digo Python existente se puede ajustar a casi la velocidad de C con solo a\u00f1adir unos pocos tipos est\u00e1ticos a las declaraciones y haciendo algunas adaptaciones en los bucles cr\u00edticos -sin necesidad de una interfaz complicada o muy invasiva del c\u00f3digo. La velocidad de codificaci\u00f3n y la legibilidad del c\u00f3digo sigue siendo bastante similar a la que se tiene usando Python.\nDebido a reducci\u00f3n del consumo general en las estructuras de control (especialmente los bucles), las optimizaciones optimistas y la (limitada) inferencia de tipos, el c\u00f3digo Python compilado con Cython normalmente se ejecuta m\u00e1s r\u00e1pido que en el int\u00e9rprete CPython 2.6.x, aunque las mejoras absolutas dependen en gran medida del c\u00f3digo. Con las declaraciones de tipos est\u00e1ticos, la aceleraci\u00f3n t\u00edpica en c\u00e1lculos num\u00e9ricos/matriciales es de 100x-1000x[5]\u200b En comparaci\u00f3n a la t\u00edpica optimizaci\u00f3n con Psyco (Python JIT compiler) qu\u00e9 es entre 4x-100x.[6]\u200b", "subsections": []}, {"name": "Compatibilidad", "text": "Cython est\u00e1 escrito en Python, as\u00ed que trabaja en Windows, Linux, y MacOS X.", "subsections": []}, {"name": "Usos", "text": "SageMath, un sistema de \u00e1lgebra computacional est\u00e1 parcialmente escrito en Cython.", "subsections": []}, {"name": "Referencias", "text": "\u2191 Differences between Cython and Pyrex Archivado el 25 de julio de 2011 en Wayback Machine.\n\u2191 \u00abDifferences between Cython and Pyrex\u00bb.\u00a0\n\u2191 Ewing, Greg (21 de marzo de 2011). \u00abRe: VM and Language summit info for those not at Pycon (and those that are!)\u00bb (Message to the electronic mailing-list python-dev). Consultado el 5 de mayo de 2011.\u00a0\n\u2191 Zed Shaw (2017). Learn Python the hard way. Addison-Wesley Professional. ISBN\u00a0978-0134692883.\u00a0\n\u2191 \u00abgmane.comp.python.cython.devel - Passing a pointer from Python\u00bb. Archivado desde el original el 14 de febrero de 2017. Consultado el 3 de mayo de 2011.\u00a0\n\u2191 Psyco - Introduction", "subsections": []}, {"name": "P\u00e1ginas externas", "text": "Sitio web oficial", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/DARPA", "title": "Agencia de Proyectos de Investigaci\u00f3n Avanzados de Defensa", "summary": "La Agencia de Proyectos de Investigaci\u00f3n Avanzados de Defensa, m\u00e1s conocida por su acr\u00f3nimo DARPA, proveniente de su nombre original en ingl\u00e9s Defense Advanced Research Projects Agency, es una agencia del Departamento de Defensa de Estados Unidos responsable del desarrollo de nuevas tecnolog\u00edas para uso militar. Fue creada en 1958 como consecuencia tecnol\u00f3gica de la llamada Guerra Fr\u00eda y de la que surgieron los fundamentos de ARPANET, red que dio origen a Internet.\nLa agencia, denominada en su origen simplemente como ARPA, cambi\u00f3 su denominaci\u00f3n en 1972, conoci\u00e9ndose en lo sucesivo como DARPA, por sus siglas en ingl\u00e9s. DARPA fue responsable de dar fondos para desarrollar muchas tecnolog\u00edas que han tenido un gran impacto en el mundo: sat\u00e9lites, robots, redes de ordenadores (empezando con ARPANET, que despu\u00e9s se desarroll\u00f3 como Internet), as\u00ed como NLS, el cual fue tanto un sistema de hipertexto como un precursor de la interfaz gr\u00e1fica de usuario contempor\u00e1nea.\nLa Agencia, bajo control del Departamento de Defensa se organizar\u00e1 en forma independiente de la comunidad de investigaci\u00f3n y desarrollo militar. Su misi\u00f3n durante las pr\u00f3ximas d\u00e9cadas la llevar\u00e1 a desarrollar y proveer aplicaciones tecnol\u00f3gicas no convencionales para la defensa de Estados Unidos ampliando la frontera tecnol\u00f3gica a favor de una organizaci\u00f3n reducida en n\u00famero, pero flexible, libre de condicionamientos y dotada de cient\u00edficos de \u00e9lite. A.R.P.A. ser\u00e1 la responsable de una gran parte de la investigaci\u00f3n en ordenadores y comunicaciones de car\u00e1cter innovador en EE.\u00a0UU. durante los pr\u00f3ximos a\u00f1os.\nSu nombre original fue simplemente Agencia de Investigaci\u00f3n de Proyectos Avanzados pero se renombr\u00f3 a DARPA (por Defensa) el 23 de marzo de 1972, volvi\u00f3 a cambiarse a ARPA el 22 de febrero de 1993 y otra vez a DARPA el 11 de marzo de 1996.\nDARPA fue creado en 1958 en respuesta al lanzamiento sovi\u00e9tico del Sputnik, con la misi\u00f3n de mantener a la tecnolog\u00eda de Estados Unidos en la carrera militar por delante de la de sus enemigos. Es independiente de otras agencias m\u00e1s convencionales de I+D y reporta directamente al consejo del Departamento de Defensa. DARPA tiene alrededor de 240 trabajadores, los cuales manejan un presupuesto de unos 3000 millones de d\u00f3lares \u20142800 en 2012.[1]\u200b Estos datos son solo promedios, puesto que DARPA est\u00e1 enfocado en proyectos de corto plazo (de dos a cuatro a\u00f1os) llevados a cabo por equipos peque\u00f1os y constituidos expresamente para dichos proyectos.", "sections": [{"name": "\u00cdndice", "text": "1 Espionaje\n2 Misi\u00f3n de DARPA\n3 Historia\n4 Organizaci\u00f3n actual\n5 Proyectos DARPA\n5.1 Proyectos Activos\n5.2 Proyectos Pasados\n6 Controversia\n7 ARPA y DARPA en la ficci\u00f3n\n8 V\u00e9ase tambi\u00e9n\n9 Referencias", "subsections": []}, {"name": "Espionaje", "text": "DARPA fund\u00f3 en enero de 2002 la Oficina de Informaci\u00f3n y Conocimiento (Information Awareness Office IAO por sus siglas en ingl\u00e9s) sin embargo dicha acci\u00f3n no tuvo una buena acogida alrededor del mundo, ya que sus actividades son criticadas duramente por incluir el acceso y b\u00fasqueda de informaci\u00f3n personal de cualquier ciudadano y sin necesidad de una orden judicial.\nEsto se logr\u00f3 mediante la creaci\u00f3n de enormes bases de datos inform\u00e1ticas para recoger y almacenar la informaci\u00f3n personal de cada uno en los Estados Unidos, incluyendo correos electr\u00f3nicos personales, redes sociales, registros de tarjetas de cr\u00e9dito, llamadas telef\u00f3nicas, registros m\u00e9dicos, y numerosas otras fuentes, sin ning\u00fan requisito para una orden de registro.", "subsections": []}, {"name": "Misi\u00f3n de DARPA", "text": "Seg\u00fan su propia presentaci\u00f3n:[2]\u200b\nLas necesidades en tiempo inmediato y los requerimientos conducen en general a que el Ej\u00e9rcito, la Armada, los Cuerpos de Marina y la Fuerza A\u00e9rea se enfoquen en aquellas necesidades que les reporten el mayor beneficio. En consecuencia, una extensa organizaci\u00f3n como el Departamento de Defensa necesita un lugar como DARPA cuyo \u00fanico estatuto sea la innovaci\u00f3n radical.\nDARPA parece ir m\u00e1s all\u00e1 de necesidades y requerimientos que se conocen hoy en d\u00eda. Tal como lo han notado los historiadores militares: \u201cel desarrollo inicial de ninguna de las armas m\u00e1s importantes que han transformado la guerra en el siglo XX \u2013el avi\u00f3n, el tanque, el radar, el motor de propulsi\u00f3n a chorro, el helic\u00f3ptero, el computador electr\u00f3nico, ni siquiera la bomba at\u00f3mica\u2013 se puede atribuir a un requisito doctrinal o a petici\u00f3n de la milicia.\u201d Y DARPA podr\u00eda a\u00f1adir a esta lista los sistemas no tripulados, el Sistema de Posicionamiento Global (GPS por sus siglas en ingl\u00e9s) y tecnolog\u00edas para Internet.", "subsections": []}, {"name": "Historia", "text": "DARPA fue creada como la Agencia de Proyectos Avanzados de Investigaci\u00f3n (ARPA, en ingl\u00e9s), mediante la Ley P\u00fablica 85-325 y la directiva del Departamento de Defensa 5105.41, en febrero de 1958. Su creaci\u00f3n estuvo directamente atribuida al lanzamiento del Sputnik y al hecho de que los EE. UU se dieron cuenta de que la Uni\u00f3n Sovi\u00e9tica hab\u00eda desarrollado la capacidad de explotar tecnolog\u00eda militar de forma r\u00e1pida. Adicionalmente, las comunidades pol\u00edticas y de defensa reconocieron la necesidad de una organizaci\u00f3n de alto nivel del Departamento de Defensa que formule y ejecute proyectos de I+D que expandieran las fronteras de la tecnolog\u00eda m\u00e1s all\u00e1 de los requerimientos inmediatos y espec\u00edficos de los servicios militares y de sus laboratorios. En b\u00fasqueda de esta misi\u00f3n, DARPA ha desarrollado y transferido programas de tecnolog\u00eda que abarcan una gran variedad de disciplinas cient\u00edficas, los cuales est\u00e1n dirigidos al espectro completo de necesidades de seguridad nacional.\nDe 1958 a 1967, el \u00e9nfasis de ARPA estuvo concentrado en problemas importantes de nivel nacional, como investigaci\u00f3n aeroespacial, defensa contra misiles bal\u00edsticos, y detecci\u00f3n de pruebas nucleares. En 1960, todos los programas espaciales de car\u00e1cter civil fueron transferidos a la NASA, y aquellos de car\u00e1cter militar se transfirieron a servicios individuales. Esto permiti\u00f3 que DARPA concentrara sus esfuerzos en el DEFENDER (acr\u00f3nimo de defensa contra misiles bal\u00edsticos), el Proyecto Vela (detecci\u00f3n de pruebas nucleares), y los Programas AGILE (I+D anti-insurgente); y empezaran a trabajar en procesamiento computacional, ciencias del comportamiento y ciencias materiales. Los programas DEFENDER y AGILE conformaron la I+D en DARPA en campos de detecci\u00f3n, vigilancia y energ\u00eda dirigida; particularmente en el estudio de radares, detecci\u00f3n infrarroja y de rayos X y gamma.\nA finales de la d\u00e9cada de 1960, con la transferencia de estos programas ya maduros a los Servicios, ARPA redefini\u00f3 su papel y se concentr\u00f3 en un conjunto diverso de programas de investigaci\u00f3n relativamente peque\u00f1os y esencialmente exploratorios. La agencia fue renombrada en 1972 como la Agencia de Proyectos Avanzados de Investigaci\u00f3n en Defensa (DARPA en ingl\u00e9s), y a principios de los 70, se enfatiz\u00f3 en programas de energ\u00eda directa, procesamiento de informaci\u00f3n y tecnolog\u00eda t\u00e1ctica.\nEn el \u00e1rea de procesamiento de informaci\u00f3n, DARPA dio grandes pasos, inicialmente a trav\u00e9s del desarrollo de sistemas de tiempo compartido (todos los sistemas operativos modernos son descendientes del sistema Multics, que fue resultado del trabajo iniciado por DARPA en esta \u00e1rea), y posteriormente a trav\u00e9s de la evoluci\u00f3n de la ARPANET (red de telecomunicaciones precursora de Internet), e investigaci\u00f3n de inteligencia artificial en campos como reconocimiento del habla y procesamiento de se\u00f1ales. DARPA tambi\u00e9n fund\u00f3 el desarrollo del sistema de computaci\u00f3n NLS por Douglas Engelbart y del Aspen Movie Map, el cual fue probablemente el primer sistema hipermedia y un importante precursor de la realidad virtual.\nLa pol\u00e9mica Enmienda Mansfield de 1973 limit\u00f3 expresamente las asignaciones para investigaci\u00f3n en defensa (a trav\u00e9s de ARPA/DARPA) \u00fanicamente a proyectos que tuvieran aplicaci\u00f3n militar directa. Algunos sosten\u00edan que la enmienda dej\u00f3 devastada a la ciencia estadounidense, puesto que ARPA/DARPA en esa \u00e9poca fue una importante fuente de recursos para proyectos de ciencia b\u00e1sica; la National Science Foundation nunca asumi\u00f3 esta carencia de la forma que se esperaba. Pero la fuga de cerebros resultante fue tambi\u00e9n atribuida al est\u00edmulo que hubo al desarrollo de la naciente industria de computadores personales. Muchos j\u00f3venes cient\u00edficos de la computaci\u00f3n migraron de las universidades a reci\u00e9n fundados laboratorios de investigaci\u00f3n privados como el Xerox PARC.\nDe 1976 a 1981, predominaban proyectos de tecnolog\u00eda a\u00e9rea, terrestre, mar\u00edtima y espacial, tales como ataque a fuerzas de continuaci\u00f3n con armas a distancia y Comando, Control, y Comunicaciones asociados; armamento t\u00e1ctico y programas anti-armamento; detecci\u00f3n infrarroja para vigilancia espacial; tecnolog\u00eda de l\u00e1ser de alta energ\u00eda para defensa espacial antimisiles; guerra anti-submarina; misiles de cruceros avanzados; aeronaves avanzadas; y aplicaciones de computaci\u00f3n avanzada en defensa. Estas demostraciones de programas tecnol\u00f3gicos a gran escala iban en conjunto con investigaci\u00f3n de circuitos integrados, que dio como resultado tecnolog\u00eda electr\u00f3nica de escala ultrafina y dispositivos electr\u00f3nicos que evolucionaron al programa VLSI y al programa de rayo de part\u00edculas, este \u00faltimo encargado por el congreso de Estados Unidos Muchos de los programas m\u00e1s exitosos fueron transformados a servicios, tales como las tecnolog\u00edas de base en reconocimiento autom\u00e1tico de objetivo, teledetecci\u00f3n espacial, propulsi\u00f3n y materiales que fueron transferidas a la Organizaci\u00f3n de Iniciativas Estrat\u00e9gicas de Defensa (SDIO en ingl\u00e9s), ahora conocida como la Organizaci\u00f3n de Defensa de Misiles Bal\u00edsticos (BMDO).\nDurante los a\u00f1os 80, la atenci\u00f3n de la agencia se centr\u00f3 en procesamiento de informaci\u00f3n y programas relacionados con desarrollo de aeroplanos, que incluyen el Avi\u00f3n Aeroespacial Nacional (NASP) o el Programa de Investigaci\u00f3n Hipers\u00f3nica. El Programa de Computaci\u00f3n Estrat\u00e9gica permiti\u00f3 a DARPA explotar tecnolog\u00edas avanzadas de procesamiento y de redes, y reconstruir y fortalecer las relaciones con las universidades despu\u00e9s de la guerra de Vietnam. Adem\u00e1s, DARPA empez\u00f3 a buscar nuevos conceptos para sat\u00e9lites peque\u00f1os y ligeros (LIGHTSAT) y dirigi\u00f3 nuevos programas relacionados con manufactura de defensa, tecnolog\u00eda de submarinos y armamento/anti-armamento.\nAlgunos rumores dicen que en los 70 el Pent\u00e1gono financi\u00f3 un proyecto para relacionar ciertos gr\u00e1ficos de ondas cerebrales con ciertos pensamientos con el fin de que fuera posible a trav\u00e9s de un equipo leer los pensamientos de una persona a cierta distancia esto se ocupar\u00eda con fines de defensa seg\u00fan los dichos de Robert Stone.", "subsections": []}, {"name": "Organizaci\u00f3n actual", "text": "DARPA tiene ocho oficinas de programa, las cuales dan informe al director de DARPA, Dr. Stefanie Tompkins:\nLa Oficina de Tecnolog\u00eda Avanzada (ATO) investiga, demuestra y desarrolla proyectos de gran factura en \u00e1reas de telecomunicaciones, mar\u00edtima, operaciones especiales, comando y control, aseguramiento de informaci\u00f3n y misiones de supervivencia.\nLa Oficina de Ciencias de la Defensa (DSO) busca las tecnolog\u00edas m\u00e1s novedosas dentro de un amplio espectro de comunidades de investigaci\u00f3n cient\u00edfica y de ingenier\u00eda, y desarrolla estas tecnolog\u00edas en nuevas capacidades militares importantes y radicalmente nuevas.\nLa Oficina de Tecnolog\u00eda en Procesamiento de Informaci\u00f3n est\u00e1 enfocada en la invenci\u00f3n de tecnolog\u00edas de redes, computaci\u00f3n y de software vitales para asegurar las superioridad militar del Departamento de Defensa.\nLa Oficina de Explotaci\u00f3n de Informaci\u00f3n desarrolla tecnolog\u00eda de detecci\u00f3n y de sistemas de informaci\u00f3n y sistemas con aplicaci\u00f3n a concepci\u00f3n del campo de batalla, blancos, comando y control, y la infraestructura de apoyo requerida para dirigir amenazas de tierra en procesos din\u00e1micos y de ciclo cerrado.\nLa misi\u00f3n de la Oficina de Tecnolog\u00eda en Microsistemas (MTO) se enfoca en la integraci\u00f3n heterog\u00e9nea a escala de microchip de sistemas electr\u00f3nicos, fot\u00f3nicos y microelectromec\u00e1nicos (estos \u00faltimos tambi\u00e9n conocidos como MEMS). Su tecnolog\u00eda de alto riesgo y factura est\u00e1 dirigida a resolver los problemas de nivel nacional de protecci\u00f3n contra ataques biol\u00f3gicos, qu\u00edmicos y de informaci\u00f3n, y para proporcionar dominio operacional para comando y control m\u00f3vil distribuido, guerra tripulada/no-tripulada combinada, y planeaci\u00f3n y ejecuci\u00f3n militar din\u00e1mica y adaptativa.\nLa Oficina de Proyectos Especiales investiga, desarrolla, demuestra y transforma tecnolog\u00edas enfocadas a confrontar desaf\u00edos nacionales presentes y emergentes. Sus inversiones abarcan desde el desarrollo de tecnolog\u00edas hasta la demostraci\u00f3n de extensos sistemas prototipo. La SPO desarrolla tecnolog\u00edas para contrarrestar la amenaza de instalaciones subterr\u00e1neas usadas para prop\u00f3sitos como comando y control, almacenamiento y puesta en marcha de armas, y manufactura de armas de destrucci\u00f3n masiva. Tambi\u00e9n desarrolla formas significativamente m\u00e1s efectivas en costo para contrarrestar misiles m\u00faltiples de bajo costo, veh\u00edculos de asalto urbano, y otras plataformas usadas para entrega, interferencia y vigilancia de armas. La SPO invierte en novedosas tecnolog\u00edas espaciales a lo largo del espectro de aplicaciones de control espacial que incluyen acceso r\u00e1pido, concepci\u00f3n situacional de espacio, contra-espacio y enfoques de detecci\u00f3n a nivel t\u00e1ctico persistente que incluyen aberturas y estructuras en el espacio extremadamente grandes.\nLa Oficina de Tecnolog\u00eda T\u00e1ctica se encarga de investigaci\u00f3n militar avanzada de alto coste y riesgo, enfatizando el enfoque de \"sistema\" y \"subsistema\" al desarrollo de sistemas aeron\u00e1uticos, espaciales y terrestres as\u00ed tambi\u00e9n como de procesadores empotrados y sistemas de control.\nLa Oficina Conjunta de Sistemas de Combate A\u00e9reo No Tripulado (J-UCAS) es la actividad en DARPA a la cual se le ha encomendado el esfuerzo del Departamento de Defensa de desarrollar y demostrar los Sistemas de Combate A\u00e9reo No Tripulado.\nLa Oficina de Tecnolog\u00edas Biol\u00f3gicas (BTO) fomenta, demuestra y transiciones, avances en la investigaci\u00f3n fundamental, descubrimientos y aplicaciones que integran la biolog\u00eda, la ingenier\u00eda y la inform\u00e1tica para la seguridad nacional. Creado en abril de 2014 por el entonces director Arati Prabhakar, tomando programas de las divisiones MTO y DSO.[4]\u200b", "subsections": []}, {"name": "Proyectos DARPA", "text": "Los proyectos en DARPA son muy futuristas y los podemos tener desde investigar la invisibilidad de la materia, la inteligencia artificial, la rob\u00f3tica muy avanzada como son robots l\u00edquidos, el submarino volador o la granada nuclear, etc. Todos los nombres de los proyectos de DARPA est\u00e1n en ingl\u00e9s. Algunos de los proyectos reconocidos de DARPA m\u00e1s emblem\u00e1ticos son los siguientes:", "subsections": [{"name": "Proyectos Activos", "text": "ACTUV - Un proyecto para construir un buque de guerra antisubmarino.\nArcLight (Missile) - Sistema de env\u00edo de armas con la capacidad de atacar objetivos casi en cualquier parte del mundo, basado en el misil SM-3.\nX-37b - Transbordador espacial robotizado sin tripulaci\u00f3n y de peque\u00f1o tama\u00f1o fabricado por Boeing, que fue puesto en \u00f3rbita en abril de 2010 utilizando un cohete de grandes dimensiones Atlas V para realizar experimentos cient\u00edficos secretos. En el espacio despliega unas c\u00e9lulas solares en conjunto con unas bater\u00edas de ion-litio de \u00faltima generaci\u00f3n y est\u00e1 preparado para permanecer durante 9 meses en el espacio. Fue un proyecto original de la NASA iniciado en 1999 para despu\u00e9s ser pasado a la Fuerza A\u00e9rea de los Estados Unidos y ser considerado como secreto. Tiene una masa de 5000 kg y unas dimensiones de 8,2 metros de largo x 4,5 metros de ancho. Dispone de un sistema de autodestrucci\u00f3n. Con una bodega para alojar diferentes cargas, dise\u00f1ado para volar entre 200 y 900 km de altura y con aterrizaje sin tripulaci\u00f3n y en modo autom\u00e1tico.\nIntegrated Sensor is Structure\nBoomerang (mobile shooter detection system) - Sistema ac\u00fastico desarrollado por BBN Technologies para detectar francotiradores en veh\u00edculos de combate militar.\nCALO o \"Cognitive Assistant that Learns and Organizes\" - Software\nCombat Zones That See - \"Rastrea todo lo visible\" en una ciudad con un sistema masivo de c\u00e1maras y procesado de imagen posterior.\nDARPA XG\nEATR - Un robot t\u00e1ctico energ\u00e9ticamente aut\u00f3nomo.\nFALCON\nHigh Energy Liquid Laser Area Defense System\nHigh Productivity Computing Systems\nHTV-2 (Hypersonic Technology Vehicle-2) - Veh\u00edculo hipers\u00f3nico para vuelos estratosf\u00e9ricos sin piloto a velocidad 6 veces la del sonido (Mach 6) realiz\u00f3 el primer vuelo en abril de 2010, donde fracas\u00f3 el intento perdiendo el artefacto.\nHulc - Exoesqueleto humano alimentado por bater\u00edas.\nMAHEM - Munici\u00f3n penetrante\nNorthrop Grumman Switchblade - Artefacto de alta velocidad de gran alcance basado en un ala oblicua.\nPersistent Close Air Support\nProtein Design Procesados\nRemote-controlled insects[5]\u200b\nDARPA Silent Talk - Un programa capaz de identificar patrones EEG de palabras y capaz de transmitirlos para comunicaciones encubiertas.[6]\u200b\nSystem F6 - Fractionated Spacecraft\nXOS - Exoesqueleto militar.\nTransformer - Veh\u00edculo terrestre armado capaz de pasar a veh\u00edculo a\u00e9reo.[7]\u200b\nWolfPack[8]\u200b\nJUGGERNAUTS - Prototipos de trajes antibal\u00edsticos, los artificieros llevan una protecci\u00f3n similar a la que se quiere proponer para el dise\u00f1o de los trajes."}, {"name": "Proyectos Pasados", "text": "Project AGILE\nARPANET, el predecesor de Internet\nAspen Movie Map\nASTOVL, precursor del Joint Strike Fighter Program[9]\u200b\nBoeing X-45\nCPOF\nDAML\nDARPA Grand Challenge - Competici\u00f3n de veh\u00edculos sin conductor\nDARPA Network Challenge[10]\u200b\nDEFENDER\nHigh Performance Knowledge Bases\nHISSS\nHypersonic Research Program\nI3 (Intelligent Integration of Information)\nInternet\nProject MAC\nMQ-1 Predator\nMultics\nNLS/Augment\nOnion routing\nPassive radar\nPolicy Analysis Market\nPOSSE\nRapid Knowledge Formation\nSea Shadow\nStrategic Computing Program\nSynthetic Aperture Ladar for Tactical Applications (SALTI)\nSURAN (1983\u201387)\nProject Vela (1963)"}]}, {"name": "Controversia", "text": "DARPA recibi\u00f3 la atenci\u00f3n de los medios en 2002 y 2003 luego de haber creado proyectos como Information Awareness Officeen: y Combat Zones That See (CTS), los cuales fueron demandados por los activistas de libertades civiles tanto de izquierda como de derecha como inaceptablemente Orwellianos.", "subsections": []}, {"name": "ARPA y DARPA en la ficci\u00f3n", "text": "En la serie de videojuegos Metal Gear Solid, se mencionan tanto a ARPA como a DARPA como parte del argumento, y hace referencia a c\u00f3mo ARPA finalmente se convierte en DARPA en el futuro. Se nota tambi\u00e9n la pol\u00e9mica propuesta de una Bolsa de An\u00e1lisis de Pol\u00edticas, que usa una bolsa electr\u00f3nica futurista para ayudar a efectuar el comercio de contratos futuros basado en posibles desarrollos pol\u00edticos en varios pa\u00edses de Oriente Medio. En el videojuego Vanquish el tutorial se realiza en un recinto de pruebas de DARPA.\nEn 2010, en el videojuego Tom Clancy's Splinter Cell: Conviction se hace referencia a Darpa como parte de la historia del juego.\nEn julio de 2013, en la pel\u00edcula Pacific Rim tambi\u00e9n se menciona que la tecnolog\u00eda empleada para realizar la conexi\u00f3n entre Jagger y piloto, tiene una interfaz DARPA.\nEn la pel\u00edcula de 2015 Project Almanac, unos adolescentes construyen una m\u00e1quina del tiempo, con planos encontrados en el s\u00f3tano de la casa de uno de ellos, ya que su padre trabaja para DARPA, a lo largo de la pel\u00edcula se menciona en m\u00faltiples ocasiones esta organizaci\u00f3n.\nEn 2018, en el anime Steins;Gate 0 se presenta a DARPA como una de las tres facciones que est\u00e1n en la b\u00fasqueda de Rintaro Okabe y Amadeus (IA con los recuerdos de Kurisu Makise) para desarrollar y controlar la tecnolog\u00eda de salto y viajes en el tiempo.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "DARPA Grand Challenge\nARPANET\nARPA-E\nInternet", "subsections": []}, {"name": "Referencias", "text": "\u2191 Shachtman, Noah (14 de febrero de 2012). \u00abDARPA DODGES OBAMA BUDGET DEATH RAY, KEEPS ITS $2.8 BILLION\u00bb. Wired. Consultado el 20 de marzo de 2015.\u00a0\n\u2191 https://web.archive.org/web/20070704001204/http://www.darpa.mil/body/pdf/BridgingTheGap_Feb_05.pdf (en ingl\u00e9s)\n\u2191 Nicholas Negroponte. Ser Digital. 1995\n\u2191 Klabukov, Ilya; Yakovets, Andrey; Alekhin, Maksim (2017). \u00abManagement of Systems Engineering and Technical Assistance of DARPA Research Programs\u00bb. Innovatsii (innovations) (5(223)): 12-19. doi:10.5281/zenodo.1173043.\u00a0\n\u2191 Ewen Callaway (1 de octubre de 2009). \u00abFree-flying cyborg insects steered from a distance\u00bb. New Scientist. Consultado el 4 de abril de 2010.\u00a0\n\u2191 Warwick, Graham (22 de mayo de 2009). \u00abDarpa Plans Triple-Target Missile Demo\u00bb. Aviation Week.\u00a0\n\u2191 Transformer (TX) darpa.mil. Retrieved: 4 August 2010.\n\u2191 \u00abSTO: WolfPack\u00bb. Darpa.mil. Strategic Technology Office. Archivado desde el original el 4 de marzo de 2010. Consultado el 4 de abril de 2010.\u00a0\n\u2191 A history of the Joint Strike Fighter Program, Martin-Baker. Retrieved 4 August 2010\n\u2191 \u00abDARPA Network Challenge\u00bb. Darpa.mil. Archivado desde el original el 31 de enero de 2010. Consultado el 4 de abril de 2010.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/D_(lenguaje_de_programaci%C3%B3n)", "title": "D (lenguaje de programaci\u00f3n)", "summary": "[\n]\nD es un lenguaje de programaci\u00f3n de prop\u00f3sito general desarrollado por Walter Bright cuya primera versi\u00f3n apareci\u00f3 en 1999. Se origina como un redise\u00f1o de C++, con un enfoque m\u00e1s pragm\u00e1tico, pero no es un lenguaje puramente derivado del anterior. D ha mantenido algunas caracter\u00edsticas de C++ y tambi\u00e9n est\u00e1 influido por otros conceptos de otros lenguajes como Java, C# y Eiffel. Una versi\u00f3n estable fue lanzada el 2 de enero de 2007.", "sections": [{"name": "\u00cdndice", "text": "1 Caracter\u00edsticas\n1.1 Orientada a objetos\n1.2 Metaprogramaci\u00f3n\n1.3 Funciones\n1.4 Manejo de memoria\n1.5 Interacci\u00f3n con otros sistemas\n2 Ejemplos\n2.1 Ejemplo 1\n3 Implementaci\u00f3n\n4 Herramientas de desarrollo\n5 Problemas y controversias\n5.1 Sobrecarga de operadores\n5.2 Divisi\u00f3n en la biblioteca est\u00e1ndar\n5.3 Soporte sin finalizar para bibliotecas compartidas/din\u00e1micas\n6 Referencias\n7 Enlaces externos", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "D est\u00e1 siendo dise\u00f1ado con lecciones aprendidas del uso de C++ en vez de ser dise\u00f1ado desde una perspectiva te\u00f3rica. Aunque usa muchos de los conceptos de C/C++ tambi\u00e9n descarta algunos, y por lo tanto no es compatible con c\u00f3digo escrito en C o C++. D retiene la habilidad de C++ de hacer c\u00f3digo de bajo nivel, permitiendo incluir c\u00f3digo en ensamblador. La herencia m\u00faltiple de C++ es reemplazada por herencia simple e interfaces y 'mixins'. La sintaxis de declaraci\u00f3n y la sintaxis para las expresiones se parecen a las de C++.\nEl soporte del lenguaje ensamblador demuestra una de las diferencias entre D con respecto a otros lenguajes como Java y C#. Esto permite incluir c\u00f3digo espec\u00edfico de la m\u00e1quina con c\u00f3digo D, una t\u00e9cnica com\u00fanmente usada por programadores de software de sistema para acceder a caracter\u00edsticas de bajo nivel necesarias para interactuar directamente con el hardware, permitiendo escribir software como sistemas operativos y drivers.\nD incluye soporte para comentarios de documentaci\u00f3n, pero hasta ahora s\u00f3lo el compilador entregado por Digital Mars implementa un generador de documentaci\u00f3n.", "subsections": [{"name": "Orientada a objetos", "text": "La programaci\u00f3n orientada a objetos est\u00e1 basada en herencia simple, con todas las clases derivadas de la clase Object. D no soporta herencia m\u00faltiple; en vez de eso, usa interfaces parecidas a las de Java, que son comparables a las clases abstractas de C++."}, {"name": "Metaprogramaci\u00f3n", "text": "La Metaprogramaci\u00f3n est\u00e1 soportada por una combinaci\u00f3n de plantillas, la ejecuci\u00f3n de funciones en tiempo de compilaci\u00f3n, tuplas y 'mixins' de cadenas. Soporta CTFE (evaluaci\u00f3n de funciones en tiempo de compilaci\u00f3n). Los siguientes ejemplos demuestran algunas de las caracter\u00edsticas en tiempo de ejecuci\u00f3n del lenguaje D.\nLas plantillas en D se pueden escribir en m\u00e1s de un estilo imperativo comparado con el estilo funcional de las plantillas de C++. El siguiente ejemplo es una funci\u00f3n regular que calcula el producto factorial de un n\u00famero:\nulong\n \nfactorial\n(\nn\n)\n{\n    \nProducto\n=\n1\n;\nfor\ni\n2\n<=\n++){\n        \n*=\n}\nreturn\nAqu\u00ed, se muestra el uso de la palabra reservada static for (la construcci\u00f3n iterativa en tiempo de ejecuci\u00f3n en D), para construir una plantilla que es capaz de realizar el mismo c\u00e1lculo:\ntemplate\nFactorial\nstatic\nEn los siguientes dos ejemplos, la plantilla y la funci\u00f3n definidas arriba se utilizan para calcular factoriales. No es necesario especificar expl\u00edcitamente los tipos de las constantes cuando el compilador infiere sus tipos desde el lado derecho de las asignaci\u00f3nes:\nenum\nfact_7\n!(\n7\n);\nEste es un ejemplo de una funci\u00f3n en tiempo de ejecuci\u00f3n. Las funciones ordinarias pueden usar constantes, aunque expresiones en tiempo de ejecuci\u00f3n deben reunir ciertos criterios:\nfact_9\n9\nLa funci\u00f3n std.string.format, del estilo printf, sirve para dar formato a los datos (tambi\u00e9n en tiempo de ejecuci\u00f3n, a trav\u00e9s de CTFE (ejecuci\u00f3n de funci\u00f3n en tiempo de ejecuci\u00f3n), y el pragma \"msg\" (directiva) que muestra el resultado en tiempo de ejecuci\u00f3n:\nimport\nstd\n.\nstring\n:\nformat\npragma\nmsg\n,\n\"7! = %s\"\n));\n\"9! = %s\"\nLos \"mixins\" de cadenas, combinadas con las CTFE, permiten generar c\u00f3digo D usando operaciones expresadas en cadenas de caracteres, en tiempo de ejecuci\u00f3n. Puede ser utilizado para an\u00e1lisis sint\u00e1ctico de un lenguaje espec\u00edfico del dominio hacia c\u00f3digo D, el cual se compila como parte del programa:\nFooToD\n// Modulo hipotetico que contiene una funcion que analiza el c\u00f3digo fuente Foo\n               \n// y devuelve el c\u00f3digo D equivalente\nvoid\nmain\n()\nmixin\nfooToD\n\"example.foo\"\n)));"}, {"name": "Funciones", "text": "D soporta caracter\u00edsticas de programaci\u00f3n funcional tal como funciones an\u00f3nimas, clausuras, objetos recursivamente immutables y el uso de funciones de orden superior. Hay dos sintaxis para funciones an\u00f3nimas, incluyendo una forma de declaraci\u00f3n m\u00faltiple y una notaci\u00f3n abreviada de expresiones simples:[6]\u200b\nint\nfunction\ng\nx\n*\n};\n// forma larga\n=>\n// forma abreviada"}, {"name": "Manejo de memoria", "text": "La memoria es usualmente manejada por un recolector de basura, pero objetos espec\u00edficos pueden ser finalizados inmediatamente cuando salen del \u00e1mbito. Es posible el manejo de memoria expl\u00edcito usando los operadores sobrecargados new y delete, y simplemente llamando las funciones malloc y free de C directamente. La recolecci\u00f3n de basura puede ser controlada: los programadores pueden agregar y excluir rangos de memoria de ser observados por el recolector, pueden pausar y reanudar el recolector y forzar un ciclo generacional o de recolecci\u00f3n completa.[7]\u200b El manual da muchos ejemplos de c\u00f3mo implementar diferentes esquemas de manejo de memoria altamente optimizados para cuando la recolecci\u00f3n de basura es inadecuada para el programa."}, {"name": "Interacci\u00f3n con otros sistemas", "text": "La API de C es admitida, al igual que todos los tipos fundamentales y derivados de C, permitiendo acceso directo al c\u00f3digo existente escrito en C y bibliotecas. La biblioteca est\u00e1ndar de C es parte del D est\u00e1ndar. A menos que se usen namespaces muy expl\u00edcitos puede ser de alguna forma dif\u00edcil de acceder, como se puede observar en m\u00f3dulos escritos en D que hagan uso de dicha caracter\u00edstica. Pero la biblioteca est\u00e1ndar de D es usualmente suficiente."}]}, {"name": "Ejemplos", "text": "", "subsections": [{"name": "Ejemplo 1", "text": "Este programa imprime sus argumentos de la l\u00ednea de comandos. La funci\u00f3n principal main es el punto de inicio de un programa en D, y args es un arreglo de cadena de caracteres que representa los argumentos de l\u00ednea de comandos. En D, string es un arreglo de caracteres, que se representa con char[] en D1, o immutable(char)[] en D2.\nstdio\nwritefln\nvoid main(string[] args)\n    efln(\"args[%d] = '%s'\", i, arg);\nLa palabra reservada foreach puede iterar cualquier colecci\u00f3n. En este caso, produce una sucesi\u00f3n de \u00edndices (i) y valores (arg) desde el arreglo args. El \u00edndice i y el valor arg tiene sus tipos inferidos desde del tipo del arreglo args."}]}, {"name": "Implementaci\u00f3n", "text": "Las implementaciones actuales de D compilan el c\u00f3digo directamente a c\u00f3digo m\u00e1quina para lograr una ejecuci\u00f3n eficiente.\nCambios al lenguaje no se hacen regularmente desde la versi\u00f3n 1.0. El dise\u00f1o est\u00e1 virtualmente congelado, y nuevos lanzamientos se concentran en resolver bugs existentes. El compilador oficial de Walter Bright define el lenguaje.\nDMD: El compilador de Digital Mars, el compilador oficial de D. El front end est\u00e1 bajo la licencia Artistic License y la licencia GNU GPL; las fuentes para el front end son distribuidas con los binarios del compilador. El back end es propietario, pero el c\u00f3digo es abierto.\nGDC: Un front end para el back end GCC, construido usando las fuentes del compilador DMD. Snapshots soportan la versi\u00f3n 2.0 del lenguaje.\nLDC: Un compilador basado en DMD y usa LLVM como back end. El backend LLVM permite que LDC logre optimizar el c\u00f3digo alcanzando rendimiento similar a C/C++ e incluso super\u00e1ndolo en ocasiones.", "subsections": []}, {"name": "Herramientas de desarrollo", "text": "D todav\u00eda no est\u00e1 soportado en muchos entornos de desarrollo, lo cual es un problema esencial para muchos usuarios. Editores que pueden ser usados incluyen a Entice Designer, emacs, vim, SciTE y Zeus entre otros. Vim soporta el resaltado de sintaxis y completado de c\u00f3digo (a trav\u00e9s de ctags parcheados). Code::Blocks incluye soporte parcial del lenguaje.\nHay dos plu-gins en desarrollo para Eclipse, Descent y Mmrnmhrm.\nAdicionalmente, hay IDEs escritas en el propio D como Poseidon, que incluye completado de c\u00f3digo, resaltado de sintaxis y depurador.\nAplicaciones escritas en D pueden ser depuradas con cualquier depurador de C o C++, como GDB o WinDbg, aunque soporte para varias caracter\u00edsticas fundamentales de D es limitado. Un depurador con soporte expl\u00edcito para D es Ddbg para Windows. El depurador comercial ZeroBUGS para Linux tiene soporte experimental para D. Ddbg puede ser usado con varios IDEs o desde la l\u00ednea de comandos, ZeroBUGS tiene su propia interfaz gr\u00e1fica.", "subsections": []}, {"name": "Problemas y controversias", "text": "", "subsections": [{"name": "Sobrecarga de operadores", "text": "La sobrecarga de operadores en D a veces son menos poderosas que las de C++. Un ejemplo es el opIndex, que sufre porque D no permite regresar referencias. Esto hace operaciones como obj[i]++; imposibles. La soluci\u00f3n parcial de D es el operador opIndexAssign, que solo repara casos donde la expresi\u00f3n indexeada es solo un valor L como obj[i] = 5 pero no los casos originales."}, {"name": "Divisi\u00f3n en la biblioteca est\u00e1ndar", "text": "La biblioteca est\u00e1ndar en D es llamada Phobos. Algunos miembros de la comunidad piensan que Phobos es demasiado simple y que posee numerosos problemas, por lo cual un reemplazo llamado Tango fue escrito.[8]\u200b Sin embargo, Tango y Phobos eran incompatibles debido a varias diferencias (soporte de hilos, recolector de basura, etc). La existencia de dos bibliotecas, ambas de uso elevado, llev\u00f3 a problemas significativos donde algunos paquetes usan Phobos y otros usan Tango. Este problema fue resuelto con la versi\u00f3n 2.0 del lenguaje."}, {"name": "Soporte sin finalizar para bibliotecas compartidas/din\u00e1micas", "text": "Bibliotecas compartidas ELF de Unix son soportadas hasta un punto usando el compilador GDC. En Windows, DLLs son soportadas y permiten a objetos recolectados por el recolector de basura de ser seguramente pasados a funciones de C, ya que el recolector de basura revisa el stack por punteros. Sin embargo, todav\u00eda hay limitaciones con DLLs en D incluyendo el hecho de que la informaci\u00f3n en tiempo de ejecuci\u00f3n de clases definidas en la DLL es incompatible con esas definidas en el ejecutable, y que cualquier objeto creado desde la DLL debe ser finalizado antes de que la DLL sea descargada.[9]\u200b"}]}, {"name": "Referencias", "text": "\u2191 \u00abChange Log: 2.096.0 \u2013 D Programming Language\u00bb. D Programming Language 2.0. D Language Foundation. Consultado el 6 de abril de 2021.\u00a0\n\u2191 \u00abD 2.096.0 Released and Other News\u00bb. Consultado el 6 de abril de 2021.\u00a0\n\u2191 \u00abBuilding  assert()  in Swift, Part 2:  __FILE__  and  __LINE__  - Swift Blog -\u00bb. Apple Developer. Consultado el 26 de septiembre de 2014. \u00abSwift borrows a clever feature from the D language: these identifiers expand to the location of the caller when evaluated in a default argument list.\u00a0\u00bb\u00a0\n\u2191 \u00abreadme.txt\u00bb. DMD source code. GitHub. Consultado el 5 de marzo de 2012.\u00a0\n\u2191 FAQ de digitalmars\n\u2191 \u00abExpressions\u00bb. Digital Mars. Consultado el 27 de diciembre de 2012.\u00a0\n\u2191 \u00abcore.memory - D Programming Language - Digital Mars\u00bb. Archivado desde el original el 28 de agosto de 2011. Consultado el 2009.\u00a0\n\u2191 Wiki4D: Standard Lib\n\u2191 \u00abWiki4D: BestPractices/DLL\u00bb. Consultado el 2009.\u00a0\nAndrei Alexandrescu, The D Programming Language, Addison-Wesley Professional; 1.\u00aa ed. (12 de junio de 2010)", "subsections": []}, {"name": "Enlaces externos", "text": "Digital Mars: D programming language\nDSource, una comunidad open source del lenguaje D\nWiki4D, una wiki sobre el lenguaje D\nD front-end for GCC\nThe Computer Language Benchmarks Game\nTabla de las caracter\u00edsticas de D\nVideo de presentaci\u00f3n de D por Walter Bright\nDdbg - Depurador de D para Windows\nComputerworld Interview with Walter Bright on D Programming Language", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Diferencia_de_conjuntos", "title": "Diferencia de conjuntos", "summary": "A\nB\nEn teor\u00eda de conjuntos, la diferencia de dos conjuntos es una operaci\u00f3n que da como resultado otro conjunto con los elementos del primer conjunto sin los elementos del segundo conjunto. Por ejemplo, la diferencia entre el conjunto de los n\u00fameros naturales, \nN\n{\\displaystyle \\mathbb {N} }\n, y el conjunto de los n\u00fameros pares sin incluir el cero, \nP\n{\\displaystyle P}\n, es el conjunto de los n\u00fameros que no son pares, es decir, los impares, \nI\n{\\displaystyle I}\n:\nN\n=\n{\n1\n,\n2\n,\n3\n,\n4\n,\n5\n,\n6\n,\n7\n,\n8\n,\n9\n,\n10\n,\n11\n,\n12\n\u2026\n}\n{\\displaystyle \\mathbb {N} =\\{1,2,3,4,5,6,7,8,9,10,11,12\\ldots \\}}\nP\n=\n{\n2\n,\n4\n,\n6\n,\n8\n,\n10\n,\n12\n\u2026\n}\n{\\displaystyle P=\\{2,4,6,8,10,12\\ldots \\}}\nI\n=\n{\n1\n,\n3\n,\n5\n,\n7\n,\n9\n,\n11\n,\n13\n,\n15\n,\n17\n\u2026\n}\n{\\displaystyle I=\\{1,3,5,7,9,11,13,15,17\\ldots \\}}\nComo no hay ning\u00fan elemento del conjunto P que no sea un n\u00famero natural, la diferencia P menos N no tiene ning\u00fan elemento, por lo que es el conjunto vac\u00edo. La diferencia entre dos conjuntos A y B se denota por A \\ B o A \u2212 B, por lo que: N \\ P = I, y tambi\u00e9n P \u2212 N = \u2205.", "sections": [{"name": "\u00cdndice", "text": "1 Definici\u00f3n\n2 Propiedades\n3 V\u00e9ase tambi\u00e9n\n4 Bibliograf\u00eda", "subsections": []}, {"name": "Definici\u00f3n", "text": "Dados dos conjuntos A y B, su diferencia es el conjunto que contiene algunos  elementos de A que no est\u00e1n en B:\nLa diferencia de A menos B (o entre A y B) es otro conjunto A \\ B (o tambi\u00e9n A \u2212 B) cuyos elementos son todos aquellos elementos de A que no lo sean de B:\nx\n\u2208\nA\n\u2216\nB\n\u00a0si y s\no\n\u00b4\nlo si\u00a0\nx\n\u2208\nA\n\u00a0pero\u00a0\nx\n\u2209\nB\n{\\displaystyle x\\in A\\setminus B{\\text{ si y s}}{\\acute {\\text{o}}}{\\text{lo si }}x\\in A{\\text{ pero }}x\\notin B}\nLa diferencia entre A y B tambi\u00e9n se denomina complemento relativo de B en A, y se denota \u2201AB, cuando el segundo es un subconjunto del primero. Este nombre proviene de la relaci\u00f3n entre las operaciones de diferencia y complemento (ver m\u00e1s abajo). La norma ISO da preferencia a la notaci\u00f3n con barra invertida. [cita\u00a0requerida]\nEjemplo.\nSean A = {\u2660, 5, z, R, 0} y B = {0, p, 9, z, \u0394}. Sus diferencias son A \\ B = {\u2660, 5, R} y B \\ A = {p, 9, \u0394}\nSean los conjuntos de n\u00fameros naturales P = {n: n es par} y P = {n: n es primo}. La diferencia P \\ P es entonces {n: n es par y no es primo} = {n: n es par y compuesto} = {4, 8, 6, ...}. Por otro lado, P \\ P = {n: n es primo y no es par} = {n: n es primo e impar} = {3, 5, 7, 11, ...}.\nEn la introducci\u00f3n se mostr\u00f3 que la diferencia P \\ N es el conjunto vac\u00edo. Adem\u00e1s, P \\ I es igual a P: ning\u00fan n\u00famero par es a la vez un n\u00famero impar.", "subsections": []}, {"name": "Propiedades", "text": "Art\u00edculo principal:\nDe la definici\u00f3n de la diferencia de conjuntos, puede deducirse inmediatamente.\nElemento neutro. La diferencia entre un conjunto y el conjunto vac\u00edo es el propio conjunto:\nA\n\u2216\n\u2205\n=\nA\n{\\displaystyle A\\setminus \\varnothing =A}\nLa diferencia de un conjunto menos \u00e9l mismo es el conjunto vac\u00edo:\nA\n\u2216\nA\n=\n\u2205\n{\\displaystyle A\\setminus A=\\varnothing }\nEstas igualdades son un caso particular de la siguiente propiedad:\nLa diferencia entre dos conjuntos es el conjunto vac\u00edo si y s\u00f3lo si el primero es un subconjunto del segundo:\nA\n\u2216\nB\n=\n\u2205\n\u2194\nA\n\u2286\nB\n{\\displaystyle A\\setminus B=\\varnothing \\leftrightarrow A\\subseteq B}\nLa diferencia entre dos conjuntos es igual al primer conjunto si y s\u00f3lo si ambos conjuntos son disjuntos:\nA\n\u2216\nB\n=\nA\n\u2194\nA\n\u2229\nB\n=\n\u2205\n{\\displaystyle A\\setminus B=A\\leftrightarrow A\\cap B=\\varnothing }\nLa intersecci\u00f3n de dos conjuntos es la parte que tienen en com\u00fan, mientras que la diferencia es la parte que no comparten. Esto se traduce en la siguiente propiedad:\nDados dos conjuntos, su intersecci\u00f3n y su diferencia son disjuntos entre s\u00ed, y su uni\u00f3n es el primero de los conjuntos iniciales:\n(\nA\n\u2229\nB\n)\n\u2229\n(\nA\n\u2216\nB\n)\n=\n\u2205\n\u00a0\n,\n\u00a0\n(\nA\n\u2229\nB\n)\n\u222a\n(\nA\n\u2216\nB\n)\n=\nA\n{\\displaystyle (A\\cap B)\\cap (A\\setminus B)=\\varnothing \\ ,\\ (A\\cap B)\\cup (A\\setminus B)=A}\nEsto quiere decir que la intersecci\u00f3n y la diferencia entre A y B son una (posible) partici\u00f3n de A.\nLa diferencia de conjuntos est\u00e1 muy relacionada con el complemento de un conjunto:\nEl complemento de un conjunto es la diferencia entre el conjunto universal y \u00e9l mismo:\nA\n\u2201\n=\nU\n\u2216\nA\n{\\displaystyle A^{\\complement }=U\\setminus A}\nEs por esto que la diferencia de dos conjuntos, A - B, se denomina tambi\u00e9n el complemento relativo de B respecto de A: A \\ B es el complemento absoluto de B, considerando a A como el conjunto universal . Las leyes de De Morgan y otras propiedades del complemento de un conjunto tienen entonces su contrapartida en la diferencia de conjuntos, si se tiene en cuenta que\nSi se considera un conjunto universal, la diferencia entre dos conjuntos es la intersecci\u00f3n del primero con el complemento del segundo:\nA\n\u2216\nB\n=\nA\n\u2229\nB\n\u2201\n{\\displaystyle A\\setminus B=A\\cap B^{\\complement }}\nTambi\u00e9n es de hacer notar que si:\nA\n\u2212\nB\n=\nC\n,\n{\\displaystyle A-B=C,}\nA\n\u2260\nC\n+\nB\n{\\displaystyle A\\neq C+B}", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "\u00c1lgebra de conjuntos\nDiferencia sim\u00e9trica\nConjunto\nTeor\u00eda de conjuntos", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Lipschutz, Seymour (1991). Teor\u00eda de conjuntos y temas afines. McGraw-Hill. ISBN\u00a0968-422-926-7.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Diferencia_sim%C3%A9trica", "title": "Diferencia sim\u00e9trica", "summary": "A\nB\nEn teor\u00eda de conjuntos, la diferencia sim\u00e9trica de dos conjuntos es una operaci\u00f3n cuyo resultado es otro conjunto que contiene a aquellos elementos que pertenecen a uno de los conjuntos iniciales, pero no a ambos a la vez. Por ejemplo, la diferencia sim\u00e9trica del conjunto de los n\u00fameros pares positivos P y el conjunto de los cuadrados perfectos C es un conjunto D que contiene los cuadrados impares y los pares no cuadrados:\nP\n=\n{\n2\n,\n4\n,\n6\n,\n8\n,\n10\n,\n12\n,\n14\n,\n16\n,\n\u2026\n}\n{\\displaystyle P=\\{2,4,6,8,10,12,14,16,\\ldots \\}}\nC\n=\n{\n1\n,\n4\n,\n9\n,\n16\n,\n25\n,\n\u2026\n}\n{\\displaystyle C=\\{1,4,9,16,25,\\ldots \\}}\nD\n=\n{\n1\n,\n2\n,\n6\n,\n8\n,\n9\n,\n10\n,\n12\n,\n14\n,\n18\n,\n\u2026\n}\n{\\displaystyle D=\\{1,2,6,8,9,10,12,14,18,\\ldots \\}}", "sections": [{"name": "\u00cdndice", "text": "1 Definici\u00f3n\n1.1 Generalizaciones\n2 Propiedades\n3 V\u00e9ase tambi\u00e9n\n4 Referencias", "subsections": []}, {"name": "Definici\u00f3n", "text": "Dados dos conjuntos A y B, su diferencia sim\u00e9trica, A \u0394 B, es un conjunto que contiene los elementos de A y los de B, excepto los que son comunes a ambos:\nLa diferencia sim\u00e9trica de dos conjuntos A y B es otro conjunto A \u0394 B cuyos elementos son todos los elementos de A o B, a excepci\u00f3n de los elementos comunes a ambos:\nx\n\u2208\nA\n\u00a0\n\u0394\nB\n{\\displaystyle x\\in A\\ \\Delta \\,B}\n si y s\u00f3lo si, o bien \nx\n\u2208\nA\n{\\displaystyle x\\in A}\n o bien \nx\n\u2208\nB\n{\\displaystyle x\\in B}\nEjemplo.\nSean A = {a, \u2660, 5, Z} y B = {8, #, a, \u0393, \u2660}. La diferencia sim\u00e9trica es A \u0394 B = {5, \u0393, #, Z, 8}.\nSean los conjuntos de pol\u00edgonos T = {pent\u00e1gonos} y R = {pol\u00edgonos regulares}. La diferencia sim\u00e9trica contiene los pol\u00edgonos regulares y pent\u00e1gonos que no sean ambas cosas a la vez, o sea: R \u0394 T = {Pent\u00e1gonos irregulares y pol\u00edgonos regulares que no posean 5 lados}.\nLa definici\u00f3n de la diferencia sim\u00e9trica puede reducirse f\u00e1cilmente a las operaciones de uni\u00f3n, intersecci\u00f3n y diferencia:\nA\n\u00a0\n\u0394\nB\n=\n(\nA\n\u222a\nB\n)\n\u2216\n(\nA\n\u2229\nB\n)\n=\n(\nA\n\u2216\nB\n)\n\u222a\n(\nB\n\u2216\nA\n)\n{\\displaystyle A\\ \\Delta \\,B=(A\\cup B)\\setminus (A\\cap B)=(A\\setminus B)\\cup (B\\setminus A)}", "subsections": [{"name": "Generalizaciones", "text": "La diferencia sim\u00e9trica es conmutativa y asociativa por lo que al tomar la diferencia sim\u00e9trica de m\u00e1s de dos conjuntos, el orden en el que se realizan las operaciones es irrelevante (ver m\u00e1s abajo). As\u00ed es que se puede definir la diferencia sim\u00e9tria de una familia de conjuntos finita:\nA\n1\n\u00a0\n\u25b3\nA\n2\n\u00a0\n\u25b3\n\u2026\n\u00a0\n\u25b3\nA\nn\n\u2261\n(\nA\n1\n\u00a0\n\u25b3\n(\nA\n2\n\u00a0\n\u25b3\n(\n\u2026\n\u00a0\n\u25b3\nA\nn\n)\n\u2026\n)\n{\\displaystyle A_{1}\\ \\triangle \\,A_{2}\\ \\triangle \\,\\ldots \\ \\triangle \\,A_{n}\\equiv \\left(A_{1}\\ \\triangle \\,\\left(A_{2}\\ \\triangle \\,\\left(\\ldots \\ \\triangle \\,A_{n}\\right){\\scriptstyle \\ldots }\\right)\\right.}\nPuede comprobarse que una definici\u00f3n alternativa para esta diferencia de varios conjuntos es incluir s\u00f3lo los elementos que aparecen un n\u00famero impar de veces:\nA\n1\n\u00a0\n\u25b3\nA\n2\n\u00a0\n\u25b3\n\u2026\n\u00a0\n\u25b3\nA\nn\n=\n{\na\n\u2208\n\u222a\n1\n\u2264\ni\n\u2264\nn\nA\ni\n:\n\u00a0el cardinal de\u00a0\n{\nk\n:\na\n\u2208\nA\nk\n}\n\u00a0es impar\n}\n{\\displaystyle A_{1}\\ \\triangle \\,A_{2}\\ \\triangle \\,\\ldots \\ \\triangle \\,A_{n}={\\big \\{}a\\in \\cup _{1\\leq i\\leq n}A_{i}:{\\text{ el cardinal de }}\\{k:a\\in A_{k}\\}{\\text{ es impar}}{\\big \\}}}"}]}, {"name": "Propiedades", "text": "Art\u00edculo principal:\nDe la definici\u00f3n de diferencia sim\u00e9trica puede deducirse directamente:\nNilpotencia. La diferencia sim\u00e9trica de un conjunto consigo mismo es el conjunto vac\u00edo:\nA\n\u25b3\nA\n=\n\u2205\n{\\displaystyle A\\,\\triangle A=\\varnothing }\nLa diferencia sim\u00e9trica de un conjunto y uno de sus subconjuntos es la diferencia entre ellos:\nB\n\u2286\nA\n\u2192\nA\n\u25b3\nB\n=\nA\n\u2216\nB\n{\\displaystyle B\\subseteq A\\rightarrow A\\triangle B=A\\setminus B}\nLa diferencia sim\u00e9trica tiene propiedades semejantes a las operaciones con n\u00fameros:\nPropiedad asociativa. La diferencia sim\u00e9trica de los conjuntos A y B \u0394 C es igual que la diferencia sim\u00e9trica de los conjuntos A \u0394 B y C\u00a0:\n(\nA\n\u25b3\nB\n)\n\u25b3\nC\n=\nA\n\u25b3\n(\nB\n\u25b3\nC\n)\n{\\displaystyle (A\\triangle B)\\triangle C=A\\triangle (B\\triangle C)}\nPropiedad conmutativa. La diferencia sim\u00e9trica de los conjuntos A y B es igual a la diferencia sim\u00e9trica de los conjuntos B y A\u00a0:\nA\n\u25b3\nB\n=\nB\n\u25b3\nA\n{\\displaystyle A\\triangle B=B\\triangle A}\nElemento neutro. La diferencia sim\u00e9trica de un conjunto A con el conjunto vac\u00edo es el mismo conjunto A:\nA\n\u25b3\n\u2205\n=\nA\n{\\displaystyle A\\triangle \\varnothing =A}\nAdem\u00e1s, con respecto a la intersecci\u00f3n existe una ley distributiva:\nPropiedad distributiva\nA\n\u2229\n(\nB\n\u25b3\nC\n)\n=\n(\nA\n\u2229\nB\n)\n\u25b3\n(\nA\n\u2229\nC\n)\n{\\displaystyle A\\cap (B\\triangle C)=(A\\cap B)\\triangle (A\\cap C)}\nLas propiedades de la intersecci\u00f3n y la diferencia sim\u00e9trica son similares a las del producto y la suma en Z2. Esto implica que el conjunto potencia de un conjunto dado X tiene estructura de anillo considerando estas dos operaciones. Este anillo se corresponde (es isomorfo) al anillo de las funciones de X con valores en Z2, con la suma y producto punto a punto. La correspondencia asigna a cada subconjunto de X su funci\u00f3n caracter\u00edstica.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "\u00c1lgebra de conjuntos\nDiferencia de conjuntos\nIntersecci\u00f3n de conjuntos", "subsections": []}, {"name": "Referencias", "text": "M.I. Voitsekhovskii. \u00abSymmetric difference of sets\u00bb. Encyclopaedia of mathematics (en ingl\u00e9s). Archivado desde el original el 30 de julio de 2012.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Django_(framework)", "title": "Django (framework)", "summary": "Django es un framework de desarrollo web de c\u00f3digo abierto, escrito en Python, que respeta el patr\u00f3n de dise\u00f1o conocido como modelo\u2013vista\u2013controlador (MVC). Fue desarrollado originalmente para gestionar p\u00e1ginas web orientadas a noticias de la World Company de Lawrence, Kansas, y fue liberada al p\u00fablico bajo una licencia BSD en julio de 2005; el framework fue nombrado en alusi\u00f3n al guitarrista de jazz gitano Django Reinhardt.\nEn junio de 2008 fue anunciado que la reci\u00e9n formada Django Software Foundation se har\u00eda cargo de Django en el futuro.\nLa meta fundamental de Django es facilitar la creaci\u00f3n de sitios web complejos. Django pone \u00e9nfasis en el re-uso, la conectividad y extensibilidad de componentes, el desarrollo r\u00e1pido y el principio \u00abDRY\u00bb (del ingl\u00e9s Don't Repeat Yourself,\u00abNo te repitas\u00bb). El lenguaje Python es usado en todos los componentes del framework, incluso en configuraciones, archivos,[1]\u200b y en sus modelos de datos.", "sections": [{"name": "\u00cdndice", "text": "1 Visi\u00f3n general y caracter\u00edsticas\n2 Arquitectura\n2.1 Presentaci\u00f3n\n2.2 Control\n2.3 Mediator\n2.4 Entity\n2.5 Foundation\n3 Historial de versiones\n4 Soporte de bases de datos\n5 Soporte de servidores Web\n6 Requerimientos\n7 Otros aspectos\n7.1 Inconsistencias entre la nomenclatura Django y el patr\u00f3n MVC\n7.2 Proceso de una Petici\u00f3n HTTP\n7.3 Middleware\n8 Django en la web\n9 Referencias\n10 Enlaces externos", "subsections": []}, {"name": "Visi\u00f3n general y caracter\u00edsticas", "text": "Al igual que Ruby on Rails, otro popular framework de c\u00f3digo abierto, Django se us\u00f3 en producci\u00f3n durante un tiempo antes de que se liberara al p\u00fablico; fue desarrollado por Adrian Holovaty, Simon Willison, Jacob Kaplan-Moss y Wilson Miner mientras trabajaban en World Online, y originalmente se utiliz\u00f3 para administrar tres sitios web de noticias: The Lawrence Journal-World, lawrence.com y KUsports.com.\nLos or\u00edgenes de Django en la administraci\u00f3n de p\u00e1ginas de noticias son evidentes en su dise\u00f1o, ya que proporciona una serie de caracter\u00edsticas que facilitan el desarrollo r\u00e1pido de p\u00e1ginas orientadas a contenidos. Por ejemplo, en lugar de requerir que los desarrolladores escriban controladores y vistas para las \u00e1reas de administraci\u00f3n de la p\u00e1gina, Django proporciona una aplicaci\u00f3n incorporada para administrar los contenidos, que puede incluirse como parte de cualquier p\u00e1gina hecha con Django y que puede administrar varias p\u00e1ginas a partir de una misma instalaci\u00f3n; la aplicaci\u00f3n administrativa permite la creaci\u00f3n, actualizaci\u00f3n y eliminaci\u00f3n de objetos de contenido, llevando un registro de todas las acciones realizadas sobre cada uno, y proporciona una interfaz para administrar los usuarios y los grupos de usuarios (incluyendo una asignaci\u00f3n detallada de permisos).\nLa distribuci\u00f3n principal de Django tambi\u00e9n aglutina aplicaciones que proporcionan un sistema de comentarios, herramientas para sindicar contenido via RSS y/o Atom, \"p\u00e1ginas planas\" que permiten gestionar p\u00e1ginas de contenido sin necesidad de escribir controladores o vistas para esas p\u00e1ginas, y un sistema de redirecci\u00f3n de URLs.\nOtras caracter\u00edsticas de Django son:\nUn mapeador objeto-relacional.\nAplicaciones \"enchufables\" que pueden instalarse en cualquier p\u00e1gina gestionada con Django.\nUna API de base de datos robusta.\nUn sistema incorporado de \"vistas gen\u00e9ricas\" que ahorra tener que escribir la l\u00f3gica de ciertas tareas comunes.\nUn sistema extensible de plantillas basado en etiquetas, con herencia de plantillas.\nUn despachador de URLs basado en expresiones regulares.\nUn sistema \"middleware\" para desarrollar caracter\u00edsticas adicionales; por ejemplo, la distribuci\u00f3n principal de Django incluye componentes middleware que proporcionan cacheo, compresi\u00f3n de la salida, normalizaci\u00f3n de URLs, protecci\u00f3n CSRF y soporte de sesiones.\nSoporte de internacionalizaci\u00f3n, incluyendo traducciones incorporadas de la interfaz de administraci\u00f3n.\nDocumentaci\u00f3n incorporada accesible a trav\u00e9s de la aplicaci\u00f3n administrativa (incluyendo documentaci\u00f3n generada autom\u00e1ticamente de los modelos y las bibliotecas de plantillas a\u00f1adidas por las aplicaciones).\nDjango tambi\u00e9n es una plataforma habitual que brinda m\u00faltiples herramientas", "subsections": []}, {"name": "Arquitectura", "text": "Aunque Django est\u00e1 fuertemente inspirado en la filosof\u00eda de desarrollo Modelo Vista Controlador, sus desarrolladores declaran p\u00fablicamente que no se sienten especialmente atados a observar estrictamente ning\u00fan paradigma particular, y en cambio prefieren hacer \"lo que les parece correcto\". Como resultado, por ejemplo, lo que se llamar\u00eda \"controlador\" en un \"verdadero\" framework MVC se llama en Django \"vista\", y lo que se llamar\u00eda \"vista\" se llama \"plantilla\".\nGracias al poder de las capas mediator y foundation, Django permite que los desarrolladores se dediquen a construir los objetos Entity y la l\u00f3gica de presentaci\u00f3n y control para ellos.", "subsections": [{"name": "Presentaci\u00f3n", "text": "Aqu\u00ed se maneja la interacci\u00f3n entre el usuario y el computador. En Django, esta tarea la realizan el motor de plantillas y el cargador de plantillas que toman la informaci\u00f3n y la presentan al usuario (v\u00eda HTML, por ejemplo). El sistema de configuraci\u00f3n de URLs es tambi\u00e9n parte de la capa de presentaci\u00f3n."}, {"name": "Control", "text": "En esta capa reside el programa o la l\u00f3gica de aplicaci\u00f3n en s\u00ed. En Django son representados por las vistas y los manipuladores.\nLa capa de presentaci\u00f3n depende de esta y a su vez esta depende de la capa de dominio."}, {"name": "Mediator", "text": "Es el encargado de manejar la interacci\u00f3n entre el subsistema Entity y foundation. \nAqu\u00ed se realiza el mapeo objeto-relacional a cargo del motor de Django."}, {"name": "Entity", "text": "El subsistema entity maneja los objetos de negocio. El mapeo objeto-relacional de Django permite escribir objetos de tipo entity de una forma f\u00e1cil y est\u00e1ndar."}, {"name": "Foundation", "text": "La principal tarea del subsistema foundation es la de manejar a bajo nivel el trabajo con la base de datos. Se provee soporte a nivel de foundation para varias bases de datos y otras est\u00e1n en etapa de prueba."}]}, {"name": "Historial de versiones", "text": "02005-11-16 \n02006-01-11 \n02006-07-29 \n02007-03-23 \n02008-09-03 \n02009-07-29 \n02010-05-17 \n02011-03-23 \n02012-03-23 \n02013-02-26 \n02013-11-06 \n02014-09-02 \n02015-04-01 \n02015-12-01 \n02017-01-17 \n02017-04-01 \n02017-12-01 \n02018-08-01 \n02019-04-01 \n02019-12-02 \n02020-08-04 \n02021-04 \n02021-12 \n02022-08 \n02023-04 \n02023-12 ", "subsections": []}, {"name": "Soporte de bases de datos", "text": "Respecto a la base de datos, la recomendada es PostgreSQL, pero tambi\u00e9n son soportadas MySQL y SQLite 3. Se encuentra en desarrollo un adaptador para Microsoft SQL Server.\nUna vez creados los modelos de datos, Django proporciona una abstracci\u00f3n de la base de datos a trav\u00e9s de su API que permite crear, recuperar, actualizar y borrar objetos. Tambi\u00e9n es posible que el usuario ejecute sus propias consultas SQL directamente. En el modelo de datos de Django, una clase representa un registro de una tabla en la base de datos y las instancias de esta ser\u00e1n las tuplas en la tabla.", "subsections": []}, {"name": "Soporte de servidores Web", "text": "Como mencionamos en los requisitos, Django incluye un servidor web liviano para realizar pruebas y trabajar en la etapa de desarrollo.\nEn la etapa de producci\u00f3n, sin embargo, se recomienda Apache 2 con mod_python. Aunque Django soporta la especificaci\u00f3n WSGI, por lo que puede correr sobre una gran variedad de servidores como FastCGI o SCGI en Apache u otros servidores (particularmente Lighttpd).", "subsections": []}, {"name": "Requerimientos", "text": "Django requiere Python 2.5 o superior. No se necesitan otras bibliotecas de Python para poder obtener una funcionalidad b\u00e1sica. \nEn un entorno de desarrollo \u2013especialmente si queremos experimentar con Django\u2014no necesitamos un web server instalado, ya que Django trae su propio servidor liviano para este prop\u00f3sito, con la restricci\u00f3n de solo permitir un usuario a la vez.\nBase de datos PostgreSQL, MySQL, Oracle o SQLite.", "subsections": []}, {"name": "Otros aspectos", "text": "", "subsections": [{"name": "Inconsistencias entre la nomenclatura Django y el patr\u00f3n MVC", "text": "Django aparenta implementar el patr\u00f3n MVC, pero su patr\u00f3n es llamado MTV: modelo, template, vista.\nPrimero, debemos aclarar que al momento de dise\u00f1ar Django, no se busc\u00f3 apegarse a nada en particular, sino desarrollar una herramienta que funcione lo mejor posible.\nSi bien es cierto que se asemeja mucho a la implementaci\u00f3n del patr\u00f3n MVC, para Django la Vista describe \u201cqu\u00e9\u201d datos ser\u00e1n presentados y no \u201cc\u00f3mo\u201d se ver\u00e1n los mismos. Aqu\u00ed es donde entran en juego los templates, que describen \u201cc\u00f3mo los datos son presentados\u201d.\nSe dice que el \u201ccontroller\u201d de un MVC cl\u00e1sico est\u00e1 representado por el propio framework. Es decir, el sistema que env\u00eda un request a la vista correspondiente, de acuerdo a la configuraci\u00f3n de URL de Django (archivo de configuraci\u00f3n)."}, {"name": "Proceso de una Petici\u00f3n HTTP", "text": "Teniendo la arquitectura en cuenta, veremos a grandes rasgos como se procesa un request.\nCuando Django recibe una Petici\u00f3n HTTP, lo primero que se hace es crear un instancia de la clase HttpRequest que contiene todas las propiedades de la petici\u00f3n y diferentes m\u00e9todos \u00fatiles.\nLuego se realiza la resoluci\u00f3n de la URL. Esto consiste en seleccionar la funci\u00f3n de la vista (a partir de la URL especificada en la petici\u00f3n HTTP) que participar\u00e1 en la creaci\u00f3n de la respuesta de la aplicaci\u00f3n.\nUna vez que hemos resuelto que funci\u00f3n resolver\u00e1 la URL especificada, se invoca a la funci\u00f3n de la vista con la instancia **request** de la petici\u00f3n HTTP como primer par\u00e1metro, el m\u00e9todo de la vista contiene generalmente todo el trabajo l\u00f3gico, operaciones como obtener objetos de la base de datos a trav\u00e9s de los modelos, c\u00e1lculos, transformaciones y finalmente la construcci\u00f3n de la representaci\u00f3n de la respuesta final al usuario."}, {"name": "Middleware", "text": "Django provee tres puntos diferentes en los que permite ejecutar clases middleware, previamente definidas en el archivo de configuraci\u00f3n. Una misma clase puede ejecutarse en m\u00e1s de un punto, estas son las opciones:"}]}, {"name": "Django en la web", "text": "Estos son solo algunos de los sitios que utilizan Django, aqu\u00ed se encuentra una lista m\u00e1s completa\nPinterest[25]\u200b\nhttp://www.lawrence.com/[26]\u200b\nhttps://web.archive.org/web/20070609122443/http://www.chicagocrime.org/[27]\u200b\nhttp://www.ljworld.com/\nhttp://projects.washingtonpost.com/congress/\nhttp://www.torontolife.com/\nhttp://www.lawrencechamber.com/", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abM\u00e9todos File en Python: Creaci\u00f3n y manipulaci\u00f3n de archivos de texto\u00bb. Consultado el 19 de febrero de 2017.\u00a0\n\u2191 \"Introduciendo Django 0.90\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \"Django 0.91 liberado\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \"Introduciendo Django 0.95\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \"Anunciando Django 0.96!\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \"Django 1.0 liberado!\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \"Django 1.1 liberado\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \"Django 1.2 liberado\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \"Django 1.3 liberado\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \"Django 1.4 liberado\". Django weblog. Extra\u00eddo el 2 de Febrero de 2013.\n\u2191 \u00abDjango\u2019s proceso de liberaci\u00f3n - documentaci\u00f3n Django - Django\u00bb. Archivado desde el original el 6 de marzo de 2016. Consultado el 30 de abril de 2016.\u00a0\n\u2191 \"Django 1.5 liberado\" Django weblog. Extra\u00eddo el 27 de Febrero de 2013.\n\u2191 \"Django 1.6 liberado\" Django weblog. Extra\u00eddo el 6 de Noviembre de 2013.\n\u2191 \"Django 1.7 liberado\" Django weblog. Extra\u00eddo el 4 de Setiembre de 2014.\n\u2191 \"Django 1.8 liberado\" Django weblog. Extra\u00eddo el 2 de Abril  de 2015.\n\u2191 \"Django 1.9 liberado\" Django weblog. Extra\u00eddo el 1 de Diciembre de 2015.\n\u2191 \"Django 1.10 liberado\" Django weblog. Extra\u00eddo el 17 de Enero de 2017.\n\u2191 \"Download Django\" Download Django. Extra\u00eddo el 9 de Diciembre 2016.\n\u2191 a b \"Download Django\" Download Django. Retrieved 9 December 2016.\n\u2191 \u00abDjango 2.2.3 release notes | Django documentation | Django\u00bb. docs.djangoproject.com. Consultado el 19 de noviembre de 2020.\u00a0\n\u2191 \u00abDjango 3.0 release notes | Django documentation | Django\u00bb. docs.djangoproject.com. Consultado el 19 de noviembre de 2020.\u00a0\n\u2191 \u00abDjango 3.1 release notes | Django documentation | Django\u00bb. docs.djangoproject.com. Consultado el 19 de noviembre de 2020.\u00a0\n\u2191 \u00abDjango 3.2 release notes - UNDER DEVELOPMENT | Django documentation | Django\u00bb. docs.djangoproject.com. Consultado el 19 de noviembre de 2020.\u00a0\n\u2191 a b c \u00abDownload Django | Django\u00bb. www.djangoproject.com. Consultado el 19 de noviembre de 2020.\u00a0\n\u2191 \u00abEl co-fundador Paul Sciarra responde que usan Django extensamente\u00bb.\u00a0\n\u2191 \u00abAnuncio de trabajo donde afirman que ellos mantienen, promocionan y usan activamente Django como plataforma de desarrollo para sus aplicaciones\u00bb.\u00a0\n\u2191 \u00abEn la secci\u00f3n de Preguntas frecuentes responden Django a la pregunta \"\u00bfQue tecnolog\u00edas usan?\"\u00bb.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Proyecto Django\nInstalador de Django\nGrupo LinkedIn Django en Latinoam\u00e9rica\nWiki de la comunidad de Django y repositorio del c\u00f3digo\nComunidad en espa\u00f1ol de Django Archivado el 19 de diciembre de 2008 en Wayback Machine.\nPlanet de Django en espa\u00f1ol Archivado el 21 de julio de 2009 en Wayback Machine.\nDjango Software Foundation\nLibros sobre Django Archivado el 19 de diciembre de 2008 en Wayback Machine.\nDjango Search Engine\nSobre la arquitectura de Django\nBiograf\u00eda de Django Reinhardt, de quien proviene el nombre del framework\nThe Django Book\nGithub\nManejo de Dashboards a partir de Django Plotly Dash", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Encapsulamiento_(inform%C3%A1tica)", "title": "Encapsulamiento (inform\u00e1tica)", "summary": "En la Programaci\u00f3n orientada a objetos (POO), la encapsulaci\u00f3n se refiere a la agrupaci\u00f3n de datos con los m\u00e9todos que operan en esos datos, o la restricci\u00f3n del acceso directo a algunos de los componentes de un objeto.[1]\u200b La encapsulaci\u00f3n se utiliza para ocultar los valores o el estado de un objeto de datos estructurados dentro de una clase, evitando el acceso directo a ellos por parte de los clientes de una manera que podr\u00eda exponer detalles de Implementaci\u00f3n ocultos o violar la invariancia de estado mantenida por los m\u00e9todos.\nSin embargo, ocultar datos no es el alcance total de la ocultaci\u00f3n de informaci\u00f3n. David Parnas introdujo por primera vez el concepto de ocultaci\u00f3n de informaci\u00f3n alrededor de 1972. Argument\u00f3 que el criterio principal para la modularizaci\u00f3n del sistema deber\u00eda referirse a la ocultaci\u00f3n de decisiones cr\u00edticas de dise\u00f1o. Hizo hincapi\u00e9 en ocultar \"decisiones de dise\u00f1o dif\u00edciles o decisiones de dise\u00f1o que probablemente cambien\". Ocultar informaci\u00f3n de esa manera a\u00edsla a los clientes de requerir un conocimiento profundo del dise\u00f1o para usar un m\u00f3dulo y de los efectos de cambiar esas decisiones.[1]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Significado\n1.1 Encapsulaci\u00f3n y herencia\n2 Modificadores de acceso\n3 Ejemplos\n4 Referencias", "subsections": []}, {"name": "Significado", "text": "Podr\u00edamos decir por tanto que con la encapsulaci\u00f3n logramos agrupar datos o restringir el acceso directo a algunos componentes de un objeto, mediante m\u00e9todos a modo de intermediarios que har\u00e1n uso de ellos mediante unas reglas definidas. Ayud\u00e1ndonos as\u00ed por ejemplo a alcanzar otro nivel de la programaci\u00f3n orientada a objetos como ser\u00eda el polimorfismo (no confundir con el polimorfismo en el malware).\nEl polimorfismo se refiere a la propiedad por la que es posible enviar mensajes sint\u00e1cticamente iguales a objetos de tipos distintos. El \u00fanico requisito que deben cumplir los objetos que se utilizan de manera polim\u00f3rfica es saber responder al mensaje que se les env\u00eda. \nEl ejemplo m\u00e1s claro de encapsulaci\u00f3n y polimorfismo ser\u00eda un programa capaz de calcular las \u00e1reas de distintos pol\u00edgonos, un cliente solo deber\u00eda de conocer la existencia del m\u00e9todo encargado de devolver el \u00e1rea, sin necesidad de preocuparse del proceso interno para calcular las mismas, puesto que el c\u00e1lculo del \u00e1rea de un cono no se corresponde con la de un rect\u00e1ngulo. Ser\u00e1 tarea del programador asegurar la encapsulaci\u00f3n para que los m\u00e9todos que devuelven el \u00e1rea de los distintos objetos de diferentes pol\u00edgonos respondan de la misma manera, cada uno mediante su propia f\u00f3rmula matem\u00e1tica de c\u00e1lculo del \u00e1rea, logrando as\u00ed el mencionado polimorfismo.\nDe esta forma adem\u00e1s de que el usuario de la clase puede obviar la implementaci\u00f3n de los m\u00e9todos y propiedades para concentrarse solo en c\u00f3mo usarlos, evita que el usuario pueda cambiar su estado de maneras imprevistas e incontroladas.", "subsections": [{"name": "Encapsulaci\u00f3n y herencia", "text": "Los autores de \"Design Patterns\" [2]\u200b discuten la tensi\u00f3n entre la herencia y la encapsulaci\u00f3n y afirman que, en su experiencia, los dise\u00f1adores abusan de la herencia. Afirman que la herencia a menudo rompe la encapsulaci\u00f3n, dado que la herencia expone una subclase a los detalles de la implementaci\u00f3n de su clase padre. Como se describe en el problema del yo-yo, el uso excesivo de la herencia y, por lo tanto, la encapsulaci\u00f3n, puede volverse demasiado complicado y dif\u00edcil de depurar."}]}, {"name": "Modificadores de acceso", "text": "Los modificadores de acceso son palabras clave que se usan para especificar la accesibilidad declarada de un miembro o un tipo. Depende del lenguaje de programaci\u00f3n que se use, pero los m\u00e1s comunes son:\nDefault: En el caso del lenguaje Java, los miembros de datos, clase o m\u00e9todos que no se declaran utilizando ning\u00fan modificador de acceso, es decir, que tengan un modificador de acceso predeterminado, solo son accesibles dentro del mismo paquete.[3]\u200b\nPublic: El acceso p\u00fablico es el nivel de acceso m\u00e1s permisivo. No hay ninguna restricci\u00f3n para el acceso a miembros p\u00fablicos.[4]\u200b\nProtected: Un miembro protegido es accesible dentro de su clase y por parte de instancias de clases derivadas.[5]\u200b\nPrivate: El acceso privado es el nivel de acceso menos permisivo. Los miembros privados solo son accesibles dentro del cuerpo de la clase o el struct [6]\u200b en el que se declaran.[7]\u200b\nInternal: Solo se puede tener acceso a los tipos internos o los miembros desde los archivos del mismo ensamblado.[8]\u200b\nProtected internal: Se puede obtener acceso a un miembro protected internal desde el ensamblado actual o desde tipos que se deriven de la clase contenedora.[9]\u200b\nPrivate protected: Los miembros private protected est\u00e1n accesibles para los tipos que se deriven de la clase contenedora, pero solo desde dentro del ensamblado correspondiente que lo contenga.[10]\u200b", "subsections": []}, {"name": "Ejemplos", "text": "Un ejemplo de la l\u00f3gica empleada en pseudoc\u00f3digo:\nDeclaraci\u00f3n\n \nde\nla\nclase\ngen\u00e9rica\n{\n\t\nvariable\n,\nmodificador\nacceso\ny\ntipo\n[ENCAPSULACI\u00d3N]\nm\u00e9todo\npara\nleer\n\t\t\nAcceso\nal\nvalor\n}\nsobrescribir\na\ninsertar\nnuevo\nprincipal\nun\nobjeto\nLlamada\nsobreescritura\ndel\ncreado\nlectura\n[Salida]\n:\nValor\nintroducido\nen\nel\nmediante\nllamada\nUn ejemplo real en el lenguaje de programaci\u00f3n C#:\n// ", "subsections": []}, {"name": "===============================================================================", "text": "//  Ejemplo de encapsulaci\u00f3n en C#\n// Declaraci\u00f3n de la clase \"ClaseEjemplo\"\npublic\nclass\nClaseEjemplo\n    \n// Campos declarados como privados\n// Por lo que solo podr\u00e1n ser utilizados mediante m\u00e9todos p\u00fablicos de la clase\n// Campo de valor alfanum\u00e9rico, su valor ser\u00e1 tomado como texto\n// De introducirse n\u00fameros no ser\u00e1n matem\u00e1ticamente computables\nprivate\nString\nnombre\n;\n// Campo de valor entero (integer), no aceptar\u00eda otra cosa que n\u00fameros enteros\n// Estos n\u00fameros si ser\u00edan matem\u00e1ticamente computables, por lo que se le podr\u00edan sumar a\u00f1os, por ejemplo \nint\nedad\n// Descriptores de acceso get/set para controlar el acceso al atributo nombre\nDescriptorNombre\n        \nget\n            \n// Devolvemos el valor del campo nombre\nreturn\nset\n// Asignamos valor al campo nombre\n// Es obligatorio usar value\n=\nvalue\n// Descriptores de acceso get/set para controlar el acceso al atributo edad\nDescriptorEdad\n// Devolvemos el valor del campo edad\n// Asignamos valor al campo edad\n// Declaraci\u00f3n de la clase principal\nClasePrincipal\n// M\u00e9todo principal, es obligatorio que se llame \"Main\"\nstatic\nvoid\nMain\n()\n// Creamos un objeto de la clase \"ClaseEjemplo\"\nClaseEjemplo\nnew\n();\n// Llamamos al disruptor de acceso al atributo \u201cnombre\u201d del objeto creado\n// Le pasamos \"Nombre de la persona\" como valor alfanum\u00e9rico para el par\u00e1metro value\n.\n\"Nombre de la persona\"\n// Llamamos al disruptor de acceso al atributo \u201cedad\u201d del objeto creado\n// Le pasamos \"00\" como valor entero para el par\u00e1metro value\n00\n// Mostramos el valor de los campos en la consola de comandos\n// Al no pasarle un valor, el descriptor entiende que lo que debe de hacer es devolverlo\nConsole\nWriteLine\n(\n\"Nombre: \"\n+\n);\n\"Edad: \"\nSalida:\nEdad: 00\nEn caso de intentar acceder directamente a uno de los campos de la clase, salt\u00e1ndonos por tanto la encapsulaci\u00f3n: \nEl propio compilador ya nos avisar\u00eda del error con respecto a los modificadores de acceso: [11]\u200b", "subsections": []}, {"name": "Referencias", "text": "\u2191 a b Wm. Paul Rogers (18 de mayo de 2001). \u00abEncapsulation is not information hiding\u00bb (en ingl\u00e9s).\u00a0\n\u2191 Gamma, Erich; Helm, Richard; Johnson, Ralph; Vlissides, John (1994). Design Patterns (en ingl\u00e9s). Addison-Wesley. ISBN\u00a0978-0-201-63361-0. (requiere registro).\u00a0\n\u2191 Oracle - Java. \u00abControlling Access to Members of a Class\u00bb (en ingl\u00e9s).\u00a0\n\u2191 Microsoft. \u00abpublic (Referencia de C#)\u00bb.\u00a0\n\u2191 Microsoft. \u00abprotected (Referencia de C#)\u00bb.\u00a0\n\u2191 Microsoft. \u00abstruct (C++)\u00bb.\u00a0\n\u2191 Microsoft. \u00abprivate (Referencia de C#)\u00bb.\u00a0\n\u2191 Microsoft. \u00abinternal (Referencia de C#)\u00bb.\u00a0\n\u2191 Microsoft. \u00abprotected internal (Referencia de C#)\u00bb.\u00a0\n\u2191 Microsoft. \u00abprivate protected (Referencia de C#)\u00bb.\u00a0\n\u2191 Microsoft. \u00abError del compilador CS0122\u00bb.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Estilo_de_sangrado", "title": "Estilo de sangrado", "summary": "Indentaci\u00f3n es un anglicismo (de la palabra inglesa indentation) de uso com\u00fan en inform\u00e1tica; no es un t\u00e9rmino reconocido por la Real Academia Espa\u00f1ola (consultado en la vigesimosegunda edici\u00f3n). La Real Academia recomienda utilizar \u00absangrado\u00bb. \nEste t\u00e9rmino significa mover un bloque de texto hacia la derecha insertando espacios o tabuladores, para as\u00ed separarlo del margen izquierdo y distinguirlo  mejor del texto adyacente; en el \u00e1mbito de la imprenta, este concepto siempre se ha denominado sangrado o sangr\u00eda.\nEn los lenguajes de programaci\u00f3n de computadoras, la indentaci\u00f3n es un tipo de notaci\u00f3n secundaria utilizado para mejorar la legibilidad del c\u00f3digo fuente por parte de los programadores, teniendo en cuenta que los compiladores o int\u00e9rpretes raramente consideran los espacios en blanco entre las sentencias de un programa. Sin embargo, en ciertos lenguajes de programaci\u00f3n como Haskell, Occam y Python, el sangrado se utiliza para delimitar la estructura del programa permitiendo establecer bloques de c\u00f3digo.\nSon frecuentes discusiones entre programadores sobre c\u00f3mo o d\u00f3nde usar el sangrado, si es mejor usar espacios en blanco o tabuladores, ya que cada programador tiene su propio estilo.", "sections": [{"name": "\u00cdndice", "text": "1 Ejemplos\n1.1 Sangrado en SQL\n1.2 Sangrado en C\n2 Notas", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": [{"name": "Sangrado en SQL", "text": "Ejemplo 1 - Sentencia en el lenguaje SQL sin usar sangrado:\nEn este primer ejemplo se muestra la introducci\u00f3n de valores (valor1,valor2,valor3) en los campos (var1,var2,var3) de la tabla nombre_de_la_tabla. La instrucci\u00f3n se ejecutar\u00e1 de forma correcta, sin embargo, su lectura de un vistazo puede resultar confusa.\nEjemplo 2 - La misma sentencia aplicando sangrado:"}, {"name": "Sangrado en C", "text": "El siguiente c\u00f3digo escrito en lenguaje C muestra en pantalla las tablas de multiplicar.\nSin sangrado:\nCon sangrado:\n==Notas=="}]}]}
{"url": "https://es.wikipedia.org/wiki/Extensi%C3%B3n_de_archivo", "title": "Extensi\u00f3n de archivo", "summary": "En inform\u00e1tica, el t\u00e9rmino extensi\u00f3n del fichero (tambi\u00e9n, extensi\u00f3n del archivo) es una cadena de caracteres anexada al nombre de un archivo, habitualmente predicha por un punto. Su funci\u00f3n principal es distinguir el contenido del archivo, de modo que el sistema operativo disponga del procedimiento necesario para ejecutarlo o interpretarlo. Sin embargo, la extensi\u00f3n es solamente parte del nombre del archivo y no representa ning\u00fan tipo de obligaci\u00f3n respecto a su contenido.\nAlgunos sistemas operativos, especialmente los herederos de DOS como Windows, utilizan las extensiones de archivo para reconocer su formato, incluso el de archivos ejecutables. Otros sistemas operativos, como los basados en Unix, utilizan las extensiones de archivo por simple convenci\u00f3n, y no las usan necesariamente para determinar el tipo de archivo.\nDado que las extensiones de archivo legado son del sistema DOS, muchas de sus actuales caracter\u00edsticas fueron heredadas por limitaciones en ese sistema. Los antiguos sistemas DOS limitaban la cantidad de caracteres de la extensi\u00f3n de archivo a tres, por lo que muchas extensiones convencionales poseen esa cantidad de caracteres. Adem\u00e1s, los nombres de archivo en sistemas DOS son insensibles a las may\u00fasculas y min\u00fasculas, por lo que la mayor\u00eda de las extensiones de archivo pueden escribirse en min\u00fasculas o en may\u00fasculas o en una combinaci\u00f3n de ambas.\nPor su extensi\u00f3n, un mismo nombre b\u00e1sico puede contener archivos de distinto prop\u00f3sito. Como en este ejemplo de DOS:\nAPLICACI\u00d3N.BAS  Archivo Fuente escrito en lenguaje BASIC.\nAPLICACI\u00d3N.OBJ  Archivo objeto (necesario para su compilaci\u00f3n).\nAPLICACI\u00d3N.EXE  Programa Ejecutable.\nARCHIVO.XXX  Archivo de texto ASCII \"texto plano\".\nARCHIVO.RTF  Archivo de texto con formato.\nARCHIVO.DOC  Archivo de texto con formato de Microsoft Word.\nARCHIVO.VBS  Archivo fuente escrito en lenguaje Visual Basic.\nEn todos estos casos, las extensiones diferencian los nombres de los archivos y, a la vez, los identifican ante las aplicaciones que pueden manejarlos, lo que facilita la obtenci\u00f3n de resultados.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Tipos de extensiones\n2.1 Extensiones de sistema\n2.2 Extensiones de video\n2.3 Extensiones de audio\n2.4 Extensiones de im\u00e1genes\n3 V\u00e9ase tambi\u00e9n\n4 Referencias", "subsections": []}, {"name": "Historia", "text": "En los sistemas Unix los nombres de los archivos pueden contener cualquier car\u00e1cter excepto el separador de directorios (\"/\") y por lo general no tienen l\u00edmite en su tama\u00f1o o es un l\u00edmite aceptable. La extensi\u00f3n no es un elemento diferenciado sino una convenci\u00f3n dada a los nombres de archivo para reconocer su contenido.\nEn DOS los nombres de los archivos ten\u00edan un m\u00e1ximo de 8 caracteres, un punto y una extensi\u00f3n de como m\u00e1ximo tres letras, en total un m\u00e1ximo de 12 caracteres del C\u00f3digo ASCII que permit\u00edan distinguir unos archivos de otros dentro de un mismo directorio. No todos los caracteres del c\u00f3digo ASCII estaban permitidos para nombrar un archivo, pues algunos (ejemplo: /*?+\\ y otros) estaban reservados para otras funciones. No hay diferencia entre may\u00fasculas y min\u00fasculas.\nEn Windows 95 desaparecieron los l\u00edmites impuestos por DOS en el n\u00famero de caracteres del nombre de archivo y de la extensi\u00f3n.\nEn Mac OS Classic de Apple no hay extensiones. Finder asocia archivos con un c\u00f3digo Filetype de cuatro caracteres a cada archivo con un programa o acci\u00f3n espec\u00edfica, por ejemplo el c\u00f3digo TEXT significa que es un archivo de texto y puede ser abierto con cualquier software de edici\u00f3n de texto.[1]\u200b A partir de OS X se utiliza Uniform Type Identifier que maneja extensiones de forma id\u00e9ntica a Microsoft Windows El Filetype fue declarado obsoleto con OS X 10.6 Snow Leopard.[2]\u200b\nEn los Commondores los archivos solo pueden tener cuatro extensiones: PRG, SEQ, USR, REL. Sin embargo esto son para separar tipos de datos utilizado por un programa y son irrelevantes para identificar contenidos del mismo.", "subsections": []}, {"name": "Tipos de extensiones", "text": "", "subsections": [{"name": "Extensiones de sistema", "text": "Estas son las extensiones de archivos necesarios para el funcionamiento interno del sistema operativo Microsoft Windows as\u00ed como de los diferentes programas que trabajan en \u00e9l. No est\u00e1 recomendado moverlos, editarlos o variarlos de ning\u00fan modo ya que podr\u00edan afectar al funcionamiento del sistema. Se nombran en orden alfab\u00e9tico."}, {"name": "Extensiones de video", "text": "Los archivos de video se reproducen normalmente en pel\u00edculas o en p\u00e1ginas web que contengan videos. Los m\u00e1s comunes son:"}, {"name": "Extensiones de audio", "text": "Los archivos de audio son aquellos que reproducen sonido al ser ejecutados. Los m\u00e1s comunes son:"}, {"name": "Extensiones de im\u00e1genes", "text": ""}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Lista de formatos de archivo", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abMac Creator and File Type codes\u00bb. livecode.byu.edu. Consultado el 2 de septiembre de 2022.\u00a0\n\u2191 \u00abIntroduction to Uniform Type Identifiers Overview\u00bb. developer.apple.com. Consultado el 2 de septiembre de 2022.\u00a0\n\u2191 \u00abExtensi\u00f3n de archivo DWG - AutoCAD Drawing Database Format\u00bb.\u00a0\n\u2191 \u00abNEF, Nikon Digital Camera Raw Image File (.nef)\u00bb.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/FSF_Award_for_the_Advancement_of_Free_Software", "title": "FSF Award for the Advancement of Free Software", "summary": "El Free Software Foundation Award for the Advancement of Free Software (\"Premio para el Avance del Software Libre de la Fundaci\u00f3n para el Software Libre\") se otorga anualmente a una persona que ha hecho una gran contribuci\u00f3n al progreso y desarrollo del software libre, a trav\u00e9s de actividades que vayan de acuerdo con el esp\u00edritu del software libre y a proyectos de beneficio social.", "sections": [{"name": "\u00cdndice", "text": "1 Ganadores\n1.1 Personas\n1.2 Proyectos\n2 Referencias\n3 Enlaces externos", "subsections": []}, {"name": "Ganadores", "text": "", "subsections": [{"name": "Personas", "text": "Los dem\u00e1s finalistas entre par\u00e9ntesis\n2011: Yukihiro Matsumoto,.[1]\u200b\n2010: Rob Savoye,[2]\u200b con un reconocimiento especial a Adrian Hands.\n2009: John Gilmore\n2008: Wietse Venema\n2007: Harald Welte\n2006: Theodore Ts'o - (Wietse Venema y Yukihiro Matsumoto)\n2005: Andrew Tridgell - (Harmut Pilch y Theodore T'so)\n2004: Theo de Raadt - (Andrew Tridgell y Cesar Brod)\n2003: Alan Cox- (Theo de Raadt y Werner Koch)\n2002: Lawrence Lessig - (Bruno Haible y Theo de Raadt)\n2001: Guido van Rossum - (L. Peter Deutsch y Andrew Tridgell)\n2000: Brian Paul - (Donald Becker y Patrick Lenz)\n1999: Miguel de Icaza - (Donald Knuth y John Gilmore)\n1998: Larry Wall - (Proyecto Apache, Tim Berners-Lee, Jordan Hubbard, Ted Lemon, Eric S. Raymond, Henry Spencer)\nLarry Wall, 1998\nMiguel de Icaza, 1999\nBrian Paul, 2000\nGuido van Rossum, 2001\nLessig forehead.jpg\nLawrence Lessig, 2002\nAlan Cox, 2003\nTheo de Raadt, 2004\nAndrew Tridgell, 2005\nTheodore Ts'o, 2006\nYukihiro Matsumoto, 2011"}, {"name": "Proyectos", "text": "2011 Proyecto GNU Health\n2010 Proyecto Tor\n2009 Internet Archive\n2008 Creative Commons\n2007 Groklaw\n2006 Sahana Disaster Management System\n2005 Wikipedia"}]}, {"name": "Referencias", "text": "\u2191 \u00abFSF 2011 Free Software Awards announced\u00bb (en ingl\u00e9s). Archivado desde el original el 18 de abril de 2015. Consultado el 28 de abril de 2014.\u00a0\n\u2191 \u00abFSF 2010 Free Software Awards announced\u00bb (en ingl\u00e9s). Archivado desde el original el 14 de septiembre de 2011. Consultado el 26 de marzo de 2011.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Portal:Software libre. Contenido relacionado con Software libre.\nSitio oficial", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Factorial", "title": "Factorial", "summary": "n\n{\\displaystyle n}\nn\n!\n{\\displaystyle n!}\nEl factorial de un entero positivo n, el factorial de n o n factorial se define en principio como el producto de todos los n\u00fameros enteros positivos desde 1 (es decir, los n\u00fameros naturales) hasta n. Por ejemplo:\n5\n!\n=\n1\n\u00d7\n2\n\u00d7\n3\n\u00d7\n4\n\u00d7\n5\n=\n120.\n\u00a0\n{\\displaystyle 5!=1\\times 2\\times 3\\times 4\\times 5=120.\\ }\nLa operaci\u00f3n de factorial aparece en muchas \u00e1reas de las matem\u00e1ticas, particularmente en combinatoria y an\u00e1lisis matem\u00e1tico.\nDe manera fundamental el factorial de n representa el n\u00famero de formas distintas de ordenar n objetos distintos (elementos sin repetici\u00f3n). Este hecho ha sido conocido desde hace varios siglos, en el siglo\u00a0XII por los estudiosos hind\u00faes.\nLa definici\u00f3n de la funci\u00f3n factorial tambi\u00e9n se puede extender a n\u00fameros no naturales manteniendo sus propiedades fundamentales, pero se requieren matem\u00e1ticas avanzadas, particularmente del an\u00e1lisis matem\u00e1tico. El matem\u00e1tico franc\u00e9s Christian Kramp (1760-1826) fue la primera persona en usar la actual notaci\u00f3n matem\u00e1tica n!, en 1808.[1]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Definici\u00f3n por producto e inducci\u00f3n\n1.1 Cero factorial\n2 Propiedades\n3 Aplicaciones\n4 Extensi\u00f3n\n5 Productos similares\n5.1 Primorial\n5.2 Doble factorial\n6 V\u00e9ase tambi\u00e9n\n7 Referencias y citas\n8 Enlaces externos", "subsections": []}, {"name": "Definici\u00f3n por producto e inducci\u00f3n", "text": "Podemos definir el factorial de un n\u00famero entero positivo n, expresado n!, como el producto de todos los n\u00fameros enteros positivos menores o iguales que n. \nn\n!\n=\n1\n\u00d7\n2\n\u00d7\n3\n\u00d7\n4\n\u00d7\n.\n.\n.\n\u00d7\n(\nn\n\u2212\n1\n)\n\u00d7\nn\n{\\displaystyle n!=1\\times 2\\times 3\\times 4\\times ...\\times (n-1)\\times n}\nLa multiplicaci\u00f3n anterior tambi\u00e9n se puede representar utilizando el operador productorio:\nn\n!\n=\n\u220f\nk\n=\n1\nn\nk\n{\\displaystyle n!=\\prod _{k=1}^{n}k}\nTambi\u00e9n es posible definirlo mediante la relaci\u00f3n de recurrencia\nn\n!\n=\n{\n1\nsi,\u00a0\nn\n<\n2\n(\nn\n\u2212\n1\n)\n!\n\u00d7\nn\nsi,\u00a0\nn\n>\n1\n{\\displaystyle n!={\\begin{cases}1&{\\text{si, }}n<2\\\\(n-1)!\\times n&{\\text{si, }}n>1\\end{cases}}}\nEn esta segunda definici\u00f3n el dominio de la funci\u00f3n es el conjunto de los enteros no negativos \u2124\u22650 y el codominio es el conjunto de los enteros positivos \u2124+.[2]\u200b En este caso hay una sucesi\u00f3n recurrente, el c\u00e1lculo sucesivo de sus elementos se llama proceso recurrente y la igualdad n! = (n - 1)!n se nombra ecuaci\u00f3n recurrente.[3]\u200b\nLa segunda definici\u00f3n incorpora la premisa de que\n0\n!\n=\n1\n{\\displaystyle 0!=1}", "subsections": [{"name": "Cero factorial", "text": "Una extensi\u00f3n com\u00fan, sin embargo, es la definici\u00f3n de factorial de cero. De acuerdo con la convenci\u00f3n matem\u00e1tica de producto vac\u00edo, el valor de 0! debe definirse como:\nEs posible, sin embargo, dar un argumento intuitivo para justificar la elecci\u00f3n, como sigue:\nPara cada n\u00famero entero positivo n mayor o igual que 1, es posible determinar el valor del factorial anterior mediante el uso de la siguiente identidad:\n[\n(\nn\n\u2212\n1\n)\n!\n=\nn\n!\nn\n]\n=\n[\nn\n\u22c5\n(\nn\n\u2212\n1\n)\n!\n=\nn\n!\n]\n{\\displaystyle {\\bigg [}(n-1)!={\\frac {n!}{n}}{\\bigg ]}=[n\\cdot (n-1)!=n!]}\nv\u00e1lida para todo n\u00famero mayor o igual que 1.\nAs\u00ed, si se conoce que 5! es 120, entonces 4! es 24 porque\n5\n!\n5\n=\n120\n5\n=\n24\n{\\displaystyle {\\frac {5!}{5}}={\\frac {120}{5}}=24}\ny por tanto 3! debe ser necesariamente 6 puesto que\n4\n!\n4\n=\n24\n4\n=\n6\n{\\displaystyle {\\frac {4!}{4}}={\\frac {24}{4}}=6}\nEl mismo proceso justifica el valor de 2! = 2 y 1! = 1  ya que:\n2\n!\n=\n3\n!\n3\n=\n6\n3\n=\n2\n,\n1\n!\n=\n2\n!\n2\n=\n2\n2\n=\n1\n{\\displaystyle 2!={\\frac {3!}{3}}={\\frac {6}{3}}=2,\\qquad 1!={\\frac {2!}{2}}={\\frac {2}{2}}=1}\nSi aplicamos la misma regla para el caso en que n = 1 tendr\u00edamos que 0! corresponde a:\n0\n!\n=\n1\n!\n1\n=\n1\n1\n=\n1\n{\\displaystyle 0!={\\frac {1!}{1}}={\\frac {1}{1}}=1}\nAunque el argumento puede resultar algo convincente, es importante tener en cuenta que no es m\u00e1s que un argumento informal y que la raz\u00f3n real por la cual se toma la convenci\u00f3n de 0! = 1 es por ser un caso especial de la convenci\u00f3n de producto vac\u00edo usada en muchas otras ramas de las matem\u00e1ticas."}]}, {"name": "Propiedades", "text": "Si m y n son enteros positivos y m < n implica que m! < n!\nSi m < n resulta que m! es factor o divisor los cuales .. de n! y se tiene: n! = n(n-1)...(m+1).m! (1)\nEl n\u00famero n(n-1)...(m+1) es el producto de los n-m factores expuestos mayores de n!\nn-m es menor que n y reemplazando en (1) se obtiene n! = n(n-1)...(n-m+1).(n-m)![4]\u200b\nn\n!\n<\n(\nn\n+\n1\n2\n)\nn\n{\\displaystyle n!<\\left({\\frac {n+1}{2}}\\right)^{n}}\n, para n> 1. Se aplica propiedad de  que la media geom\u00e9trica de los primeros enteros positivos no excede a la media aritm\u00e9tica de ellos.", "subsections": []}, {"name": "Aplicaciones", "text": "Los factoriales se usan mucho en la rama de la matem\u00e1tica llamada combinatoria, a trav\u00e9s del binomio de Newton, que da los coeficientes de la forma desarrollada de (a + b)n:\n(\na\n+\nb\n)\nn\n=\n(\nn\n0\n)\na\nn\n+\n(\nn\n1\n)\na\nn\n\u2212\n1\nb\n+\n(\nn\n2\n)\na\nn\n\u2212\n2\nb\n2\n+\n\u22ef\n+\n(\nn\nn\n\u2212\n1\n)\na\nb\nn\n\u2212\n1\n+\n(\nn\nn\n)\nb\nn\n=\n\u2211\nk\n=\n0\nn\n(\nn\nk\n)\na\nn\n\u2212\nk\nb\nk\n{\\displaystyle (a+b)^{n}={n \\choose 0}a^{n}+{n \\choose 1}a^{n-1}b+{n \\choose 2}a^{n-2}b^{2}+\\cdots +{n \\choose n-1}ab^{n-1}+{n \\choose n}b^{n}=\\sum _{k=0}^{n}{n \\choose k}a^{n-k}b^{k}}\ndonde \n(\nn\nk\n)\n{\\displaystyle {n \\choose k}}\n representa un coeficiente binomial:\n(\nn\nk\n)\n=\nn\n!\n(\nn\n\u2212\nk\n)\n!\n\u22c5\nk\n!\n{\\displaystyle {n \\choose k}={\\frac {n!}{(n-k)!\\cdot k!}}}\nDe igual forma se puede encontrar en la derivaci\u00f3n por la regla del producto para derivadas de orden superior de manera similar que el binomio de newton:\nd\nn\nx\nd\nx\nn\n(\nf\n(\nx\n)\ng\n(\nx\n)\n)\n=\n(\nf\ng\n)\n(\nn\n)\n=\n(\nn\n0\n)\nf\ng\n(\nn\n)\n+\n(\nn\n1\n)\nf\n\u2032\ng\n(\nn\n\u2212\n1\n)\n+\n(\nn\n2\n)\nf\n\u2033\ng\n(\nn\n\u2212\n2\n)\n+\n\u22ef\n+\n(\nn\nn\n\u2212\n1\n)\nf\n(\nn\n\u2212\n1\n)\ng\n\u2032\n+\n(\nn\nn\n)\nf\n(\nn\n)\ng\n=\n\u2211\nk\n=\n0\nn\n(\nn\nk\n)\nf\n(\nk\n)\ng\n(\nn\n\u2212\nk\n)\n{\\displaystyle {\\frac {d^{n}x}{dx^{n}}}(f(x)g(x))=(fg)^{(n)}={n \\choose 0}fg^{(n)}+{n \\choose 1}f^{'}g^{(n-1)}+{n \\choose 2}f^{''}g^{(n-2)}+\\cdots +{n \\choose n-1}f^{(n-1)}g^{'}+{n \\choose n}f^{(n)}g=\\sum _{k=0}^{n}{n \\choose k}f^{(k)}g^{(n-k)}}\nDonde f(n) es la derivada en\u00e9sima de la funci\u00f3n f.\nPor medio de la combinatoria, los factoriales intervienen en el c\u00e1lculo de las probabilidades. Intervienen tambi\u00e9n en el \u00e1mbito del an\u00e1lisis, en particular a trav\u00e9s del desarrollo polinomial de las funciones (f\u00f3rmula de Taylor).\nSe generalizan a los reales con la funci\u00f3n gamma, de gran importancia en la teor\u00eda de n\u00fameros.\nPara valores grandes de n, existe una expresi\u00f3n aproximada para el factorial de n, dado por la f\u00f3rmula de Stirling:\nn\n!\n\u2248\n2\n\u03c0\nn\n(\nn\ne\n)\nn\n(\n1\n+\n1\n12\nn\n+\n1\n288\nn\n2\n+\n\u22ef\n)\n{\\displaystyle n!\\approx {\\sqrt {2\\pi n}}\\left({\\frac {n}{e}}\\right)^{n}\\left(1+{\\frac {1}{12n}}+{\\frac {1}{288n^{2}}}+\\cdots \\right)}\nLa ventaja de esta f\u00f3rmula es que no precisa inducci\u00f3n y, por lo tanto, permite evaluar n! m\u00e1s r\u00e1pidamente cuando mayor sea n. ", "subsections": []}, {"name": "Extensi\u00f3n", "text": "Art\u00edculo principal:\nLa definici\u00f3n indicada de factorial es v\u00e1lida para n\u00fameros no negativos. Es posible extender la definici\u00f3n a otros contextos introduciendo conceptos m\u00e1s sofisticados, en especial es posible definirla para cualquier n\u00famero real excepto para los n\u00fameros enteros negativos y para cualquier n\u00famero complejo exceptuando de nuevo los n\u00fameros enteros negativos. El factorial de n es generalizado para cualquier n\u00famero real n por la funci\u00f3n gamma de manera que\n\u0393\n(\nn\n)\n=\n(\nn\n\u2212\n1\n)\n!\n=\n\u222b\n0\n\u221e\nt\nn\n\u2212\n1\ne\n\u2212\nt\nd\nt\n{\\displaystyle \\Gamma (n)=(n-1)!=\\int _{0}^{\\infty }\\;t^{n-1}e^{-t}\\;dt\\,}\nsolo para n > 0. Se puede generalizar a\u00fan m\u00e1s, para todo n\u00famero complejo z que no sea igual a un entero no positivo, mediante la siguiente definici\u00f3n: \n\u0393\n(\nz\n)\n=\n(\nz\n\u2212\n1\n)\n!\n=\nlim\nn\n\u2192\n\u221e\nn\n!\nn\nz\nz\n(\nz\n+\n1\n)\n\u22ef\n(\nz\n+\nn\n)\n{\\displaystyle \\Gamma (z)=(z-1)!=\\lim _{n\\to \\infty }{\\frac {n!\\;n^{z}}{z\\;(z+1)\\cdots (z+n)}}\\,}", "subsections": []}, {"name": "Productos similares", "text": "", "subsections": [{"name": "Primorial", "text": "El primorial (sucesi\u00f3n A002110 en OEIS) se define de forma similar al factorial, pero solo se toma el producto de los n\u00fameros primos menores o iguales que n:\nn\n#\n=\n\u220f\np\n\u2264\nn\np\n\u00a0primo\np\n{\\displaystyle n\\#=\\prod _{p\\leq n \\atop p{\\text{ primo}}}p}"}, {"name": "Doble factorial", "text": "Se define el doble factorial de n mediante la relaci\u00f3n de recurrencia:\nn\n!\n!\n=\n{\n1\nsi\nn\n=\n0\n(\nn\n\u2212\n2\n)\n!\n!\n\u22c5\nn\nsi\nn\n\u2260\n0\n{\\textstyle n!!=\\left\\{{\\begin{array}{lcl}1&{\\mbox{si}}&n=0\\\\(n-2)!!\\cdot n&{\\mbox{si}}&n\\neq 0\\\\\\end{array}}\\right.}\nPor ejemplo:\n8\n!\n!\n=\n2\n\u22c5\n4\n\u22c5\n6\n\u22c5\n8\n=\n384\n{\\displaystyle 8!!=2\\cdot 4\\cdot 6\\cdot 8=384}\n9\n!\n!\n=\n1\n\u22c5\n3\n\u22c5\n5\n\u22c5\n7\n\u22c5\n9\n=\n945\n{\\displaystyle 9!!=1\\cdot 3\\cdot 5\\cdot 7\\cdot 9=945}\nLa sucesi\u00f3n de dobles factoriales (sucesi\u00f3n A006882 en OEIS) para:\nn\n=\n0\n,\n1\n,\n2\n,\n\u2026\n{\\displaystyle n=0,1,2,\\dots }\nEmpieza as\u00ed:\n1\n,\n1\n,\n2\n,\n3\n,\n8\n,\n15\n,\n48\n,\n105\n,\n384\n,\n945\n,\n3840\n,\n\u2026\n{\\displaystyle 1,1,2,3,8,15,48,105,384,945,3840,\\dots }\nLa definici\u00f3n anterior puede extenderse para definir el doble factorial de n\u00fameros negativos:\n(\nn\n\u2212\n2\n)\n!\n!\n=\nn\n!\n!\nn\n{\\displaystyle (n-2)!!={\\frac {n!!}{n}}}\nY esta es la sucesi\u00f3n de dobles factoriales para:\nn\n=\n\u2212\n1\n,\n\u2212\n3\n,\n\u2212\n5\n,\n\u2212\n7\n,\n\u2026\n{\\displaystyle n=-1,-3,-5,-7,\\dots }\n1\n,\n\u2212\n1\n,\n1\n3\n,\n\u2212\n1\n15\n,\n\u2026\n{\\displaystyle 1,-1,{\\frac {1}{3}},-{\\frac {1}{15}},\\dots }\nEl doble factorial de un n\u00famero negativo par no est\u00e1 definido.\nAlgunas identidades de los dobles factoriales:\nn\n!\n=\nn\n!\n!\n(\nn\n\u2212\n1\n)\n!\n!\n{\\displaystyle n!=n!!(n-1)!!\\,}\n(\n2\nn\n)\n!\n!\n=\n2\nn\nn\n!\n{\\displaystyle (2n)!!=2^{n}n!\\,}\n(\n2\nn\n+\n1\n)\n!\n!\n=\n(\n2\nn\n+\n1\n)\n!\n(\n2\nn\n)\n!\n!\n=\n(\n2\nn\n+\n1\n)\n!\n2\nn\nn\n!\n{\\displaystyle (2n+1)!!={(2n+1)! \\over (2n)!!}={(2n+1)! \\over 2^{n}n!}}\n(\n2\nn\n\u2212\n1\n)\n!\n!\n=\n(\n2\nn\n\u2212\n1\n)\n!\n(\n2\nn\n\u2212\n2\n)\n!\n!\n=\n(\n2\nn\n)\n!\n2\nn\nn\n!\n{\\displaystyle (2n-1)!!={(2n-1)! \\over (2n-2)!!}={(2n)! \\over 2^{n}n!}}\n\u0393\n(\nn\n+\n1\n2\n)\n=\n\u03c0\n(\n2\nn\n\u2212\n1\n)\n!\n!\n2\nn\n{\\displaystyle \\Gamma \\left(n+{1 \\over 2}\\right)={\\sqrt {\\pi }}\\,\\,{(2n-1)!! \\over 2^{n}}}\n\u0393\n(\nn\n2\n+\n1\n)\n=\n\u03c0\nn\n!\n!\n2\n(\nn\n+\n1\n)\n/\n2\n{\\displaystyle \\Gamma \\left({n \\over 2}+1\\right)={\\sqrt {\\pi }}\\,\\,{n!! \\over 2^{(n+1)/2}}}"}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Productorio\nSubfactorial\nFunci\u00f3n gamma\nFactorial exponencial", "subsections": []}, {"name": "Referencias y citas", "text": "\u2191 Higgins, Peter (2008), Number Story: From Counting to Cryptography, New York: Copernicus, p.\u00a012, ISBN\u00a0978-1-84800-000-1\u00a0.\n\u2191 \u00abSucesiones recurrentes\u00bb de A. I. Markush\u00e9vich, Editorial Progreso, 1998\n\u2191 Fuente ut supra \n\u2191  A. Adri\u00e1n Albert: \u00c1lgebra superior, UTEHA, M\u00e9xico /1991", "subsections": []}, {"name": "Enlaces externos", "text": " Wikilibros alberga un libro o manual sobre  Implementaciones del factorial de un n\u00famero.\nCalcular factorial de un n\u00famero en PHP. \nAlgoritmos interesantes(en ingl\u00e9s)\nhttp://factorielle.free.fr\nCalculadora de factoriales - Hasta 200.000", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Falcon_(lenguaje_de_programaci%C3%B3n)", "title": "Falcon (lenguaje de programaci\u00f3n)", "summary": "[\n]\nFalcon es un lenguaje de programaci\u00f3n interpretado de c\u00f3digo abierto multiparadigma dise\u00f1ado por Giancarlo Niccolai. Se basa en una m\u00e1quina virtual de propiedad y est\u00e1 disponible para las plataformas Microsoft Windows, GNU/Linux, Mac, Solaris y en el futuro BSD. Se propone como una herramienta para crear aplicaciones completas y aplicaciones web en relaci\u00f3n con apache2. ", "sections": [{"name": "\u00cdndice", "text": "1 Hello, world!\n2 Paradigmas\n3 Referencias\n4 Enlaces externos", "subsections": []}, {"name": "Hello, world!", "text": "o, utilizando el operador de impresi\u00f3n r\u00e1pida \">\"\nFalcon totalmente compatible con Unicode y el ejemplo siguiente se muestra la capacidad de internacionalizaci\u00f3n:", "subsections": []}, {"name": "Paradigmas", "text": "Paradigma orientado a objetos\nParadigma funcional\nParadigma imperativo o por procedimientos\nOOP sobre tablas\nOrientada a los mensajes\nOOP con prototipos\nEn la versi\u00f3n final contar\u00e1 con el apoyo de el paradigma l\u00f3gico.", "subsections": []}, {"name": "Referencias", "text": "\u2191 Getting Falcon\n\u2191 Falcon Programming Licence 1.1", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web oficial oficial\nFalcon en LinuxJournal\nFalcon en Free Software Magazine", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Filosof%C3%ADa_de_Unix", "title": "Filosof\u00eda de Unix", "summary": "La filosof\u00eda de Unix, originada por Ken Thompson, es un conjunto de normas culturales y enfoques filos\u00f3ficos para el desarrollo de software minimalista y modular. Se basa en la experiencia de los principales desarrolladores del sistema operativo Unix. Los primeros desarrolladores de Unix fueron importantes para llevar los conceptos de modularidad y reutilizaci\u00f3n a la pr\u00e1ctica de la ingenier\u00eda de programas inform\u00e1ticos, lo que dio lugar a un movimiento de \"herramientas de software\". Con el tiempo, los principales desarrolladores de Unix (y de los programas que se ejecutaban en \u00e9l) establecieron un conjunto de normas culturales para el desarrollo de programas inform\u00e1ticos; estas normas llegaron a ser tan importantes e influyentes como la propia tecnolog\u00eda de Unix; esto se ha denominado \"filosof\u00eda Unix\".\nLa filosof\u00eda de Unix hace hincapi\u00e9 en la construcci\u00f3n de c\u00f3digo simple, corto, claro, modular y extensible que pueda ser f\u00e1cilmente mantenido y reutilizado por otros desarrolladores que no sean sus creadores. La filosof\u00eda de Unix favorece la componibilidad en oposici\u00f3n al dise\u00f1o monol\u00edtico.", "sections": [{"name": "\u00cdndice", "text": "1 Origen\n2 El Entorno de Programaci\u00f3n del UNIX\n3 Dise\u00f1o de programas en el entorno UNIX\n4 Doug McIlroy sobre la programaci\u00f3n de Unix\n5 Haz una cosa y hazla bien\n6 Las 17 Reglas de Unix de Eric Raymond\n7 Mike Gancarz: La Filosof\u00eda de UNIX\n8 \"Peor es mejor\"\n9 Cr\u00edtica\n10 V\u00e9ase tambi\u00e9n\n11 Notas\n12 Referencias\n13 Enlaces externos", "subsections": []}, {"name": "Origen", "text": "La filosof\u00eda de Unix est\u00e1 documentada por Douglas McIlroy[1]\u200b en el Bell System Technical Journal de 1978:[2]\u200b\nHaz que cada programa haga una cosa bien. Para hacer un nuevo trabajo, construye de nuevo en lugar de complicar los viejos programas a\u00f1adiendo nuevas \"caracter\u00edsticas\".\nEspere que la salida de cada programa se convierta en la entrada de otro programa a\u00fan desconocido. No llene la salida con informaci\u00f3n extra\u00f1a. Evite los formatos de entrada binarios o en columnas. No insista en la entrada interactiva.\nDise\u00f1a y construye software, incluso sistemas operativos, para ser probados temprano, idealmente en semanas. No duden en tirar las partes torpes y reconstruirlas.\nUsar herramientas en lugar de ayuda no especializada para aligerar una tarea de programaci\u00f3n, incluso si tienes que desviarte para construir las herramientas y esperas tirar algunas de ellas despu\u00e9s de haberlas usado.\nFue resumido m\u00e1s tarde por Peter H. Salus en A Quarter-Century of Unix (1994):[1]\u200b\nEscribe programas que hagan una cosa y la hagan bien.\nEscribe programas para trabajar juntos.\nEscribe programas para manejar flujos de texto, porque esa es una interfaz universal.\nEn su premiado trabajo de Unix de 1974, Ritchie y Thompson citan las siguientes consideraciones de dise\u00f1o:[3]\u200b\nFacilita la escritura, la prueba y la ejecuci\u00f3n de programas.\nUso interactivo en lugar de procesamiento por lotes.\nEconom\u00eda y elegancia de dise\u00f1o debido a las limitaciones de tama\u00f1o (\"salvaci\u00f3n a trav\u00e9s del sufrimiento\").\nSistema autosuficiente: todo el software de Unix se mantiene bajo Unix.\u00a0", "subsections": []}, {"name": "El Entorno de Programaci\u00f3n del UNIX", "text": "En su prefacio al libro de 1984, The UNIX Programming Environment, Brian Kernighan y Rob Pike, ambos de Bell Labs, dan una breve descripci\u00f3n del dise\u00f1o y la filosof\u00eda de Unix:[4]\u200b\n\u00a0\nLos autores escriben adem\u00e1s que su objetivo para este libro es \"comunicar la filosof\u00eda de programaci\u00f3n de UNIX\".[4]\u200b", "subsections": []}, {"name": "Dise\u00f1o de programas en el entorno UNIX", "text": "En octubre de 1984, Brian Kernighan y Rob Pike publicaron un art\u00edculo llamado Dise\u00f1o de Programas en el Entorno UNIX. En este documento, critican la acumulaci\u00f3n de opciones y caracter\u00edsticas de los programas que se encuentran en algunos sistemas Unix m\u00e1s recientes como el 4.2BSD y el System V, y explican la filosof\u00eda Unix de las herramientas de software, cada una de las cuales realiza una funci\u00f3n general:[5]\u200b\n\u00a0\nLos autores contrastan las herramientas de Unix, como cat, con las suites de programas m\u00e1s grandes utilizadas por otros sistemas.[5]\u200b\n\u00a0", "subsections": []}, {"name": "Doug McIlroy sobre la programaci\u00f3n de Unix", "text": "McIlroy, entonces jefe del Centro de Investigaci\u00f3n de Ciencias de la Computaci\u00f3n de Bell Labs, e inventor del Unix pipe,[6]\u200b resumi\u00f3 la filosof\u00eda de Unix de la siguiente manera:[1]\u200b\n\u00a0\nM\u00e1s all\u00e1 de estas declaraciones, tambi\u00e9n ha enfatizado la simplicidad y el minimalismo en la programaci\u00f3n de Unix:[1]\u200b\n\u00a0\nPor el contrario, McIlroy ha criticado el Linux moderno por tener un software inflado, remarcando que, \"los admiradores adoradores han alimentado a Linux con golosinas a un estado descorazonador de obesidad\".[7]\u200b \u00c9l contrasta esto con el enfoque anterior tomado en los laboratorios Bell al desarrollar y revisar Research Unix:[8]\u200b\n\u00a0", "subsections": []}, {"name": "Haz una cosa y hazla bien", "text": "Como dijo McIlroy, y generalmente aceptado por toda la comunidad Unix, siempre se ha esperado que los programas Unix sigan el concepto de DOTADIW, o \"Haz una cosa y hazla bien\". Hay fuentes limitadas para el acr\u00f3nimo DOTADIW en Internet, pero se discute ampliamente durante el desarrollo y empaquetado de nuevos sistemas operativos, especialmente en la comunidad Linux.\nPatrick Volkerding, el l\u00edder del proyecto Slackware Linux, invoc\u00f3 este principio de dise\u00f1o en una cr\u00edtica a la arquitectura del sistema, afirmando que, \"intentar controlar servicios, enchufes, dispositivos, montajes, etc., todo dentro de un demonio va en contra del concepto de Unix de hacer una cosa y hacerla bien\"[9]\u200b", "subsections": []}, {"name": "Las 17 Reglas de Unix de Eric Raymond", "text": "En su libro El arte de la programaci\u00f3n Unix, publicado por primera vez en 2003,[10]\u200b Eric S. Raymond, un programador americano y defensor del c\u00f3digo abierto, resume la filosof\u00eda Unix como el principio KISS de \"Keep it Simple, Stupid\".[11]\u200b \u00c9l proporciona una serie de reglas de dise\u00f1o:[1]\u200b\nConstruye programas modulares\nEscribe programas legibles\nUsa la composici\u00f3n de uso\nMecanismos separados de la pol\u00edtica\nEscribe programas simples\nEscribe peque\u00f1os programas\nEscribe programas transparentes\nEscribe programas robustos\nComplicar los datos cuando sea necesario, no el programa\nAprovechar los conocimientos esperados de los usuarios potenciales\nEvitar la salida innecesaria\nEscribe programas que fallan de una manera que es f\u00e1cil de diagnosticar\nValorar el tiempo del desarrollador sobre el tiempo de la m\u00e1quina\nEscribe programas abstractos que generen c\u00f3digo en lugar de escribir c\u00f3digo a mano\nPrototipo de software antes de pulirlo\nEscribe programas flexibles y abiertos\nHacer el programa y los protocolos extensibles.", "subsections": []}, {"name": "Mike Gancarz: La Filosof\u00eda de UNIX", "text": "En 1994, Mike Gancarz (miembro del equipo que dise\u00f1\u00f3 el Sistema X Window), se bas\u00f3 en su propia experiencia con Unix, as\u00ed como en discusiones con otros programadores y personas de otros campos que depend\u00edan de Unix, para producir La Filosof\u00eda de UNIX que la resume en nueve preceptos primordiales:\nLo peque\u00f1o es hermoso.\nHaz que cada programa haga una cosa bien.\nConstruya un prototipo lo antes posible.\nElija la portabilidad en lugar de la eficiencia.\nAlmacenar los datos en archivos de texto plano.\nUtiliza el aprovechamiento del software a tu favor.\nUsar scripts de shell para aumentar el apalancamiento y la portabilidad.\nEvite las interfaces de usuario cautivas.\nHaz de cada programa un filtro.", "subsections": []}, {"name": "\"Peor es mejor\"", "text": "Richard P. Gabriel sugiere que una ventaja clave de Unix era que encarnaba una filosof\u00eda de dise\u00f1o que \u00e9l denomin\u00f3 \"lo peor es mejor\", en la que la simplicidad tanto de la interfaz como de la implementaci\u00f3n son m\u00e1s importantes que cualquier otro atributo del sistema, incluyendo la correcci\u00f3n, la consistencia y la integridad. Gabriel sostiene que este estilo de dise\u00f1o tiene ventajas evolutivas clave, aunque cuestiona la calidad de algunos resultados.\nPor ejemplo, en los primeros tiempos, Unix utilizaba un n\u00facleo monol\u00edtico (lo que significa que los procesos de usuario llevaban a cabo llamadas del sistema del n\u00facleo en la pila de usuarios). Si se entregaba una se\u00f1al a un proceso mientras estaba bloqueado en una I/O a largo plazo en el n\u00facleo, \u00bfqu\u00e9 se deb\u00eda hacer? \u00bfDeber\u00eda retrasarse la se\u00f1al, posiblemente durante mucho tiempo (tal vez indefinidamente) mientras se completa la I/O? El manejador de se\u00f1ales no podr\u00eda ser ejecutado cuando el proceso estuviera en modo kernel, con datos sensibles del kernel en la pila. \u00bfDeber\u00eda el n\u00facleo hacer una copia de seguridad de la llamada al sistema, y almacenarla, para su reproducci\u00f3n y reinicio posterior, asumiendo que el manejador de se\u00f1ales se complete con \u00e9xito?\nEn estos casos, Ken Thompson y Dennis Ritchie favorecieron la simplicidad sobre la perfecci\u00f3n. El sistema Unix ocasionalmente regresaba antes de tiempo de una llamada al sistema con un error que indicaba que no hab\u00eda hecho nada - la \"Llamada al Sistema Interrumpido\", o un error n\u00famero 4 (EINTR) en los sistemas actuales. Por supuesto que la llamada hab\u00eda sido abortada para llamar al manejador de la se\u00f1al. Esto s\u00f3lo pod\u00eda suceder para un pu\u00f1ado de llamadas de sistema de larga duraci\u00f3n como read(), write(), open() y select(). En el lado positivo, esto hizo que el sistema de I/O fuera mucho m\u00e1s simple de dise\u00f1ar y entender. La gran mayor\u00eda de los programas de usuario nunca se vieron afectados porque no manejaban o experimentaban otras se\u00f1ales aparte de SIGINT y mor\u00edan inmediatamente si uno se levantaba. Para los otros pocos programas, como los shells o los editores de texto que responden a las teclas de control de trabajo, se pod\u00edan a\u00f1adir peque\u00f1os envoltorios a las llamadas del sistema para reintentar la llamada de inmediato si se produc\u00eda este error EINTR. De esta manera, el problema se resolvi\u00f3 de una manera simple.", "subsections": []}, {"name": "Cr\u00edtica", "text": "En un art\u00edculo de 1981 titulado \"La verdad sobre Unix: La interfaz de usuario es horrible\" publicado en Datamation, Don Norman critic\u00f3 la filosof\u00eda de dise\u00f1o de Unix por su falta de preocupaci\u00f3n por la interfaz de usuario.[12]\u200b Escribiendo desde su formaci\u00f3n en ciencia cognitiva y desde la perspectiva de la entonces actual filosof\u00eda de la ingenier\u00eda cognitiva, se centr\u00f3 en c\u00f3mo los usuarios finales comprenden y forman un modelo cognitivo personal de sistemas - o, en el caso de Unix, no lo entienden, con el resultado de que los errores desastrosos (como perder una hora de trabajo) son demasiado f\u00e1ciles.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Ingenier\u00eda cognitiva\nArquitectura de Unix\nMinimalismo (inform\u00e1tica)\nIngenier\u00eda de software\nHacker \u00e9tico\nLista de filosof\u00edas de desarrollo del software\nTodo es un archivo", "subsections": []}, {"name": "Notas", "text": "\u2191 a b c d e Raymond, Eric S. (23 de septiembre de 2003). \u00abBasics of the Unix Philosophy\u00bb. The Art of Unix Programming. Addison-Wesley Professional. ISBN\u00a00-13-142901-9. Consultado el 1 de noviembre de 2016.\u00a0\n\u2191 Doug McIlroy, E. N. Pinson, B. A. Tague (8 de julio de 1978). \u00abUnix Time-Sharing System: Foreword\u00bb. Bell Laboratories. pp.\u00a01902-1903.\u00a0\n\u2191 Dennis Ritchie; Ken Thompson (1974), \u00abThe UNIX time-sharing system\u00bb, Communications of the ACM 17 (7): 365-375, doi:10.1145/361011.361061\u00a0.\n\u2191 a b Kernighan, Brian W. Pike, Rob. The UNIX Programming Environment. 1984. viii\n\u2191 a b Rob Pike (October 1984). \u00abProgram Design in the UNIX Environment\u00bb.\u00a0\n\u2191 Dennis Ritchie (1984), \u00abThe Evolution of the UNIX Time-Sharing System\u00bb, AT&T Bell Laboratories Technical Journal 63 (8): 1577-1593, doi:10.1002/j.1538-7305.1984.tb00054.x\u00a0.\n\u2191 Douglas McIlroy. \u00abRemarks for Japan Prize award ceremony for Dennis Ritchie, May 19, 2011, Murray Hill, NJ\u00bb. Consultado el 19 de junio de 2014.\u00a0\n\u2191 Bill McGonigle. \u00abAncestry of Linux\u00a0\u2014 How the Fun Began (2005)\u00bb. Consultado el 19 de junio de 2014.\u00a0\n\u2191 \u00abInterview with Patrick Volkerding of Slackware\u00bb. linuxquestions.org. 7 de junio de 2012. Consultado el 24 de octubre de 2015.\u00a0\n\u2191 Raymond, Eric (19 de septiembre de 2003). The Art of Unix Programming. Addison-Wesley. ISBN\u00a00-13-142901-9. Consultado el 9 de febrero de 2009.\u00a0\n\u2191 Raymond, Eric (19 de septiembre de 2003). \u00abThe Unix Philosophy in One Lesson\u00bb. The Art of Unix Programming. Addison-Wesley. ISBN\u00a00-13-142901-9. Consultado el 9 de febrero de 2009.\u00a0\n\u2191 Norman, Don (1981). \u00abThe truth about Unix: The user interface is horrid\u00bb (27(12)).\u00a0", "subsections": []}, {"name": "Referencias", "text": "The Unix Programming Environment by Brian Kernighan and Rob Pike, 1984\nProgram Design in the UNIX Environment \u2013 The paper by Pike and Kernighan that preceded the book.\nNotes on Programming in C, Rob Pike, September 21, 1989\nA Quarter Century of Unix, Peter H. Salus, Addison-Wesley, May 31, 1994 (ISBN\u00a00-201-54777-5)\nPhilosophy\u00a0\u2014 from The Art of Unix Programming, Eric S. Raymond, Addison-Wesley, September 17, 2003 (ISBN\u00a00-13-142901-9)\nFinal Report of the Multics Kernel Design Project by M. D. Schroeder, D. D. Clark, J. H. Saltzer, and D. H. Wells, 1977.\nThe UNIX Philosophy, Mike Gancarz, ISBN\u00a01-55558-123-4", "subsections": []}, {"name": "Enlaces externos", "text": "Basics of the Unix Philosophy \u2013 by Catb.org\nThe Unix Philosophy: A Brief Introduction \u2013 by The Linux Information Project (LINFO)\nThe Unix Philosophy\nWhy the Unix Philosophy still matters", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Flask", "title": "Flask", "summary": "[\n]\nFlask es un framework minimalista escrito en Python que permite crear aplicaciones web r\u00e1pidamente y con un m\u00ednimo n\u00famero de l\u00edneas de c\u00f3digo. Est\u00e1 basado en la especificaci\u00f3n WSGI de Werkzeug y el motor de templates Jinja2 y tiene una licencia BSD.", "sections": [{"name": "Ejemplo", "text": "El c\u00f3digo siguiente muestra una aplicaci\u00f3n simple que imprime \"\u00a1Hola Mundo!\":\nfrom\nflask\nimport\nFlask\napp\n=\n(\n__name__\n)\n@app\n.\nroute\n\"/\"\ndef\nholamundo\n():\nreturn\n\"\u00a1Hola Mundo!\"\nrun\nport\n5000", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abChanges \u2014 Flask Documentation\u00bb. Flask (en ingl\u00e9s). Consultado el 30 de mayo de 2021.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio Web de Flask\nDocumentaci\u00f3n de Flask\nC\u00f3digo fuente del proyecto en Github\nFlask en PyPI\nLocalizaci\u00f3n para aplicaciones Flask", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Foreach", "title": "Foreach", "summary": "Foreach (de la palabra inglesa for each = para cada uno) es un bloque constructivo de los lenguajes de programaci\u00f3n para recorrer los elementos de una colecci\u00f3n. Foreach se utiliza por lo general en lugar de una norma para la declaraci\u00f3n. A diferencia de otras construcciones de bucle, los bucles foreach por lo general no mantienen contra-indicaci\u00f3n expl\u00edcita, que esencialmente dice \"haga esto a todo en este juego\" en lugar de \"hacer esto x veces.\" Esto evita posibles errores off-by-one y hace el c\u00f3digo m\u00e1s f\u00e1cil de leer. En lenguajes orientados a objetos un iterador, aunque impl\u00edcito, a menudo se utiliza como medio de recorrido. Este bucle, implementado a partir de las versiones de PHP4, nos ayuda a recorrer los valores de un array, lo cual puede resultar muy \u00fatil por ejemplo para efectuar una lectura r\u00e1pida del mismo. Recordemos que un array es una variable que guarda un conjunto de elementos (valores) catalogados por claves.[1]\u200b\nLa sintaxis en pseudoc\u00f3digo es la siguiente:\nUn ejemplo pr\u00e1ctico es la lectura de un array, lo cual podr\u00eda hacerse del siguiente modo:  \nforeach\n \n(\n$array\nas\n$clave\n=>\n$valor\n)\n{\n   \ninstrucci\u00f3n\n1\n;\n  \n2\n\u2026", "sections": [{"name": "\u00cdndice", "text": "1 Ejemplo en PHP\n2 Ejemplo en Java\n3 Ejemplo en C#\n4 Ejemplo en LISP\n5 V\u00e9ase tambi\u00e9n\n6 Referencias", "subsections": []}, {"name": "Ejemplo en PHP", "text": "foreach\n$conjunto\nas\n$variable\n// operar con la variable;\n}", "subsections": []}, {"name": "Ejemplo en Java", "text": "for\ntipo\nvar\n:\narreglo", "subsections": []}, {"name": "Ejemplo en C#", "text": "variable\nin\n//Procesos\n//", "subsections": []}, {"name": "Ejemplo en LISP", "text": "dolist\nexp\nlista\n;operaciones...", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "While", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abPHP: foreach - Manual\u00bb. php.net. Consultado el 2 de noviembre de 2017.\u00a0\nForeach en C# (Documentaci\u00f3n oficial Microsoft)\nForeach en MDN\nForeach en PHP (Documentaci\u00f3n oficial", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Free_Software_Foundation", "title": "Free Software Foundation", "summary": "La Fundaci\u00f3n por el Software Libre o Free Software Foundation es una organizaci\u00f3n creada en octubre de 1985 por Richard Stallman y otros entusiastas del software libre con el prop\u00f3sito de difundir este movimiento.\nLa Free Software Foundation (FSF) es una organizaci\u00f3n sin fines de lucro con la misi\u00f3n mundial de promover la libertad de los usuarios de computadoras. Defendemos los derechos de todos los usuarios de software.[1]\u200b\nFSF centra su trabajo fundamentalmente en asuntos legales, organizativos y promocionales en beneficio de la comunidad de usuarios de software libre.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Actividades\n3 Organizaci\u00f3n\n4 Cr\u00edticas y detractores\n5 V\u00e9ase tambi\u00e9n\n6 Referencias\n7 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "La Free Software Foundation fue fundada en 1985. Continu\u00f3 los proyectos existentes de GNU, como la venta de manuales y cintas, y contrat\u00f3 a desarrolladores del sistema de software libre.[2]\u200b Desde entonces, ha continuado con estas actividades, adem\u00e1s de abogar por el movimiento del software libre. La FSF tambi\u00e9n es la administradora de varias licencias de software libre, lo que significa que las publica y tiene la capacidad de realizar revisiones seg\u00fan sea necesario.[3]\u200b\nLa FSF posee los derechos de autor de muchas piezas del sistema GNU, como el GNU Compiler Collection. Como titular de estos derechos de autor, tiene la autoridad para hacer cumplir los requisitos de copyleft de la GNU General Public License (GPL) cuando se produce una infracci\u00f3n de derechos de autor en ese software.\nDesde 1991 hasta 2001, la aplicaci\u00f3n de la GPL se realiz\u00f3 de manera informal, generalmente por el propio Stallman, a menudo con la asistencia del abogado de la FSF, Eben Moglen. En el inter\u00e9s de promover la asertividad copyleft por parte de las compa\u00f1\u00edas de software al nivel que la FSF ya estaba haciendo, en 2004 Harald Welte lanz\u00f3 gpl-violations.org.\nLa aplicaci\u00f3n de la GPL y las campa\u00f1as educativas sobre el cumplimiento de la GPL fueron un foco principal de los esfuerzos de la FSF a partir de este per\u00edodo.[4]\u200b\nDe 2003 a 2005, FSF celebr\u00f3 seminarios legales para explicar la GPL y la ley circundante.[5]\u200b Generalmente impartidos por Bradley M. Kuhn y Daniel Ravicher, estos seminarios fueron el primer esfuerzo para brindar educaci\u00f3n legal formal sobre la GPL.[6]\u200b\nEn 2007, la FSF public\u00f3 la tercera versi\u00f3n de la Licencia P\u00fablica General GNU despu\u00e9s de una importante contribuci\u00f3n externa.[7]\u200b", "subsections": []}, {"name": "Actividades", "text": "Proyecto GNU\nEl prop\u00f3sito original de la FSF era promover los ideales del software libre. La organizaci\u00f3n desarroll\u00f3 el sistema operativo GNU como un ejemplo de esto. \nLicencias GNU\nLa FSF elabora, mantiene y defiende la Licencia P\u00fablica General GNU (GNU GPL),la licencia de software libre m\u00e1s utilizada, cuya \u00faltima versi\u00f3n es la GPLv3 que fue publicada en forma definitiva en junio de 2007. Aparte la FSF tambi\u00e9n es responsable de la [GNU LGPL|Licencia P\u00fablica General Reducida GNU] (GNU LGPL) y la Licencia de documentaci\u00f3n libre GNU (GNU iFDL). La FSF tiene recursos y voluntad para hacer cumplir las licencias que elabora. Pero solo puede presentar demandas, sobre software del cual posea derechos de autor. La fundaci\u00f3n se enfrenta cada a\u00f1o a unas 50 violaciones de la GPL y siempre trata de evitar llegar a los tribunales. \nAlojamiento de proyectos\nLa FSF aloja proyectos de software libre en su sitio web Savannah. Ofrece una de interfaz web para el hosting y el mantenimiento de las p\u00e1ginas web de los proyectos, seguimiento de errores, CVS, FTP, y listas de correo. Hospeda m\u00e1s de 2800 proyectos.\nFormaci\u00f3n legal\nLa FSF organiza seminarios sobre los aspectos legales a tener en cuenta cuando se usa la licencia GPL.\nFree Software Directory\nEs un directorio con m\u00e1s de 5000 programas que se ha comprobado que son software libre. La Unesco ayuda en la financiaci\u00f3n de este proyecto. \nPremios y reconocimientos\nPremio para el Avance del Software Libre de la FSF (FSF Award for the Advancement of Free Software) que otorga la fundaci\u00f3n a una persona que haya hecho una gran contribuci\u00f3n al progreso del software libre y Premio de software libre para proyectos de beneficio social (Free Software Award for Projects of Social Benefit).\nGNU Press\nEl departamento de publicaciones de la FSF es el responsable de publicar libros asequibles sobre inform\u00e1tica usando licencias de libre distribuci\u00f3n.\nDefinici\u00f3n de software libre\nMantiene muchos documentos que definen y explican claramente que es el software libre.\nCampa\u00f1as\nLas campa\u00f1as de la FSF apuntan a oportunidades importantes para la adopci\u00f3n y desarrollo de software libre, empoderan a las personas contra amenazas espec\u00edficas a su libertad y nos acercan a una sociedad libre:[8]\u200b\nProyectos de software libre de alta prioridad: La lista de proyectos de alta prioridad de la FSF y la lista de tareas de ingenier\u00eda inversa sirven para fomentar el desarrollo de proyectos que son importantes para aumentar la adopci\u00f3n y el uso de software libre y sistemas operativos de software libre.\nJavaScript libre: FreeJS La campa\u00f1a Free JavaScript es un esfuerzo continuo para persuadir a las organizaciones de hacer que sus sitios web funcionen sin requerir que los usuarios ejecuten ning\u00fan software no libre.\nArranque seguro vs arranque restringido: La implementaci\u00f3n de Secure boot ocasiona en ciertos casos que las computadoras no arrancar\u00e1n sistemas operativos no autorizados, incluidos los sistemas autorizados inicialmente que se han modificado sin ser aprobados nuevamente.\nActualizar desde Windows: el sistema operativo m\u00e1s utilizado del mundo aprovecha su posici\u00f3n dominante sobre sus usuarios, negando libertades de uso.\nVigilancia: Si queremos desempa\u00f1ar programas de vigilancia como PRISM, debemos dejar de usar sistemas centralizados y unirnos para construir un Internet descentralizado, confiable y libre \"como en libertad\".\nDefectiveByDesign: Campa\u00f1a para eliminar el DRM.\nPlayOgg.org: Para promocionar Ogg, una alternativa a formatos privativos como MP3 y AAC.\nFree BIOS: \"BIOS libre\". Campa\u00f1a de apoyo al proyecto de creaci\u00f3n de un BIOS libre.\nHardware devices that support free software: Campa\u00f1a para promocionar la compra de \u00abhardware que de soporte al software libre\u00bb.\nEncourage governments to adopt OpenDocument': Para \u00abpromover en los gobiernos la adopci\u00f3n de OpenDocument\u00bb.\nFin de patentes de software: Las campa\u00f1as de la FSF para formatos que est\u00e1n libres de patentes de software, tambi\u00e9n trabajamos en la tarea m\u00e1s fundamental de finalizar por completo las patentes de software, a trav\u00e9s de acciones legales y legislativas.[9]\u200b", "subsections": []}, {"name": "Organizaci\u00f3n", "text": "La junta Directiva de la FSF incluye entre ellos profesores en las principales universidades, ingenieros superiores y fundadores. Tambi\u00e9n se admiten algunos activistas de alto perfil y empresarios de software.\nJohn Sullivan es el actual director ejecutivo de la FSF. Los miembros anteriores que ocuparon el puesto fueron Peter T. Brown (2005-2010) y Bradley M. Kuhn (2001-2005).\nMiembros actuales de la junta:\nGeoffrey Knauth, ingeniero de software s\u00e9nior en SFA, Inc. (desde el 23 de octubre de 1997)\nHenry Poole, fundador de CivicActions, una firma gubernamental de servicios digitales (con servicio desde el 12 de diciembre de 2002)\nGerald Jay Sussman, profesor de ciencias de la computaci\u00f3n en el Instituto de Tecnolog\u00eda de Massachusetts (desde sus inicios)\nAlexander Oliva, Vicepresidente (servido desde el 28 de agosto de 2019) [39]\nKat Walsh, abogada de derechos de autor y tecnolog\u00eda, defensora de la cultura libre y el software libre, y expresidenta de la Fundaci\u00f3n Wikimedia [40]\nLos miembros anteriores de la junta incluyen:\nHal Abelson, miembro fundador,[10]\u200b profesor de ciencias de la computaci\u00f3n en el Instituto de Tecnolog\u00eda de Massachusetts (ejerci\u00f3 desde el inicio hasta el 5 de marzo de 1998, y se reincorpor\u00f3 alrededor de 2005)\nRobert J. Chassell, tesorero fundador,[10]\u200b as\u00ed como director fundador (servido desde el inicio hasta el 3 de junio de 1997)\nMiguel de Icaza (servido desde agosto de 1999 hasta el 25 de febrero de 2002)\nBenjamin Mako Hill, profesor asistente de la Universidad de Washington (atendido desde el 25 de julio de 2007 hasta octubre de 2019)[11]\u200b\nMatthew Garrett, desarrollador de software (servido desde el 16 de octubre de 2014)[12]\u200b\nBradley Kuhn, director ejecutivo de Software Freedom Conservancy y exdirector ejecutivo de FSF (servido del 25 de marzo de 2010[13]\u200b al 13 de octubre de 2019[14]\u200b)\nLawrence Lessig, profesor de derecho en la Universidad de Stanford (ejerci\u00f3 desde el 28 de marzo de 2004 hasta 2008)\nEben Moglen (servido desde el 28 de julio de 2000 hasta 2007)\nLen Tower Jr., miembro fundador,[10]\u200b (servido hasta el 2 de septiembre de 1997)\nRichard Stallman, presidente fundador, lanz\u00f3 el proyecto GNU, autor de la Licencia P\u00fablica General de GNU (ejerci\u00f3 como presidente desde el inicio, hasta el 16 de septiembre de 2019)\nFree Software Foundation Europe. Fundada en el 2001\nFree Software Foundation of India. Fundada en el 2003\nFree Software Foundation Am\u00e9rica Latina. Fundada en el 2005", "subsections": []}, {"name": "Cr\u00edticas y detractores", "text": "La FSF ha desempe\u00f1ado y desempe\u00f1a un papel muy importante en el desarrollo del software libre, por ello goza de muchas simpat\u00edas entre los usuarios de dicho software y tiene muchos enemigos en la industria del software privativo.\nAl margen de este hecho, dentro de la comunidad no todos comparten plenamente la filosof\u00eda o actuaciones de la FSF siendo la Open Source Initiative (OSI) la principal l\u00ednea de pensamiento alternativa a la FSF.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Software libre. Contenido relacionado con Software libre.\nDerecho digital\nDefective by Design\nLibrePlanet\nLinux-libre\nRichard Stallman\nProyecto GNU\nSoftware libre\nSoftware libre y de c\u00f3digo abierto\nAnexo:Licencias de software aprobadas por la FSF", "subsections": []}, {"name": "Referencias", "text": "\u2191 fsf. \u00abFree software is a matter of liberty, not price \u2014 Free Software Foundation \u2014 working together for free software\u00bb (en ingl\u00e9s). Consultado el 5 de marzo de 2020.\u00a0\n\u2191 \u00abEl Proyecto GNU\u00bb.\u00a0\n\u2191 \u00abLicencias\u00bb.\u00a0\n\u2191 \u00abDennisKennedy.blog: A Great Learning Opportunity for Software Lawyers - Upcoming GPL Seminar\u00bb. web.archive.org. 28 de septiembre de 2007. Archivado desde el original el 28 de septiembre de 2007. Consultado el 5 de marzo de 2020.\u00a0\n\u2191 \u00abSeminar On Details Of The GPL And Related Licenses - Slashdot\u00bb. yro.slashdot.org (en ingl\u00e9s). Consultado el 5 de marzo de 2020.\u00a0\n\u2191 \u00abFSF Bulletin Issue 2, June 2003\u00bb.\u00a0\n\u2191 \u00abGNU General Public License\u00bb.\u00a0\n\u2191 \u00abCurrent campaigns \u2014 Free Software Foundation \u2014 working together for free software\u00bb. www.fsf.org. Consultado el 5 de marzo de 2020.\u00a0\n\u2191 Patent Absurdity en FSF.org\n\u2191 a b c \u00abFebruary 1986        G N U ' S   B U L L E T I N         Volume 1 No.1\u00bb.\u00a0\n\u2191 \u00abThe Free Software Foundation (FSF) Lost Almost Half (3 Out of 8) Board Members in Only One Month\u00bb. Techrights. 17 de octubre de 2019. Consultado el 5 de marzo de 2020.\u00a0\n\u2191 \u00abMatthew Garrett joins Free Software Foundation board of directors\u00bb.\u00a0\n\u2191 \u00abBradley Kuhn Joins the FSF Board\u00bb.\u00a0\n\u2191 \u00abOn Recent Controversial Events - Bradley M. Kuhn ( Brad ) ( bkuhn )\u00bb. ebb.org. Consultado el 5 de marzo de 2020.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una galer\u00eda multimedia sobre Free Software Foundation.\nSitio web oficial de la Free Software Foundation\nSitio web oficial de la Free Software Foundation Am\u00e9rica Latina\nSitio web oficial de la Free Software Foundation Europa\nSitio web oficial de la Free Software Foundation India", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/GNU_General_Public_License", "title": "GNU General Public License", "summary": " \n \n \n \nS\u00ed\n[\n]\nNo\n \nLa Licencia P\u00fablica General de GNU o m\u00e1s conocida por su nombre en ingl\u00e9s GNU General Public License (o simplemente sus siglas en ingl\u00e9s GNU GPL) es una licencia de derecho de autor ampliamente usada en el mundo del software libre y c\u00f3digo abierto,[6]\u200b y garantiza a los usuarios finales (personas, organizaciones, compa\u00f1\u00edas) la libertad de usar, estudiar, compartir (copiar) y modificar el software. Su prop\u00f3sito es doble: declarar que el software cubierto por esta licencia es libre, y protegerlo (mediante una pr\u00e1ctica conocida como copyleft) de intentos de apropiaci\u00f3n que restrinjan esas libertades a nuevos usuarios cada vez que la obra es distribuida, modificada o ampliada. Esta licencia fue creada originalmente por Richard Stallman, fundador de la Free Software Foundation (FSF) para el proyecto GNU.\nLa Free Software Foundation pone la GPL a disposici\u00f3n de cualquiera que desee proteger los derechos de sus usuarios finales (usar, compartir, estudiar y modificar), y otorgar a los beneficiarios de un programa de ordenador u otro tipo de obra los derechos de la definici\u00f3n de software libre.[7]\u200b La GPL se distingue del dominio p\u00fablico o de otras licencias de software libre conocidas como permisivas por hacer hincapi\u00e9 en el copyleft, o solo permitir que las copias y derivados de una obra bajo la GPL perpet\u00faen la misma licencia.\nLa mayor parte del software GNU es copyleft, pero no todo; sin embargo, todo el software GNU debe ser software libre.\nParte del software GNU fue escrito por el equipo de la Free Software Foundation, pero la mayor parte proviene de algunos voluntarios. La Free Software Foundation es titular del copyright de parte de ese software, otra parte est\u00e1 bajo el copyright de sus autores.\nDavid A. Wheeler sostiene que el copyleft proporcionado por la GPL fue crucial para el \u00e9xito de sistemas basados en Linux, dando a los programadores que han contribuido al n\u00facleo la seguridad de que de su trabajo se beneficiar\u00eda todo el mundo y seguir\u00e1 siendo libre, en lugar de ser explotado por compa\u00f1\u00edas de software que no tendr\u00edan que dar nada de nuevo a la comunidad.[8]\u200b\nLos usuarios o compa\u00f1\u00edas que distribuyen sus trabajos bajo las GPL, pueden cobrar o distribuirlas gratuitamente. Esto distingue las GPL de las licencias de software que proh\u00edben su distribuci\u00f3n comercial. La FSF argumenta que no se debe restringir la distribuci\u00f3n comercial del software (incluyendo la redistribuci\u00f3n),[9]\u200b y en ese tenor la GPL establece expl\u00edcitamente que las obras cubiertas por esta licencia se pueden vender a cualquier precio.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n1.1 Versi\u00f3n 1\n1.2 Versi\u00f3n 2\n1.3 Versi\u00f3n 3\n2 T\u00e9rminos y condiciones\n2.1 Copyleft\n2.2 Licencias y temas contractuales\n2.3 Propietarios del copyright\n3 Compatibilidad y licencias m\u00faltiples\n4 Validez legal\n5 Adopci\u00f3n\n6 V\u00e9ase tambi\u00e9n\n7 Notas\n8 Referencias\n9 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "La GPL fue creada por Richard Stallman en 1989, para proteger los programas liberados como parte del proyecto GNU. La GPL original se bas\u00f3 en la unificaci\u00f3n de licencias similares utilizadas en versiones anteriores de GNU Emacs, GNU Debugger y de GNU C Compiler.[10]\u200b Estas licencias conten\u00edan disposiciones similares a las actuales GPL, pero eran espec\u00edficas para cada programa, haci\u00e9ndolos incompatibles, a pesar de ser la misma licencia. El objetivo de Stallman era producir una licencia que pudiera ser aplicada a cualquier proyecto, por lo que es posible utilizarlas en muchos proyectos para compartir c\u00f3digo.\nLa segunda parte de esta licencia, versi\u00f3n 2, fue liberada en 1991. Durante los siguientes 15 a\u00f1os, los miembros de la comunidad FOSS comenzaron a preocuparse con los problemas en la GPLv2 que permit\u00edan explotar software GPL con intenciones contrarias a la licencia.[11]\u200b Estos problemas inclu\u00edan tivoizaci\u00f3n, que es la inclusi\u00f3n de software con GPL en hardware que rechazar\u00e1 ejecutar versiones modificadas de su software, problemas de compatibilidad como ocurre con la licencia Affero General Public License; y las disputas por patentes entre Microsoft y distribuidores de c\u00f3digo libre y abierto, lo que se consider\u00f3 como un intento de usar las patentes como arma contra la comunidad FOSS.\nHist\u00f3ricamente, la familia de licencias de la GPL ha sido una de las licencias de software m\u00e1s populares en el software libre de dominio.[12]\u200b[13]\u200b[14]\u200b[15]\u200b[16]\u200b[17]\u200b[18]\u200b La tercera versi\u00f3n de esta licencia (GNU GPLv3) fue desarrollada para tratar de resolver estos problemas y fue lanzada oficialmente el 25 de julio de 2007. Esta es la primera licencia copyleft para uso general, lo que significa que los trabajos derivados solo pueden ser distribuidos bajo los t\u00e9rminos de la misma licencia.", "subsections": [{"name": "Versi\u00f3n 1", "text": "La versi\u00f3n 1 de GNU GPL,[19]\u200b fue presentada el 25 de febrero de 1989,[20]\u200b impidi\u00f3 lo que eran las dos principales formas con las que los distribuidores de software restring\u00edan las libertades definidas por el software libre. El primer problema fue que los distribuidores publicaban \u00fanicamente los archivos binarios, funcionales y ejecutables, pero no entendibles o modificables por humanos. Para prevenir esto, la GPLv1 estableci\u00f3 que cualquier proveedor de software libre adem\u00e1s de distribuir el archivo binario deb\u00eda liberar a su vez c\u00f3digo fuente entendible y que pudiera ser modificado por el ser humano, bajo la misma licencia (secciones 3a y 3b de la licencia).\nEl segundo problema era que los distribuidores pod\u00edan a\u00f1adir restricciones adicionales, ya fuera a\u00f1adiendo restricciones a la licencia o mediante la combinaci\u00f3n del software con otro que tuviera otras restricciones en su distribuci\u00f3n. Si esto se hac\u00eda, entonces la uni\u00f3n de los dos conjuntos de restricciones ser\u00eda aplicada al trabajo combinado entonces podr\u00edan a\u00f1adirse restricciones inaceptables. Para prevenir esto, GPLv1 obligaba a que las versiones modificadas en su conjunto, tuvieran que ser distribuidas bajo los t\u00e9rminos GPLv1 (secciones 2b y 4 de la licencia). Por lo tanto, el software distribuido bajo GPLv1 puede ser combinado con software bajo t\u00e9rminos m\u00e1s permisivos y no con software con licencias m\u00e1s restrictivas, lo que entrar\u00eda en conflicto con el requisito de que todo software tiene que ser distribuido bajo los t\u00e9rminos de la GPLv1."}, {"name": "Versi\u00f3n 2", "text": "Seg\u00fan Richard Stallman, el mayor cambio en GPLv2 fue la cl\u00e1usula \u201cLiberty or Death\u201d (\u00ablibertad o muerte\u00bb), como la llama en la secci\u00f3n 7 de ese documento.[21]\u200b Esta secci\u00f3n dice que si alguien impone restricciones que le proh\u00edben distribuir c\u00f3digo GPL de tal forma que influya en las libertades de los usuarios (por ejemplo, si una ley impone que esa persona \u00fanicamente pueda distribuir el software en binario), esa persona no puede distribuir software GPL. La esperanza es que esto har\u00e1 que sea menos tentador para las empresas el recurrir a las amenazas de patentes para exigir una remuneraci\u00f3n de los desarrolladores de software libre.\nEn 1991 se hizo evidente que una licencia menos restrictiva ser\u00eda estrat\u00e9gicamente \u00fatil para la biblioteca C y para las bibliotecas de software que esencialmente hac\u00edan el trabajo que llevaban a cabo otras bibliotecas comerciales ya existentes.[22]\u200b Cuando la versi\u00f3n 2 de GPL fue liberada en junio de 1991, una segunda licencia Library General Public License fue introducida al mismo tiempo y numerada con la versi\u00f3n 2 para denotar que ambas son complementarias. Los n\u00fameros de versiones divergieron en 1999 cuando la versi\u00f3n 2.1 de LGPL fue liberada, esta fue renombrada como GNU Lesser General Public License para reflejar su lugar en esta filosof\u00eda."}, {"name": "Versi\u00f3n 3", "text": "A finales de 2005, la Free Software Foundation (FSF) anunci\u00f3 estar trabajando en la versi\u00f3n 3 de la GPL (GPLv3). El 16 de enero de 2006, el primer borrador de GPLv3 fue publicado, y se inici\u00f3 la consulta p\u00fablica. La consulta p\u00fablica se plane\u00f3 originalmente para durar de nueve a quince meses, pero finalmente se extendi\u00f3 a dieciocho meses, durante los cuales se publicaron cuatro borradores. La GPLv3 oficial fue liberada por la FSF el 29 de junio de 2007. [23]\u200b\nSeg\u00fan Stallman los cambios m\u00e1s importantes se produjeron en el campo de las patentes de software, la compatibilidad de licencias de software libre, la definici\u00f3n de c\u00f3digo fuente, y restricciones de hardware respecto a las modificaciones de hardware.[23]\u200b[24]\u200b Otros cambios est\u00e1n relacionados con la internacionalizaci\u00f3n, c\u00f3mo son manejadas las violaciones de licencias, y c\u00f3mo los permisos adicionales pueden ser concedidos por el titular de los derechos de autor. Tambi\u00e9n a\u00f1ade disposiciones para quitar al DRM su valor legal, por es posible romper el DRM en el software de GPL sin romper leyes como la DMCA.[25]\u200b\nEl proceso de consulta p\u00fablica fue coordinado por la Free Software Foundation con asistencia de Software Freedom Law Center, Free Software Foundation Europe,[26]\u200b y otros grupos de software libre. Los comentarios del p\u00fablico fueron recolectados a trav\u00e9s del portal gplv3.fsf.org.[27]\u200b\nDurante el proceso de consulta p\u00fablica, 962 comentarios fueron presentados para el primer borrador.[28]\u200b Finalmente, al final del proceso se alcanz\u00f3 la cifra de 2,636 comentarios.[29]\u200b[30]\u200b[31]\u200b\nEl tercer borrador fue liberado el 28 de marzo de 2007.[32]\u200b Este borrador incluye mecanismos destinados a evitar acuerdos relativos a las patentes, como el controvertido acuerdo entre Microsoft y Novell y restringe las cl\u00e1usulas anti-tivoizaci\u00f3n a una definici\u00f3n legal de un \"usuario\" o \"producto de consumo\". Tambi\u00e9n elimina la secci\u00f3n de \"Limitaciones geogr\u00e1ficas\", cuyo probable borrado se hab\u00eda anunciado en el lanzamiento de la consulta p\u00fablica.\nEl cuarto borrador,[33]\u200b que fue el \u00faltimo, fue liberado el 31 de mayo de 2007. Introdujo la compatibilidad con las Licencias Apache, clarific\u00f3 el rol de los contratistas externos, y hace una excepci\u00f3n para evitar los problemas provocados por el acuerdo Microsoft-Novell, estableciendo en el p\u00e1rrafo 6 de la Secci\u00f3n 11 lo siguiente:\nEl objetivo de esto es hacer este tipo de acuerdos ineficaces. La licencia est\u00e1 orientada a que Microsoft tenga que extender las licencias de patentes para garantizar a los clientes de Novell el uso de GPLv3, lo que es posible \u00fanicamente si Microsoft es distribuidor legal del software bajo GPLv3.[34]\u200b[35]\u200b\nAlgunos desarrolladores de alto nivel del n\u00facleo Linux, comentaron e hicieron declaraciones p\u00fablicas a los medios de comunicaci\u00f3n sobre sus objeciones a los borradores 1 y 2.[36]\u200b"}]}, {"name": "T\u00e9rminos y condiciones", "text": "Los t\u00e9rminos y condiciones de GPL deben estar disponible para cualquiera que reciba una copia de la obra al cual ha sido aplicada esta licencia. Cualquier licencia que se le apliquen dichos t\u00e9rminos da permiso a realizar modificaciones a una obra, realizar copias y distribuirla o distribuir cualquiera de sus versiones derivadas. Con esta licencia, est\u00e1 permitido cobrar por la distribuci\u00f3n de cada copia, o no cobrar nada. Este \u00faltimo punto distingue las licencias GPL de las licencias de software que proh\u00edben la distribuci\u00f3n comercial. La FSF argumenta que en el software libre no debe haber cabida para las restricciones comerciales,[37]\u200b y las obras bajo este tipo de licencias pueden ser vendidas a cualquier precio.\nLa GPL, adem\u00e1s, establece que un distribuidor no puede imponer \"restricciones sobre los derechos otorgados por la GPL\". Esta proh\u00edbe actividades como la distribuci\u00f3n del software bajo un acuerdo de confidencialidad o contrato. Distribuidores bajo la GPL tambi\u00e9n conceder una licencia para cualquiera de sus patentes software, para ser utilizadas en software GPL.\nLa cuarta secci\u00f3n de la versi\u00f3n 2 de la licencia y la decimos\u00e9ptima secci\u00f3n de la versi\u00f3n 3 requieren que los programas distribuidos como binarios precompilados est\u00e9n acompa\u00f1ados de una copia del c\u00f3digo fuente, una oferta por escrito para distribuir el c\u00f3digo fuente a trav\u00e9s del mismo mecanismo que el binario pre-compilado, o una oferta por escrito para obtener el c\u00f3digo fuente del binario recibido bajo la GPL. La segunda secci\u00f3n de la versi\u00f3n 2 y la secci\u00f3n quinta de la versi\u00f3n 3 tambi\u00e9n apuntan que hay que suministrar \"a todos los destinatarios una copia de esta Licencia junto con el Programa\". La versi\u00f3n 3 de la licencia permite que el c\u00f3digo fuente est\u00e9 disponible en distintas plataformas en cumplimiento de la s\u00e9ptima secci\u00f3n. Estos incluyen la descarga de c\u00f3digo fuente desde un servidor de red adyacente o la obtenci\u00f3n del mismo a trav\u00e9s de peer-to-peer, siempre que el c\u00f3digo compilado est\u00e9 disponible y que haya \"instrucciones claras\u201d sobre d\u00f3nde encontrar el c\u00f3digo fuente.\nLa FSF no permite la aplicaci\u00f3n de derechos de copyright a una obra licenciada bajo GPL, al menos que el autor los aplique expl\u00edcitamente (esto sucede raras veces en con excepci\u00f3n de los programas que forman parte del proyecto GNU). Solo los titulares de los derechos individuales tienen la autoridad para demandar una violaci\u00f3n de la licencia cuando se lleva a cabo.", "subsections": [{"name": "Copyleft", "text": "Los derechos de distribuci\u00f3n otorgados por la GPL para versiones modificadas de la obra no son incondicionales. Cuando alguien distribuye bajo GPL a\u00f1adiendo a la obra sus propias modificaciones, los requisitos para la distribuci\u00f3n de la totalidad de la obra no puede ser mayor que los requisitos que est\u00e1n en la GPL.\nEste requisito se conoce como copyleft. Que alcanza su verdadero potencial en el caso de los derechos de autor sobre el software. Si una obra GPL tiene derechos copyright, no se tendr\u00e1 derecho a distribuir esta obra, realizar modificaciones (excepto para uso propio). Al aplicar una GPL a una obra, los derechos de la misma estar\u00e1n protegidos por la ley de derechos de autor. Y si por el contrario, si se distribuye copias de la obra (licenciada bajo GPL) sin atenerse a los t\u00e9rminos de la GPL (por ejemplo, al mantener en secreto el c\u00f3digo fuente), puede ser demandado por el autor original de los derechos de autor.\nCopyleft por lo tanto utiliza la ley de copyright para lograr lo opuesto de su prop\u00f3sito usual: en lugar de imponer restricciones, otorga derechos, de tal manera que garantice que los derechos no puedan ser posteriormente quitados o restringidos. Tambi\u00e9n asegura que si los derechos ilimitados de redistribuci\u00f3n no se conceden o se produce cualquier falla legal se encuentra bajo la protecci\u00f3n de la ley.\nMuchos distribuidores de programas bajo GPL empaquetan el c\u00f3digo fuente con el ejecutable. Una alternativa que cumple las bases de copyleft es la de proporcionar una oferta por escrito para distribuir el c\u00f3digo fuente en un medio f\u00edsico (como por ejemplo un CD) bajo demanda. En la pr\u00e1ctica muchos programas bajo la GPL se distribuyen por internet, y el c\u00f3digo se encuentra alojado en servidores FTP, HTTP, etc.\nCopyleft solo se aplica cuando se trata de redistribuir el programa. Seg\u00fan sus bases, est\u00e1 permitido hacer privadas las modificaciones realizadas, sin obligaci\u00f3n de divulgar las modificaciones siempre y cuando este software sea de uso propio (no sea redistribuido).\nHubo un debate sobre si se trataba de una violaci\u00f3n de la GPL de liberar el c\u00f3digo fuente tanto en forma ofuscada, como en forma deliberadamente compleja a la comprensi\u00f3n. El consenso general fue que, si bien no \u00e9tica, no se consider\u00f3 una violaci\u00f3n. El asunto fue aclarado cuando la licencia fue modificada para exigir que tuviera que estar disponible la versi\u00f3n \u00abpreferida\u00bb del c\u00f3digo fuente.[38]\u200b"}, {"name": "Licencias y temas contractuales", "text": "GPL fue dise\u00f1ado orientado m\u00e1s a una licencia que a un contrato.[39]\u200b[40]\u200b En algunas jurisdicciones, la distinci\u00f3n legal entre una licencia y un contrato es muy importante: los contratos son ejecutables por la ley de contratos, mientras que las licencias se aplican en virtud del derecho de autor. Sin embargo, esta distinci\u00f3n no es \u00fatil en las diversas jurisdicciones en que no existen diferencias entre los contratos y licencias, como los sistemas de derecho civil.[41]\u200b\nAquellos que no aceptan los t\u00e9rminos de la GPL y sus condiciones no tienen permiso, en virtud del derecho de autor, a copiar o distribuir software con la GPL o trabajos derivados. Sin embargo, si no redistribuyen el programa, pueden utilizar el software en su organizaci\u00f3n a su gusto, y estas obras (incluidos los programas) construidas bajo este uso no requieren estar bajo esta licencia."}, {"name": "Propietarios del copyright", "text": "El texto que compone la GPL es en s\u00ed est\u00e1 protegido bajo copyright y es propiedad de la FSF. Sin embargo, la FSF no es titular del derecho de autor de una obra publicada bajo la GPL, a menos que el autor asigne expl\u00edcitamente los derechos de autor a la FSF (que rara vez sucede con excepci\u00f3n de los programas que forman parte del proyecto GNU). Solo los titulares de los derechos individuales tienen la autoridad para demandar una violaci\u00f3n de la licencia cuando se lleva a cabo.\nLa FSF permite al p\u00fablico crear nuevas licencias basadas en la GPL, siempre y cuando las licencias derivadas no utilicen GPL sin permiso. Esto no se recomienda, ya que tal licencia puede ser incompatible con la GPL.\nOtras licencias creadas por el proyecto GNU incluyen la GNU Lesser General Public License y la GNU Free Documentation License."}]}, {"name": "Compatibilidad y licencias m\u00faltiples", "text": "C\u00f3digo licenciado bajo varias licencias puede ser combinado con programas con licencias GPL sin conflictos, siempre que la combinaci\u00f3n de restricciones del trabajo en su conjunto no ponga ninguna restricci\u00f3n adicional m\u00e1s all\u00e1 de lo permitido por la GPL.[42]\u200b Adem\u00e1s de los t\u00e9rminos regulares de la GPL, hay restricciones y permisos adicionales que se pueden aplicar:\nSi se quiere combinar c\u00f3digo bajo diferentes versiones de GPL, se puede hacer si el c\u00f3digo con la versi\u00f3n m\u00e1s antigua de GPL incluye la declaraci\u00f3n \u201ccualquier versi\u00f3n posterior\u201d.[43]\u200b\nC\u00f3digo bajo LGPL puede ser vinculado con cualquier otro c\u00f3digo, no importa que licencia tenga ese c\u00f3digo.[44]\u200b C\u00f3digo bajo LGPLv2 sin la declaraci\u00f3n \u201ccualquier versi\u00f3n posterior\u201d puede ser relicenciado si el trabajo al completo se licencia con una GPLv2 o una GPLv3.[45]\u200b\nLa FSF mantiene una lista[46]\u200b de las licencias de software libre GPL-compatibles[47]\u200b[48]\u200b con muchas de las licencias de software libre m\u00e1s comunes, como la licencia original MIT/X la licencia BSD (en su forma actual de tres cl\u00e1usulas) y la licencia Artistic 2.0.[49]\u200b\nDavid A. Wheeler ha abogado a los desarrolladores de software libre/abierto a que usen solo licencias GPL-compatibles, porque hacerlo de otra manera hace m\u00e1s dif\u00edcil para los dem\u00e1s la participaci\u00f3n y la contribuci\u00f3n al c\u00f3digo.[50]\u200b Como ejemplo espec\u00edfico de incompatibilidad, ZFS de Sun Microsystems no puede ser incluido en la GPL del n\u00facleo Linux, porque este est\u00e1 bajo una GPL-incompatible CDDL. Adem\u00e1s, ZFS est\u00e1 protegido por patentes, as\u00ed que la distribuci\u00f3n independiente desarrollada por una implementaci\u00f3n GPL requerir\u00eda el permiso de Oracle.[51]\u200b\nVarias empresas usan licencias m\u00faltiples para distribuir una versi\u00f3n GPL y vender una propietaria a otras compa\u00f1\u00edas que quieran combinar el paquete de c\u00f3digo con c\u00f3digo propietario, usando una vinculaci\u00f3n din\u00e1mica o no. Ejemplos de estas compa\u00f1\u00edas incluyen MySQL AB, Digia PLC (Qt framework, antes del 2011 de Nokia), Red Hat (Cygwin) y RiverBank Computing (PyQt). Otras compa\u00f1\u00edas, como Mozilla Foundation (algunos de sus productos incluyen Mozilla Application Suite, Mozilla Thunderbird y Mozilla firefox), usan licencias m\u00faltiples para distribuir versiones bajo GPL y otras licencias de c\u00f3digo abierto.", "subsections": []}, {"name": "Validez legal", "text": "La GPL, al ser un documento que cede ciertos derechos al usuario, asume la forma de un contrato, por lo que usualmente se la denomina contrato de licencia o acuerdo de licencia.[52]\u200b[53]\u200b En los pa\u00edses de tradici\u00f3n anglosajona existe una distinci\u00f3n doctrinal entre licencias y contratos, pero esto no ocurre en los pa\u00edses de tradici\u00f3n civil o continental. Como contrato, la GPL debe cumplir los requisitos legales de formaci\u00f3n contractual en cada jurisdicci\u00f3n.\nLa licencia ha sido reconocida, entre otros,[54]\u200b por juzgados en Alemania, particularmente en el caso de una sentencia en un tribunal de M\u00fanich,[55]\u200b lo que indica positivamente su validez en jurisdicciones de derecho civil.", "subsections": []}, {"name": "Adopci\u00f3n", "text": "El software bajo la GPL puede ser aplicado bajo todos los prop\u00f3sitos, incluidos los prop\u00f3sitos comerciales e incluso como herramienta de creaci\u00f3n de software propietario. En uso puramente privativo (o interno), sin ventas ni distribuciones implicadas, el software puede ser modificado sin liberar el c\u00f3digo fuente pero, de lo contrario, el c\u00f3digo fuente y cualquier cambio realizado en \u00e9l debe estar disponible para los usuarios, ya que en este caso los derechos del usuario est\u00e1n protegidos por copyleft. De esta forma, las aplicaciones instaladas en sistemas operativos prominentes bajo la GPL como Linux y tambi\u00e9n el GNU Compiler Collection, no es necesario que est\u00e9n licenciadas bajo la GPL o que est\u00e9n distribuidas con su c\u00f3digo fuente disponible ya que las licencias no dependen de la plataforma. Por ejemplo, si un programa est\u00e1 formado completamente por c\u00f3digo original, o si est\u00e1 combinado con software que no cumple los requisitos de copyleft no es necesario que se licencie bajo la GPL o que se distribuya con su c\u00f3digo fuente disponible. Solo si un programa utiliza fragmentos de c\u00f3digo GPL (y el programa es distribuido) el c\u00f3digo fuente en su totalidad debe estar disponible, bajo la misma licencia. La otra licencia de GNU, LGPL (GNU Lesser General Public License) fue creada para tener derechos menos restrictivos que GPL, por lo que en este caso en un programa que utiliza fragmentos de c\u00f3digo LGPL, no es necesario liberar el c\u00f3digo original. Algunos otros programas de software libre (como ejemplo prominente esta MySQL) son de doble licencia bajo varias licencias, a menudo con uno de los certificados que son la GPL.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Software libre. Contenido relacionado con Software libre.\nRichard Stallman\nEben Moglen\nGNU LGPL\nAffero General Public License\nCopyleft\nLicencia Creative Commons\nSoftware libre y de c\u00f3digo abierto\nAnti-copyright\nLicencia dual\nEuropean Union Public License (EUPL)\nLicencia de software", "subsections": []}, {"name": "Notas", "text": "\u2191 A excepci\u00f3n de software licenciado bajo licencias compatibles con la GPLv3.[5]\u200b", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abDebian \u2013 License information\u00bb. Software in the Public Interest, Inc. Consultado el 10 de diciembre de 2009.\u00a0\n\u2191 a b \u00abLicenses \u2013 Free Software Foundation\u00bb. Free Software Foundation. Archivado desde el original el 11 de julio de 2007. Consultado el 10 de diciembre de 2009.\u00a0\n\u2191 \u00abLicenses by Name\u00bb. Open Source Initiative. Consultado el 10 de diciembre de 2009.\u00a0\n\u2191 \u00abCopyleft: Pragmatic Idealism \u2013 Free Software Foundation\u00bb. Free Software Foundation. Consultado el 10 de diciembre de 2009.\u00a0\n\u2191 \u00abIf a library is released under the GPL (not the LGPL)\u00bb. Free Software Foundation.\u00a0\n\u2191 \u00abOpen Source License Data\u00bb. Archivado desde el original el 22 de febrero de 2018. Consultado el 24 de abril de 2018.\u00a0\n\u2191 GPL FAQ: Does using the GPL for a program make it GNU Software?\n\u2191 \u00abWhy the GPL rocketed Linux to success\u00bb. \u00abSo while the BSDs have lost energy every time a company gets involved, the GPL'ed programs gain every time a company gets involved.\u00a0\u00bb\u00a0\n\u2191 \u00abWhy the GPL rocketed Linux to success\u00bb (en ingl\u00e9s). Consultado el 2 de abril de 2014. \u00abSo while the BSDs have lost energy every time a company gets involved, the GPL'ed programs gain every time a company gets involved.\u00a0\u00bb\u00a0\n\u2191 \u00abThe History of the GPL\u00bb. Consultado el 24 de noviembre de 2011.\u00a0\n\u2191 \u00abWhy Upgrade to GPL Version 3\u00bb (en ingl\u00e9s). Fsf.org. 13 de marzo de 2003. Consultado el 17 de marzo de 2011.\u00a0\n\u2191 \u00abTop 20 licenses\u00bb. Black Duck Software. 19 de noviembre de 2015. Archivado desde el original el 19 de julio de 2016. Consultado el 19 de noviembre de 2015. \u00ab1. MIT license 24%, 2. GNU General Public License (GPL) 2.0 23%, 3. Apache License 16%, 4. GNU General Public License (GPL) 3.0 9%, 5. BSD License 2.0 (3-clause, New or Revised) License 6%, 6. GNU Lesser General Public License (LGPL) 2.1 5%, 7. Artistic License (Perl) 4%, 8. GNU Lesser General Public License (LGPL) 3.0 2%, 9. Microsoft Public License 2%, 10. Eclipse Public License (EPL) 2%\u00a0\u00bb.\u00a0\n\u2191 David A. Wheeler. \u00abMake Your Open Source Software GPL-Compatible. Or Else\u00bb.\u00a0\n\u2191 David A. Wheeler. \u00abEstimating Linux's Size\u00bb.\u00a0\n\u2191 \u00abFreecode's statistics page\u00bb. Archivado desde el original el 28 de agosto de 2008. \u00abGPL 60.5%, lGPLv2 6.9%, GPLv2 1.9% GPLv3 1.6%\u00a0\u00bb.\u00a0\n\u2191 Asay, Matt (23 de julio de 2009). \u00abGPLv3 hits 50 percent adoption | The Open Road - CNET News\u00bb. News.cnet.com. Archivado desde el original el 29 de octubre de 2013. Consultado el 2 de septiembre de 2013.\u00a0\n\u2191 License proliferation: a naive quantitative analysis on lwn.net \"Walter van Holst is a legal consultant at the Dutch IT consulting company mitopics. .[...] Walter instead chose to use data from a software index, namely Freecode [...] Walter's 2009 data set consisted of 38,674 projects [...]The final column in the table shows the number of projects licensed under \"any version of the GPL\". In addition, Walter presented pie charts that showed the proportion of projects under various common licenses. Notable in those data sets was that, whereas in 2009 the proportion of projects licensed GPLv2-only and GPLv3 was respectively 3% and 2%, by 2013, those numbers had risen to 7% and 5%.\"\n\u2191 \u00abTop 20 licenses\u00bb. Black Duck Software. 23 de agosto de 2013. Archivado desde el original el 19 de julio de 2016. Consultado el 23 de agosto de 2013. \u00ab1. GNU General Public License (GPL) 2.0 33%, 2. Apache License 13%, 3. GNU General Public License (GPL) 3.0 12%\u00a0\u00bb.\u00a0\n\u2191 \u00abGNU General Public License, version 1\u00bb (en ingl\u00e9s). Consultado el 2 de abril de 2014.\u00a0\n\u2191 \u00abNew General Public License\u00bb. 25 de febrero de 1989. Consultado el 2 de abril de 2014.\u00a0\n\u2191 \u00abTranscripci\u00f3n de la presentaci\u00f3n de Richard Stallman en la 2da Conferencia Internacional GPLv3, 21 de abril de 2006\u00bb. Consultado el 2 de abril de 2014.\u00a0\n\u2191 \u00abEl Proyecto GNU\u00bb. 14 de marzo de 2014. Consultado el 2 de abril de 2014.\u00a0\n\u2191 a b Stallman, Richard (25 de febrero de 2006). \u00abPresentation in Brussels, Belgium\u2014the first day of that year's FOSDEM conference.\u00bb.\u00a0\n\u2191 \u00abInterview with Richard Stallman\u00bb. Free Software Magazine (en ingl\u00e9s). 23 de enero de 2008. Archivado desde el original el 20 de noviembre de 2017. Consultado el 2 de abril de 2014.\u00a0\n\u2191 \u00abNeutralizing Laws That Prohibit Free Software But Not Forbidding DRM\u00bb (en ingl\u00e9s). Free Software Foundation. Consultado el 2 de abril de 2014.\u00a0\n\u2191 \u00abGPLv3: Creando la 3\u00aa versi\u00f3n de la General Public License de GNU\u00bb. Free Software Foundation Europe. Consultado el 2 de abril de 2014.\u00a0\n\u2191 \u00abgplv3.fsf.org comments for discussion draft 4\u00bb. Archivado desde el original el 2 de octubre de 2008. Consultado el 2 de abril de 2014.\u00a0\n\u2191 \u00abgplv3.fsf.org comments for draft 1\u00bb. Archivado desde el original el 26 de junio de 2008. Consultado el 11 de enero de 2013. \u00abShowing comments in file 'gplv3-draft-1' [...] found 962\u00a0\u00bb.\u00a0\n\u2191 \u00abgplv3.fsf.org comments for draft 2\u00bb. Archivado desde el original el 24 de julio de 2008. Consultado el 11 de enero de 2013. \u00abShowing comments in file 'gplv3-draft-1' [...] found 727\u00a0\u00bb.\u00a0\n\u2191 \u00abgplv3.fsf.org comments for draft 3\u00bb. Archivado desde el original el 3 de julio de 2008. Consultado el 11 de enero de 2013. \u00abShowing comments in file 'gplv3-draft-3' [...] found 649\u00a0\u00bb.\u00a0\n\u2191 \u00abgplv3.fsf.org comments for draft 4\u00bb. Archivado desde el original el 2 de octubre de 2008. Consultado el 11 de enero de 2013. \u00abShowing comments in file 'gplv3-draft-4' [...] found 298\u00a0\u00bb.\u00a0\n\u2191 \u00abGuide to the third draft of GPLv3\u00bb (en ingl\u00e9s). 29 de junio de 2007. Consultado el 2 de abril de 2014.\u00a0\n\u2191 \u00abFinal Discussion Draft\u00bb. Consultado el 4 de junio de 2007.\u00a0\n\u2191 \u00abGPL version 3 FAQ\u00bb. Consultado el 4 de junio de 2007.\u00a0\n\u2191 \u00abFourth Discussion Draft Rationale\u00bb. Consultado el 4 de junio de 2007.\u00a0\n\u2191 \u00abKernel developers' position on GPLv3\u00bb. LWN.net. Consultado el 4 de junio de 2007.\u00a0\n\u2191 \u00abSelling Free Software\u00bb. Free Software Foundation.\u00a0\n\u2191 \u00abReasoning behind the \"preferred form\" language in the GPL\u00bb. LWN.net. 7 de marzo de 2011.\u00a0\n\u2191 \u00abEssay by Stallman explaining why a license is more suitable than a contract\u00bb.\u00a0\n\u2191 \u00abEben Moglen explaining why the GPL is a license and why it matters\u00bb.\u00a0\n\u2191 Guadamuz-Gonzalez, Andres (2004). \u00abViral contracts or unenforceable documents? Contractual validity of copyleft licenses\u00bb. European Intellectual Property Review 26 (8): 331-339.\u00a0\n\u2191 \u00abThe GNU General Public License v3.0 \u2013 GNU Project \u2013 Free Software Foundation (FSF)\u00bb. fsf.org. Consultado el 24 de marzo de 2010.\u00a0\n\u2191 \u00abFrequently Asked Questions about the GNU Licenses \u2013 Is GPLv3 compatible with GPLv2?\u00bb. The official site. Consultado el 13 de abril de 2011.\u00a0\n\u2191 \u00abGNU Lesser General Public License v2.1 \u2013 GNU Project \u2013 Free Software Foundation (FSF)\u00bb. fsf.org. Consultado el 26 de abril de 2011.\u00a0\n\u2191 \u00abFrequently Asked Questions about the GNU Licenses \u2013 How are the various GNU licenses compatible with each other?\u00bb. The official site. Consultado el 13 de abril de 2011.\u00a0\n\u2191 \u00abVarious licenses with comments \u2013 GPL-Compatible Free Software Licenses\u00bb. FSF. Consultado el 20 de abril de 2012.\u00a0\n\u2191 \u00abFrequently Asked Questions about the GNU Licenses \u2013 What does it mean to say that two licenses are \"compatible\"?\u00bb. FSF. Consultado el 14 de abril de 2011.\u00a0\n\u2191 \u00abFrequently Asked Questions about the GNU Licenses \u2013 What does it mean to say a license is \"compatible with the GPL?\"\u00bb. FSF. Consultado el 14 de abril de 2011.\u00a0\n\u2191 \u00abBlack Duck Open Source Resource Center\u00bb. blackducksoftware.com. Archivado desde el original el 14 de octubre de 2012. Consultado el 26 de abril de 2011.\u00a0\n\u2191 \u00abMake Your Open Source Software GPL-Compatible. Or Else.\u00bb. David A. Wheeler. Consultado el 26 de abril de 2011.\u00a0\n\u2191 Linux: ZFS, Licenses and Patents | KernelTrap\n\u2191 OMPI (1994). Glosario de Derechos de Autor y Derechos Conexos. Ginebra: World Intellectual Property Organization. p.\u00a0145.\u00a0\n\u2191 Roncero S\u00e1nchez, Antonio (1999). El Contrato de Licencia de Marca. Madrid: Civitas. p.\u00a064.\u00a0\n\u2191 Web que recopila violaciones de la GPL denunciadas\n\u2191 H\u00f6ppner, Julian (2004). \u00abThe GPL prevails: An analysis of the first-ever Court decision on the validity and effectivity of the GPL\u00bb. SCRIPT-ed 1 (4): 628. doi:10.2966/scrip.010304.628. Archivado desde el original el 29 de octubre de 2007.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "GPL en ingl\u00e9s (oficial)\nLista de traducciones no oficiales de la GPL a diversos idiomas\nTraducci\u00f3n no oficial del primer borrador de la GPL v3\nLicencias compatibles e incompatibles con la GPL\nTraducci\u00f3n no oficial de la GPL al castellano\nTraducciones no oficiales al espa\u00f1ol de la GPL\nAn\u00e1lisis de la GPLv3\nDise\u00f1o de logos alternativos de las licencias GPLv3 (.svg) por Christian Cadena(CC BY 3.0)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/GTK", "title": "GTK", "summary": "GTK (conocido hasta febrero de 2019 como GTK+)[1]\u200b[2]\u200b o The GIMP Toolkit[3]\u200b[4]\u200b:\u200a3\u200a es una biblioteca de componentes gr\u00e1ficos multiplataforma para desarrollar interfaces gr\u00e1ficas de usuario (GUI).[5]\u200b[4]\u200b:\u200a3\u200a Est\u00e1 licenciado bajo los t\u00e9rminos de la GNU LGPL,[5]\u200b por lo que permite la creaci\u00f3n de tanto software libre como software privativo. GTK es parte del proyecto GNU,[5]\u200b siendo usado por proyectos tan importantes como GIMP, Inkscape, GNOME, Xfce, entre otros.\nJunto a Qt, es uno de los kit de herramientas de widgets m\u00e1s popular para el sistema operativo GNU/Linux, teniendo un amplio soporte para Wayland y XOrg. Adem\u00e1s, se puede emplear para desarrollar aplicaciones gr\u00e1ficas que funcionen sobre otros sistemas Unix-like o sistemas operativos como Microsoft Windows, Mac OS, entre otros.", "sections": [{"name": "\u00cdndice", "text": "1 Historia y Desarrollo\n1.1 GTK+ 1\n1.2 GTK+ 2\n1.3 GTK 3\n1.4 GTK 4\n1.5 Soporte\n1.5.1 Windows\n1.5.2 macOS\n1.6 Automatizaci\u00f3n de compilaci\u00f3n\n2 Bibliotecas de GTK\n2.1 GLib\n2.1.1 GLib core\n2.1.2 GObject\n2.1.3 GIO\n2.2 GTK\n2.3 GDK\n2.4 ATK\n2.5 Pango\n2.6 Cairo\n3 Dise\u00f1adores de interfaces gr\u00e1ficas (GUI)\n3.1 Glade\n3.2 Stetic\n4 Uso\n4.1 Aplicaciones\n4.2 Entornos que utilizan GTK\n4.2.1 Activos\n4.2.2 Inactivos\n4.3 Gestor de ventanas\n5 Implementaciones disponibles\n6 Ejemplos\n6.1 C\n6.2 Python\n7 Estilo gr\u00e1fico\n7.1 Adwaita\n7.2 Yaru\n8 Cr\u00edtica\n9 Historial de lanzamientos\n10 V\u00e9ase tambi\u00e9n\n11 Referencias\n12 Enlaces externos", "subsections": []}, {"name": "Historia y Desarrollo", "text": "Fue desarrollada inicialmente por Peter Mattis, Spencer Kimball y Josh MacDonald[3]\u200b[4]\u200b:\u200a3\u200a para implementar la interfaz gr\u00e1fica del programa de Manipulaci\u00f3n de Im\u00e1genes de GNU (GIMP) como reemplazo del kit de herramientas Motif; en alg\u00fan momento Peter Mattis se desencant\u00f3 con Motif y comenz\u00f3 a escribir su propio kit de herramientas GUI llamado GIMP toolkit, reemplazando con \u00e9xito Motif para la versi\u00f3n 0.60 de GIMP. Finalmente, GTK fue reescrito para ser orientado a objetos y pas\u00f3 a llamarse GTK+, haci\u00e9ndose uso de esto por primera vez en la versi\u00f3n 0.99 de GIMP. Siendo la primera versi\u00f3n estable de GTK lanzada el 14 de abril de 1998.[6]\u200b\nGTK est\u00e1 escrito en lenguaje C, y es principalmente desarrollado por el Proyecto GNOME,[7]\u200b ya que en 1997 este proyecto escoge GTK como base sobre la cual desarrollar el entorno de escritorio GNOME.[8]\u200b Otras aplicaciones gr\u00e1ficas no directamente relacionadas con GNOME tambi\u00e9n han empleado GTK. Adem\u00e1s de otros entornos gr\u00e1ficos para Linux como XFCE y ROX han elegido tambi\u00e9n GTK como su biblioteca de componentes gr\u00e1ficos.\nEl desarrollo de GTK se maneja libremente. La discusi\u00f3n ocurre principalmente en varias listas de correo p\u00fablicas.[9]\u200b Los desarrolladores y usuarios de GNOME se re\u00fanen en una reuni\u00f3n anual GNOME Users And Developers European Conference GUADEC para discutir el estado actual y la direcci\u00f3n futura de GNOME.[10]\u200b GNOME incorpora est\u00e1ndares y programas de freedesktop.org para interactuar mejor con otros escritorios.", "subsections": [{"name": "GTK+ 1", "text": "Esta biblioteca conten\u00eda algunas rutinas de ayuda para resolver tareas b\u00e1sicas de programaci\u00f3n, como el almacenamiento de diversos datos. Estos requieren mucho tiempo para el programador, especialmente cuando se trata del desarrollo repetido de programas. Las primeras versiones de GTK inclu\u00edan estructuras de datos para listas vinculadas, \u00e1rboles binarios o cadenas \"en crecimiento\". Adem\u00e1s, ya que fue reescrito para ser orientado a objetos, GTK permite usar este paradigma de programaci\u00f3n dentro del lenguaje C. Estas herramientas tambi\u00e9n resultaron \u00fatiles para programas sin una interfaz gr\u00e1fica de usuario y por lo tanto m\u00e1s tarde se trasladaron a una biblioteca separada, llamada biblioteca GLib de funciones C . El sistema orientado a objetos en la siguiente versi\u00f3n se relevo a la biblioteca GObject, los m\u00e9todos de dibujo orientados al sistema a la biblioteca GDK (GTK + Kit de dibujo). Este \u00faltimo permite que GTK se ejecute de forma id\u00e9ntica en plataformas en Windows, X Window System, macOS , entre otros."}, {"name": "GTK+ 2", "text": "La versi\u00f3n GTK 2 recibi\u00f3 nuevas funciones mejoradas para renderizar texto usando la biblioteca Pango, la creaci\u00f3n de GObject, un nuevo motor de temas, una API m\u00e1s flexible y una biblioteca novedosa (ATK) para mejorar la accesibilidad del kit de herramientas para personas discapacitadas, por ejemplo, se puede abordar el software de lectura, las herramientas de aumento y los dispositivos de entrada alternativos. GTK 2 no es compatible con GTK 1, por lo que las aplicaciones existentes tuvieron que ser portadas.\nA partir de la versi\u00f3n 2.8, GTK + usa la biblioteca Cairo basada en vectores, que usa aceleraci\u00f3n de hardware para renderizar si es posible. GTK 2.24 es la \u00faltima versi\u00f3n de la serie 2.x."}, {"name": "GTK 3", "text": "La versi\u00f3n 3.0 fue lanzada el 10 de febrero de 2011.[11]\u200b Muchas funciones que se clasificaron como obsoletas se han eliminado y se han mejorado las interfaces existentes. GTK 3 no es compatible con versiones anteriores de GTK 2.x. Sin embargo, las bibliotecas de ambas versiones se pueden instalar en paralelo.\nLa serie GTK 3 incluye una nueva interfaz para dibujar widgets, que ahora est\u00e1 completamente basada en Cairo, un motor de temas basado en CSS que tambi\u00e9n permite transiciones de estado animadas, opciones de dise\u00f1o mejoradas, un nuevo widget de interruptor deslizante, una clase de aplicaci\u00f3n, soporte para m\u00faltiples dispositivos se\u00f1aladores (punteros m\u00faltiples) e iconos simb\u00f3licos eso puede cambiar de color seg\u00fan la condici\u00f3n. Las estructuras internas se han separado y ocultado de la interfaz p\u00fablica, por lo que ser\u00e1 m\u00e1s f\u00e1cil realizar cambios en el futuro sin tener que romper la interfaz. Adem\u00e1s, se admiten m\u00faltiples backends GDK simult\u00e1neamente dentro de la misma biblioteca.[12]\u200b Hasta ahora, varias bibliotecas eran necesarias.\nSe introdujeron dos nuevos backends: uno para el servidor de visualizaci\u00f3n Wayland y un back-end HTML5 llamado Broadway, con el que las aplicaciones GTK pueden operarse de forma remota en el navegador a trav\u00e9s de la red.[13]\u200b Se admite el desplazamiento m\u00faltiple y suave, que tambi\u00e9n est\u00e1 disponible para Windows,[14]\u200b adem\u00e1s, se admite animaciones CSS y difuminaci\u00f3n de sombras. La versi\u00f3n 3.6.4 es la \u00faltima versi\u00f3n oficial para Windows de 32 bits y 64 bits.[15]\u200b\nExisten m\u00e1s cambios como la mejora de la visualizaci\u00f3n de los monitores de alta resoluci\u00f3n.[16]\u200b La presentaci\u00f3n de Popover (burbujas de discurso c\u00f3micas que se pueden usar como ayuda),[17]\u200b se admite gestos multit\u00e1ctiles.[18]\u200b[19]\u200b Adem\u00e1s, se admite la representaci\u00f3n de ventanas a trav\u00e9s de OpenGL. El nuevo elemento de control GtkGLArea tambi\u00e9n permiti\u00f3 integrar objetos 3D directamente en las interfaces del programa.[20]\u200b[21]\u200b Desde GTK 3.18 (base de Gnome 3.18), la biblioteca es oficialmente compatible con Wayland, el sucesor del sistema X Windows.[22]\u200b GTK 3.20 integra el corrector ortogr\u00e1fico con gspell y mejora la tem\u00e1tica CSS. Mientras que GTK 3.22 se presenta como una versi\u00f3n LTS y a\u00f1ade soporte a portales Flatpak para instalaciones de software simples.[23]\u200b\nEl 1 de septiembre de 2016, una publicaci\u00f3n en el blog de desarrollo de GTK denot\u00f3, entre otras cosas, el futuro esquema de numeraci\u00f3n de GTK.[24]\u200b La versi\u00f3n 3.22 de GTK de oto\u00f1o de 2016 ser\u00e1 la \u00faltima versi\u00f3n 3.x (o al menos eso era lo planeado).[25]\u200b Despu\u00e9s de eso, todos los recursos se trasladar\u00e1n a la serie de desarrollo GTK 4 con los nombres de versi\u00f3n 3.90, 3.92, etc. Incluso cuando la serie 4.x entre en desarrollo, las aplicaciones notables a\u00fan usan GTK 2.x y no se han portado a 3.22. Con respecto al futuro del software heredado que usa GTK, no existe un proyecto colectivo para portar el software GTK 2.x a 3.22.\nGTK 4.0 se est\u00e1 preparando con la serie inestable 3.9x. En marzo de 2017, se agreg\u00f3 el Scene Graph Kit (GSK) con la versi\u00f3n 3.90 . Implementa un gr\u00e1fico de escena y se encarga de la s\u00edntesis de im\u00e1genes. En febrero de 2019 se anunci\u00f3 que GTK 4.0 eliminar\u00e1 el signo m\u00e1s (\"+\") de la parte del nombre.[1]\u200b"}, {"name": "GTK 4", "text": "Una de las principales novedades implementadas durante el ciclo de desarrollo de GTK 4 (es decir, GTK 3.92, etc.) ha sido la delegaci\u00f3n de funcionalidad a objetos auxiliares en lugar de codificarla en las clases base proporcionadas por GTK.\nEl manejo de eventos desde los controladores de se\u00f1ales descritos por GtkWidget se delega a los controladores de eventos\nLa representaci\u00f3n se delega a los objetos GtkSnapshot\nEl mecanismo de dise\u00f1o de GtkWidget se delega a GtkLayoutManager\nEn el 26 de enero de 2018 en DevConf.cz, Matthias Clasen ofreci\u00f3 una visi\u00f3n general del estado actual del desarrollo de GTK 4, incluida una explicaci\u00f3n de alto nivel sobre c\u00f3mo funcionaba el renderizado y la entrada en GTK 3, qu\u00e9 cambios se estaban realizando en GTK 4, y las razones de esos cambios. Tambi\u00e9n se dieron ejemplos de cosas que se han hecho posibles con GTK 4.[26]\u200b"}, {"name": "Soporte", "text": "Windows\nDe acuerdo con GTK 2.24.10 y 3.6.4, se detuvo el desarrollo de Windows con el instalador en Gnome. Se recomienda instalar el sistema de paquetes MSYS2 de Gnome en Windows.\nGTK 2.24.10 y 3.6.4 todav\u00eda est\u00e1n disponibles en la red, sin embargo, en comparaci\u00f3n con las versiones actuales en Linux, est\u00e1n mucho m\u00e1s afectados por los errores.[27]\u200b[28]\u200b\nPara Windows de 64 bits (a partir de junio de 2018), el trabajo de Tom Schoonjans 2.24.32 (actual como Linux) y 3.22.30 (actual como Linux) ya est\u00e1 disponible.[29]\u200b\nCon Windows 10 Fall Creators Update, GTK 3 ahora tambi\u00e9n est\u00e1 disponible en WSL. Las instrucciones para instalar programas con Windows est\u00e1n disponibles en la comunidad GTK.[30]\u200b Con distribuciones de Linux como Ubuntu o Debian disponibles en la Tienda Windows y un servidor X como Xming o VcXsvr, miles de programas como GTK 2 o 3 pueden ejecutarse con X o soporte de terminal.\nmacOS\nSobre el backend Quartz,[31]\u200b un puerto del sistema X Window, GTK puede usarse en macOS ."}, {"name": "Automatizaci\u00f3n de compilaci\u00f3n", "text": "Anteriormente, GTK (y GNOME, GLib, etc.) utilizaban el sistema de compilaci\u00f3n GNU (denominado Autotools) como el sistema de automatizaci\u00f3n de compilaci\u00f3n elegido.\nDesde el 14 de agosto de 2017, la rama maestra de GTK compila con Meson, y los archivos del sistema de compilaci\u00f3n de Autotools se han eliminado.[32]\u200b"}]}, {"name": "Bibliotecas de GTK", "text": "GTK se basa en varias bibliotecas desarrolladas por el equipo de GTK y de GNOME:", "subsections": [{"name": "GLib", "text": "Art\u00edculo principal:\nEs un conjunto de bibliotecas de bajo nivel, que comprende, GLib Core, GObject y GIO.[33]\u200b Estas bibliotecas se desarrollan todas bajo un mismo repositorio de Git, denominado glib. Por lo que \"GLib\" puede referirse a \"GLib core\" o todo el conjunto de bibliotecas.\nGLib core\nGLib core proporciona el manejo de estructura de datos para C (Listas enlazadas, \u00e1rboles, tablas hash, entre otras), envoltorios de portabilidad, bucle de eventos, subprocesos, carga din\u00e1mica de m\u00f3dulos y muchas m\u00e1s funciones.\nGObject\nGObject por su parte, simplifica los paradigmas de Programaci\u00f3n orientada a objetos y la Arquitectura dirigida por eventos para C. La Arquitectura dirigida por eventos no solo es \u00fatil para interfaces gr\u00e1ficas de usuario sino tambi\u00e9n para demonios que respondan a cambios de hardware (insertar un USB, un monitor, etc), software de red u otros procesos, puede llegar a ser de bastante utilidad.\nGIO\nGIO depende de las anteriores bibliotecas del conjunto, este proporciona un API de alto nivel para entrada y salida, ya sea la lectura de un archivo local, una secuencia de red, procesos de comunicaci\u00f3n con D-Bus y muchos usos m\u00e1s.\nEste conjunto de bibliotecas permite escribir servicios del sistema operativo, bibliotecas, utilidades de l\u00ednea de comando y mucho m\u00e1s. Por lo que puede llegar a ser m\u00e1s c\u00f3modo y recomendable escribir un programa en C haciendo uso de GLib, adem\u00e1s, ofrece una API de alto nivel como el est\u00e1ndar POSIX."}, {"name": "GTK", "text": "Biblioteca que contiene un kit de herramientas de widgets basados en GLib, este kit realmente contiene los objetos y funciones para crear la Interfaz gr\u00e1fica de usuario (GUI). Maneja widgets como ventanas, botones, men\u00fas, etiquetas, deslizadores, pesta\u00f1as, etc."}, {"name": "GDK", "text": "Biblioteca que act\u00faa como intermediario entre gr\u00e1ficos de bajo nivel y gr\u00e1ficos de alto nivel. De manera que libera a GTK de preocupaciones de bajo nivel como la recopilaci\u00f3n de entrada, arrastrar y soltar y la conversi\u00f3n de formato de p\u00edxeles. GDK es una capa intermedia que separa GTK de los detalles del sistema de ventanas.\nGDK es una parte importante de la portabilidad de GTK. Dado que GLib ya proporciona la funcionalidad multiplataforma de bajo nivel, todo lo que se necesita para hacer que GTK se ejecute en otras plataformas es portar GDK a la capa de gr\u00e1ficos del sistema operativo subyacente. Por lo tanto, los puertos GDK a la API de Windows y Quartz son los que permiten que las aplicaciones GTK se ejecuten en Windows y macOS, respectivamente."}, {"name": "ATK", "text": "Biblioteca para crear interfaces con caracter\u00edsticas de una gran accesibilidad muy importante para personas discapacitadas o minusv\u00e1lidos. Pueden usarse utiler\u00edas como lupas de aumento, lectores de pantalla, o entradas de datos alternativas al cl\u00e1sico teclado o rat\u00f3n."}, {"name": "Pango", "text": "Biblioteca para el dise\u00f1o y renderizado de texto, hace hincapi\u00e9 especialmente en la internacionalizaci\u00f3n. Est\u00e1 dise\u00f1ado de forma modular, esto significa que Pango puede ser usado por aplicaciones de diferentes arquitecturas o metodolog\u00edas de programaci\u00f3n. Adem\u00e1s, es el n\u00facleo para manejar las fuentes y el texto de la versi\u00f3n 2 de GTK."}, {"name": "Cairo", "text": "Biblioteca de renderizado avanzado de controles de aplicaci\u00f3n. usada para proporcionar im\u00e1genes basadas en gr\u00e1ficos vectoriales. Adem\u00e1s, proporciona primitivas para el dibujo bidimensional a trav\u00e9s de una serie de backends diferentes."}]}, {"name": "Dise\u00f1adores de interfaces gr\u00e1ficas (GUI)", "text": "Algunos de los programas para dise\u00f1o de interfaces gr\u00e1ficas con GTK son los siguientes:", "subsections": [{"name": "Glade", "text": "Es una herramienta de desarrollo visual de interfaces gr\u00e1ficas mediante GTK/GNOME. Es independiente del lenguaje de programaci\u00f3n y predeterminadamente no genera c\u00f3digo fuente sino un archivo XML gracias a GTKBuilder, que puede ser usado en numerosos lenguajes de programaci\u00f3n incluyendo C, C++, C#, Vala, Java, Perl, Python. La posibilidad de generar autom\u00e1ticamente c\u00f3digo fuente fue descontinuada desde la versi\u00f3n 3 de Glade.\nDe manera m\u00e1s t\u00e9cnica la clase describe la interfaz en un archivo de Lenguaje de marcado extensible (XML) y luego carga la descripci\u00f3n XML en tiempo de ejecuci\u00f3n y crea los objetos autom\u00e1ticamente. Glade Interface Designer permite la creaci\u00f3n de la interfaz de usuario de manera WYSIWYG. Por lo que la descripci\u00f3n de la interfaz de usuario es independiente del lenguaje de programaci\u00f3n utilizado.\nGlade puede ser utilizado de manera directa, pero tambi\u00e9n est\u00e1 totalmente integrado en Anjuta 2. El proyecto se encuentra bajo la licencia GPL."}, {"name": "Stetic", "text": "Parte de MonoDevelop, orientado al trabajo con GTK#, Stetic es muy similar a Glade Interface Designer, pero est\u00e1 integrado en MonoDevelop con funciones como arrastrar y soltar . Ha sido criticado por ser m\u00e1s dif\u00edcil de trabajar que Qt Designer y Microsoft Visual Studio Windows Forms Editor cuando el programador a\u00fan no tiene un dise\u00f1o concreto en mente.\nMonoDevelop puede ejecutarse en las distintas distribuciones de Linux y en Mac. Desde la versi\u00f3n 2.2, MonoDevelop ya cuenta con soporte completo para GNU/Linux, Windows y Mac. Adem\u00e1s, incluye un compilador que admite C # 1.0, C # 2.0, C # 3.0, C # 4.0, C # 5.0 y C # 6.0."}]}, {"name": "Uso", "text": "", "subsections": [{"name": "Aplicaciones", "text": "Editor de imagenes GIMP 2.10.8.\nEditor de gr\u00e1ficos vectoriales Inkscape 1.0.\nEditor de v\u00eddeo Pitivi.\nCliente para la red BitTorrent Transmission 2.92.\nAlgunas aplicaciones que usan GTK para desarrollar sus interfaces de usuario incluyen:\nAbiWord - Procesador de textos.\nCinePaint (ex FilmGimp) - Editor de gr\u00e1ficos animados en HDR.\nEkiga (ex GnomeMeeting) - Software telef\u00f3nico VoIP H.323/SIP.\nEvolution - Cliente de correo electr\u00f3nico.\nFirefox - Navegador web.\nGeany\u00a0: un editor de texto IDE y GTK multiplataforma ligero basado en Scintilla .\nGIMP - Editor de gr\u00e1ficos.\nGNU Emacs puede usar GTK cuando se ejecuta en X.\nGnumeric - Programa de hoja de c\u00e1lculo.\nChromium - Navegador Web basado en WebKit y desarrollado en gran medida por Google.\nGRAMPS - Software de genealog\u00eda.\nInkscape - Editor de gr\u00e1ficos vectoriales SVG.\nK-3D - Programa de modelado 3D libre.\nLiVES - Editor de video\nMarionnet - Un simulador de red interactivo.\nMidori - Navegador Web ligero, forma parte del proyecto XFCE.\nNero Linux - Un programa para la edici\u00f3n de discos.\nPidgin - Cliente de mensajer\u00eda instant\u00e1nea.\nVMware Player - M\u00e1quina virtual.\nWireshark - Capturador y analizador de paquetes de redes computacionales."}, {"name": "Entornos que utilizan GTK", "text": "Escritorio GNOME 3.36.3\nelementary OS Hera\nEscritorio XFCE 4.14\nEscritorio Cinnamon 4.4.8\nEscritorio MATE 1.20\nActivos\nGNOME, est\u00e1 basado en GTK 3, junto a los programas del entorno\nXfce, est\u00e1 basado en GTK 3\nCinnamon, una bifurcaci\u00f3n de GNOME 3 que usa GTK 3\nMATE, una bifurcaci\u00f3n de GNOME 2 y utiliza GTK 3 desde la versi\u00f3n 1.18\nPantheon, usa GTK 3 exclusivamente, desarrollado por Elementary OS\nBudgie construido desde cero para el sucesor de SolusOS, el sistema operativo Solus\nSugar un entorno de escritorio para la educaci\u00f3n primaria juvenil, que utiliza GTK, especialmente PyGTK\nPhosh, una interfaz de usuario m\u00f3vil dise\u00f1ada para PureOS\nOne Laptop Per Child usa GTK y PyGTK\nMaemo (Nokia's Internet-tablet framework)\nInactivos\nUnity , el antiguo entorno de escritorio predeterminado de Ubuntu\nLXDE, est\u00e1 basado en GTK, significa \"Lightweight X11 Desktop Environment\"\nROX Desktop un escritorio ligero, con caracter\u00edsticas de la GUI de RISC OS\nGPE Palmtop Environment\nAccess Linux Platform (sucesor de la plataforma Palm OS PDA)\nLos entornos de escritorio no son necesarios para ejecutar los programas GTK. Si las bibliotecas que requiere el programa est\u00e1n instaladas, un programa GTK puede ser ejecutado por encima de otros entornos basadas en X11 como KDE o cualquier otro entorno, lo que incluye Mac OS X, si X11.app est\u00e1 instalado. GTK tambi\u00e9n puede ejecutarse en Microsoft Windows, es utilizado por algunas aplicaciones populares multiplataforma como Pidgin y GIMP. wxWidgets, un toolkit gr\u00e1fico multiplataforma usa GTK en sistemas tipo Unix.[34]\u200b Algunos de los ports m\u00e1s inusuales incluyen directfb y ncurses."}, {"name": "Gestor de ventanas", "text": "IceWM\nMarco\nMetacity\nMuffin\nMutter\nSawfish\nXfwm"}]}, {"name": "Implementaciones disponibles", "text": "Dado que GTK es una biblioteca C pura, se puede vincular f\u00e1cilmente a muchos otros lenguajes de programaci\u00f3n. Con los lenguajes de programaci\u00f3n orientados a objetos, los GObjects no se usan\u00a0; los objetos GTK generalmente se pueden usar all\u00ed como objetos nativos del lenguaje de programaci\u00f3n. El lenguaje de programaci\u00f3n Vala utiliza GObject directamente como un sistema de objetos y, por lo tanto, no requiere una biblioteca en tiempo de ejecuci\u00f3n para la conexi\u00f3n del lenguaje.\nExiste una gran variedad de lenguajes de programaci\u00f3n con los cuales se puede usar GTK,[35]\u200b aunque no en todos est\u00e1 disponible en su \u00faltima versi\u00f3n. Entre los m\u00e1s usados est\u00e1n los siguientes:", "subsections": []}, {"name": "Ejemplos", "text": "La forma cl\u00e1sica de programar con GTK es definir primero las propiedades de los elementos gr\u00e1ficos utilizados, luego agruparlos y vincularlos a rutinas espec\u00edficas de manejo de eventos (un posible evento ser\u00eda hacer clic en un bot\u00f3n , por ejemplo ). Sin embargo, tambi\u00e9n hay herramientas de dise\u00f1o gr\u00e1fico para superficies GTK como Glade o Stetic contenidas en MonoDevelop , que pueden ahorrarle los dos primeros pasos, expandir GTK con capacidades de creaci\u00f3n de prototipos y hacer posible realizar cambios en la superficie de un programa sin tener que hacer cambios en el c\u00f3digo fuente del software.", "subsections": [{"name": "C", "text": "Un programa t\u00edpico de Hello World que se muestra en la imagen podr\u00eda verse as\u00ed:\n// Incluir gtk\n#include\n \n<gtk/gtk.h>\nstatic\nvoid\non_activate\n(\nGtkApplication\n*\napp\n)\n{\n  \n// Crear una nueva ventana\nGtkWidget\nwindow\n=\ngtk_application_window_new\n);\n// Crear un nuevo boton\nbutton\ngtk_button_new_with_label\n\"\u00a1Hola Wikipedia!\"\n// Cuando se hace clic en el bot\u00f3n, destruye la ventana pasada como un argumento\ng_signal_connect_swapped\n,\n\"clicked\"\nG_CALLBACK\ngtk_widget_destroy\n),\ngtk_container_add\nGTK_CONTAINER\ngtk_widget_show_all\n}\nint\nmain\nargc\nchar\nargv\n[])\n// Crear una nueva aplicaci\u00f3n\ngtk_application_new\n\"com.example.GtkApplication\"\n                                             \nG_APPLICATION_FLAGS_NONE\ng_signal_connect\n\"activate\"\non_activate\nNULL\nreturn\ng_application_run\nG_APPLICATION\nPara compilar este c\u00f3digo son necesarias algunas dependencias seg\u00fan el sistema que poseas, en caso de usar Debian o derivadas sudo apt-get install libgtk-3-dev o en caso de usar Fedora sudo dnf install gtk3-devel clutter-devel webkit2gtk3-devel libgda-devel gobject-introspection-devel.[36]\u200b Para compilar el c\u00f3digo, es necesario ubicarse en la ruta del archivo y escribir lo siguiente en una terminal\nPara ejecutar el archivo, se escribe"}, {"name": "Python", "text": "import\ngi\ngi\n.\nrequire_version\n\"Gtk\"\n\"3.0\"\nfrom\ngi.repository\nGtk\nWindow\ntitle\n\"\u00a1Hola Wikipedia!\"\nshow\n()\nconnect\n\"destroy\"\nmain_quit\nmain\nPara abrir este c\u00f3digo son necesarias algunas dependencias seg\u00fan el sistema que poseas,[37]\u200b en caso de usar Debian o derivadas sudo apt install python3-gi python3-gi-cairo gir1.2-gtk-3.0 o en caso de usar Fedora sudo dnf install python3-gobject gtk3.\nPara ejecutar el archivo, es necesario ubicarse en la ruta del archivo, luego ejecutarlo escribiendo"}]}, {"name": "Estilo gr\u00e1fico", "text": "La apariencia de GTK es en gran medida configurable por el usuario, existiendo una gran cantidad de temas para elegir. Estos temas pueden ser descargados de diferentes sitios como GNOME Look. Los siguiente son los m\u00e1s populares:", "subsections": [{"name": "Adwaita", "text": "Es el nuevo tema est\u00e1ndar de GTK desde mediados de 2014, siendo el tema sobre el que se recomienda trabajar para realizar desarrollos en interfaces gr\u00e1ficas. Esto fue expresado en una carta abierta por los desarrolladores de las aplicaciones GNOME, donde invitaban a usar el tema predeterminado (es decir Adwaita), ya que aseguraban que hacer uso de otros temas podr\u00eda traer diferencias en la percepci\u00f3n del usuario final, en un mismo programa.[38]\u200b\nAfirmando que al alterar las hojas de estilo GTK las aplicaciones podr\u00edan parecer da\u00f1adas o inutilizables, los iconos podr\u00edan representar conceptos diferentes al pensado por el programador. Tambi\u00e9n aseguraban que las capturas encontradas dentro de tiendas de software podr\u00edan enga\u00f1ar al usuario de la apariencia de la aplicaci\u00f3n, y adem\u00e1s, que podr\u00eda llegar a generar conflictos en la compresi\u00f3n de la documentaci\u00f3n para el usuario final.\nEsta propuesta fue aceptada por diferente distribuciones, las cuales adoptaron directamente Adwaita, o basaron sus temas sobre este, como es el caso de Ubuntu con su tema Yaru.[39]\u200b"}, {"name": "Yaru", "text": "Es el tema oficial de Ubuntu, posee diferentes tonalidades las cuales puede elegir el usuario. El tema se basa en Adwaita."}]}, {"name": "Cr\u00edtica", "text": "La cr\u00edtica m\u00e1s com\u00fan de GTK es la falta de compatibilidad con versiones anteriores en las principales actualizaciones, sobre todo en la interfaz de programaci\u00f3n de aplicaciones (API)[40]\u200b y temas.[41]\u200b\nBenjamin Otte explic\u00f3 que las interrupciones de compatibilidad entre lanzamientos menores durante el ciclo de desarrollo de GTK 3.x se debieron a fuertes presiones para innovar, como proporcionar las caracter\u00edsticas que los usuarios modernos esperan y apoyar el protocolo de servidor de pantalla Wayland cada vez m\u00e1s influyente. Con el lanzamiento de GTK 4, se habr\u00e1 liberado la presi\u00f3n de la necesidad de innovar y el equilibrio entre estabilidad e innovaci\u00f3n se inclinar\u00e1 hacia la estabilidad.[42]\u200b Del mismo modo, los cambios recientes en la tem\u00e1tica est\u00e1n destinados espec\u00edficamente a mejorar y estabilizar esa parte de la API, lo que significa que alguna inversi\u00f3n ahora deber\u00eda recompensarse m\u00e1s adelante.\nDirk Hohndel, desarrollador de c\u00f3digo de Subsurface y miembro del Centro de Tecnolog\u00eda de C\u00f3digo Abierto de Intel, critic\u00f3 a los desarrolladores de GTK por ser abrasivos e ignorar la mayor\u00eda de las solicitudes de la comunidad.[43]\u200b\nHong Jen Yee, desarrollador de LXDE (cuya versi\u00f3n GTK se eliminar\u00e1 y todos los esfuerzos se centraron en el puerto Qt),[44]\u200b expres\u00f3 su desd\u00e9n por la versi\u00f3n 3 de los cambios radicales de API del kit de herramientas GTK y el mayor uso de memoria, y port\u00f3 el archivo PCMan File Manager (PCManFM) a Qt. PCManFM se est\u00e1 desarrollando con un GTK y con un backend Qt al mismo tiempo.[45]\u200b\nEl reproductor de m\u00fasica Audacious se mud\u00f3 a Qt en la versi\u00f3n 3.6.[46]\u200b Las razones indicadas por los desarrolladores para esto incluyen una transici\u00f3n a las decoraciones de ventanas del lado del cliente, que seg\u00fan ellos hacen que la aplicaci\u00f3n se vea \" GNOME -y y fuera de lugar\".[47]\u200b\nWireshark ha cambiado a Qt debido a que no tiene una buena experiencia con el soporte multiplataforma de GTK.[48]\u200b", "subsections": []}, {"name": "Historial de lanzamientos", "text": "Versi\u00f3n antigua, sin servicio t\u00e9cnico:\nGtkFontSelector\nGtkPacker\nGtkItemFactory\nGtkCTree\nGtkInvisible\nGtkCalendar\nGtkLayout\nGtkPlug\nGtkSocket\nLeyenda:\nVersi\u00f3n antigua\nVersi\u00f3n antigua, con soporte t\u00e9cnico\n\u00daltima versi\u00f3n\n\u00daltima versi\u00f3n previa\nLanzamiento futuro\nSoporte general para UTF-8\nGtkFileChooser\nGtkComboBox\nGtkComboBoxEntry\nGtkExpander\nGtkFontButton\nGtkColorButton\nGtkIconView\nGtkAboutDialog\nGtkCellView\nEl \u00faltimo en admitir Windows 98/Me\nGtkStatusIcon\nGtkAssistant\nGtkLinkButton\nGtkRecentChooser\nSoporte de impresi\u00f3n: GtkPrintOperation\nAdvertencia de bloqueo de may\u00fasculas en la entrada de contrase\u00f1a\nMejoras en GtkScale, GtkStatusIcon, GtkFileChooser\nMejora en el selector de archivos, impresi\u00f3n\nPara eliminar gran parte del IPC necesario entre la aplicaci\u00f3n X11 y el servidor X11, GDK se reescribe (principalmente por Alexander Larsson) para usar \"ventanas del lado del cliente\", es decir, la ventana GdkWindow, que cada widget debe tener, pertenece ahora al cliente\nGtkSpinner\nGtkToolPalette\nGtkOffscreenWindow\nMejora en el selector de archivos, manejo del teclado, GDK\nLos datos de introspecci\u00f3n ahora se incluyen en GTK\nLa mayor\u00eda de los dibujos de GDK se basan en Cairo\nMuchos datos internos ahora son privados y se pueden sellar en preparaci\u00f3n para GTK 3\nVersi\u00f3n antigua, con servicio t\u00e9cnico:\nEl backend de impresi\u00f3n CUPS puede enviar trabajos de impresi\u00f3n como PDF\nGtkBuilder ha obtenido soporte para etiquetas de texto y botones de herramientas de men\u00fa y se agregaron muchas correcciones de anotaci\u00f3n de introspecci\u00f3n\nMigraci\u00f3n de GTK + 2.x a GTK + 3\nEl primer borrador de la hoja de ruta para el desarrollo se public\u00f3 el 9 de abril de 2009[65]\u200b\nCompletado principalmente Proyecto Ridley\nEl intento de consolidar varias bibliotecas externas a GTK +\nIncluyendo libgnome, libgnomeui, libgnomeprint22, libgnomeprintui22, libglade, libgnomecanvas, libegg, libeel, gtkglext, and libsexy[66]\u200b\nTodo el renderizado se realiza usando Cairo\nGDK se convirti\u00f3 X11 agn\u00f3stico\nXInput2, el tema API se basa en Hoja de estilos en cascada (CSS), lo que empeora el rendimiento alcanzable para 60\u00a0Hz fotogramas por segundos\nGtkLockButton\nGtkOverlay\nNuevo cuadro de di\u00e1logo para selector de fuente\nNuevos backends experimentales:\nWayland\nHTML5 (llamado \"Broadway\")\nUn nuevo selector de color\nSoporte agregado para dispositivos t\u00e1ctiles\nSoporte agregado para desplazamiento suave\nGtkScrolledWindow realizar\u00e1 desplazamiento cin\u00e9tico con dispositivos t\u00e1ctiles\nSe ha mejorado la compatibilidad con macOS\nEsta es la primera versi\u00f3n de GTK 3 que funciona bien en Windows\nEl backend de Wayland se actualiza a la versi\u00f3n actual de Wayland\nLos botones de giro han recibido un nuevo aspecto\nAccesibilidad: el soporte accesible con vista de \u00e1rbol se reescribe\nM\u00e1s soporte completo de temas CSS\nGtkSearchEntry\nGtkMenuButton\nGtkLevelBar\nBotones de giro vertical\nAnimaciones CSS, sombras borrosas\nSoporte para desvanecimiento y transiciones en temas.\nSoporte para el servidor broadwayd\nTematizaci\u00f3n mejorada\nMejor gesti\u00f3n de la geometr\u00eda.\nMejoras t\u00e1ctiles\nSoporte con el administrador de ventanas para el protocolo de sincronizaci\u00f3n de trama\nGdkFrameClock agregado[71]\u200b\nGtkHeaderBar\nGtkPlacesSidebar\nGtkStack\nGtkStackSwitcher\nGtkRevealer\nGtkSearchBar\nGtkListBox\nSoporte para Wayland 1.2\nmaximizaci\u00f3n\ncursores animados\nmonitores m\u00faltiples\najustes\nsuperficies personalizadas\nsincronizaci\u00f3n de trama\nAdicional:\ndecoraciones del lado del cliente\nsoporte de salida a escala en pantallas de alta resoluci\u00f3n\nmodo de ajuste fino para desplazamiento\nRetirado:\nsoporte para el protocolo Motif DND\nsoporte para m\u00faltiples pantallas por pantalla\ngdk_window_get_display\ngtk_widget_push_composite_child\nElementos de men\u00fa desprendibles, adem\u00e1s de muchas configuraciones GTK\nTEl moderno modelo de dibujo GTK\nSoporte para Wayland 1.5\nNuevo widget: GtkPopover (una alternativa a los men\u00fas y cuadros de di\u00e1logo)\nSoporte mejorado para gestos / fusi\u00f3n multit\u00e1ctil[78]\u200b[79]\u200b\nEn desuso:[80]\u200b\nGtkMisc\nGtkAlignment\nGtkArrow\nGdkColor\nRegiones de estilo\nsoporte para archivos .icon\ngdk_window_flush\ndibujar fuera de la pintura de inicio/fin\nLa mayor\u00eda de los widgets se convierten para usar gestos internamente\nWayland admite el modo cl\u00e1sico de GNOME Shell[81]\u200b\nNuevos widgets:\nGtkGLArea\nGtkStackSidebar\nGtkModelButton\nGtkPopoverMenu\nDesplazamiento revisado (barra de desplazamiento oculta por defecto)[83]\u200b\nExperimental Mir backend[84]\u200b\nM\u00e1s actualizaci\u00f3n de dise\u00f1o de filechooser y mejor b\u00fasqueda de filechooser\nSoporte de Windows XP eliminado\nModelo de soporte para lista y cuadro de flujo\nDesplazamiento cin\u00e9tico del panel t\u00e1ctil\nGestos del panel t\u00e1ctil (Wayland)\nutilidad gtk-builder-tool\nVentanas solo de salida\nMover arrastrar y soltar hacia GDK\nNuevo widget: GtkShortcutsWindow (muestra m\u00e9todos abreviados de teclado y gestos de una aplicaci\u00f3n)\nWEl soporte para tabletas Wayland se fusion\u00f3,[89]\u200b el soporte para tabletas gr\u00e1ficas se considera completo[90]\u200b\nGTK 3.22 ser\u00e1 tan estable (y por lo tanto \"aburrido\") como GTK 2[91]\u200b[92]\u200b[93]\u200b\nVersi\u00f3n estable actual:\n3.24 se lanz\u00f3 principalmente para facilitar la migraci\u00f3n de GTK + 3.x a GTK + 4\nGolpes de dependencia: requieren:\nlibepoxy 1.4\npango 1.41\nNuevas caracter\u00edsticas del selector de fuente:\npermitir configurar caracter\u00edsticas de fuente OpenType\nmostrar ejemplos de caracter\u00edsticas de fuente OpenType\npermitir seleccionar variaciones de fuente OpenType\nNiveles de soporte de detalles para la selecci\u00f3n\nNuevas caracter\u00edsticas de Emoji:\nadmite una ventana emergente de finalizaci\u00f3n para Emoji\nsoltar el atajo Ctrl-Shift-e\nOtras API nuevas: gdk_window_move_to_rect\nWayland: usa memoria an\u00f3nima compartida en FreeBSD\nControladores de eventos con respaldo de GTK 4:\nGtkEventControllerScroll\nGtkEventControllerMotion\nGtkEventControllerKey\nGtkGestureStylus\nEn desuso algunas API que se han ido en GTK 4:\ncadenas de enfoque en GtkContainer\nsensibilidad paso a paso en GtkRange\nEliminar cualquier API marcada como obsoleta\nantes (22-09-2016) vs. despu\u00e9s\nDesarrollo pesado\nromper API y ABI[92]\u200b[93]\u200b\nUn nuevo renderizador de Vulkan aumenta el antiguo renderizador de Cairo[96]\u200b\n3.89.2\n3.89.4\n3.89.5\n3.90\nGNU autotools fue reemplazado por Meson.\n3.91.1\n3.91.2\n3.92.1\nGdkScreen, GdkVisual eliminado\nGdkDeviceManager reemplazado por GdkSeat\nEl manejo del portapapeles se mueve de GTK a GDK\nGdkEvent se convierte en un GObject opaco\nel renderizador GL en GSK se ha completado sustancialmente, y ahora est\u00e1 a la par con el renderizador Vulkan\nse reduce el uso de GdkPixbuf en las API\ny el objeto GskTexture se mueve a GDK como GdkTexture, para tomar su lugar\nEl backend de Wayland ahora implementa el protocolo de decoraci\u00f3n del lado del servidor KDE\nBroadway es portado a GSK.\nGdkWindow renombrado a GdkSurface\nNueva abstracci\u00f3n para contenido dibujable: GdkPaintable\nHay soporte para mostrar medios con:\nGtkVideo\nGtkMediaFile\nGtkMediaStream\nGtkMediaControls\nGtkWidget ahora puede usar un GtkLayoutManager para la asignaci\u00f3n de tama\u00f1o\nlos administradores de dise\u00f1o pueden usar opcionalmente hijos de dise\u00f1o con propiedades de dise\u00f1o\nGtkBinLayout, GtkBoxLayout, GtkGridLayout, GtkFixedLayout y GtkCustomLayout est\u00e1n actualmente disponibles\nAparecer\u00e1n m\u00e1s implementaciones de administrador de dise\u00f1o en el futuro\nEl manejo del enfoque se ha reescrito y la generaci\u00f3n de eventos de cambio de enfoque se ha unificado con eventos cruzados\nLos eventos se han simplificado y solo se usan para la entrada:\nlos eventos de exposici\u00f3n han sido reemplazados por una se\u00f1al GdkSurface::render\nlos eventos de configuraci\u00f3n han sido reemplazados por una se\u00f1al GdkSurface::size-changed\nlos eventos del mapa han sido reemplazados por una propiedad GdkSurface::mapped\ngdk_event_handler_set ha sido reemplazado por una se\u00f1al GdkSurface::event\nlos eventos clave ya no contienen una cadena\nlos eventos en widgets no asignados se ignoran\nMejoras de rendimiento.\nRefactorizaci\u00f3n de arrastrar y soltar\nMoviendo GDK hacia Wayland\nRemoci\u00f3n\nGtkMenu, GtkToolbar y clases similares han sido reemplazadas por GMenu.\nAdiciones\nSelector de emoji\nLos widgets de texto ahora tienen pilas de deshacer\nUn nuevo gestor de dise\u00f1o[104]\u200b\nHerramientas de accesibilidad actualizadas\nEncabezados actualizado para utilizar est\u00e1ndar C tipos INSTED de GLib\nNuevos widgets\nCorrecciones y mejoras", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Anjuta\nGlade\nVala", "subsections": []}, {"name": "Referencias", "text": "\u2191 a b Bassi, Emmanuele (6 de febrero de 2019), \u00abProject rename to \"GTK\"\u00bb (en en), lista de correo gtk-devel-list, https://mail.gnome.org/archives/gtk-devel-list/2019-February/msg00000.html, consultado el 18 de junio de 2019.\u00a0\n\u2191 Corbet, Jonathan (8 de febrero de 2019). \u00abGTK+ renamed to GTK\u00bb. Linux Weekly News (en ingl\u00e9s). Consultado el 18 de junio de 2019.\u00a0\n\u2191 a b \u00abA Brief (and Ancient) History of GIMP\u00bb. GNU Image Manipulation Program (en ingl\u00e9s). 1998. Consultado el 18 de junio de 2019.\u00a0\n\u2191 a b c Harlow, Eric. ([1999]). Desarrollo de aplicaciones Linux con GTK+ y GDK\u00a0: gu\u00eda avanzada. Prentice Hall. ISBN\u00a084-8322-196-9. OCLC\u00a0433163271. Consultado el 6 de julio de 2020.\u00a0\n\u2191 a b c \u00abWhat is GTK, and how can I use it?\u00bb. The GTK Project (en ingl\u00e9s). Consultado el 18 de junio de 2019.\u00a0\n\u2191 The GNOME Proyect. \u00abIndex of /Public/gimp/gtk/v1.0\u00bb (en ingl\u00e9s). Archivado desde el original el 12 de agosto de 2014. Consultado el 4 de julio de 2020.\u00a0\n\u2191 The GNOME Proyect. \u00abGNOME Quick SWOT Analysis, april 2010\u00bb (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 de Icaza, Miguel (1 de febrero de 1999). \u00abThe GNOME Project\u00bb. Linux Journal (en ingl\u00e9s).\u00a0 Falta la |url= (ayuda); |fechaacceso= requiere |url= (ayuda)\n\u2191 The GNOME Proyect. \u00abList Rules and FAQs\u00bb (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 The GNOME Proyect. \u00abGUADEC2020\u00bb (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 a b Clasen, Mathias (10 de febrero de 2011), \u00abGTK+ 3.0.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2011-February/msg00020.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Kristian H\u00f8gsberg (3 de enero de 2011). \u00abMultiple backends for GTK+\u00bb (en ingl\u00e9s). Consultado el 4 de julio de 2020.\u00a0\n\u2191 alexl (18 de abril de 2011). \u00abBroadway update 3\u00bb (en ingl\u00e9s). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Thorsten Leemhuis (28 de marzo de 2012). \u00abGTK+ 3.4 mit Multitouch- und Windows-Unterst\u00fctzung\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Thorsten Leemhuis (25 de septiembre de 2012). \u00abNeue Versionen von GTK+, GLib und Clutter\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Oliver Diedrich (24 de septiembre de 2013). \u00abGtk+ 3.10 mit verbesserter Wayland-Unterst\u00fctzung\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Oliver Diedrich (27 de marzo de 2014). \u00abAngesehen: Gnome 3.12\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Oliver Diedrich (2 de octubre de 2014). \u00abImmer mehr Spiele f\u00fcr Linux\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Keywan Tonekaboni (4 de agosto de 2013). \u00abGUADEC: Wayland-Support f\u00fcr Gnome\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 The GNOME Project (2015). \u00abBienvenido a GNOME 3.16\u00bb (en ingl\u00e9s). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Thorsten Leemhuis (23 de marzo de 2015). \u00abLinux-Desktop: Neues Gnome zeigt Nachrichten oben\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Rainald Menge-Sonnentag (22 de marzo de 2016). \u00abGUI-Toolkit GTK+ 3.20 verbessert das CSS-Theming\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Rainald Menge-Sonnentag (20 de octubre de 2016). \u00abGUI-Toolkit GTK+ 3.22 bringt Flatpak-Portale\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 a b Allan (1 de septiembre de 2016). \u00abVersioning and long term stability promise in GTK+\u00bb. GTK Development Blog (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 a b Clasen, Mathias (3 de septiembre de 2018), \u00abgtk+ 3.24.0\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/ftp-release-list/2018-September/msg00045.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Matthias (2018). \u00abGTK+ 4 Status Update\u00bb (PDF). Fedora People (en ingl\u00e9s). Consultado el 6 de julio de 2020.\u00a0\n\u2191 Alexander. \u00abGTK+ for Windows Runtime Environment\u00bb (en ingl\u00e9s). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Tarnyko. \u00abGTK+\u00bb (en ingl\u00e9s). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Tom Schoonjans. \u00abGitHub - tschoonj/GTK-for-Windows-Runtime-Environment-Installer: GTK+ for Windows Runtime Environment Installer (fork from http://gtk-win.sourceforge.net)\u00bb (en ingl\u00e9s). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Frank (31 de enero de 2018). \u00abWindows Subsystem for Linux: Installation des WSL und Konfiguration von Gnome unter Windows 10\u00bb (en alem\u00e1n). Consultado el 4 de julio de 2020.\u00a0\n\u2191 The GNOME Project. \u00abProjects/GTK/OSX - GNOME Wiki!\u00bb (en ingl\u00e9s). Consultado el 4 de julio de 2020.\u00a0\n\u2191 Bassi, Emmanuele (15 de agosto de 2017), \u00abBuild system change GTK's master branch\u00bb (en en), lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2017-August/msg00028.html, consultado el 1 de julio de 2020.\u00a0\n\u2191 Wilmet, S\u00e9bastien (29 de marzo de 2019). \u00abThe GLib/GTK+ Development Platform\u00bb. people.gnome.org (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 WxWidgets Compared To Other Toolkits \u00abGTK+\u00bb.\u00a0\n\u2191 \u00abLanguage Bindings\u00bb. Archivado desde el original el 13 de julio de 2011. Consultado el 3 de diciembre de 2014.\u00a0\n\u2191 Felipe Borges, Gabe Ron. \u00abGtk+\u00bb. Fedora Developer (en ingl\u00e9s). Consultado el 6 de julio de 2020.\u00a0\n\u2191 PyGObject Team. \u00abGetting Started - PyGObject\u00bb. PyGObject (en ingl\u00e9s). Consultado el 10 de julio de 2020.\u00a0\n\u2191 Desarrolladores de GNOME (2019). \u00abPlease don\u2019t theme our apps\u00bb. stopthemingmy (en ingl\u00e9s). Consultado el 12 de septiembre de 2020.\u00a0\n\u2191 Medina, Eduardo (27 de agosto de 2019). \u00abEl tema Yaru de Ubuntu se basar\u00e1 en Adwaita para evitar la fragmentaci\u00f3n\u00bb. MuyLinux. Consultado el 12 de septiembre de 2020.\u00a0\n\u2191 Morten Welinder (23 de junio de 2014). \u00abHow Does One Create A Gtk+ Application?\u00bb. blogs.gnome.org (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 MCLASEN (20 de noviembre de 2015). \u00abA GTK+ UPDATE\u00bb. blogs.gnome.org (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 GUADEC (22 de octubre de 2013). \u00abIndex of /2013/GTK to infinity and beyond\u00bb. http://videos.guadec.org/ (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 Michael Larabel (12 de enero de 2014). \u00abThe Biggest Problem With GTK & What Qt Does Good\u00bb. phoronix (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 BROTHER (22 de julio de 2013). \u00ab\u201cThe future of Razor and LXDE-Qt\u201d\u00bb. blog.lxde.org (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 PCMAN (26 de marzo de 2013). \u00abPCManFM Qt 0.1.0 released\u00bb. blog.lxde.org (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 Audacious Developers (28 de febrero de 2015). \u00abAudacious 3.6 released\u00bb. https://audacious-media-player.org/ (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 John Lindgren (6 de abril de 2014). \u00abUgly window decorations and how to fix them (GTK+ 3.12)\u00bb. redmine.audacious-media-player.org (en ingl\u00e9s). Consultado el 1 de julio de 2020.\u00a0\n\u2191 \u00abWe\u2019re switching to Qt.\u00bb. blog.wireshark.org (en ingl\u00e9s). octubre de 2013. Consultado el 1 de julio de 2020.\u00a0\n\u2191 Amundson, Shawn T. (13 de abril de 2020), \u00abANNOUNCE: GTK+ 1.0.0 Released!\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/1998-April/msg00303.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Amundson, Shawn T. (25 de febrero de 1999), \u00abANNOUNCE: GTK+ and GLib 1.2.0 Released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/1999-February/msg00756.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Taylor, Owen (11 de marzo de 2002), \u00abGTK+-2.0.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/2002-March/msg00136.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Taylor, Owen (22 de diciembre de 2002), \u00abGTK+-2.2.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/2002-December/msg00206.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Taylor, Owen (16 de marzo de 2004), \u00abGTK+-2.4.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/2004-March/msg00111.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (16 de diciembre de 2004), \u00abGTK+-2.6.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/2004-December/msg00155.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (13 de agosto de 2005), \u00abGTK+ 2.8.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/2005-August/msg00124.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (3 de julio de 2006), \u00abGTK+ 2.10 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2006-July/msg00004.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (14 de septiembre de 2007), \u00abGTK+ 2.12 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2007-September/msg00052.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (4 de septiembre de 2008), \u00abGTK+ 2.14.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2008-September/msg00024.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (13 de marzo de 2009), \u00abGTK+ 2.16.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2009-March/msg00101.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (23 de septiembre de 2009), \u00abGTK+ 2.18.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2009-September/msg00054.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (23 de marzo de 2010), \u00abGTK+ 2.20.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2010-March/msg00132.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (23 de septiembre de 2010), \u00abGTK+ 2.22.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2010-September/msg00263.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (20 de enero de 2011), \u00abGTK+ 2.24.0\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2011-January/msg00042.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 \u00abGtk+ 3.0 Theming API Hackfest\u00bb. Silicon Island. Consultado el 3 de junio de 2017.\u00a0\n\u2191 \u00abGtk+ 3 roadmap draft\u00bb. Consultado el 3 de junio de 2017.\u00a0\n\u2191 \u00abAttic/ProjectRidley - GNOME Wiki!\u00bb. wiki.gnome.org.\u00a0\n\u2191 Clasen, Mathias (25 de septiembre de 2011), \u00abGTK+ 3.2.0\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2011-September/msg00175.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (26 de marzo de 2012), \u00abGTK+ 3.4.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2012-March/msg00082.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (24 de septiembre de 2012), \u00abGTK+ 3.6.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2012-September/msg00045.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (25 de marzo de 2013), \u00abGTK+ 3.8.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2013-March/msg00108.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 \u00abFrame clock: GDK 3 Reference Manual\u00bb. developer.gnome.org.\u00a0\n\u2191 Clasen, Mathias (23 de septiembre de 2013), \u00abGTK+ 3.10.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2013-September/msg00057.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (25 de marzo de 2014), \u00abGTK+ 3.12 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2014-March/msg00060.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 \u00abClient-side decorations in themes | Goings on\u00bb.\u00a0\n\u2191 Clasen, Mathias (22 de septiembre de 2014), \u00abGTK+ 3.14.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2014-September/msg00007.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Matthias Clasen (15 de mayo de 2014). \u00abGtkInspector Author's blog entry\u00bb. Consultado el 17 de mayo de 2014.\u00a0\n\u2191 \u00abGtkInspector in GNOME wiki\u00bb. 15 de mayo de 2014. Consultado el 17 de mayo de 2014.\u00a0\n\u2191 \u00abMerging gestures into 3.14\u00bb. 23 de mayo de 2014. Consultado el 23 de mayo de 2014.\u00a0\n\u2191 \u00abRFC: gestures\u00bb. 4 de abril de 2014. Consultado el 23 de mayo de 2014.\u00a0\n\u2191 \u00abgtk+ 3.13.2\u00bb. 27 de mayo de 2014.\u00a0\n\u2191 \u00abgtk+ 3.13.3\u00bb. 24 de junio de 2014.\u00a0\n\u2191 Clasen, Mathias (22 de marzo de 2015), \u00abGTK+ 3.16.0 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-devel-list/2015-March/msg00062.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 online, heise. \u00abLinux-Desktop: Neues Gnome zeigt Nachrichten oben\u00bb. heise online. Consultado el 3 de junio de 2017.\u00a0\n\u2191 \u00abGTK+ 3.16.0 released\u00bb. mail.gnome.org. Consultado el 3 de junio de 2017.\u00a0\n\u2191 Nestor, Marius (24 de septiembre de 2015). \u00abGTK+ 3.18.0 Officially Released as Part of the GNOME 3.18 Desktop Environment\u00bb. Softpedia. Consultado el 25 de mayo de 2019.\u00a0\n\u2191 Clasen, Mathias (21 de marzo de 2016), \u00abGTK+ 3.20\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/2016-March/msg00026.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 \u00abGTK+ 3.20 \u2013 Style Classes and Element Names\u00bb. 20 de noviembre de 2015.\u00a0\n\u2191 Clasen, Mathias (21 de septiembre de 2016), \u00abGTK+ 3.22 released\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/gtk-list/2016-September/msg00006.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 \u00abGTK+ Wayland tablet support is merged \u2013 Carlos Garnacho\u00bb.\u00a0\n\u2191 \u00abhutterer input\u00bb. www.x.org.\u00a0\n\u2191 \u00abGUADEC2013: Benjamin Otte talks about GTK+\u00bb. GUADEC.\u00a0\n\u2191 a b \u00abGtk 4.0 will not be stable until Gtk 4.6\u00bb. 13 de junio de 2016.\u00a0\n\u2191 a b \u00abGtk 5.0 will not be stable until Gtk 5.6\u00bb. 14 de junio de 2016.\u00a0\n\u2191 Clasen, Mathias (31 de marzo de 2017), \u00abgtk+ 3.90.0\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/ftp-release-list/2017-March/msg00243.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 \u00abProjects/GTK/Roadmap - GNOME Wiki!\u00bb. wiki.gnome.org.\u00a0\n\u2191 \u00abCommits \u00b7 master \u00b7 GNOME / gtk\u00bb. GitLab.\u00a0\n\u2191 Clasen, Mathias (18 de octubre de 2017), \u00abgtk+ 3.92.1\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/ftp-release-list/2017-October/msg00117.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (23 de octubre de 2017). \u00abGTK+ 3.92\u00bb. GTK Development Blog. Consultado el 25 de mayo de 2019.\u00a0\n\u2191 \u00abGNOME 3.26 Released\u00bb. 13 de septiembre de 2017.\u00a0\n\u2191 Clasen, Mathias (26 de junio de 2018), \u00abgtk+ 3.94.0\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/ftp-release-list/2018-June/msg00073.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Mathias (7 de mayo de 2019), \u00abgtk 3.96\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/ftp-release-list/2019-May/msg00032.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 \u00abIntroducing amtk\u00bb.\u00a0\n\u2191 Clasen, Mathias (6 de junio de 2020), \u00abgtk 3.98.5\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/ftp-release-list/2020-June/msg00024.html, consultado el 6 de julio de 2020.\u00a0\n\u2191 Clasen, Matthias (13 de febrero de 2020). \u00abGTK 3.98\u00bb. GTK+ Development Blog (en ingl\u00e9s). Consultado el 18 de febrero de 2020.\u00a0\n\u2191 Clasen, Mathias (31 de julio de 2020), \u00abgtk 3.99.0\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/ftp-release-list/2020-July/msg00096.html, consultado el 28 de agosto de 2020.\u00a0\n\u2191 Clasen, Mathias (16 de diciembre de 2020), \u00abgtk 4.0.0\u00bb, lista de correo GNOME Mail Services, https://mail.gnome.org/archives/ftp-release-list/2020-December/msg00029.html, consultado el 25 de diciembre de 2020.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "GTK.org (ingl\u00e9s)\nPango.org (ingl\u00e9s).\nGTK.ALKIA.ORG (ingl\u00e9s).\nRubyGTK, bindings de GTK para Ruby. (ingl\u00e9s).\ngtk-fortran, bindings de GTK para Fortran 2003. (ingl\u00e9s).\nPyGObject, bindings de GTK para Python.\nGTK#, bindings de GTK para Mono.\ngtk2-perl, bindings de GTK para perl.\nPHP-GTK, bindings de GTK para PHP.\nJava-Gnome, bindings de GTK/Gnome para Java.\ngtkmm, bindings de GTK para C++.\nRoadmap (ingl\u00e9s).\nVideo tutorial: Calculadora con GTK (Espa\u00f1ol)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/GUI", "title": "Interfaz gr\u00e1fica de usuario", "summary": "La interfaz gr\u00e1fica de usuario, conocida tambi\u00e9n como GUI (del ingl\u00e9s graphical user interface), es un programa inform\u00e1tico que act\u00faa de interfaz de usuario, utilizando un conjunto de im\u00e1genes y objetos gr\u00e1ficos para representar la informaci\u00f3n y acciones disponibles en la interfaz. Su principal uso consiste en proporcionar un entorno visual sencillo para permitir la comunicaci\u00f3n con el sistema operativo de una m\u00e1quina o computador.\nHabitualmente las acciones se realizan mediante manipulaci\u00f3n directa, para facilitar la interacci\u00f3n del usuario con la computadora. Surge como evoluci\u00f3n de las interfaces de l\u00ednea de comandos que se usaban para operar los primeros sistemas operativos y es pieza fundamental en un entorno gr\u00e1fico. Como ejemplos de interfaz gr\u00e1fica de usuario, cabe citar los entornos de escritorio Windows, el X-Window de GNU/Linux o el de Mac OS X, Aqua.\nEn el contexto del proceso de interacci\u00f3n persona-computadora, la interfaz gr\u00e1fica de usuario es el artefacto tecnol\u00f3gico de un sistema interactivo que posibilita, a trav\u00e9s del uso y la representaci\u00f3n del lenguaje visual, una interacci\u00f3n amigable con un sistema inform\u00e1tico.", "sections": [{"name": "\u00cdndice", "text": "1 Dise\u00f1o de la interfaz de usuario y de interacci\u00f3n\n2 Historia\n2.1 Precursores\n2.2 Xerox Alto\n2.3 Xerox Star 8010\n2.4 Apple Lisa, Macintosh, Apple II GS.\n2.5 Workbench\n2.6 GEOS\n2.7 GEM\n2.8 Apple y Microsoft\n3 Tipos de interfaces gr\u00e1ficas de usuario\n3.1 Las GUI y ZUI\n3.2 Interfaz de usuario de pantalla t\u00e1ctil\n3.3 Interfaz Natural de Usuario (NUI)\n4 Idioma\n5 Interfaz gr\u00e1fica de usuario tridimensional\n6 V\u00e9ase tambi\u00e9n\n7 Referencias\n8 Bibliograf\u00eda\n9 Enlaces externos", "subsections": []}, {"name": "Dise\u00f1o de la interfaz de usuario y de interacci\u00f3n", "text": "Dise\u00f1ar la composici\u00f3n visual y el comportamiento temporal de una GUI es una parte importante de la programaci\u00f3n de aplicaciones en el campo de la Interacci\u00f3n persona-ordenador. Su objetivo es mejorar la eficiencia y la facilidad de uso del dise\u00f1o l\u00f3gico subyacente de un programa almacenado, una disciplina de dise\u00f1o llamada usabilidad. Varios m\u00e9todos de dise\u00f1o centrado en el usuario se utilizan para garantizar que el lenguaje visual introducido en el dise\u00f1o se adapta bien a las tareas.\nLas caracter\u00edsticas visibles de la interfaz gr\u00e1fica de una aplicaci\u00f3n a veces se llaman cromo o GUI.[1]\u200b[2]\u200b[3]\u200b Normalmente, los usuarios interact\u00faan con la informaci\u00f3n mediante la manipulaci\u00f3n visual de widgets que permitan interacciones adecuadas al tipo de datos que tienen. Los widgets de una interfaz bien dise\u00f1ada se seleccionan para apoyar las acciones necesarias para alcanzar los objetivos de los usuarios. Un Modelo-Vista-Controlador permite estructuras flexibles en las que la interfaz es independiente e indirectamente vinculada a las funciones de la aplicaci\u00f3n, de modo que la GUI puede personalizarse f\u00e1cilmente. Esto permite a los usuarios seleccionar o dise\u00f1ar otros skins a voluntad y facilita el trabajo del dise\u00f1ador para cambiar la interfaz a medida que evolucionan las necesidades del usuario. Un buen dise\u00f1o de la interfaz de usuario se relaciona m\u00e1s con los usuarios y menos con la arquitectura del sistema.\nLos widgets grandes, como las ventanas, normalmente proporcionan un marco o contenedor para el contenido principal de la presentaci\u00f3n, como una p\u00e1gina web, un mensaje de correo electr\u00f3nico o un dibujo. Los m\u00e1s peque\u00f1os suelen actuar como una herramienta de entrada del usuario.\nSe puede dise\u00f1ar una GUI para los requisitos de un mercado vertical como interfaces gr\u00e1ficas de usuario espec\u00edficas de la aplicaci\u00f3n. Algunos ejemplos incluyen cajeros autom\u00e1ticos (ATM), pantallas de puntos de venta (POS) en restaurantes,[4]\u200b sistemas de autopago utilizados en tiendas minoristas, para billetes de avi\u00f3n y facturaci\u00f3n autom\u00e1tica, quioscos de informaci\u00f3n en un espacio p\u00fablico, como una estaci\u00f3n de tren o un museo, y monitores o pantallas de control en una aplicaci\u00f3n industrial incrustada que utilizan un sistema operativo de tiempo real (RTOS).\nLos tel\u00e9fonos m\u00f3viles y los sistemas de videojuegos port\u00e1tiles tambi\u00e9n utilizan el GUI de pantalla t\u00e1ctil espec\u00edficas de aplicaciones. Los autom\u00f3viles m\u00e1s novedosos utilizan el GUI en sus sistemas de navegaci\u00f3n y centros multimedia, o combinaciones de centros multimedia de navegaci\u00f3n.", "subsections": []}, {"name": "Historia", "text": "", "subsections": [{"name": "Precursores", "text": "Los investigadores del Stanford Research Institute liderados por Douglas Engelbart, desarrollaron una interfaz de hiperv\u00ednculos en modo texto gobernada por un rat\u00f3n, que tambi\u00e9n inventaron. Este concepto fue ampliado y trasladado al entorno gr\u00e1fico por los investigadores del Xerox PARC en la ciudad estadounidense de Palo Alto. El entorno se denomin\u00f3 PARC User Interface y en \u00e9l se definieron los conceptos de ventanas, casilla de verificaci\u00f3n, botones de radio, men\u00fas y puntero del rat\u00f3n. La interfaz fue implementada comercialmente en el computador Xerox Star 8010."}, {"name": "Xerox Alto", "text": "El Xerox Alto, desarrollado en el Xerox PARC en 1973, fue una de las primeras computadoras personales, as\u00ed como el primero que utiliz\u00f3 la met\u00e1fora de escritorio y una interfaz gr\u00e1fica de usuario."}, {"name": "Xerox Star 8010", "text": "La estaci\u00f3n de trabajo Xerox Star, conocida oficialmente como el 8010 Star Information System (Sistema de Informaci\u00f3n Estrella 8010) fue introducida por Xerox Corporation en 1981. Fue el primer sistema comercial en incorporar varias tecnolog\u00edas que han llegado a ser hoy en d\u00eda corrientes en computadores personales, incluyendo la pantalla con bitmaps en lugar de solo texto, una interfaz gr\u00e1fica de usuario basada en ventanas, iconos, carpetas, rat\u00f3n, red Ethernet, servidores de archivos, servidores de impresoras y correo electr\u00f3nico."}, {"name": "Apple Lisa, Macintosh, Apple II GS.", "text": "Tras una visita al Xerox PARC en 1979, el equipo de Apple encabezado por Jef Raskin se concentra en dise\u00f1ar un entorno gr\u00e1fico para su nueva generaci\u00f3n de 16 bits, que se ver\u00e1 plasmado en el Apple Lisa en 1983. Ese sistema gr\u00e1fico es portado al sucesor del Apple II, el Apple II GS. Un segundo equipo trabaja en el Apple Macintosh que ver\u00e1 la luz en 1984 con una versi\u00f3n mejorada del entorno gr\u00e1fico del Lisa (\"pretendimos hacer una computadora tan simple de manejar como una tostadora\"). Desde ese momento el Mac reinar\u00e1 como paradigma de usabilidad de un entorno gr\u00e1fico; pese a que por debajo el sistema operativo sufra cambios radicales, los usuarios no avanzados no son conscientes de ello y no sufren los problemas de otras plataformas."}, {"name": "Workbench", "text": "Workbench es el nombre dado por Commodore a la interfaz gr\u00e1fica del AmigaOS, el sistema operativo del Commodore Amiga lanzado en 1985. A diferencia de los sistemas m\u00e1s populares (GEM, Mac OS, MS Windows...) es un verdadero entorno multitarea solo rivalizado por la interfaz X Window System de los diferentes sabores de Unix. La frase m\u00e1s repetida por un amiguero es: \u00abpara masacrar marcianos, formatear un disquete y enviar o recibir un Fax todo a la vez y sin colgarse, necesitas un 386 con disco duro, 16 MB de RAM y OS/2; un Amiga 500 con disquete y solo su memoria base (512 KB de RAM y 512 KB de ROM) es capaz de todo eso\u00bb. Aunque muy popular por los espectaculares (para entonces) gr\u00e1ficos de la m\u00e1quina y su gran plantel de videojuegos, ser\u00e1 la negligencia de sus sucesivos propietarios la principal causa de que acabe restringido a solamente la plataforma Amiga."}, {"name": "GEOS", "text": "Para el Commodore 64 y su sucesor el Commodore 128 se desarroll\u00f3 el entorno gr\u00e1fico GEOS en 1986. Este entorno se port\u00f3 al IBM PC, fue utilizado en varias PDA y Nokia lo us\u00f3 como base de su actual sistema operativo."}, {"name": "GEM", "text": "GEM (Graphical Environment Manager) es un GUI dise\u00f1ado por Digital Research en 1985 para ejecutarse sobre varios sistemas operativos de l\u00ednea de comandos del IBM PC y compatibles: funciona tanto sobre IBM DOS /MS-DOS como sobre CP/M 86. Su m\u00e1xima popularidad en el PC llega de la mano del Amstrad PC1512 y del Amstrad PC1640, los cl\u00f3nicos que rompieron en Europa la barrera del precio popularizando el PC, hasta ese momento relegado mayoritariamente a oficinas. Aunque se incorpora en su primera generaci\u00f3n de port\u00e1tiles y en el Sinclair PC200, ser\u00e1 sustituido en la siguiente generaci\u00f3n de PCs Amstrad por Microsoft Windows 2.xx. En el PC vivir\u00e1 una segunda juventud al venir de serie con DR-DOS como TaskMax.\nPero ser\u00e1 en los Atari ST y sucesores donde se convertir\u00e1 en el entorno gr\u00e1fico oficial de la plataforma, alcanzando gran popularidad, tanto por ser en principio una alternativa barata al MAC en autoedici\u00f3n, como por hacerse con el nicho de mercado de la m\u00fasica profesional."}, {"name": "Apple y Microsoft", "text": "En 1982, Apple hab\u00eda comenzado como una microempresa formada por dos empleados, Steve Jobs y Steve Wozniak, y hab\u00eda crecido hasta convertirse en una empresa de 300 millones de d\u00f3lares. En 1983, ya se hab\u00eda convertido en una empresa de 1000 millones de d\u00f3lares, el mismo valor que IBM.\nEn 1985, Microsoft saca al mercado Windows 1.0, entorno gr\u00e1fico para computadoras PC IBM compatibles, con muchos parecidos al Mac OS. La respuesta de Apple a la introducci\u00f3n del sistema operativo Windows fue la interposici\u00f3n de una demanda de varios miles de millones de d\u00f3lares contra Microsoft, por violaci\u00f3n de copyright.\nEn 1987 IBM se vio obligada a entrar en el mercado de las computadoras personales con entorno gr\u00e1fico con su modelo IBM Personal System/2 (PS/2), ali\u00e1ndose con Bill Gates (Microsoft), que hab\u00eda desarrollado el OS/2. La interfaz gr\u00e1fica de este sistema operativo era muy similar a la de Apple. El OS/2 no se convirti\u00f3 en el nuevo est\u00e1ndar del sector, debido fundamentalmente al conflicto de intereses entre IBM y Microsoft.\nLa aparici\u00f3n de computadoras IBM cl\u00f3nicas hizo que el sistema Windows se popularizara, lo que rest\u00f3 mercado a Apple. Esta se recuper\u00f3 a finales de 1990 lanzando nuevos productos.\nUna se\u00f1al inequ\u00edvoca del \u00e9xito de Apple fue la aparici\u00f3n de productos similares: una peque\u00f1a compa\u00f1\u00eda llamada Nutek Computers Inc., anunci\u00f3 que estaba desarrollando una computadora compatible con el Macintosh.\nEn 1991, John Sculley, director de Apple, revel\u00f3 que la compa\u00f1\u00eda estaba considerando competir contra Microsoft en el campo del software vendiendo su sistema operativo a terceros. Apple revel\u00f3 que estaba manteniendo conversaciones con su antiguo rival, IBM, destinadas a compartir tecnolog\u00edas. Decidieron crear una joint venture para desarrollar un sistema operativo avanzado que ambas utilizar\u00edan en sus nuevas m\u00e1quinas y licenciar\u00edan a terceros. Este plan presentaba un desaf\u00edo directo a Microsoft.\nMicrosoft consigue convertir a Windows en el sistema operativo m\u00e1s utilizado en el mundo, dejando a Apple en un segundo lugar."}]}, {"name": "Tipos de interfaces gr\u00e1ficas de usuario", "text": "", "subsections": [{"name": "Las GUI y ZUI", "text": "Los tipos de interfaces gr\u00e1ficas de usuarios (GUI) que se encuentran en juegos de computadora, y las GUI avanzados basados en realidad virtual, se usan con frecuencia en tareas de investigaci\u00f3n. Muchos grupos de investigaci\u00f3n en Norteam\u00e9rica y Europa est\u00e1n trabajando actualmente en la interfaz de enfoque del usuario o ZUI (Zooming User Interface), que es un adelanto l\u00f3gico de las GUI, mezclando 3D con 2D. Podr\u00eda expresarse como \u00ab2 dimensiones y media en objetos vectoriales de una dimensi\u00f3n\u00bb."}, {"name": "Interfaz de usuario de pantalla t\u00e1ctil", "text": "Algunas GUI son dise\u00f1adas para cumplir con los rigurosos requisitos de los mercados verticales. Estos se conocen como las GUI de uso espec\u00edfico. Un ejemplo de un GUI de uso espec\u00edfico es la ahora familiar pantalla t\u00e1ctil o touchscreen (pantalla que al ser tocada efect\u00faa los comandos del rat\u00f3n en el software). Se encuentra actualmente implementado en muchos restaurantes y en muchas tiendas de autoservicio de todo el mundo. Fue iniciado por Gene Mosher en la computadora del ST de Atari en 1986, el uso que \u00e9l espec\u00edfic\u00f3 en las GUI de pantalla t\u00e1ctil ha encabezado una revoluci\u00f3n mundial e innovadora en el uso de las computadoras a trav\u00e9s de las industrias alimenticias y de bebidas, y en ventas al por menor.\nOtros ejemplos de GUI de uso espec\u00edfico, relacionados con la pantalla t\u00e1ctil son los cajeros autom\u00e1ticos, los kioscos de informaci\u00f3n y las pantallas de monitoreo y control en los usos industriales, que emplean un sistema operativo de tiempo real (RTOS). Los tel\u00e9fonos m\u00f3viles y los sistemas o consolas de juego tambi\u00e9n emplean las pantallas t\u00e1ctiles. Adem\u00e1s la dom\u00f3tica no es posible sin una buena interfaz de usuario, o GUI."}, {"name": "Interfaz Natural de Usuario (NUI)", "text": "Las NUI naturales son aquellas en las que se interact\u00faa con un sistema, aplicaci\u00f3n, etc\u00e9tera, sin utilizar dispositivos de entrada como rat\u00f3n, teclado, l\u00e1piz \u00f3ptico, etc. En lugar de estos se utilizan las manos o las yemas de los dedos."}]}, {"name": "Idioma", "text": "Es habitual poder cambiar el idioma de la interfaz de usuario.[5]\u200b", "subsections": []}, {"name": "Interfaz gr\u00e1fica de usuario tridimensional", "text": "Muchos entornos y juegos utilizan los m\u00e9todos de los gr\u00e1ficos 3D para proyectar objetos en 3D de la interfaz gr\u00e1fica de usuario en la pantalla. El uso de gr\u00e1ficos 3D se ha vuelto cada vez m\u00e1s com\u00fan en los principales sistemas operativos (por ejemplo, Windows Aero, y Aqua (MacOS)) para crear interfaces atractivas, denominadas eye candy, o con fines funcionales que s\u00f3lo son posibles utilizando las tres dimensiones. Por ejemplo, el cambio de usuario se representa girando un cubo con caras que representan el espacio de trabajo de cada usuario, y la gesti\u00f3n de ventanas se representa mediante un mecanismo de volteo al estilo de Rolodex en Windows Vista (v\u00e9ase Windows Flip 3D). En ambos casos, el sistema operativo transforma las ventanas sobre la marcha mientras sigue actualizando el contenido de las mismas.\nLa interfaz de usuario con zoom (Zooming user interface en ingl\u00e9s, ZUI) es una tecnolog\u00eda relacionada que promete ofrecer las ventajas de representaci\u00f3n de los entornos 3D sin sus inconvenientes de usabilidad de problemas de orientaci\u00f3n y objetos ocultos. En 2006, Hillcrest Labs present\u00f3 la primera ZUI para televisi\u00f3n.[6]\u200b Otras innovaciones incluyen el Proyecto Looking Glass de Sun, Metisse, que era similar al Proyecto Looking Glass,[7]\u200b BumpTop, en el que los usuarios pueden manipular documentos y ventanas con movimiento realista y f\u00edsica como si fueran documentos f\u00edsicos, Croquet OS, que est\u00e1 construido para la colaboraci\u00f3n, y compositing window managers como Enlightenment y Compiz.  La realidad aumentada y la realidad virtual tambi\u00e9n hacen uso de elementos de interfaz gr\u00e1fica de usuario en 3D.[8]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "AJAX\nArquitectura de la informaci\u00f3n\nBiblioteca de enlace din\u00e1mico\nIngenier\u00eda de software\nInterfaz\nInterfaz de usuario\nInteracci\u00f3n persona-computadora\nInterfaz de l\u00ednea de comandos (CLI)\nLey de Fitts\nLook and feel\nMet\u00e1fora de escritorio\nRich Internet Applications, en espa\u00f1ol: Aplicaciones ricas de internet.\nUsabilidad", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abchrome\u00bb. www.catb.org. Consultado el 3 de abril de 2020.\u00a0\n\u2191 Jakob Nielsen (29 de enero de 2012). \u00abBrowser and GUI Chrome\u00bb. Nngroup. Archivado desde el original el 25 de agosto de 2012. Consultado el 7 de diciembre de 2021.\u00a0\n\u2191 Martinez, Wendy L. (23 de febrero de 2011). \u00abGraphical user interfaces: Graphical user interfaces\u00bb. Wiley Interdisciplinary Reviews: Computational Statistics (en ingl\u00e9s) 3 (2): 119-133. doi:10.1002/wics.150.\u00a0\n\u2191 The ViewTouch restaurant system by Giselle Bisson\n\u2191 http://www.howtogeek.com/howto/17528/change-the-user-interface-language-in-ubuntu/\n\u2191 Macworld.com 11 de noviembre de 2006. Dan Moren. CES Unveiled@NY '07: \u00bfApuntar y hacer clic llega a los decodificadores? Archivado el 8 de noviembre de 2011 en Wayback Machine.\n\u2191 org/story/04/06/29/229243/metisse---new-looking-glass-alternative \u00abMetisse - New Looking Glass Alternative\u00bb. 29 de junio de 2004. Consultado el 2 de julio de 2020.\u00a0\n\u2191 Purwar, Sourabh (4 de marzo de 2019). \u00abDise\u00f1o de la experiencia del usuario para aplicaciones de realidad virtual (VR)\u00bb. Medium (en ingl\u00e9s). Consultado el 6 de mayo de 2022.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Royo, Javier. Dise\u00f1o Digital. Ediciones Paid\u00f3s Ib\u00e9rica, 2018.\nShneiderman, Ben. Designing The user interface, Strategies for effective Human-computer interaction. Addison-wesley,1998", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Interfaz gr\u00e1fica de usuario.\nApple v. Microsoft (en la Wikipedia en ingl\u00e9s)\nArs Technica: A History of the GUI por Jeremy Reimer (en ingl\u00e9s).\nInterfaces Gr\u00e1ficas de Usuario (Historia).\nIm\u00e1genes de casi todos los entornos gr\u00e1ficos de sistemas operativos ", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Generador_(inform%C3%A1tica)", "title": "Generador (inform\u00e1tica)", "summary": "En computaci\u00f3n, un generador es una rutina especial que se puede usar para controlar el comportamiento de un iterador en un bucle.\nUn generador es muy similar a una funci\u00f3n que devuelve un vector, en el que un generador tiene los par\u00e1metros que se pueden llamar, y genera una secuencia de valores.\nEn lugar de construir un vector que contenga todos los valores y devolverlos de una vez, un generador proporciona un valor a la vez, lo que requiere menos memoria y, por lo tanto, permite que quien lo llama comience a procesar los primeros valores inmediatamente.\nEn resumen, un generador se asemeja a una funci\u00f3n pero se comporta como un iterador.\nLos generadores pueden implementarse en construcciones de control de flujo m\u00e1s expresivas, como la continuaci\u00f3n de objetos de primera clase o como co-funciones.\nLos generadores aparecen por primera vez en 1975 en el lenguaje CLU; y est\u00e1n disponibles en Python, C#, JavaScript, [Ruby] y en otros idiomas. En CLU y C#, los generadores se llaman iteradores y en Ruby enumeradores.", "sections": [{"name": "Python", "text": "Un ejemplo de generador en Python:\ndef\ncountfrom\n(\nn\n):\nwhile\nTrue\n:\nyield\n+=\n1\n# Ejemplo: mostrar los enteros entre 10 y 20.\n# Hay que tener en cuenta que esta iteraci\u00f3n normalmente termina,\n# aunque el countfrom() se escriba como un bucle infinito.\nfor\ni\nin\ncountfrom\n10\nif\n<=\n20\nprint\n)\nelse\nbreak\n# Otro generador, que produce los primeros n\u00fameros primos\n# a \"to\" si a> = 2, de lo contrario indefinidamente dependiendo de la necesidad.\nprimos\nto\n2\n# primer n\u00famero primero, y \u00fanico par\n=\n3\np\n[]\nor\n<\nsqr_n\nint\n**\n0.5\nnot\nany\n%\nf\n==\n0\n# funciona desde Python 2.5  con el paquete NumPy que introduce any()\n.\nappend\n# S\u00f3lo revisar impares\nraise\nStopIteration", "subsections": []}, {"name": "Ruby", "text": "Ruby soporta generadores (a partir de la versi\u00f3n 1.9) en la clase Enumerator.\n# Generador de un objeto enumerable\nchars\nEnumerator\nnew\n[\n'A'\n,\n'B'\n'C'\n'Z'\n]\n4\ntimes\n{\nputs\nnext\n}\n# Generatore de un bloque\ncount\ndo\n|\nyielder\nloop\nyield\nend\n100", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Iterador\nCorrutinas\n Portal:inform\u00e1tica. Contenido relacionado con inform\u00e1tica.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Genie_(lenguaje_de_programaci%C3%B3n)", "title": "Genie (lenguaje de programaci\u00f3n)", "summary": "Genie es un lenguaje de programaci\u00f3n de alto nivel, moderno, y de prop\u00f3sito general en desarrollo activo desde el a\u00f1o 2008.[1]\u200b Fue dise\u00f1ado como un dialecto  alternativo m\u00e1s simple y limpio para el compilador Vala, preservando al mismo tiempo la misma funcionalidad del lenguaje Vala. La sintaxis de Genie se deriva de numerosos lenguajes modernos como Python, Boo, D y Delphi.\nAl igual que Vala, Genie usa el sistema de tipos GObject para crear clases e interfaces declaradas en el c\u00f3digo fuente de Genie, sin imponer requisitos adicionales de tiempo de ejecuci\u00f3n (es decir, a diferencia de Python, Java o Mono, este no requiere una m\u00e1quina virtual).\nGenie permite el acceso a las bibliotecas de C, especialmente las basadas en GObject (como GTK+), sin necesidad de utilizar otro API. Durante la compilaci\u00f3n, el c\u00f3digo se traduce primero a c\u00f3digo fuente y cabeceras de C, que se compilan entonces al c\u00f3digo de m\u00e1quina con cualquier compilador C disponible como GCC, lo cual permite el desarrollo de software multi-plataforma.\nAunque tanto Vala como Genie son desarrollados y promovidos por el proyecto Gnome, los programas desarrollados en Genie no dependen del entorno de escritorio Gnome, y usualmente requieren solo de GLib.", "sections": [{"name": "\u00cdndice", "text": "1 Diferencias con Vala\n2 Sangr\u00eda\n3 Ejemplos de c\u00f3digo\n3.1 Un simple \"Hola Mundo\"\n3.2 Objetos\n4 Referencias\n5 Enlaces externos", "subsections": []}, {"name": "Diferencias con Vala", "text": "Genie usa el mismo compilador y bibliotecas que Vala; de hecho, los dos se pueden utilizar juntos.[2]\u200b Las diferencias son solo sint\u00e1cticas.", "subsections": []}, {"name": "Sangr\u00eda", "text": "Como un lenguaje que toma a Python como referencia, Genie utiliza espacios en blanco o tabuladores en lugar de llaves para delimitar bloques.", "subsections": []}, {"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": [{"name": "Un simple \"Hola Mundo\"", "text": "En este ejemplo se utiliza de forma expl\u00edcita cuatro espacios para el sangrado.\n[\nindent\n=\n4\n]\ninit\nprint\n\"Hola, mundo!\"\nOtro ejemplo:\na\n:\nint\n0\nif\n(\n>\n)\n\"a es mayor que 0\"\nelse\n\"a no es mayor que 0\""}, {"name": "Objetos", "text": "Sin ninguna declaraci\u00f3n expl\u00edcita para el sangrado, por defecto se usa la tabulaci\u00f3n.\nclass\nEjemplo\ndef\nrun\n()\nstdout\n.\nprintf\n\"Hola, mundo!\n\\n\n\"\nvar\nejemplo\nnew\nEjemplo\nrun"}]}, {"name": "Referencias", "text": "\u2191 Jamie McCracken (ed.). \u00abIntroducing Genie - the smart programming language\u00bb (en ingl\u00e9s). Consultado el 13 de junio de 2010.\u00a0\n\u2191 Using Genie and Vala together (en ingl\u00e9s).", "subsections": []}, {"name": "Enlaces externos", "text": "P\u00e1gina principal de Genie (en ingl\u00e9s)\nP\u00e1gina principal de Vala (en ingl\u00e9s)\nP\u00e1gina de Barry Kauler sobre Genie (en ingl\u00e9s)\nP\u00e1gina de Nicolas Joseph con muchos ejemplos de c\u00f3digo\nDocumentaci\u00f3n de la API\nCharla IRC sobre Genie en Gnome hispano, febrero de 2010\nC\u00f3digo de Genie para principiantes\nGenie Doc", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Gesti%C3%B3n_de_memoria", "title": "Gesti\u00f3n de memoria", "summary": "La gesti\u00f3n de memoria o administraci\u00f3n de memoria es el acto de gestionar la memoria de un dispositivo inform\u00e1tico. El proceso de asignaci\u00f3n de memoria a los programas que la solicitan.[1]\u200b \nLos sistemas de memoria virtual separan las direcciones de memoria utilizadas por un proceso de las direcciones f\u00edsicas reales, permitiendo la separaci\u00f3n de procesos e incrementando la cantidad efectiva de memoria de acceso aleatorio utilizando la paginaci\u00f3n. La calidad de la gesti\u00f3n de la memoria es crucial para las prestaciones del sistema.\nEl recolector de basura es la asignaci\u00f3n y liberaci\u00f3n autom\u00e1tica de los recursos de memoria para un programa. La implementaci\u00f3n suele ser a nivel del lenguaje de programaci\u00f3n en contraposici\u00f3n a la gesti\u00f3n manual de memoria, que asigna y libera los recursos de memoria de una computadora de forma expl\u00edcita.\nLa administraci\u00f3n de memoria se refiere a los distintos m\u00e9todos y operaciones que se encargan de obtener la m\u00e1xima utilidad de la memoria, organizando los procesos y programas que se ejecutan de manera tal que se aproveche de la mejor manera posible el espacio disponible.\nPara poder lograrlo, la operaci\u00f3n principal que realiza es trasladar la informaci\u00f3n que deber\u00e1 ser ejecutada por la unidad central de procesamiento o procesador, a la memoria principal. Actualmente esta administraci\u00f3n se conoce como memoria virtual, porque no es la memoria f\u00edsica del procesador sino una memoria virtual que la representa. Entre algunas ventajas, esta memoria permite que el sistema cuente con una memoria m\u00e1s extensa teniendo la misma memoria real, por lo que esta se puede utilizar de manera m\u00e1s eficiente. Y por supuesto, que los programas que son utilizados no ocupen lugar innecesario.\nLas t\u00e9cnicas que existen para la carga de programas en la memoria son: partici\u00f3n fija, que es la divisi\u00f3n de la memoria libre en varias partes (de igual o distinto tama\u00f1o) y la partici\u00f3n din\u00e1mica, que son las particiones de la memoria en tama\u00f1os que pueden ser variables, seg\u00fan la cantidad de memoria que necesita cada proceso.\nEntre las principales operaciones que desarrolla la administraci\u00f3n de memoria se encuentran la reubicaci\u00f3n, que consiste en trasladar procesos activos dentro y fuera de la memoria principal para maximizar la utilizaci\u00f3n del procesador; la protecci\u00f3n, mecanismos que protegen los procesos que se ejecutan de interferencias de otros procesos; uso compartido de c\u00f3digos y datos, con lo que el mecanismo de protecci\u00f3n permite que ciertos procesos de un mismo programa que comparten una tarea tengan memoria en com\u00fan.", "sections": [{"name": "\u00cdndice", "text": "1 Requisitos\n1.1 Reasignaci\u00f3n\n1.2 Protecci\u00f3n\n1.3 Memoria compartida\n1.4 Organizaci\u00f3n l\u00f3gica\n1.5 Organizaci\u00f3n f\u00edsica\n2 Gesti\u00f3n de memoria en DOS\n3 Notas y referencias\n4 Bibliograf\u00eda\n5 V\u00e9ase tambi\u00e9n\n6 Enlaces externos", "subsections": []}, {"name": "Requisitos", "text": "Los sistemas de gesti\u00f3n de memoria de sistemas operativos multitarea normalmente tratan con las siguientes tareas.", "subsections": [{"name": "Reasignaci\u00f3n", "text": "En los sistemas con memoria virtual, los programas durante su ejecuci\u00f3n pueden salir por un tiempo de la memoria y luego regresar, de modo que no pueden colocarse en el lugar que ocupaban previamente. Por ello debe ser posible que residan en diferentes partes de la memoria en diferentes momentos. As\u00ed, la gesti\u00f3n de memoria en el sistema operativo debe ser capaz de trasladar los programas en memoria y manejar referencias a la memoria y las direcciones en el c\u00f3digo del programa para que siempre apunten a la ubicaci\u00f3n correcta. La unidad de gesti\u00f3n de memoria virtual tambi\u00e9n debe hacer frente a la concurrencia."}, {"name": "Protecci\u00f3n", "text": "Art\u00edculo principal:\nLos procesos no deber\u00edan poder referenciar la memoria de otros procesos sin permiso, para evitarlo existe la protecci\u00f3n de memoria, que evita que c\u00f3digo malicioso o err\u00f3neo de un programa interfiera con la operaci\u00f3n de otros programas en ejecuci\u00f3n."}, {"name": "Memoria compartida", "text": "Aunque la memoria utilizada por diferentes procesos suele estar protegida, algunos procesos puede que s\u00ed tengan que compartir informaci\u00f3n y, para ello, han de acceder la misma secci\u00f3n de memoria. La memoria compartida es una de las t\u00e9cnicas m\u00e1s r\u00e1pidas para posibilitar la comunicaci\u00f3n entre procesos."}, {"name": "Organizaci\u00f3n l\u00f3gica", "text": "Los programas a menudo est\u00e1n organizados en m\u00f3dulos, algunos de los cuales pueden ser compartidos por diferentes programas, algunos son de solo-lectura y otros contienen datos que se pueden modificar. Se escriben y se compilan independientemente. La gesti\u00f3n de memoria es responsable de manejar esta organizaci\u00f3n l\u00f3gica, que se contrapone al espacio de direcciones f\u00edsicas lineales. Una forma de lograrlo es mediante la segmentaci\u00f3n de memoria."}, {"name": "Organizaci\u00f3n f\u00edsica", "text": "La memoria suele dividirse en un almacenamiento primario de alta velocidad y uno secundario de menor velocidad. La gesti\u00f3n de memoria del sistema operativo se ocupa de trasladar la informaci\u00f3n entre estos dos niveles de memoria."}]}, {"name": "Gesti\u00f3n de memoria en DOS", "text": "V\u00e9ase tambi\u00e9n:\nAdem\u00e1s de la gesti\u00f3n est\u00e1ndar de memoria, la barrera de los 640 KB de MS-DOS y los sistemas compatibles dieron lugar al desarrollo de programas conocidos como gestores de memoria cuando las memorias principales de las PC comenzaron a ser mayores que 640 KB a finales de los a\u00f1os 1980. Estos desplazan porciones del sistema operativo fuera de su localizaci\u00f3n tradicional para incrementar la cantidad de memoria convencional o semiconvencional disponible para otras aplicaciones. El EMM386, es un ejemplo, fue parte de la instalaci\u00f3n est\u00e1ndar de las \u00faltimas versiones de DOS, as\u00ed como el QEMM. Estos permitieron el uso de memoria m\u00e1s all\u00e1 de la barrera de los 640 KB, donde la memoria sol\u00eda estar reservada a la memoria de acceso aleatorio, y memorias superiores.", "subsections": []}, {"name": "Notas y referencias", "text": "\u2191 La Asignaci\u00f3n de memoria es llamada por algunos \"alocar\" (del ingl\u00e9s allocate que significa \"asignar\"), pero la palabra  tiene otro significado para el Diccionario de la lengua espa\u00f1ola de la Real Academia Espa\u00f1ola.", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Ciriaco Garc\u00eda de Celis (1994). \u00abCap\u00edtulo VIII: La gesti\u00f3n de memoria del DOS\u00bb. El universo digital del IBM PC, AT y PS/2 (4\u00aa edici\u00f3n). Facultad de Ciencias de Valladolid: Grupo Universitario de Inform\u00e1tica.\u00a0\nWilson, P.R.; Johnstone, M.S.; Neely, M.; Boles, D. (1995). \u00abDynamic Storage Allocation: A Survey and Critical Review\u00bb. Memory Management: International Workshop, Iwmm'95, Kinross, Uk, September 27\u201329, 1995: Proceedings (en ingl\u00e9s) (Springer). ISBN\u00a0978-3-540-60368-9. Consultado el 6 de enero de 2008.\u00a0\nBerger, E.D.; Zorn, B.G.; McKinley, K.S. (2001). \u00abComposing high-performance memory allocators\u00bb. ACM SIGPLAN Notices (en ingl\u00e9s) 36 (5): 114-124. doi:10.1145/381694.\u00a0\nBerger, E.D.; Zorn, B.G.; McKinley, K.S. (2002). \u00abReconsidering custom memory allocation\u00bb. Proceedings of the 17th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications (en ingl\u00e9s). ACM Press New York, NY, USA. pp.\u00a01-12.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |coauthors= (ayuda)", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Asignaci\u00f3n de memoria\nBanco de selecci\u00f3n de memoria\nMemoria virtual\nPaginaci\u00f3n de memoria\nPuntero\nRecolector de basura\nTabla de paginaci\u00f3n\nUnidad de gesti\u00f3n de memoria", "subsections": []}, {"name": "Enlaces externos", "text": "www.memorymanagement.org The Memory Management Reference.\nlinux-mm.org Linux Memory Management.\nwww.enderunix.org/docs/memory.pdf Archivado el 10 de mayo de 2012 en Wayback Machine. Memory Management For System Programmers.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Go_(lenguaje_de_programaci%C3%B3n)", "title": "Go (lenguaje de programaci\u00f3n)", "summary": "[\n]\nGo es un lenguaje de programaci\u00f3n concurrente y compilado con tipado est\u00e1tico inspirado en la sintaxis de C, pero con seguridad de memoria y recolecci\u00f3n de basura. Ha sido desarrollado por Google[9]\u200b y sus dise\u00f1adores iniciales fueron Robert Griesemer, Rob Pike y Ken Thompson.[10]\u200b Actualmente est\u00e1 disponible en formato binario para los sistemas operativos Windows, GNU/Linux, FreeBSD  y Mac OS X, pudiendo tambi\u00e9n ser instalado en estos y en otros sistemas mediante el c\u00f3digo fuente.[11]\u200b[12]\u200b Go es un lenguaje de programaci\u00f3n compilado, concurrente, imperativo, estructurado y orientado a objetos que de momento est\u00e1 disponible para diferentes tipos de sistemas Unix-like, incluidos Linux, FreeBSD, Mac OS X y Plan 9 (puesto que parte del compilador est\u00e1 basado en un trabajo previo sobre el sistema operativo Inferno). Las arquitecturas soportadas son i386, amd64 y ARM.", "sections": [{"name": "\u00cdndice", "text": "1 Nombrado\n2 Caracter\u00edsticas\n3 Excepciones\n4 Diferencias principales con C\n4.1 Declaraciones al rev\u00e9s\n4.2 Par\u00e9ntesis\n4.3 Punto y coma\n4.4 Aritm\u00e9tica de punteros\n4.5 ++ y --\n5 Programaci\u00f3n orientada a objetos\n6 Aplicaciones\n7 Ejemplos\n8 Referencias\n9 Enlaces externos", "subsections": []}, {"name": "Nombrado", "text": "El d\u00eda de la publicaci\u00f3n del lenguaje Go, Francis McCabe, desarrollador del lenguaje de programaci\u00f3n Go! (anteriormente llamado Go), solicit\u00f3 que se le cambiase el nombre al lenguaje de Google para evitar confusiones con su lenguaje.[13]\u200b McCabe cre\u00f3 Go! en el a\u00f1o 2003; sin embargo, a\u00fan no ha registrado el nombre.[14]\u200b Go es un nuevo lenguaje de programaci\u00f3n para sistemas lanzado por Google en noviembre de 2009. Aunque empez\u00f3 a ser desarrollado en septiembre de 2007 por Robert Griesemer, Rob Pike y Ken Thompson.", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "Go es un proyecto de c\u00f3digo abierto.[15]\u200b\nGo usa una sintaxis similar a C.[16]\u200b\nGo usa tipado est\u00e1tico.\nGo es un lenguaje compilado, al igual que C y C++.\nProvee un recolector de basura, reflexi\u00f3n y algunas otras capacidades de lenguajes de alto nivel.\nLos binarios de Go tienen la caracter\u00edstica de compilaci\u00f3n cruzada de manera nativa.\nGo admite el paradigma de programaci\u00f3n orientada a objetos, pero a diferencia de otros lenguajes de programaci\u00f3n no dispone de herencia de tipos y tampoco de palabras clave que denoten claramente que soporta este paradigma.\nEn Go, la definici\u00f3n de un tipo (\"clase\") se realiza por medio de declaraciones separadas (interfaces, types, structs, embedded values).\nGo permite el uso de delegaci\u00f3n (a trav\u00e9s de embedded values) y polimorfismo (por medio de interfaces).\nGo utiliza la concurrencia a trav\u00e9s de las gorutinas.\nGo esta orientado a aprovechar sistemas con m\u00faltiples procesadores y procesamiento en red.[17]\u200b\nGo admite la tipificaci\u00f3n din\u00e1mica de datos tambi\u00e9n conocida como Duck typing.[18]\u200b[19]\u200b\nUn struct puede implementar una interfaz de forma autom\u00e1tica.[20]\u200b", "subsections": []}, {"name": "Excepciones", "text": "Go no utiliza excepciones.[21]\u200b Los creadores del lenguaje han dado varios motivos para que esto sea as\u00ed. La principal es que a\u00f1adir una capa de excepciones agrega una complejidad innecesaria al lenguaje y al entorno de ejecuci\u00f3n. Por definici\u00f3n las excepciones deber\u00edan ser excepcionales pero al final se acaban usando como controladores del flujo de la aplicaci\u00f3n y dejan de tener la finalidad de excepcionalidad. Seg\u00fan los creadores, las excepciones tienen que ser realmente excepcionales y el uso que se le da mayoritariamente no justifica su existencia.\nAdem\u00e1s, resulta en flujos con saltos no obvios. Por ejemplo, una excepci\u00f3n no controlada en una funci\u00f3n, que se esperaba no pudiese lanzarla, lleva la ejecuci\u00f3n hasta el primer catch que se encuentre. Eso puede dificultar la depuraci\u00f3n.\nOtros lenguajes modernos como Rust tambi\u00e9n han prescindido de las excepciones por las mismas razones.", "subsections": []}, {"name": "Diferencias principales con C", "text": "Aunque su sintaxis es similar, Go difiere mucho de C. V\u00e9anse algunos ejemplos.", "subsections": [{"name": "Declaraciones al rev\u00e9s", "text": "En Go las declaraciones se realizan al rev\u00e9s desde la perspectiva de C (o C++ o Java). La idea principal en C es que se declara una variable como una expresi\u00f3n que denota su tipo. Seg\u00fan los creadores, aunque la idea detr\u00e1s de la declaraci\u00f3n de tipos en C es buena, los tipos y las expresiones gramaticales no se mezclan demasiado bien y el resultado puede ser confuso. Go sin embargo, separa la expresi\u00f3n y la sintaxis de tipo, lo cual simplifica las cosas."}, {"name": "Par\u00e9ntesis", "text": "En C es necesario utilizar par\u00e9ntesis al evaluar expresiones dentro de estructuras de control (por ejemplo, en estructuras if-then-else y for-next). En Go es considerado poco \"idiom\u00e1tico\" utilizar par\u00e9ntesis en estructuras de control."}, {"name": "Punto y coma", "text": "En Go el uso del car\u00e1cter punto y coma \u201c;\u201c al final de una instrucci\u00f3n es opcional."}, {"name": "Aritm\u00e9tica de punteros", "text": "Go no tiene aritm\u00e9tica de punteros. Seg\u00fan los creadores, la raz\u00f3n es la seguridad. Sin aritm\u00e9tica de punteros es posible crear un lenguaje en el que no se puede obtener una direcci\u00f3n ilegal que sea usada de forma incorrecta. La falta de aritm\u00e9tica de punteros simplifica la implementaci\u00f3n del recolector de basura. Adem\u00e1s, optimizando el compilador y con el hardware actual, un bucle que utiliza los \u00edndices de un array puede ser tan eficaz como un bucle que utiliza aritm\u00e9tica de punteros."}, {"name": "++ y --", "text": "En Go, el uso de ++ y -- para incrementar y decrementar el valor de una variable es una sentencia y no una expresi\u00f3n. Adem\u00e1s, solo puede utilizarse en su versi\u00f3n sufija pues seg\u00fan los autores, la versi\u00f3n prefija pierde todo su sentido en la ausencia de aritm\u00e9tica de punteros."}]}, {"name": "Programaci\u00f3n orientada a objetos", "text": "Para algunos autores, la herencia o las clases no son conceptos esenciales para el paradigma de POO, sino m\u00e1s bien un medio de implementaci\u00f3n. Existen desde hace tiempo lenguajes orientados a objetos que no admiten clases, sino que se basan en prototipos, como Javascript o Self. Seg\u00fan declaraciones de Alan Kay, creador de Smalltalk, lo esencial del paradigma es el paso de mensajes.[22]\u200b\nGo tiene tipos y m\u00e9todos, y permite un estilo de programaci\u00f3n orientado a objetos que reemplaza el uso de clases por estructuras las cuales admiten construir jerarqu\u00edas, es decir, no soporta el uso herencia y favorece en su lugar el patr\u00f3n de composici\u00f3n. En Go, el concepto de \u201cinterfaz\u201c es similar al usado en Java: cualquier objeto (value) que cumpla el contrato especificado por una interfaz (sin necesidad de una declaraci\u00f3n expl\u00edcita) obtiene ese tipo. Tambi\u00e9n existen formas de embeber estructuras dentro de otras estructuras para obtener algo an\u00e1logo a las subclases. Los m\u00e9todos de Go son m\u00e1s generales que los de C++ o Java, y se incluyen en las estructuras declarando funciones asociadas a estas. Pueden ser definidos para cualquier tipo de datos; no solo para los registros. Por su parte las interfaces de Go a diferencia de lenguajes como Java, son de tipo impl\u00edcito, es decir que se considera que la interfaz ha sido implementada cuando una estructura implementa sus m\u00e9todos aun cuando esto no se especifique.", "subsections": []}, {"name": "Aplicaciones", "text": "Algunas aplicaciones notables de c\u00f3digo abierto escritas en Go son:[23]\u200b\nCaddy, un servidor web HTTP/2 de c\u00f3digo abierto con capacidad HTTPS autom\u00e1tica\nCockroachDB, una base de datos SQL de c\u00f3digo abierto, con capacidad de supervivencia, fuertemente consistente y escalable\nConsul, un software para el descubrimiento de servicios basado en DNS y que proporciona almacenamiento distribuido de valores clave, segmentaci\u00f3n y configuraci\u00f3n.\nDocker, un conjunto de herramientas para desplegar contenedores Linux\nEdgeX, una plataforma de c\u00f3digo abierto independiente de los proveedores, alojada por la Fundaci\u00f3n Linux, que proporciona un marco com\u00fan para la inform\u00e1tica de borde del IoT industrial[24]\u200b.\nHugo, un generador de sitios est\u00e1ticos\nInfluxDB, una base de datos de c\u00f3digo abierto espec\u00edfica para manejar datos de series temporales con requisitos de alta disponibilidad y alto rendimiento\nInterPlanetary File System, un protocolo hipermedia peer-to-peer con direcciones de contenido[25]\u200b.\nJuju, una herramienta de orquestaci\u00f3n de servicios de Canonical, empaquetadores de Ubuntu Linux\nSistema de gesti\u00f3n de contenedores Kubernetes\nGolang Pagoda framework[26]\u200b\nlnd, una implementaci\u00f3n de la red Bitcoin Lightning[27]\u200b\nMattermost, un sistema de chat en equipo\nNATS Messaging, un sistema de mensajer\u00eda de c\u00f3digo abierto que se basa en los principios de rendimiento, escalabilidad y facilidad de uso.\nOpenShift, una plataforma de computaci\u00f3n en la nube como servicio de Red Hat\nRclone, un programa de l\u00ednea de comandos para gestionar archivos en el almacenamiento en la nube y otros servicios de alta latencia\nSnappy, un gestor de paquetes para Ubuntu Touch desarrollado por Canonical\nSyncthing, una aplicaci\u00f3n cliente/servidor de sincronizaci\u00f3n de archivos de c\u00f3digo abierto\nTerraform, una herramienta de aprovisionamiento de infraestructura de nube m\u00faltiple de c\u00f3digo abierto de HashiCorp\nTiDB, una base de datos distribuida HTAP de c\u00f3digo abierto compatible con el protocolo MySQL de PingCAP\nVitess, una base de datos de c\u00f3digo abierto, distribuida y compatible con MySQL, de YouTube, que ahora est\u00e1 alojada en la Cloud Native Computing Foundation[28]\u200b[29]\u200b.\narctil, herramienta de evaluaci\u00f3n de la seguridad web[30]\u200b", "subsections": []}, {"name": "Ejemplos", "text": "El cl\u00e1sico programa Hola mundo en Go es similar a como se har\u00eda en C++. Con este t\u00edpico ejemplo podemos apreciar que en cuanto a sintaxis son muy similares:\npackage\n \nmain\nimport\n\"fmt\"\nfunc\n()\n{\n  \nfmt\n.\nPrintln\n(\n\"Hola, mundo.\"\n)\n}\nLa notaci\u00f3n de los comentarios es exactamente la misma que la de C++\n/* ...\n   ...\n   ... */\n// ...\nUn programa para una aplicaci\u00f3n web.\n    \n\"log\"\n\"net/http\"\nholaFunc\nw\nhttp\nResponseWriter\n,\nr\n*\nRequest\nFprintf\n\"Hola mundo!\"\nHandleFunc\n\"/\"\nlog\nFatal\nListenAndServe\n\":8080\"\nnil\n))", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abFirst-Class Functions in Go\u00bb. Consultado el 14 de noviembre de 2018. \u00abGo supports ... a functional programming style in a strongly typed language.\u00a0\u00bb\u00a0\n\u2191 \u00abIs Go an object-oriented language?\u00bb. Consultado el 13 de abril de 2019. \u00abAlthough Go has types and methods and allows an object-oriented style of programming, there is no type hierarchy.\u00a0\u00bb\u00a0\n\u2191 \u00abGo: code that grows with grace\u00bb. Consultado el 24 de junio de 2018. \u00abGo is Object Oriented, but not in the usual way.\u00a0\u00bb\u00a0\n\u2191 https://go.dev/doc/devel/release\n\u2191 \u00ablang/go: go-1.4 \u2013 Go programming language\u00bb. OpenBSD ports. 23 de diciembre de 2014. Consultado el 19 de enero de 2015.\u00a0\n\u2191 \u00abGo Porting Efforts\u00bb. Go Language Resources. cat-v. 12 de enero de 2010. Consultado el 18 de enero de 2010.\u00a0\n\u2191 \u00abText file LICENSE\u00bb. The Go Programming Language. Consultado el 5 de octubre de 2012.\u00a0\n\u2191 \u00abAdditional IP Rights Grant\u00bb. The Go Programming Language. Consultado el 5 de octubre de 2012.\u00a0\n\u2191 Kincaid, Jason (10 de noviembre de 2009). \u00abGoogle's Go: A New Programming Language That's Python Meets C++\u00bb. TechCrunch. Consultado el 18 de enero de 2010.\u00a0\n\u2191 \u00abLanguage Design FAQ\u00bb. golang.org. 16 de enero de 2010. Consultado el 27 de febrero de 2010.\u00a0\n\u2191 Gu\u00eda de instalaci\u00f3n (ingl\u00e9s)\n\u2191 Gu\u00eda de instalaci\u00f3n (espa\u00f1ol)\n\u2191 Francis McCabe (10 de noviembre de 2009). \u00abI have already used the name for *MY* programming language\u00bb (en ingl\u00e9s). Consultado el 13 de noviembre de 2009.\u00a0\n\u2191 Thomas Claburn (11 de noviembre de 2009).  InformationWeek, ed. \u00abGoogle 'Go' Name Brings Accusations Of 'Evil'\u00bb (en ingl\u00e9s). Consultado el 13 de noviembre de 2009.\u00a0\n\u2191 \u00abThe Go Programming Language\u00bb. golang.org. Consultado el 4 de diciembre de 2020.\u00a0\n\u2191 Metz, Cade (5 de mayo de 2011). \u00abGoogle Go boldly goes where no code has gone before\u00bb. The Register.\u00a0\n\u2191 \u00abDocumentation - The Go Programming Language\u00bb. golang.org. Consultado el 4 de diciembre de 2020.\u00a0\n\u2191 Ryer, Mat (3 de junio de 2016). \u00abDuck typing in Go\u00bb. Medium (en ingl\u00e9s). Consultado el 4 de diciembre de 2020.\u00a0\n\u2191 \u00abIs Go Duck-Typed?\u00bb. Bionic | FullStory. 4 de marzo de 2020. Consultado el 4 de diciembre de 2020.\u00a0\n\u2191  Go by Example: Structs \n\u2191 \u00abError handling and Go - The Go Blog\u00bb. blog.golang.org. Consultado el 4 de diciembre de 2020.\u00a0\n\u2191 Alan Kay (10 de octubre de 1998). \u00abprototypes vs classes was: Re: Sun's HotSpot\u00bb. Lista de distribuci\u00f3n de Squeak (en ingl\u00e9s). squeakfoundation.org. Consultado el 21 de noviembre de 2015.\u00a0\n\u2191 avelino/awesome-go: A curated list of awesome Go frameworks, libraries and software, consultado el 10 de enero de 2018\u00a0.\n\u2191 \u00abEdgeX Foundry Project\u00bb. GitHub (en ingl\u00e9s). Consultado el 6 de febrero de 2021.\u00a0\n\u2191 \u00abipfs/go-ipfs\u00bb. GitHub (en ingl\u00e9s). Consultado el 1 de junio de 2018.\u00a0\n\u2191 \u00abGolang Pagoda framework\u00bb. Qualified.One. 29 de noviembre de 2022.\u00a0\n\u2191 \u00ablightningnetwork/lnd\u00bb, GitHub, consultado el 29 de abril de 2020\u00a0.\n\u2191 \u00abCNCF to host Vitess\u00bb. Cloud Native Computing Foundation. 5 de febrero de 2018.\u00a0\n\u2191 \u00abCloud Native Computing Foundation Announces Vitess Graduation\u00bb. Cloud Native Computing Foundation. 5 de noviembre de 2019.\u00a0\n\u2191 \u00abarctil\u00bb. arctil.com.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web oficial (en ingl\u00e9s)\nGo en Espa\u00f1ol.\nExamples of the most important features of this languages. (en ingl\u00e9s)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Gr%C3%A1ficas_tortuga", "title": "Gr\u00e1ficas tortuga", "summary": "Gr\u00e1fica tortuga es un t\u00e9rmino usado en computaci\u00f3n gr\u00e1fica como m\u00e9todo para programar gr\u00e1ficos vectoriales usando un cursor (la \u00abtortuga\u00bb) relativo a unas coordenadas cartesianas. Las gr\u00e1ficas tortuga son un elemento clave en el Lenguaje de programaci\u00f3n Logo.", "sections": [{"name": "\u00cdndice", "text": "1 Resumen\n2 Historia\n3 Extensi\u00f3n a las tres dimensiones\n4 Gr\u00e1fica tortuga programada en Python\n5 V\u00e9ase tambi\u00e9n\n6 Referencias\n7 Bibliograf\u00eda\n8 Enlaces externos", "subsections": []}, {"name": "Resumen", "text": "La tortuga tiene tres atributos:\nUna posici\u00f3n\nUna orientaci\u00f3n\nUna pluma, teniendo atributos como color, ancho y un indicador de pluma  arriba y abajo.\nLa tortuga se mueve con comandos relativos a su posici\u00f3n, como \u00abavanza 10\u00a0\u00bb y \u00abgira a la izquierda 90\u00a0\u00bb. Los valores \u00ab10\u00bb o \u00ab90\u00bb representan magnitudes diferentes, las cuales se verifican en la pr\u00e1ctica. En general las diferentes versiones de LOGO no acompa\u00f1an el n\u00famero con la magnitud, como pixeles, espacios o grados sexagesimales. La pluma que lleva la tortuga tambi\u00e9n se puede controlar, estableci\u00e9ndola, d\u00e1ndole color o un ancho. Un estudiante puede entender (y predecir y razonar) el movimiento de la tortuga imagin\u00e1ndose qu\u00e9 har\u00eda \u00e9l mismo si fuera una tortuga. Seymour Papert llama a esto razonamiento de sincronicidad corporal.\nDesde estos bloques de construcci\u00f3n uno puede construir formas m\u00e1s complejas como cuadrados, tri\u00e1ngulos, c\u00edrculos y otras figuras compositivas. Combinadas con control de flujo, procedimientos y recursi\u00f3n. La idea de las gr\u00e1ficas tortuga tambi\u00e9n es \u00fatil en los sistema-L para generar fractales.\nLa geometr\u00eda tortuga tambi\u00e9n se usa a veces en entornos gr\u00e1ficos como alternativa a los sistemas de direcci\u00f3n de coordenadas estrictos.", "subsections": []}, {"name": "Historia", "text": "Las gr\u00e1ficas tortuga fueron a\u00f1adidas al lenguaje de programaci\u00f3n Logo por Seymour Papert a finales de la d\u00e9cada de 1960 para apoyar la versi\u00f3n de Papert del robot tortuga, un simple robot controlado desde el puesto de trabajo del usuario dise\u00f1ado para llevar a cabo funciones de dibujo asignadas mediante una peque\u00f1a pluma retr\u00e1ctil en su interior o adjuntada al cuerpo del robot. La geometr\u00eda tortuga trabaja diferente de la que geometr\u00eda cartesiana (direcciones x,y), estando basada en vectores (direcci\u00f3n relativa a una distancia desde el punto inicial) en vez de sistemas de direcci\u00f3n de coordenadas como el PostScript. De forma pr\u00e1ctica, el uso de geometr\u00eda tortuga en lugar de otros modelos tradicionales mimetiza el movimiento l\u00f3gico real del robot tortuga. La tortuga suele ser representada como un tri\u00e1ngulo o como un icono de una tortuga (aunque pueda representarse con cualquier icono).\nLa hija de Papert, Artemis, ha usado gr\u00e1ficas tortuga para explorar la relaci\u00f3n entre arte y algoritmos.\nLos gr\u00e1ficos tortuga son soportados por la mayor\u00eda de plataformas. KTurtle es una aplicaci\u00f3n de programaci\u00f3n disponible en la mayor\u00eda de distribuciones Linux que no usa el lenguaje Logo, y Vectoria es una app disponible para iPhone.[1]\u200b", "subsections": []}, {"name": "Extensi\u00f3n a las tres dimensiones", "text": "Las ideas tras los gr\u00e1ficos tortuga se pueden extender hasta incluir el espacio tridimensional. Esto se consigue usando uno o varios modelos de coordenadas diferentes. Si la tortuga opera en coordenadas cil\u00edndricas, tiene entonces una localizaci\u00f3n y un grado en su plano, y su plano puede ser rotado sobre el eje vertical. Esto se suele representar con la tortuga teniendo dos \u00e1ngulos rotacionales diferentes, uno para el plano y otro que determina el \u00e1ngulo del plano. Normalmente cambiar el \u00e1ngulo del plano no mueve a la tortuga.\nTambi\u00e9n se usan otros modelos de coordenadas.", "subsections": []}, {"name": "Gr\u00e1fica tortuga programada en Python", "text": "Con el m\u00f3dulo Turtle del lenguaje Python se pueden dibujar figuras intrincadas utilizando programas que repiten movimientos simples.[2]\u200b\nfrom\nturtle\nimport\n*\ncolor\n(\n'red'\n,\n'yellow'\n)\nbegin_fill\n()\nwhile\nTrue\n:\nforward\n200\nleft\n170\nif\nabs\npos\n())\n<\n1\nbreak\nend_fill\ndone", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Tortuga (robot)\nLenguaje de programaci\u00f3n Logo\nMSWLogo\nPython M\u00f3dulo Turtle\nPythonTurtle - Standalone application\nKTurtle\nCheloniidae Turtle Graphics\nStarLogo\nLos ordenadores de One Laptop per Child contienen una actividad Turtle Art para jugar con las gr\u00e1ficas tortuga\nSistema-L", "subsections": []}, {"name": "Referencias", "text": "\u2191 Vectoria Company Website\n\u2191 \u00abGr\u00e1ficos con Turtle\u00bb. https://docs.python.org/. Consultado el 25 de abril de 2021.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Abelson and diSessa. Turtle geometry: the computer as a medium for exploring mathematics. Cambridge, MA: MIT Press, 1981.", "subsections": []}, {"name": "Enlaces externos", "text": "\"Web Turtle\", gr\u00e1ficas tortuga en una p\u00e1gina web, por Bill Kendrick, autor de Tux Paint\nArte creado con gr\u00e1ficas tortuga por Artemis Papert\n\"3D Flying Pipe-laying Turtle\" por Tom Verhoeff de The Wolfram Demonstrations Project (retrieved on 2009-01-31)\n\"Gr\u00e1ficas tortuga\", escritas en MGrammar, por Jason Hogg\nTurtle Art website mantenido por Brian Silverman y Artemis Papert\nTurtle Art activity incluido en Sugar plataforma de aprendizaje\nJS Turtle Graphics una implementaci\u00f3n simple de Javascript de gr\u00e1ficas tortuga, por John Villar\nJSTurtlegraphics V0.2 a simple browser-based implementation aimed at children (using the more common command names)\nTurtleWax gr\u00e1ficas tortuga en JavaScript, por Dave Balmer\nParaiso del Logo el para\u00edso del logo\nVersiones versiones de logo para descargar", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Groovy_(lenguaje_de_programaci%C3%B3n)", "title": "Groovy (lenguaje de programaci\u00f3n)", "summary": "Groovy es un lenguaje de programaci\u00f3n orientado a objetos implementado sobre la plataforma Java. Tiene caracter\u00edsticas similares a Python, Ruby, Perl y Smalltalk. La especificaci\u00f3n JSR 241 se encarga de su estandarizaci\u00f3n para una futura inclusi\u00f3n como componente oficial de la plataforma Java. \nGroovy usa una sintaxis muy parecida a Java, comparte el mismo modelo de objetos, de hilos y de seguridad. Desde Groovy se puede acceder directamente a todas las API existentes en Java. El bytecode generado en el proceso de compilaci\u00f3n es totalmente compatible con el generado por el lenguaje Java para la Java Virtual Machine (JVM), por tanto puede usarse directamente en cualquier aplicaci\u00f3n Java. Todo lo anterior unido a que la mayor parte de c\u00f3digo escrito en Java es totalmente v\u00e1lido en Groovy hacen que este lenguaje sea de muy f\u00e1cil adopci\u00f3n para programadores Java; la curva de aprendizaje se reduce mucho en comparaci\u00f3n con otros lenguajes que generan bytecode para la JVM, tales como Jython  o JRuby. Groovy puede usarse tambi\u00e9n de manera din\u00e1mica como un lenguaje de scripting. \nGroovy 1.0 apareci\u00f3 el 2 de enero de 2007. Despu\u00e9s de varias versiones beta y otras tantas candidatas a release, el 7 de diciembre de 2007 apareci\u00f3 la versi\u00f3n Groovy 1.1 que finalmente fue renombrada a Groovy 1.5 con el fin de notar la gran cantidad de cambios que ha sufrido con respecto a la versi\u00f3n 1.0. En diciembre de 2009 se public\u00f3 la versi\u00f3n 1.7.", "sections": [{"name": "Referencias", "text": "Koenig, Dierk; Andrew Glover; Paul King; Guillaume Laforge; Jon Skeet (2006). Groovy in Action. Manning. ISBN 1-932394-84-2.\u00a0\nKenneth, Barclay; John Savage. Groovy Programming: An Introduction for Java Developers. ISBN 978-0-12-372507-3. Archivado desde el original el 12 de enero de 2010. Consultado el 16 de diciembre de 2007.\u00a0\nBosanac, Dejan. Scripting in Java: Languages, Frameworks, and Patterns. ISBN 0-321-32193-6. Archivado desde el original el 14 de noviembre de 2011. Consultado el 18 de noviembre de 2018.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio oficial\nTutorial de introducci\u00f3n a Groovy\nJSR 241\nGroovy and Apache Derby database - tutorial\nOpen Directory: Java: Extensions: Groovy", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Guido_van_Rossum", "title": "Guido van Rossum", "summary": " \n \n \n \n \nPythonABC \nGuido van Rossum (Haarlem, Pa\u00edses Bajos, 31 de enero de 1956) es un inform\u00e1tico,[1]\u200b conocido por ser el autor del lenguaje de programaci\u00f3n Python. Naci\u00f3 y creci\u00f3 en los Pa\u00edses Bajos.\nEs la primera persona en obtener el t\u00edtulo BDFL (Benevolent Dictator for Life), cuyo t\u00edtulo es otorgado a personajes importantes en el mundo del c\u00f3digo abierto, teniendo asignada la tarea de fijar las directrices sobre la evoluci\u00f3n de Python, as\u00ed como la de tomar decisiones finales sobre el lenguaje que todos los desarrolladores acatan. Van Rossum tiene fama de ser bastante conservador, realizando pocos cambios al lenguaje entre versiones sucesivas, intentando mantener siempre la compatibilidad con versiones anteriores. El 12 de julio de 2018, con un mensaje enviado a la lista de python-committers, anunci\u00f3 su retiro de los procesos de decisi\u00f3n.[2]\u200b\nEn el a\u00f1o 2001 recibi\u00f3 el FSF Award for the Advancement of Free Software como reconocimiento por su trabajo.[3]\u200b En diciembre de 2005 fue contratado como desarrollador por la empresa estadounidense Google. Despu\u00e9s de siete a\u00f1os en Google, a principios de diciembre de 2012, anuncia su retirada de la empresa norteamericana para incorporarse en enero de 2013 a la plantilla de la compa\u00f1\u00eda Dropbox.[4]\u200b Desde noviembre del 2020 es parte de la Divisi\u00f3n de Desarrolladores de la empresa Microsoft.", "sections": [{"name": "\u00cdndice", "text": "1 Biograf\u00eda\n2 Trabajo\n2.1 Python\n2.2 Programaci\u00f3n para todos\n2.3 Mondrian (software de Google)\n2.4 Dropbox\n2.5 Microsoft\n2.6 Premios y reconocimientos\n3 V\u00e9ase tambi\u00e9n\n4 Notas y referencias\n5 Enlaces externos", "subsections": []}, {"name": "Biograf\u00eda", "text": "Van Rossum naci\u00f3 y creci\u00f3 en los Pa\u00edses Bajos, donde obtuvo su titulaci\u00f3n universitaria en matem\u00e1ticas y computaci\u00f3n por la Universidad de \u00c1msterdam en 1982. A lo largo de su vida ha trabajado tanto en la industria, ya mencionado en la introducci\u00f3n, como en diversos centros de investigaci\u00f3n como el instituto holand\u00e9s Centrum Wiskunde & Inform\u00e1tica (CWI), el estadounidense Instituto Nacional de Est\u00e1ndares y Tecnolog\u00eda o la Corporaci\u00f3n para las Iniciativas Investigadoras Nacionales en Reston, Virginia.", "subsections": []}, {"name": "Trabajo", "text": "Aunque durante su estancia en el CWI contribuy\u00f3 a desarrollar rutinas para BSD Unix y tambi\u00e9n trabaj\u00f3 en el desarrollo del lenguaje de programaci\u00f3n ABC, su trabajo m\u00e1s destacado es el lenguaje de programaci\u00f3n Python.", "subsections": [{"name": "Python", "text": "Van Rossum escribi\u00f3 en 1996:\n\u00abHace seis a\u00f1os, en diciembre de 1989, estaba buscando un proyecto de programaci\u00f3n como hobby que me mantuviera ocupado durante las semanas de Navidad. Mi oficina estar\u00eda cerrada y no tendr\u00eda m\u00e1s que mi ordenador de casa a mano. Decid\u00ed escribir un int\u00e9rprete para el nuevo lenguaje de scripting que hab\u00eda estado ideando recientemente: un descendiente de ABC que gustar\u00eda a los hackers de Unix/c. Eleg\u00ed el nombre de Python para el proyecto, encontr\u00e1ndome en un estado de \u00e1nimo ligeramente irreverente (y siendo un gran fan de Monty Python's Flying Circus)\u00bb.[5]\u200b\nEn el a\u00f1o 2000 agreg\u00f3:\n\u00abEl predecesor de Python, ABC, estaba inspirado en SETL - Lambert Meertens se pas\u00f3 un a\u00f1o trabajando en el grupo de SETL en la Universidad de Nueva York antes de que surgiera el dise\u00f1o final de ABC\u00bb.[6]\u200b"}, {"name": "Programaci\u00f3n para todos", "text": "En el a\u00f1o 1999 Van Rossum realiz\u00f3 una propuesta a DARPA llamada Computer Programming for Everybody, en la que describi\u00f3 qu\u00e9 y c\u00f3mo deber\u00eda ser Python:\nPython deber\u00eda ser f\u00e1cil, intuitivo y tan potente como sus principales competidores.\nEl proyecto ser\u00eda de c\u00f3digo abierto para que cualquiera pudiera colaborar.\nEl c\u00f3digo escrito en Python ser\u00eda tan comprensible como cualquier texto en ingl\u00e9s.\nPython deber\u00eda ser apto para las actividades diarias permitiendo la construcci\u00f3n de prototipos en poco tiempo.\nPython es al d\u00eda de hoy uno de los lenguajes de programaci\u00f3n m\u00e1s populares. En 2011 se proclam\u00f3 el tercer lenguaje m\u00e1s popular de la forja GitHub y seg\u00fan la encuesta[7]\u200b se encuentra entre los 10 lenguajes de programaci\u00f3n m\u00e1s demandados en las ofertas de trabajo."}, {"name": "Mondrian (software de Google)", "text": "Durante su estancia en Google, Van Rossum desarroll\u00f3 Mondrian, un sistema de revisi\u00f3n de c\u00f3digo que ser\u00eda internamente utilizado en la compa\u00f1\u00eda. Se trata de una aplicaci\u00f3n web cuyo c\u00f3digo est\u00e1 mayormente escrito en Python. El nombre del software es en honor a Piet Mondrian, un pintor holand\u00e9s."}, {"name": "Dropbox", "text": "El 7 de diciembre de 2012 Van Rossum empez\u00f3 a trabajar en Dropbox[8]\u200b\nDespu\u00e9s de seis a\u00f1os y medio, se hace p\u00fablica (29/10/2019) su partida de Dropbox para jubilarse."}, {"name": "Microsoft", "text": "Casi un a\u00f1o despu\u00e9s de estar retirado, Guido decide volver el 12/11/2020 para trabajar en la divisi\u00f3n de Desarrollo de la compa\u00f1\u00eda Microsoft."}, {"name": "Premios y reconocimientos", "text": "En 2001 Van Rossum recibi\u00f3 el FSF Award for the Advancement of Free Software por parte de la Free Software Foundation (FSF). El premio le fue entregado en 2002 en la conferencia FOSDEM llevada a cabo en Bruselas, B\u00e9lgica.\nEn mayo de 2003 le fue otorgado el premio NLUUG.\nLa Association for Computing Machinery reconoci\u00f3 en 2006 a Van Rossum como un Ingeniero Sobresaliente."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Python", "subsections": []}, {"name": "Notas y referencias", "text": "\u2191 https://www.python.org/~guido/Resume.html\n\u2191 van Rossum, Guido (12 de julio de 2018). \u00abpython-committers Transfer of power\u00bb. python-committers (en ingl\u00e9s). Consultado el 13 de julio de 2018.\u00a0\n\u2191 2001 Free Software Awards Consultado 14 de agosto de 2010.\n\u2191 2012 El creador de Python, Guido Van Rossum, deja Google y ficha por Dropbox.\n\u2191 Foreword for \"Programming Python\" (1st ed.)\n\u2191 [Python-Dev] SETL (was: Lukewarm about range literals)\n\u2191 Programming Language Popularity\n\u2191 \u00abDropbox Tech Blog\u00a0\u00bb Blog Archive\u00a0\u00bb Welcome Guido!\u00bb. Tech.dropbox.com. 7 de diciembre de 2012. Consultado el 6 de septiembre de 2013.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Guido van Rossum.\nGuido van Rossum.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Haskell", "title": "Haskell", "summary": "Haskell (pronunciado /h\u00e6sk\u0259l/)[1]\u200b es un lenguaje de programaci\u00f3n estandarizado multi-prop\u00f3sito, funcionalmente puro, con evaluaci\u00f3n no estricta y memorizada, y fuerte tipificaci\u00f3n est\u00e1tica. Su nombre se debe al l\u00f3gico estadounidense Haskell Curry, debido a su aporte al c\u00e1lculo lambda, el cual tiene gran influencia en el lenguaje. En Haskell, \"una funci\u00f3n es un ciudadano de primera clase\" del lenguaje de programaci\u00f3n. Como lenguaje de programaci\u00f3n funcional, el constructor de controles primario es la funci\u00f3n. El lenguaje tiene sus or\u00edgenes en las observaciones de Haskell Curry y sus descendientes intelectuales.\nEn los a\u00f1os 1980 se constituy\u00f3 un comit\u00e9 cuyo objetivo era crear un lenguaje funcional que reuniera las caracter\u00edsticas de los m\u00faltiples lenguajes funcionales de la \u00e9poca, el m\u00e1s notable Miranda, y resolviera la confusi\u00f3n creada por la proliferaci\u00f3n de los mismos.\nEl lenguaje evoluciona r\u00e1pidamente y (ver m\u00e1s abajo) como los representantes actuales del est\u00e1ndar de facto. El \u00faltimo est\u00e1ndar oficial es: Haskell 2010, cuyas diferencias respecto al anterior est\u00e1ndar Haskell 98 son:\nNuevas caracter\u00edsticas del lenguaje:\nInterfaz de funciones for\u00e1neas (FFI), que permite usar c\u00f3digo C en un programa Haskell y c\u00f3digo Haskell en un programa C. Un ejemplo explicativo se puede encontrar aqu\u00ed\nNombres jer\u00e1rquicos para los m\u00f3dulos, por ejemplo Data.Bool.\nGuardianes con patrones.\nCaracter\u00edsticas eliminadas del lenguaje:\nSintaxis de patrones (n+k). Con lo cual, la siguiente definici\u00f3n de la funci\u00f3n factorial no es v\u00e1lida en Haskell 2010 y posteriores: fact (n+1) = (n+1) * fact n.\nLas caracter\u00edsticas m\u00e1s interesantes de Haskell incluyen el soporte para tipos de datos y funciones recursivas, listas, tuplas, guardas y encaje de patrones. La combinaci\u00f3n de las mismas pueden resultar en algunas funciones casi triviales cuya versi\u00f3n en lenguajes imperativos pueden llegar a resultar extremadamente tediosas de programar. Haskell es, desde 2002, uno de los lenguajes funcionales sobre los que m\u00e1s se ha investigado. Se han desarrollado muchas variantes:\nVersiones paralelas del MIT y Glasgow, ambas denominadas Parallel Haskell.\nM\u00e1s versiones paralelas y distribuidas de Haskell llamadas Distributed Haskell (anteriormente Goffin) y Eden.\nUna versi\u00f3n con ejecuci\u00f3n especulativa: Eager Haskell.\nVarias versiones orientadas a objetos: Haskell++, O'Haskell y Mondrian.\nUna versi\u00f3n educativa llamada Gofer desarrollada por Mark Jones que fue suplantada por Hugs (ver abajo).\nPara informaci\u00f3n m\u00e1s detallada, referirse al sitio oficial o a los enlaces al final de este art\u00edculo.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Tipos simples predefinidos\n2.1 El tipo Bool\n2.1.1 Funciones y operadores\n2.2 El tipo Int\n2.3 El tipo Integer\n2.4 El tipo Float\n2.4.1 Funciones y operadores\n2.5 El tipo Double\n2.6 El tipo Char\n2.7 Tuplas\n2.8 Listas\n3 Implementaciones\n4 Entornos de desarrollo\n4.1 Open Source\n4.2 Comerciales\n5 Web Frameworks\n5.1 Happstack\n5.2 Snap\n5.3 Yesod\n5.4 Miku\n5.5 Lemmachine\n5.6 Mohws\n5.7 Salvia\n5.8 Scotty\n5.9 Servant\n5.10 MFlow\n5.11 Spock\n5.12 Wheb\n5.13 WebAPI\n5.14 DAML\n6 Comunidad\n6.1 The Haskell Symposium\n6.2 The Summer of Haskell\n7 Ejemplos\n8 V\u00e9ase tambi\u00e9n\n9 Notas y referencias\n10 Bibliograf\u00eda\n11 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "A partir de la publicaci\u00f3n de Miranda, en 1985, los lenguajes funcionales proliferaron. En 1987, exist\u00edan compitiendo entre ellos m\u00e1s de una docena de lenguajes de programaci\u00f3n puros funcionales no estrictos. Durante la conferencia sobre Lenguajes de Programaci\u00f3n Funcional y Arquitecturas de Ordenador (FPCA '87) en Portland, Oreg\u00f3n, se mantuvo un encuentro durante el cual se alcanz\u00f3 un fuerte consenso entre sus participantes para formar un comit\u00e9 que definiese un est\u00e1ndar abierto para tales lenguajes. Esto se hizo con el prop\u00f3sito expreso de consolidar los lenguajes existentes en uno \u00fanico que sirviera como base para la investigaci\u00f3n futura en dise\u00f1o de lenguajes.[2]\u200b La primera versi\u00f3n de Haskell (\"Haskell 1.0\") se defini\u00f3 en 1990.[3]\u200b Los esfuerzos del comit\u00e9 resultaron en una serie de definiciones del lenguaje, que culminaron a finales de 1997 en Haskell 98, que se intent\u00f3 fuera una versi\u00f3n del lenguaje m\u00ednima, estable y portable, junto con una biblioteca est\u00e1ndar asociada para la ense\u00f1anza, y como base de futuras extensiones. El comit\u00e9 expresamente aprob\u00f3 la creaci\u00f3n de extensiones y variantes de Haskell 98 mediante la adici\u00f3n e incorporaci\u00f3n de caracter\u00edsticas experimentales.\nEn enero de 1999, el est\u00e1ndar del lenguaje Haskell 98 se public\u00f3 en \"The Haskell 98 Report\". En enero de 2003, se public\u00f3 una versi\u00f3n revisada en \"Haskell 98 Language and Libraries: The Revised Report\".[4]\u200b El lenguaje contin\u00faa evolucionando r\u00e1pidamente, con las implementaciones de Hugs y de GHC (v\u00e9ase m\u00e1s adelante), que representan el actual est\u00e1ndar de facto. A principios del 2006 comenz\u00f3 el proceso de definici\u00f3n de un sucesor del est\u00e1ndar de Haskell 98, llamado informalmente Haskell\u2032 (\"Haskell Prime\").[5]\u200b Este proceso intenta producir una revisi\u00f3n menor de Haskell 98.[6]\u200b En 2010 se lanza Haskell 2010.", "subsections": []}, {"name": "Tipos simples predefinidos", "text": "En Haskell, y en lo siguiente, \"o\u00a0:: t\" quiere decir que la expresi\u00f3n \"o\" es tiene tipo \"t\", y \"t -> s\" es un tipo, espec\u00edficamente una funci\u00f3n, que consume algo de tipo \"t\" y produce algo de tipo \"s\". El operador (->) asocia a la derecha, ya que \"t -> s -> r\" quiere decir \"t -> (s -> r)\".", "subsections": [{"name": "El tipo Bool", "text": "Los valores con este tipo representan expresiones l\u00f3gicas cuyo resultado puede ser True o False.\nFunciones y operadores\n(&&)\u00a0:: Bool -> Bool -> Bool. Conjunci\u00f3n l\u00f3gica.\n(||)\u00a0:: Bool -> Bool -> Bool. Disyunci\u00f3n l\u00f3gica.\nnot\u00a0:: Bool -> Bool. Negaci\u00f3n l\u00f3gica.\notherwise\u00a0:: Bool. Funci\u00f3n constante que devuelve el valor True."}, {"name": "El tipo Int", "text": "Los valores de este tipo son n\u00fameros enteros de precisi\u00f3n limitada que cubren al menos el intervalo [-2^29, 2^29 - 1] ([minBound, maxBound])."}, {"name": "El tipo Integer", "text": "Los valores de este tipo son n\u00fameros enteros de precisi\u00f3n ilimitada que tienen las mismas funciones y operadores del tipo Int."}, {"name": "El tipo Float", "text": "Los valores de este tipo son n\u00fameros reales. ( 2010, 23.4, 5.7 )\nFunciones y operadores\n(+), (-), (*), (/), (^)\u00a0:: Float -> Float -> Float. Suma, resta, producto, divisi\u00f3n real y potencia de exponente entero.\nabs, signum, negate\u00a0:: Int -> Int. Valor absoluto, signo y negaci\u00f3n.\n(**)\u00a0:: Float -> Float. Potencia de exponente real"}, {"name": "El tipo Double", "text": "Los valores de este tipo son n\u00fameros reales, de mayor rango y con aproximaciones m\u00e1s precisas que los de tipo Float."}, {"name": "El tipo Char", "text": "Los valores de este tipo son caracteres que se encuentran en una masa de alta complejidad de en una suma de caracteres dados con su alta definici\u00f3n.\nAntes de utilizar esta funci\u00f3n en hugs debemos utilizar IMPORT CHAR antes de nuestro algoritmo."}, {"name": "Tuplas", "text": "Los elementos que forman una tupla pueden ser del mismo o de distintos tipos. Es un conjunto de componentes relacionados.\nPor ejemplo: ('a', True,3)"}, {"name": "Listas", "text": "Los valores de este tipo son una colecci\u00f3n de elementos del mismo tipo. Existen dos constructores para listas:\n[Elementos_separados_por_comas], por ejemplo: [1,2,3,4]\n(primer_elemento:resto_de_la_lista), por ejemplo: (1:(2:(3:(4:[]))))"}]}, {"name": "Implementaciones", "text": "Todas las siguientes implementaciones cumplen en su totalidad, o casi en su totalidad, con los est\u00e1ndares de Haskell 98 y son distribuidas bajo licencias Open Source. No se conocen implementaciones comerciales del lenguaje.\nHugs ([1]) es un int\u00e9rprete. Ofrece una compilaci\u00f3n r\u00e1pida de los programas y un tiempo razonable de ejecuci\u00f3n. Tambi\u00e9n viene con una biblioteca gr\u00e1fica muy simple, lo que lo hace adecuado para quienes lo est\u00e1n aprendiendo. Sin embargo no es una implementaci\u00f3n a despreciar, es una de las m\u00e1s livianas y compatibles.\nGHC ([2]): \"Glasgow Haskell Compiler\" compila a c\u00f3digo nativo en una variedad de arquitecturas y puede tambi\u00e9n compilar a C. Es, probablemente, uno de los compiladores m\u00e1s populares e incluso tiene unas cuantas bibliotecas (por ejemplo OpenGL) que, aunque muy \u00fatiles, s\u00f3lo funcionan bajo GHC.\nnhc98 ([3]) es otro compilador con un mejor tiempo de ejecuci\u00f3n que Hugs. Esta implementaci\u00f3n se enfoc\u00f3 a minimizar la utilizaci\u00f3n de la memoria convirti\u00e9ndola en una buena opci\u00f3n para arquitecturas lentas o antiguas.\nHBC ([4]) es otro compilador a c\u00f3digo nativo de Haskell. Si bien no ha sido actualizado en el \u00faltimo tiempo sigue siendo bastante \u00fatil.\nHelium ([5]) es un nuevo dialecto de Haskell. Se centr\u00f3 en ser muy f\u00e1cil de aprender; por ello, no incluye soporte para todo el est\u00e1ndar de Haskell, haciendo que no sea totalmente compatible.", "subsections": []}, {"name": "Entornos de desarrollo", "text": "Existen varios IDEs (Integrated Development Environment, o en espa\u00f1ol, entornos de desarrollo integrado) y/o plugins que se pueden utilizar para desarrollar aplicaciones en Haskell. La mayor\u00eda son open source, pero tambi\u00e9n existen con licencia comercial.", "subsections": [{"name": "Open Source", "text": "IntelliJ plugin for Haskell\nEclipseFP plugin for Eclipse IDE\nColorer plugin for Eclipse IDE\nLeksah\nKDevelop\nVim\nEmacs\nAtom"}, {"name": "Comerciales", "text": "Haskell for Mac\nSublime-Haskell"}]}, {"name": "Web Frameworks", "text": "La comunidad de desarrollo web en Haskell ha tenido recientemente un gran impulso en la actividad, lo que resulta en una gran cantidad de opciones de bibliotecas para utilizar.[7]\u200b A continuaci\u00f3n se presenta la lista de framework activos en Haskell para desarrollo web. ", "subsections": [{"name": "Happstack", "text": "Est\u00e1 dise\u00f1ado para que los desarrolladores puedan prototipar r\u00e1pidamente, implementar sin dolor, escalar masivamente, operar confiablemente y cambiar f\u00e1cilmente. Soporta entornos GNU/Linux, macOS, FreeBSD y Windows.\nSe considera un framework web completo, el principal componente es happstack-server: un servidor HTTP integrado, combinadores de enrutamiento y fileserving. Adem\u00e1s, una serie de paquetes que sol\u00edan ser acoplados a Happstack ahora han sido desacoplados de \u00e9l, pero siguen promocionados y documentados para su uso con Happstack:\nSafecopy: soporte de serializaci\u00f3n y migraci\u00f3n de tipos de datos\nAcid-state: un sistema de almacenamiento NoSQL ACID con soporte nativo para tipos Haskell"}, {"name": "Snap", "text": "Es un framework de desarrollo web basado en una arquitectura snaplet.\nTiene una completa documentaci\u00f3n y cuenta con una suite de pruebas con un alto nivel de cobertura de c\u00f3digo, pero es un software de etapa inicial con interfaces en constante evoluci\u00f3n"}, {"name": "Yesod", "text": "Est\u00e1 dise\u00f1ado para aplicaciones web RESTful, de tipo seguro y con alto rendimiento.\nAprovechando la cuasi-cotizaci\u00f3n para las tareas m\u00e1s f\u00e1ciles, se provee aplicaciones web concisas con altos niveles de seguridad. Las plantillas de Hamlet se comprueban en tiempo de compilaci\u00f3n para ver si son correctas y el controlador utiliza URL seguras para asegurarse de que s\u00f3lo est\u00e1 generando URL v\u00e1lidas. Sigue los principios del Modelo-Vista-Controlador de forma holgada."}, {"name": "Miku", "text": "Una biblioteca sencilla para el r\u00e1pido prototipado web en Haskell, inspirada en Ruby's Rack y Sinatra."}, {"name": "Lemmachine", "text": "Es un RESTful web framework. La arquitectura principal es una copia de Webmachine basada en Erlang, que es actualmente la mejor referencia de documentaci\u00f3n. Se destaca por su din\u00e1mico Webmachine escrito de forma tipada dependiente en Agda."}, {"name": "Mohws", "text": "Es un servidor web con un sistema de m\u00f3dulos y soporte para CGI. Basado en el Servidor Web Haskell original de Simon Marlow."}, {"name": "Salvia", "text": "Es un servidor web y un framework de aplicaciones web que puede ser utilizado para escribir sitios web din\u00e1micos en Haskell. Desde el c\u00f3digo de protocolo de nivel inferior hasta el c\u00f3digo de aplicaci\u00f3n de alto nivel, todo est\u00e1 escrito como un controlador de Salvia. Este enfoque hace que el servidor sea extremadamente extensible."}, {"name": "Scotty", "text": "Es un framework web inspirado en Sinatra de Ruby, usando WAI y Warp. Es una manera sencilla de escribir aplicaciones web RESTful y declarativas. Tiene buena documentaci\u00f3n para todas las funciones relevantes."}, {"name": "Servant", "text": "Es un framework ligero principalmente para APIs REST. Permite especificar las especificaciones de una API como alias de tipo y luego trabajar con estos alias de tipo para crear servidores, documentaci\u00f3n, c\u00f3digo de cliente en Haskell y Javascript. Est\u00e1 basado en WAI."}, {"name": "MFlow", "text": "Es un servidor de aplicaciones web. MFlow es una abreviatura de \"Flujo de mensajes\". Se trata de un framework basado en la continuaci\u00f3n, en lugar de otros frameworks basados en la continuaci\u00f3n como Ocsigen (Ocaml), Coccoon (javascript) o Seaside (Smalltalk), se basa en una m\u00f3nada de retroceso que mantiene la sincronizaci\u00f3n del estado de ejecuci\u00f3n con la navegaci\u00f3n del usuario. Desde la discontinuaci\u00f3n de WASH, MFlow es el \u00fanico marco de estilo de continuaci\u00f3n escrito en Haskell hasta la fecha.\nUtiliza las bibliotecas web Haskell est\u00e1ndares y/o t\u00e9cnicas: WAI, Warp, Blaze HTML, HSP. Su n\u00facleo es el servidor y la renderizaci\u00f3n independiente. Una clase de formlets extendidos se utilizan para crear componentes aut\u00f3nomos, llamados widgets. Tienen formato, AJAX y c\u00f3digo de servidor. Se pueden componer para crear la interfaz de usuario."}, {"name": "Spock", "text": "Es un framework orientado al r\u00e1pido desarrollo web: Ofrece todo lo necesario para iniciar r\u00e1pidamente el hacking web con Haskell: enrutamiento, middleware, JSON, blaze, sesiones, cookies, ayudante de base de datos, protecci\u00f3n csrf, estado global."}, {"name": "Wheb", "text": "Es un framework WAI para crear aplicaciones web robustas, de alta concurrencia, simples y efectivas. Su objetivo principal es ampliar la funcionalidad de la base de la biblioteca WAI y proporcionar un punto de entrada f\u00e1cil en los servidores web de Haskell. Facilita la creaci\u00f3n de plugins. Los plugins pueden agregar rutas, middleware, configuraciones e incluso manejar la limpieza de recursos en el apagado del servidor. Las rutas denominadas permiten a los plugins generar din\u00e1micamente sus rutas en tiempo de ejecuci\u00f3n basadas en la configuraci\u00f3n"}, {"name": "WebAPI", "text": "WebApi es una biblioteca ligera basada en WAI que permite definir peticiones y respuestas para los puntos finales como tipos a trav\u00e9s de un contrato. El contrato se considera la \u00fanica fuente de verdad, con lo que WebApi permite crear servicios Web / API REST, generar un cliente Haskell para los servicios existentes de la API, generar un servidor simulador para simular las solicitudes y respuestas."}, {"name": "DAML", "text": "Es un framework de contrato inteligente basado en el Glasgow Haskell Compiler."}]}, {"name": "Comunidad", "text": "", "subsections": [{"name": "The Haskell Symposium", "text": "\"The Haskell Symposium\" es un simposio anual organizado por la International Conference on Functional Programming (ICFP). El simposio est\u00e1 patrocinado por la Association for Computing Machinery (ACM), bajo los auspicios del ACM Special Interest Group on programming languages (SIGPLAN).\nEl prop\u00f3sito del evento es discutir la experiencia de los programadores con Haskell, y el futuro desarrollo del lenguaje. El alcance del simposio incluye todos los aspectos del dise\u00f1o, la sem\u00e1ntica, la teor\u00eda, la aplicaci\u00f3n, la ejecuci\u00f3n, y la ense\u00f1anza de Haskell.\nAntes de 2008, el evento era conocido como \"The Haskell Workshop\". El cambio de nombre refleja el aumento constante de la influencia del evento en la comunidad en general, as\u00ed como un creciente n\u00famero de presentaciones de alta calidad que hacen el proceso de aceptaci\u00f3n muy competitivo."}, {"name": "The Summer of Haskell", "text": "\"The Summer of Haskell\" es un evento organizado por haskell.org para llegar a los estudiantes y animarles a contribuir a la comunidad Haskell con la ayuda de mentores experimentados. Este programa est\u00e1 abierto a estudiantes universitarios, mayores de 18 a\u00f1os, en la mayor\u00eda de los pa\u00edses."}]}, {"name": "Ejemplos", "text": "Funci\u00f3n recursiva para calcular el factorial de un n\u00famero natural:\n   \n--Funci\u00f3n recursiva que calcula el factorial de un n\u00famero natural\nfactorial\n \n::\nInteger\n->\nn\n      \n|\n<\n0\n  \n=\nerror\n\"no existe el factorial para enteros negativos\"\n==\n1\notherwise\n*\n(\n-\n)\nOtra versi\u00f3n de la funci\u00f3n para calcular el factorial de un natural usando la funci\u00f3n product del m\u00f3dulo Data.List:\n--Funci\u00f3n para calcular el factorial de un entero usando la funci\u00f3n product del m\u00f3dulo Data.List\nproduct\n[\n..\n]\nFunci\u00f3n sumatorio de los elementos de una lista de enteros\n--Sumar elementos de una lista\nsumar\nInt\n[]\nx\n:\nxs\n+\nFunci\u00f3n para calcular las ra\u00edces de una ecuaci\u00f3n de segundo grado a partir de sus coeficientes\n--Funci\u00f3n para calcular las ra\u00edces de una ecuaci\u00f3n de segundo grado a partir de sus coeficientes\nra\u00edces\nFloat\n,\na\nb\nc\n    \ndisc\n>=\n((\nraizDisc\n/\ndenom\n                   \n\"La ecuaci\u00f3n tiene ra\u00edces complejas\"\nwhere\n         \n4\nsqrt\n2\nFunci\u00f3n que aproxima el n\u00famero e\n--Funci\u00f3n para calcular el valor de e (2.71828182845905)\neuler\nDouble\n0.0\n1.0\nFunci\u00f3n para calcular el m\u00e1ximo com\u00fan divisor de dos n\u00fameros enteros mediante el algoritmo de Euclides\nmcd\ny\nmod\nFunci\u00f3n que realiza la criba de Erat\u00f3stenes (de una lista dada deja solo los n\u00fameros primos)\neratostenes\nnot\nnull\n&&\n^\n>\nlast\n                      \n<-\n`\n/=\nFunci\u00f3n que determina si un n\u00famero natural es pal\u00edndromo (en base 10)\nisPalindrome\nBool\nFalse\nlet\ns\nshow\nin\nreverse\nFunci\u00f3n que realiza la potencia de un n\u00famero con recursividad dividiendo el expediente entre 2\npotencia\ne\nif\nthen\npotencia\n))\nelse\np\ndiv\nFunci\u00f3n que eval\u00faa de manera perezosa la lista de n\u00fameros primos utilizando una cl\u00e1usula where y listas intencionales\nnumerosPrimos\n3\n],\nes_primo\n        \neven\nm\n5\nImplementaci\u00f3n del algoritmo Quicksort\nqsort\nOrd\n=>\nqsort\n<=\n++", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Example of most Haskell features\nQuickCheck", "subsections": []}, {"name": "Notas y referencias", "text": "\u2191 Chevalier, Tim (28 de enero de 2008), \u00abanybody can tell me the pronuncation of \"haskell\"?\u00bb, lista de correo Haskell-cafe, http://www.haskell.org/pipermail/haskell-cafe/2008-January/038756.html, consultado el 12 de marzo de 2011.\u00a0\n\u2191 \u00abPreface\u00bb. Haskell 98 Language and Libraries: The Revised Report. diciembre de 2002.\u00a0\n\u2191 \u00abThe History of Haskell\u00bb. Archivado desde el original el 29 de abril de 2009.\u00a0\n\u2191 Simon Peyton Jones (diciembre de 2002). \u00abHaskell 98 Language and Libraries: The Revised Report\u00bb.\u00a0\n\u2191 \u00abFuture development of Haskell\u00bb.\u00a0\n\u2191 \u00abWelcome to Haskell'\u00bb. The Haskell' Wiki. Archivado desde el original el 23 de abril de 2009. Consultado el 5 de mayo de 2007.\u00a0\n\u2191 \u00abWeb - HaskellWiki\u00bb. wiki.haskell.org (en ingl\u00e9s). Consultado el 26 de junio de 2017.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Ruiz, Blas; Guti\u00e9rrez, Francisco; Guerrero, Pablo; y Gallardo, Jos\u00e9. Razonando con Haskell. Un curso sobre programaci\u00f3n funcional. Thomson.", "subsections": []}, {"name": "Enlaces externos", "text": "Espa\u00f1ol:\nExample of most Haskell features\nIntroducci\u00f3n a Haskell Archivado el 5 de abril de 2010 en Wayback Machine.\nLenguaje de Programaci\u00f3n Funcional Haskell Haskell B\u00e1sico\nUna Introducci\u00f3n Agradable a Haskell Versi\u00f3n en espa\u00f1ol del libro \"A Gentle Introduction to Haskell\".\n\u00a1Aprende Haskell por el bien de todos! Traducci\u00f3n de la obra \"Learn you a Haskell for great good\".\nHaskell B\u00e1sico Curso de Haskell\nIngl\u00e9s:\nExample of most Haskell features\nHaskell P\u00e1gina oficial de Haskell\nHaskell in examples Examples of how to use Haskell\nTry Haskell Prueba Haskell en l\u00ednea\nA Gentle Introduction to Haskell 98 (pdf format) Una simple introducci\u00f3n a Haskell 98\nThe Evolution of a Haskell Programmer Una forma c\u00f3mica de ver los distintos estilos de programaci\u00f3n en Haskell\nOnline Bibliography of Haskell Research Bibliograf\u00eda de investigaciones en Haskell\nHaskell (programming language)\nLearn You a Haskell for Great Good\nImplementaciones:\nHugs Haskell User's Gofer System\nGHC The Glasgow Haskell Compiler\nHelium, Helium", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Herencia_(inform%C3%A1tica)", "title": "Herencia (inform\u00e1tica)", "summary": "En programaci\u00f3n orientada a objetos, la herencia es, despu\u00e9s de la agregaci\u00f3n o composici\u00f3n, el mecanismo m\u00e1s utilizado para alcanzar algunos de los objetivos m\u00e1s preciados en el desarrollo de software como lo son la reutilizaci\u00f3n y la extensibilidad. A trav\u00e9s de ella, los dise\u00f1adores pueden crear nuevas clases partiendo de una clase o de una jerarqu\u00eda de clases preexistente (ya comprobadas y verificadas) evitando con ello el redise\u00f1o, la modificaci\u00f3n y verificaci\u00f3n de la parte ya implementada. La herencia facilita la creaci\u00f3n de objetos a partir de otros ya existentes e implica que una subclase obtiene todo el comportamiento (m\u00e9todos) y finalmente los atributos (variables) de su superclase.\nEs la relaci\u00f3n entre una clase general y otra clase m\u00e1s espec\u00edfica.\nPor ejemplo: Si declaramos una clase p\u00e1rrafo derivada de una clase texto, todos los m\u00e9todos y variables asociadas con la clase texto, son autom\u00e1ticamente heredados por la subclase p\u00e1rrafo.\nLa herencia es uno de los mecanismos de los lenguajes de programaci\u00f3n orientada a objetos basados en clases, por medio del cual una clase se deriva de otra de manera que extiende su funcionalidad. La clase de la que se hereda se suele denominar clase base, clase padre, superclase, clase ancestro (el vocabulario que se utiliza suele depender en gran medida del lenguaje de programaci\u00f3n).\nEn los lenguajes que cuentan con un sistema de tipos fuerte y estrictamente restrictivo con el tipo de datos de las variables, la herencia suele ser un requisito fundamental para poder emplear el Polimorfismo, al igual que un mecanismo que permita decidir en tiempo de ejecuci\u00f3n qu\u00e9 m\u00e9todo debe invocarse en respuesta a la recepci\u00f3n de un mensaje, conocido como enlace tard\u00edo o enlace din\u00e1mico.", "sections": [{"name": "\u00cdndice", "text": "1 Ejemplo en Java\n2 Clase Abstracta\n3 Herencia y ocultaci\u00f3n de informaci\u00f3n\n4 Redefinici\u00f3n de m\u00e9todos\n5 Ventajas\n6 Desventajas\n7 Estereotipos de herencia", "subsections": []}, {"name": "Ejemplo en Java", "text": "import\njavax.*\n;\njavax.swing.JOptionPane\npublic\nclass\nMamifero\n{\nprivate\nint\npatas\nString\nnombre\nvoid\nimprimirPatas\n(){\nJOptionPane\n.\nshowMessageDialog\n(\nnull\n,\n\" Tiene \"\n+\n\" patas\\n\"\n\"Mamifero\"\nINFORMATION_MESSAGE\n);\n}\nMamifero\n){\nthis\nnombre\n=\npatas\nPerro\nextends\nMamifero\nPerro\nsuper\n4\nGato\nGato\nCrearPerro\nstatic\nmain\n[]\nargs\n)\nPerro\nperrito\nnew\n\"Pantaleon\"\nimprimirPatas\n();\n/*Est\u00e1 en la clase mam\u00edfero*/\nSe declaran las clases mam\u00edferos, gato y perro, haciendo que gato y perro sean unos mam\u00edferos (derivados de esta clase), y se ve c\u00f3mo a trav\u00e9s de ellos se nombra al animal pero as\u00ed tambi\u00e9n se accede a patas d\u00e1ndole el valor por defecto para esa especie.\nEs importante destacar tres cosas. La primera, es que la herencia no es un mecanismo esencial en el paradigma de programaci\u00f3n orientada a objetos; en la mayor\u00eda de los lenguajes orientados a objetos basados en prototipos las clases no existen, en consecuencia tampoco existe la herencia y el polimorfismo se logra por otros medios. La segunda, es que el medio preferido para lograr los objetivos de extensibilidad y reutilizaci\u00f3n es la agregaci\u00f3n o composici\u00f3n. La tercera, es que en lenguajes con un sistema de tipos d\u00e9biles, el polimorfismo se puede lograr sin utilizar la herencia.\nPor otra parte y aunque la herencia no es un concepto indispensable en el paradigma de programaci\u00f3n orientada a objetos, es mucho m\u00e1s que un mecanismo de los lenguajes basados en clases, porque implica una forma de razonar sobre c\u00f3mo dise\u00f1ar ciertas partes de un programa. Es decir, no solo es un mecanismo que permite implementar un dise\u00f1o, sino que establece un marco conceptual que permite razonar sobre c\u00f3mo crear ese dise\u00f1o.", "subsections": []}, {"name": "Clase Abstracta", "text": "La herencia permite que existan clases que nunca ser\u00e1n instanciadas directamente. En el ejemplo anterior, una clase \"perro\" heredar\u00eda los atributos y m\u00e9todos de la clase \"mam\u00edfero\", as\u00ed como tambi\u00e9n \"gato\", \"delf\u00edn\" o cualquier otra subclase; pero, en ejecuci\u00f3n, no habr\u00e1 ning\u00fan objeto \"mam\u00edfero\" que no pertenezca a alguna de las subclases. En ese caso, a una clase as\u00ed se la conocer\u00eda como Clase Abstracta. La ausencia de instancias espec\u00edficas es su \u00fanica particularidad, para todo lo dem\u00e1s es como cualquier otra clase.", "subsections": []}, {"name": "Herencia y ocultaci\u00f3n de informaci\u00f3n", "text": "En ciertos lenguajes, el dise\u00f1ador puede definir qu\u00e9 variables de instancia y m\u00e9todos de los objetos de una clase son visibles. En C++ y java esto se consigue con las especificaciones private, protected y public. Solo las variables y m\u00e9todos definidos como p\u00fablicos en un objeto ser\u00e1n visibles por todos los objetos. En otros lenguajes como Smalltalk, todas las variables de instancia son privadas y todos los m\u00e9todos son p\u00fablicos.\nDependiendo del lenguaje que se utilice, el dise\u00f1ador tambi\u00e9n puede controlar qu\u00e9 miembros de las superclases son visibles en las subclases. En el caso de java y C++ los especificadores de acceso (private, protected, public) de los miembros de la superclase afectan tambi\u00e9n a la herencia:", "subsections": []}, {"name": "Redefinici\u00f3n de m\u00e9todos", "text": "En la clase derivada se puede redefinir alg\u00fan m\u00e9todo existente en la clase base, con el objeto de proveer una implementaci\u00f3n diferente. Para redefinir un m\u00e9todo en la subclase, basta con declararlo nuevamente con la misma signatura (nombre y par\u00e1metros).\nSi se invoca un cierto m\u00e9todo de un objeto que no est\u00e1 definido en su propia clase, se dispara la b\u00fasqueda hacia arriba en la jerarqu\u00eda a la que dicha clase pertenece. Sin embargo, si existieran dos m\u00e9todos con la misma signatura, uno en la clase y otro en una superclase, se ejecutar\u00eda el de la clase, no el de la superclase.\nCuando se redefine un m\u00e9todo en una clase es posible acceder expl\u00edcitamente al m\u00e9todo original de su superclase, mediante una sintaxis espec\u00edfica que depende del lenguaje de programaci\u00f3n empleado (en muchos lenguajes se trata de la palabra clave super).", "subsections": []}, {"name": "Ventajas", "text": "Ayuda a los programadores a ahorrar c\u00f3digo y tiempo, ya que la clase padre ha sido implementada y verificada con anterioridad, restando solo referenciar desde la clase derivada a la clase base (que suele ser extends, inherits, subclass u otras palabras clave similares, dependiendo del lenguaje).\nLos objetos pueden ser construidos a partir de otros similares. Para ello es necesario que exista una clase base (que incluso puede formar parte de una jerarqu\u00eda de clases m\u00e1s amplia).\nLa clase derivada hereda el comportamiento y los atributos de la clase base, y es com\u00fan que se le a\u00f1ada su propio comportamiento o que modifique lo heredado.\nToda clase pueden servir como clase base para crear otras.", "subsections": []}, {"name": "Desventajas", "text": "Si la jerarqu\u00eda de clases es demasiado compleja, el programador puede tener problemas para comprender el funcionamiento de un programa. Adem\u00e1s puede volverse m\u00e1s complejo detectar y resolver errores de programaci\u00f3n, por ejemplo al modificar una clase padre que afecta el funcionamiento de las subclases.\nOtro problema es que las subclases se deben definir en c\u00f3digo, por lo que los usuarios del programa no puede definir subclases nuevas. Otros patrones de dise\u00f1o permiten que los usuarios puedan definir variantes de una entidad en tiempo de ejecuci\u00f3n.\n==Estereotipos de herencia==", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Herencia_m%C3%BAltiple", "title": "Herencia m\u00faltiple", "summary": "Herencia m\u00faltiple hace referencia a la caracter\u00edstica de los lenguajes de programaci\u00f3n orientada a objetos en la que una clase puede heredar comportamientos y caracter\u00edsticas de m\u00e1s de una superclase. Esto contrasta con la herencia simple, donde una clase solo puede heredar de una superclase.\nAlgunos lenguajes que soportan herencia m\u00faltiple en su mayor parte son: C++, Centura SQL Windows, CLOS, Eiffel, Object REXX, Perl y Python.\nLa herencia m\u00faltiple permite a una clase tomar funcionalidades de otras clases, como permitir a una clase llamada MusicoEstudiante heredar de una clase llamada Persona, una clase llamada M\u00fasico, y una clase llamada Trabajador. Esto puede ser abreviado como MusicoEstudiante\u00a0: Persona, M\u00fasico, Trabajador.", "sections": [{"name": "\u00cdndice", "text": "1 Ambig\u00fcedades\n2 Debate\n3 V\u00e9ase tambi\u00e9n\n4 Referencias\n5 Enlaces externos", "subsections": []}, {"name": "Ambig\u00fcedades", "text": "En la herencia m\u00faltiple aparecen ambig\u00fcedades, como en el ejemplo de encima: si la clase M\u00fasico heredaba de Persona y Trabajador, y la clase Trabajador heredaba de Persona. Existir\u00edan las siguientes reglas::\nMusicoEstudiante\u00a0: Persona, M\u00fasico, Trabajador\nM\u00fasico\u00a0: Persona, Trabajador\nTrabajador: Persona\nSi un compilador est\u00e1 mirando la clase MusicoEstudiante necesita saber si debe juntar las caracter\u00edsticas iguales o si deben estar separadas. Por ejemplo, tendr\u00eda sentido unir las caracter\u00edsticas \"Edad\" de Persona para MusicoEstudiante. La edad de una persona no cambia si le consideras una Persona, un Trabajador o un M\u00fasico. Sin embargo, tendr\u00eda sentido separar la caracter\u00edstica \"Nombre\" de Persona y M\u00fasico si los m\u00fasicos usan un nombre art\u00edstico diferente de su nombre real. Las opciones de juntar y separar son v\u00e1lidas seg\u00fan el contexto, y solo el programador sabe qu\u00e9 opci\u00f3n es correcta para la clase que est\u00e1 dise\u00f1ando.\nCada lenguaje de programaci\u00f3n trata estos problemas de herencia repetida de diferente forma:\nC++ requiere que el programador establezca de qu\u00e9 clase padre vendr\u00e1 la caracter\u00edstica a usar. Por ejemplo con \"Trabajador::Persona.Edad\". C++ no soporta herencia repetida expl\u00edcita porque no habr\u00eda forma de indicar qu\u00e9 superclase usar.\nCLOS permite al programador control total del m\u00e9todo de combinaci\u00f3n, y si no es suficiente, el protocolo de metaobjetos ofrece al programador formas de modificar la herencia, env\u00edo de m\u00e9todos, instanciaci\u00f3n de clases, y otros mecanismos internos sin afectar a la estabilidad del sistema.\nEiffel permite al programador explicitar si junta o separa caracter\u00edsticas que son heredadas de superclases. Eiffel juntar\u00e1 caracter\u00edsticas autom\u00e1ticamente si tienen el mismo nombre e implementaci\u00f3n. El programador tiene la opci\u00f3n de renombrar las caracter\u00edsticas para separarlas. Eiffel tambi\u00e9n permite explicitar herencia repetida como A: B, B.\nLogtalk soporta tanto interfaces como multi-herencia de implementaci\u00f3n, permitiendo declarar alias de m\u00e9todos que ofrecen renombrar y acceder a m\u00e9todos que quedar\u00edan ocultados por el mecanismo de resoluci\u00f3n de conflictos convencional.\nPerl usa la lista de clases para heredar de una lista ordenada. El compilador usa el primer m\u00e9todo que encuentra mediante b\u00fasqueda en profundidad por la lista de superclases.\nJava, Nemerle, Delphi, C# y Objective-C no permiten herencia m\u00faltiple; esto hace que no haya ambig\u00fcedad. Sin embargo, permiten a las clases implementar m\u00faltiples interfaces.", "subsections": []}, {"name": "Debate", "text": "Hay debate sobre si la herencia m\u00faltiple puede ser implementada de forma simple y sin ambig\u00fcedad. Con frecuencia es criticada por su aumentada complejidad y su ambig\u00fcedad, as\u00ed como los problemas de versiones y mantenimiento que puede causar (a menudo resumido como el problema del diamante).[1]\u200b\nLos detractores tambi\u00e9n se\u00f1alan que hay problemas de implementaci\u00f3n de la herencia m\u00faltiple como no ser capaces de explicitar herencia de m\u00faltiple clases y el orden de las sem\u00e1nticas de clase que cambian con la herencia. Hay lenguajes que solucionan todos los problemas t\u00e9cnicos de la herencia m\u00faltiple, pero el debate principal sigue sobre si implementar y usar herencia m\u00faltiple es m\u00e1s f\u00e1cil que usar herencia simple y patrones de dise\u00f1o de software.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Mixin", "subsections": []}, {"name": "Referencias", "text": "\u2191 (en ingl\u00e9s) Traits: Composable Units of Behavior", "subsections": []}, {"name": "Enlaces externos", "text": "Tutorial sobre el uso de herencia en Eiffel (en ingl\u00e9s)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Historia_de_Python", "title": "Historia de Python", "summary": "Art\u00edculo principal:\nPython es uno de los lenguajes de programaci\u00f3n din\u00e1micos m\u00e1s populares que existen entre los que se encuentran Java, Javascript, Go y C#. Aunque es considerado a menudo como un lenguaje \"scripting\", es realmente un lenguaje de prop\u00f3sito general. En la actualidad, Python es usado para todo, desde simples \"scripts\", hasta grandes servidores web que proveen servicio ininterrumpido 24\u00d77. Es utilizado para la programaci\u00f3n de interfaces gr\u00e1ficas y bases de datos, programaci\u00f3n web tanto en el cliente como en el servidor (v\u00e9ase Django o Flask) y \"testing\" de aplicaciones. Adem\u00e1s tiene una amplia aceptaci\u00f3n por cient\u00edficos que hacen aplicaciones para las supercomputadores m\u00e1s r\u00e1pidas del mundo y por los ni\u00f1os que reci\u00e9n est\u00e1n comenzando a programar.\nLa historia del lenguaje de programaci\u00f3n Python se remonta hacia finales de los 80s y principio de los 90s,[1]\u200b su implementaci\u00f3n comenz\u00f3 en diciembre de 1989[2]\u200b cuando en Navidad Guido Van Rossum que trabajaba en el (CWI) (un centro de investigaci\u00f3n holand\u00e9s de car\u00e1cter oficial que, entre otras cosas, actualmente alberga la oficina central del W3C) decidi\u00f3 empezar el proyecto como un pasatiempo d\u00e1ndole continuidad al lenguaje de programaci\u00f3n ABC del que hab\u00eda formado parte del equipo de desarrollo en el CWI,[3]\u200b dicho lenguaje se enfocaba en ser f\u00e1cil de usar y aprender manteniendo potencia en su desempe\u00f1o pero el hardware disponible en la \u00e9poca de su creaci\u00f3n hac\u00eda dif\u00edcil su uso y el proyecto no trascendi\u00f3 como se esperaba. Van Rossum es por tanto el autor principal de Python y contin\u00faa ejerciendo un rol central decidiendo la direcci\u00f3n del lenguaje, en la comunidad de Python se le conoce como Benevolente Dictador Vitalicio (en ingl\u00e9s: Benevolent Dictator for Life, BDFL). El nombre \"Python\" viene dado por la afici\u00f3n de Van Rossum al grupo Monty Python.\nEl lenguaje de programaci\u00f3n Python fue originalmente desarrollado para el sistema operativo Amoeba.", "sections": [{"name": "\u00cdndice", "text": "1 Principales influencias de otros lenguajes\n2 Cronolog\u00eda de Python\n3 Primera publicaci\u00f3n\n4 Versi\u00f3n 1.0\n4.1 BeOpen\n5 Versi\u00f3n 2.0\n6 Versi\u00f3n 3.0\n6.1 Filosof\u00eda\n6.2 Cronolog\u00eda y compatibilidad\n6.3 Caracter\u00edsticas\n7 V\u00e9ase tambi\u00e9n\n8 Referencias\n9 Enlaces externos", "subsections": []}, {"name": "Principales influencias de otros lenguajes", "text": "El n\u00facleo de la sintaxis de Python y grandes aspectos de su filosof\u00eda fueron heredados directamente del lenguaje de programaci\u00f3n ABC. Por ejemplo el siguiente c\u00f3digo muestra una funci\u00f3n para obtener el conjunto de todas las palabras en un documento en ABC[4]\u200b y en Python:\ndef\nwords\n(\ndocument\n):\ncollection\n=\nset\n()\nfor\nline\nin\n:\nword\n.\nsplit\n():\nif\nnot\nadd\n)\nreturn\nEn ABC no existe propiamente el tipo de dato conjunto, sino algo como multiconjuntos, es decir, si se inserta un elemento dos veces, aparecer\u00e1 dos veces en esa colecci\u00f3n, pero en Python el if puede ser eliminado porque la operaci\u00f3n add sobre los conjuntos en Python no hace nada si el elemento ya est\u00e1 en el conjunto. Se puede observar perfectamente las similitudes entre ambos c\u00f3digos, la sangr\u00eda, el ciclo for, el operador in, pero tambi\u00e9n sus diferencias, como por ejemplo en ABC no se utilizan par\u00e9ntesis y en Python s\u00ed, adem\u00e1s las palabras claves en ABC son escritas en may\u00fasculas as\u00ed como los nombres de los procedimientos o funciones; ABC hace distinci\u00f3n entre procedimiento y funci\u00f3n, otra diferencia con Python.\nLas principales ideas de ABC que influyeron o se incluyeron en Python fueron seg\u00fan el propio Guido:[5]\u200b\nLa sangr\u00eda para agrupar el c\u00f3digo\nEl car\u00e1cter : para indicar que comienza un bloque indentado (despu\u00e9s de pruebas con usuarios)\nEl dise\u00f1o simple de las instrucciones: if, while, for,...\nTuplas, listas, diccionarios (fuertemente modificados en Python)\nTipos de datos inmutables\nNo imponer l\u00edmites, como tama\u00f1o de un array, etc...\nEl \"prompt\" >>>\nOtras ideas que influyeron en la concepci\u00f3n de Python fue tener un lenguaje que pudiera ser tan potente como C pero tambi\u00e9n expresivo para ejecutar \"scripts\" como sh.[6]\u200b De hecho la sintaxis de Python copia much\u00edsimo de C. Por ejemplo, las palabras claves (if, else, while, for, etc.) son las mismas que en C, los identificadores tienen las mismas reglas para nombrarlos que C, y la mayor\u00eda de los operadores est\u00e1ndar tienen el mismo significado que en C. Una de las mayores diferencias es que Python en lugar de usar llaves para agrupar c\u00f3digo usa sangr\u00eda, la otra gran diferencia es que Python usa tipado din\u00e1mico.\nLos generadores e iteradores fueron inspirados por Icon, y fusionados con las ideas de la programaci\u00f3n funcional en un modelo unificado. Modula-3 fue la base del modelo de excepciones y del sistema de m\u00f3dulos.[1]\u200b[3]\u200b Perl contribuy\u00f3 en las expresiones regulares, usadas para la manipulaci\u00f3n de \"string\".[7]\u200b Las adiciones a biblioteca est\u00e1ndar de Python standard library y algunas opciones sint\u00e1cticas fueron influenciadas por Java algunos ejemplos son: el paquete de logging,[8]\u200b introducido en la versi\u00f3n 2.3,[9]\u200b el paquete threading para aplicaciones multihilos,[10]\u200b el parser SAX, introducido en la versi\u00f3n 2.0, y la sintaxis del decorador que usa @,[11]\u200b incluida en la versi\u00f3n 2.4[12]\u200b", "subsections": []}, {"name": "Cronolog\u00eda de Python", "text": "Fechas de publicaci\u00f3n:[13]\u200b[14]\u200b\nComienzo de la implementaci\u00f3n - December, 1989\nPublicaci\u00f3n interna en CWI - 1990\nPython 0.9.0 - 20 de febrero de 1991\t(publicado en alt.sources)[15]\u200b\nPython 0.9.1 - febrero de 1991\nPython 0.9.2 - oto\u00f1o de 1991\nPython 0.9.4 - 24 de diciembre de 1991\nPython 0.9.5 - 2 de enero de 1992 (solo para Macintosh)\nPython 0.9.6 - 6 de abril de 1992\nPython 0.9.7 beta - 1992\nPython 0.9.8 - 9 de enero de 1993\nPython 0.9.9 - 29 de julio de 1993\nPython 1.0 - enero de 1994\nPython 1.5 - 31 de diciembre de 1997\nPython 1.6 - 5 de septiembre de 2000\nPython 2.0 - 16 de octubre de 2000\nPython 2.1 - 17 de abril de 2001\nPython 2.2 - 21 de diciembre de 2001\nPython 2.3 - 29 de julio de 2003\nPython 2.4 - 30 de noviembre de 2004\nPython 2.5 - 19 de septiembre de 2006\nPython 2.6 - 1 de octubre de 2008\nPython 2.7 - 3 de julio de 2010\nPython 3.0 - 3 de diciembre de 2008\nPython 3.1 - 27 de junio de 2009\nPython 3.2 - 20 de febrero de 2011\nPython 3.3 - 29 de septiembre de 2012\nPython 3.4 - 16 de marzo de 2014\nPython 3.5 - 8 de febrero de 2015\nPython 3.6 - 23 de diciembre de 2016\nPython 3.7 - 12 de junio de 2018\nPython 3.8 - 14 de octubre de 2019\nPython 3.9 - 5 de octubre de 2020", "subsections": []}, {"name": "Primera publicaci\u00f3n", "text": "El 20 de febrero de 1991, van Rossum public\u00f3 el c\u00f3digo por primera vez en alt.sources, con el n\u00famero de versi\u00f3n 0.9.0.[15]\u200b En esta etapa del desarrollo ya estaban presentes clases con herencia, manejo de excepciones, funciones y los tipos modulares, como: str, list, dict, entre otros. Adem\u00e1s en este lanzamiento inicial aparec\u00eda un sistema de m\u00f3dulos adoptado de Modula-3; Van Rossum describe el m\u00f3dulo como \u201cuna de las mayores unidades de programaci\u00f3n de Python\u201d.[1]\u200b El modelo de excepciones en Python es parecido al de Modula-3, con la adici\u00f3n de una cl\u00e1usula else.[3]\u200b En el a\u00f1o 1994 se form\u00f3 comp.lang.python, el foro de discusi\u00f3n principal de Python, marcando un hito en el crecimiento del grupo de usuarios de este lenguaje.", "subsections": []}, {"name": "Versi\u00f3n 1.0", "text": "Python llega a la versi\u00f3n 1.0 en enero de 1994. Las caracter\u00edsticas m\u00e1s importantes incluidas en esta publicaci\u00f3n fueron las herramientas de la programaci\u00f3n funcional lambda, reduce, filter y map. Van Rossum ha comentado que \"Python adquiere lambda, reduce(), filter() y map(), cortes\u00eda de un hacker de Lisp que las extra\u00f1aba y envi\u00f3 parches que funcionaban\".[16]\u200b\nLa \u00faltima versi\u00f3n liberada proveniente de CWI fue Python 1.2. En 1995, van Rossum continu\u00f3 su trabajo en Python en la Corporation for National Research Initiatives (CNRI) en Reston, Virginia, donde lanz\u00f3 varias versiones del software.\nPara la versi\u00f3n 1.4, Python adquiri\u00f3 varias caracter\u00edsticas nuevas. Es notable entre estas los argumentos por nombre inspirados por Modula-3 (que tambi\u00e9n son similares a los de Common Lisp) y soporte \"built-in\" para los n\u00fameros complejos.\nDurante su estancia en CNRI, Van Rossum lanz\u00f3 la iniciativa Computer Programming for Everybody (CP4E), con el fin de hacer la programaci\u00f3n m\u00e1s accesible a m\u00e1s gente, con un nivel de 'alfabetizaci\u00f3n' b\u00e1sico en lenguajes de programaci\u00f3n, similar a las habilidades b\u00e1sicas en ingl\u00e9s y matem\u00e1ticas necesarias por muchos empleadores. Python tuvo un papel crucial en este proceso: debido a su orientaci\u00f3n hacia una sintaxis limpia, ya era id\u00f3neo, y las metas de CP4E presentaban similitudes con su predecesor, ABC. El proyecto fue patrocinado por DARPA.[17]\u200b El proyecto CP4E est\u00e1 inactivo, y mientras tanto Python intenta ser f\u00e1cil de aprender y no muy arcano en su sintaxis y sem\u00e1ntica, pero alcanzar a los no-programadores ya no es una preocupaci\u00f3n activa.[18]\u200b", "subsections": [{"name": "BeOpen", "text": "En el a\u00f1o 2000, el equipo principal de desarrolladores de Python se cambi\u00f3 a BeOpen.com para formar el equipo BeOpen PythonLabs. CNRI pidi\u00f3 que la versi\u00f3n 1.6 fuera publicada hasta el punto de desarrollo en que el equipo abandon\u00f3 CNRI. Consecuentemente su agenda de lanzamiento para la versi\u00f3n 1.6 y la versi\u00f3n 2.0 ten\u00edan una significativa cantidad de solapamiento.[19]\u200b Python 2.0 fue el primer y \u00fanico lanzamiento de BeOpen.com. Despu\u00e9s que Python 2.0 fuera publicado por BeOpen.com, Guido van Rossum y los otros desarrolladores de PythonLabs se unieron a Digital Creations.\nLa publicaci\u00f3n de Python 1.6 inclu\u00eda una nueva licencia de CNRI que era substancialmente m\u00e1s larga que la licencia de CWI que hab\u00eda sido usada en las publicaciones anteriores.\nLa nueva licencia inclu\u00eda una cl\u00e1usula estipulando que la licencia estaba gobernada por las leyes del estado de Virginia.  La Free Software Foundation (FSF) argumento la cl\u00e1usula era incompatible con GNU GPL.  Entonces BeOpen, CNRI, y FSF acordaron cambiar Python hacia una licencia de software libre que lo har\u00eda compatible con GPL.  Python 1.6.1 es b\u00e1sicamente el mismo que Python 1.6, con unos arreglos de bugs, y con la nueva licencia compatible con GPL.[20]\u200b"}]}, {"name": "Versi\u00f3n 2.0", "text": "Python 2.0 tom\u00f3 una importante caracter\u00edstica del lenguaje de programaci\u00f3n funcional Haskell: generaci\u00f3n de listas. La sintaxis de Python para esta construcci\u00f3n es muy similar a la de Haskell, salvo por la preferencia de los caracteres de puntuaci\u00f3n en Haskell, y la preferencia de Python por palabras claves. Python 2.0 introdujo adem\u00e1s un sistema de recolecci\u00f3n de basura capaz de recolectar referencias c\u00edclicas.\nPython 2.1 fue un trabajo derivado de Python 1.6.1, as\u00ed como tambi\u00e9n de Python 2.0. Su licencia fue renombrada a: Python Software Foundation License. Todo el c\u00f3digo, documentaci\u00f3n y especificaciones a\u00f1adidas, desde la fecha del lanzamiento de la versi\u00f3n alfa de Python 2.1, pertenece a Python Software Foundation (PSF), una organizaci\u00f3n sin \u00e1nimo de lucro fundada en el a\u00f1o 2001, tomando como modelo la Apache Software Foundation.[20]\u200b Este lanzamiento incluy\u00f3 un cambio en el lenguaje para soportar \u00e1mbitos anidados (m\u00e1s conocido en programaci\u00f3n como \"nested scopes\") como lo soportan otros lenguajes de \"static scoping\" (del cual Scheme es el originador).[21]\u200b (Esta caracter\u00edsticas fue deshabilitada por defecto, y no requerida, hasta Python 2.2.)\nUna gran innovaci\u00f3n en Python 2.2 fue la unificaci\u00f3n de los tipos en Python (tipos escritos en C), y clases (tipos escritos en Python) dentro de una jerarqu\u00eda. Esa unificaci\u00f3n logr\u00f3 un modelo orientado a objetos de Python puro y consistente.[22]\u200b Tambi\u00e9n fueron agregados los generadores que fueron inspirados por el lenguaje Icon.[23]\u200b", "subsections": []}, {"name": "Versi\u00f3n 3.0", "text": "Python 3.0 (tambi\u00e9n conocido como \"Python 3000\" o \"Py3K\") fue dise\u00f1ado para rectificar ciertas fallas fundamentales en el dise\u00f1o del lenguaje (los cambios requeridos no pod\u00edan ser implementados mientras se mantuviera compatibilidad hacia atr\u00e1s con la serie 2.x).  El principio que gu\u00eda Python 3 es: \"reducir la duplicaci\u00f3n de caracter\u00edsticas eliminando viejas formas de hacer las cosas (reduce feature duplication by removing old ways of doing things)\".", "subsections": [{"name": "Filosof\u00eda", "text": "Python 3.0 fue desarrollado con la misma filosof\u00eda que en las versiones anteriores. Sin embargo, como Python ha acumulado nuevas y redundantes formas de programar la misma tarea, Python 3.0 ha hecho \u00e9nfasis en eliminar constructores duplicados y m\u00f3dulos, en consecuencia con \"Debe haber un\u2014 y preferiblemente solo un \u2014modo obvio de hacerlo\".\nA pesar de esto, Python 3.0 se mantiene como un lenguaje de programaci\u00f3n multiparadigma. Los programadores todav\u00eda tienen opciones entre orientaci\u00f3n a objetos, programaci\u00f3n estructurada, programaci\u00f3n funcional y otros paradigmas, pero dentro de estas amplias opciones, los detalles intentan ser m\u00e1s obvios en Python 3.0 que como eran en Python 2.x."}, {"name": "Cronolog\u00eda y compatibilidad", "text": "Python 3.0 fue liberado el 3 de diciembre de 2008.[24]\u200b\nLas series Python 2.x y Python 3.x estaban planeadas para coexistir por varias publicaciones lanz\u00e1ndolas en paralelo, con la serie 2.x existente mayormente por compatibilidad y con algunas nuevas caracter\u00edsticas siendo importadas hacia atr\u00e1s de la serie 3.x.\nPython 2.6 fue liberado para coincidir con Python 3.0, e incluye algunas caracter\u00edsticas de esa publicaci\u00f3n, as\u00ed como un modo de \"alertas (warnings)\" que resalta el uso de caracter\u00edsticas que han sido eliminadas en Python 3.0.[25]\u200b\nSimilarmente, Python 2.7 coincide e incluye caracter\u00edsticas de Python 3.1,[26]\u200b que fue publicado el 26 de junio de 2009.\nPython 2.7 fue la \u00faltima publicaci\u00f3n en la serie 2.x;[27]\u200b las publicaciones en paralelo terminaron con Python 3.2.\nPython 3.0 rompe la compatibilidad hacia atr\u00e1s. El c\u00f3digo de Python 2.x no necesariamente debe \"correr\" en Python 3.0 sin modificarlo. Hay cambios b\u00e1sicos tales como el cambio de print en una funci\u00f3n (por lo tanto cualquier uso como print \"Hello Python\" provocar\u00e1 un error en Python 3.x), y el cambio a Unicode para todos los textos \"strings\". El tipado din\u00e1mico de Python combinado con los planes para cambiar la sem\u00e1ntica de ciertos m\u00e9todos de los diccionarios, por ejemplo, hacen que convertir perfectamente de Python 2.x a Python 3.0 sea muy dif\u00edcil de manera autom\u00e1tica. Sin embargo, una herramiento llamada \"2to3\" puede hacer la mayor\u00eda del trabajo de \"traducci\u00f3n\", se\u00f1alando \u00e1reas que confusas para ella usando comentarios o alertas. Incluso en la etapa \"alpha\", 2to3 se mostraba claramente satisfactoria para ejecutar las traducciones del c\u00f3digo.[28]\u200b Para proyectos que requer\u00edan compatibilidad de ambas versiones 2.x y 3.x, el equipo de Python recomend\u00f3 guardar el c\u00f3digo fuente de las versiones 2.x, y generar versiones a Python 3.x usando 2to3. Se desaconsej\u00f3 esta forma de conversi\u00f3n a Python 3.x si el c\u00f3digo realmente necesitase ejecutarse en Python 2.x."}, {"name": "Caracter\u00edsticas", "text": "Algunos de los mayores cambios anunciados para Python 3.0 fueron:\nCambiar la instrucci\u00f3n print de modo que sea una funci\u00f3n \"built-in\", no una instrucci\u00f3n. Esto ha hecho que sea m\u00e1s f\u00e1cil cambiar un m\u00f3dulo para usar una funci\u00f3n print diferente, as\u00ed como hacer la sintaxis m\u00e1s regular.  En Python 2.6 y 2.7 esta caracter\u00edstica puede ser habilitada usando from __future__ import print_function.[29]\u200b\nMoviendo reduce (pero no map o filter) fuera del espacio de nombres \"built-in\" dentro de \"functools\".[30]\u200b\nAdicionar soporte para anotaci\u00f3n opcional en funciones que pueda ser usar para la declaraci\u00f3n informal de tipos u otros prop\u00f3sitos.[31]\u200b\nUnificar los tipos str/unicode, representando texto, e introduciendo un tipo immutable bytes; y un m\u00e1s correspondiente tipo mutable bytearray, ambos de los cuales representan \"arrays\" de bytes;[32]\u200b\nEliminar compatibilidad hacia atr\u00e1s, incluidas clases \"old-style\", excepciones \"string\", e impl\u00edcitos \"imports\" relativos.\nLas subsecuentes publicaciones de la serie Python 3.x han incluido sustanciales nuevas caracter\u00edsticas; todas al corriente del desarrollo que el lenguaje ha tenido en la serie 3.x."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Python\nDjango\nFlask", "subsections": []}, {"name": "Referencias", "text": "\u2191 a b c \u00abThe Making of Python\u00bb. Artima Developer. Consultado el 22 de marzo de 2007.\u00a0\n\u2191 \u00abA Brief Timeline of Python\u00bb. Guido Van Rossum. Consultado el 5 de enero de 2015.\u00a0\n\u2191 a b c \u00abWhy was Python created in the first place?\u00bb. Python FAQ. Consultado el 5 de enero de 2015.\u00a0\n\u2191 \u00abThe ABC Programming Language\u00bb. Consultado el 5 de enero de 2015.\u00a0\n\u2191 \u00abThe History of Python\u00bb. Consultado el 5 de enero de 2015.\u00a0\n\u2191 \u00abInterview with Guido Van Rossum\u00bb. julio de 1998. Archivado desde el original el 1 de mayo de 2007. Consultado el 29 2007.\u00a0\n\u2191 https://docs.python.org/library/re.html\n\u2191 \u00abPEP 282 - A Logging System\u00bb. Python.org. Consultado el 24 de noviembre de 2008.\u00a0\n\u2191 \u00ab8 PEP 282: The logging Package\u00bb. Python.org. Archivado desde el original el 20 de diciembre de 2008. Consultado el 24 de noviembre de 2008.\u00a0\n\u2191 https://docs.python.org/library/threading.html\n\u2191 \u00abPEP 318 - Decorators for Functions and Methods\u00bb. Python.org. Consultado el 24 de noviembre de 2008.\u00a0\n\u2191 \u00ab5 PEP 318: Decorators for Functions and Methods\u00bb. Python.org. Archivado desde el original el 10 de diciembre de 2008. Consultado el 24 de noviembre de 2008.\u00a0\n\u2191 \u00abCopia archivada\u00bb. Archivado desde el original el 22 de diciembre de 2015. Consultado el 6 de enero de 2015.\u00a0\n\u2191 http://python-history.blogspot.com/2009/01/brief-timeline-of-python.html\n\u2191 a b van Rossum, Guido (20 de enero de 2009). \u00abA Brief Timeline of Python\u00bb. The History of Python (en ingl\u00e9s). Consultado el 14 de febrero de 2021.\u00a0\n\u2191 Guido Van Rossum. \u00abThe fate of reduce() in Python 3000\u00bb. Artima Developer. Consultado el 22 de marzo de 2007.\u00a0\n\u2191 Computer Programming for Everybody\n\u2191 \u00abComputer Programming for Everybody\u00bb. Python Software Foundation. Archivado desde el original el 29 de marzo de 2007. Consultado el 22 de marzo de 2007.\u00a0\n\u2191 What's New in Python 2.0\n\u2191 a b \u00abHistory of the software\u00bb. Python Library Reference. Archivado desde el original el 29 de marzo de 2007. Consultado el 22 de marzo de 2007.\u00a0\n\u2191 PEP 227 -- Statically Nested Scopes\n\u2191 PEPs 252 and 253: Type and Class Changes\n\u2191 PEP 255: Simple Generators\n\u2191 Python 3.0 release\n\u2191 Neal Norwitz; Barry Warsaw (29 de junio de 2006). \u00abPEP 361 -- Python 2.6 and 3.0 Release Schedule\u00bb. Consultado el 7 de octubre de 2012.\u00a0\n\u2191 A.M. Kuchling (3 de julio de 2010). \u00abWhat\u2019s New in Python 2.7\u00bb. Consultado el 7 de octubre de 2012. \u00abMuch as Python 2.6 incorporated features from Python 3.0, version 2.7 incorporates some of the new features in Python 3.1. The 2.x series continues to provide tools for migrating to the 3.x series.\u00a0\u00bb\u00a0\n\u2191 Barry Warsaw (9 de noviembre de 2011). \u00abPEP 404 -- Python 2.8 Un-release Schedule\u00bb. Consultado el 7 de octubre de 2012.\u00a0\n\u2191 Sam Ruby, 2to3, September 1, 2007\n\u2191 PEP 3105\n\u2191 Thread on Artima programmer blog\n\u2191 PEP 3197\n\u2191 PEP 3137: Immutable Bytes and Mutable Buffer", "subsections": []}, {"name": "Enlaces externos", "text": "Guido Van Rossum blog on Python's History", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Huevo_de_pascua_(virtual)", "title": "Huevo de pascua (virtual)", "summary": "Un huevo de Pascua o huevo pascual[1]\u200b(en ingl\u00e9s easter egg) es un mensaje o capacidad oculta contenido en pel\u00edculas, series de televisi\u00f3n, discos compactos, DVD, Blu-ray, programas inform\u00e1ticos o videojuegos.\nEntre los programadores, parece haber una motivaci\u00f3n en dejar una marca personal, casi un toque art\u00edstico sobre un producto intelectual, el cual es por naturaleza est\u00e1ndar y funcional.\nActualmente, los huevos de Pascua tratan de entretener, buscar nuevos trabajos potenciales, pagar tributo a los ejecutivos o divertir a los programadores.[2]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Origen\n2 En videojuegos\n3 Computaci\u00f3n\n3.1 Software\n3.1.1 DEC\n3.1.2 Microsoft\n3.1.3 Linux\n3.1.4 Apple\n3.1.5 Google\n3.1.6 WordPress\n3.2 Hardware\n4 Tesla\n5 V\u00e9ase tambi\u00e9n\n6 Referencias\n7 Enlaces externos", "subsections": []}, {"name": "Origen", "text": "El origen del t\u00e9rmino se encuentra en el videojuego de Atari Adventure de 1979, que conten\u00eda el primer huevo de Pascua virtual que se conoce, introducido por el programador Warren Robinett.[3]\u200b\nEn aquel tiempo Atari no inclu\u00eda los nombres de los programadores en los cr\u00e9ditos del juego, por temor a que los competidores trataran de robarles sus empleados. Robinett estaba en desacuerdo con su supervisor sobre esta falta de reconocimiento y program\u00f3 el mensaje \u00abCreado por Warren Robinett\u00bb (Created by Warren Robinett) para que apareciera cuando el jugador mov\u00eda su avatar sobre un pixel espec\u00edfico, llamado punto gris, durante una cierta parte del juego y entrando en una habitaci\u00f3n secreta mediante una elaborada secuencia de pasos. Robinett lo pens\u00f3 como una maniobra de autopromoci\u00f3n.\nAtari vendi\u00f3 un mill\u00f3n de unidades del juego a 25 USD cada uno. Robinett se enfad\u00f3 con Atari porque ten\u00eda un salario de 22\u00a0000 USD al a\u00f1o, ning\u00fan bonus y no se le hac\u00eda llegar el correo de los jugadores.\nCuando Robinett abandon\u00f3 Atari, no inform\u00f3 a la compa\u00f1\u00eda del reconocimiento que hab\u00eda incluido en el juego. Poco despu\u00e9s el punto gris y su mensaje fue descubierto por Adam Clayton, un jugador de 15 a\u00f1os de Salt Lake City, que mand\u00f3 una carta a Atari el 4 de agosto de 1980.[4]\u200b La direcci\u00f3n de Atari inicialmente quiso retirar el mensaje y lanzar el juego otra vez, pero resultaba demasiado costoso. En su lugar, Steve Wright, director de desarrollo de software de la divisi\u00f3n de consumo de Atari, sugiri\u00f3 que se mantuviera el mensaje y que se potenciara su inclusi\u00f3n en juegos futuros. Los llam\u00f3 huevos de Pascua porque no estaban documentados y los encontraban los jugadores.\n[5]\u200b\n[6]\u200b\nEn la pel\u00edcula Ready Player One de Steven Spielberg el protagonista debe jugar el juego Adventure de Atari y descubrir su huevo de Pascua.\nMientras lo est\u00e1 jugando, Parzival dice:\n[2]\u200b", "subsections": []}, {"name": "En videojuegos", "text": "El primer juego de aventuras en texto Colossal Cave Adventure (1976), del que Adventure deriv\u00f3, incluy\u00f3 varias palabras secretas. Una de ellas era \"xyzzy\", un comando que permit\u00eda al jugador moverse entre dos puntos del juego.[7]\u200b\nEn 2004 se encontr\u00f3 un huevo de Pascua que mostraba el apellido del programador Bradley Reid-Selth en el videojuego Video Whizball (1978), un juego para el sistema Fairchild Channel F.[8]\u200b\nSeg\u00fan la investigaci\u00f3n de Ed Fries, el primer huevo de Pascua conocido en un juego arcade de monedas estaba en Starship 1 (1977), programado por Ron Milner. Pulsando los controles en un orden determinado, el jugador obten\u00eda en la pantalla el mensaje \u00ab\u00a1Hola, Ron!\u00bb y diez partidas gratis.\nHab\u00eda que introducir una moneda mientras se manten\u00edan pulsados los botones \u00abphasor\u00bb y \u00abstart\u00bb. Entonces, se soltaban esos botones y r\u00e1pidamente se mov\u00eda la palanca \u00abslow\u00bb.\nFries lo describe como el primer juego arcade conocido que se ajusta a la definici\u00f3n de huevo de Pascua. La existencia de este huevo de Pascua no se public\u00f3 hasta 2017, lo que llev\u00f3 a Fries a sugerir que los m\u00e1s de cien juegos arcade que preceden a Starship 1 podr\u00edan contener huevos de Pascua no descubiertos.[9]\u200b[10]\u200b\nDesde Adventure hay una larga historia de desarrolladores de videojuegos colocando huevos de Pascua en sus juegos.[11]\u200b\n:\u200a19\u200a\nLa mayor\u00eda de los huevos de Pascua son intencionados, un intento de comunicarse con el jugador o una forma de tomarse la revancha por desaires de la direcci\u00f3n de la empresa. Los huevos de Pascua en los videojuegos han tomado una variedad de formas, desde las pantallas puramente ornamentales hasta las mejoras est\u00e9ticas que cambian alg\u00fan elemento del juego durante la partida. El huevo de Pascua incluido en Age of Empires (1997) es un ejemplo de lo \u00faltimo: los proyectiles de la catapulta se cambian de piedras a vacas.[11]\u200b\n:\u200a19\u200a\nLos huevos de Pascua m\u00e1s elaborados incluyen niveles secretos y habitaciones de desarrolladores, que son \u00e1reas secretas del juego totalmente funcionales.\nLas habitaciones de desarrolladores frecuentemente incluyen bromas internas de los seguidores o del equipo de desarrollo y difieren de las habitaciones de depuraci\u00f3n en que est\u00e1n destinadas a que el jugador las encuentre.\nAlgunos juegos llegan a incluir minijuegos ocultos como huevos de Pascua. En el juego Day of the Tentacle (1993) de LucasArts, se puede jugar el juego original Maniac Mansion (1987) en su versi\u00f3n completa usando un ordenador personal virtual en la habitaci\u00f3n de un personaje.[12]\u200b[13]\u200b\nOtros huevos de Pascua se originaron no intencionadamente. El c\u00f3digo Konami se origin\u00f3 en el juego Gradius (1985) de Konami para Nintendo Entertainment System. El programador Kazuhisa Hashimoto cre\u00f3 un parte de c\u00f3digo para ayudarle a depurar el juego d\u00e1ndole salud y fuerzas adicionales a su avatar para avanzar en el juego r\u00e1pidamente. Esas partes de c\u00f3digo normalmente se retiran del juego antes de su lanzamiento. En el caso de Gradius, Hashimoto se olvid\u00f3 de retirarlo y el c\u00f3digo fue descubierto por los jugadores. Su popularidad inspir\u00f3 a Konami a reutilizar el c\u00f3digo y mantenerlo como huevo de Pascua en sus juegos futuros.[8]\u200b[12]\u200b[14]\u200b\nHay problemas t\u00e9cnicos que crean huevos de Pascua no intencionados. Jon Burton, fundador de Traveller's Tales, anunci\u00f3 que muchos de los huevos de Pascua aparentes en sus juegos para Mega Drive surgieron como resultado de trucos de programaci\u00f3n para atajar algunas dificultades para conseguir la estricta certificaci\u00f3n de Sega para sus juegos. La captura de excepciones durante la ejecuci\u00f3n pod\u00eda mantener usable el juego y pasar la certificaci\u00f3n.\nPor ejemplo, golpear el cartucho de Sonic 3D Blast (1996) mientras se introduc\u00eda en la consola llevar\u00eda el juego hasta la pantalla secreta de selecci\u00f3n de nivel, que seg\u00fan Burton explic\u00f3 era la forma de manejar cualquier error de procesador sin identificar que lo llevar\u00eda al bloqueo, como cuando temporalmente se perd\u00eda la comunicaci\u00f3n entre el cartucho y el microprocesador.[15]\u200b", "subsections": []}, {"name": "Computaci\u00f3n", "text": "", "subsections": [{"name": "Software", "text": "En software los huevos de Pascua son respuestas secretas que se producen como resultado a una serie de comandos no documentados. Los resultados var\u00edan entre un mensaje o imagen hasta una p\u00e1gina de cr\u00e9ditos a programadores o un video oculto dentro de un programa.\nMuchos ordenadores personales tienen huevos de Pascua ocultos en la memoria de solo lectura, que incluyen listas de desarrolladores, exhortos pol\u00edticos, trozos de m\u00fasica o im\u00e1genes del equipo de desarrollo.\nDEC\nEn el sistema operativo TOPS-10 (1967) para el ordenador DEC PDP-10 el comando make se usa para llamar al editor de texto TECO y crear un fichero. Si el argumento para el nombre de fichero era love, el comando completo quedaba como make love (haz el amor). Esto produc\u00eda una pausa y la respuesta not war? (\u00bfno la guerra?) antes de crear el fichero.[16]\u200b\nAlgunas versiones del sistema operativo DEC OpenVMS tienen c\u00f3digos de estado de salida ocultos, incluyendo una referencia al sketch Dirty Hungarian Phrasebook de Monty Python\u00a0: \"exit %xb70\" devuelve el mensaje \"%SYSTEM-W-FISH, my hovercraft is full of eels\" (%Sistema-con-pescado, mi hovercraft est\u00e1 lleno de anguilas), mientras que \"exit %x34b4\" devuelve una referencia a un antiguo meme: \"%SYSTEM-F-GAMEOVER, All your base are belong to us\" (%Sistema-F-juego-finalizado, Toda tu base nos pertenece).[17]\u200b\nMicrosoft\nLa versi\u00f3n de Microsoft Office de 1997 inclu\u00eda un simulador de vuelo dentro de Microsoft Excel y un juego de m\u00e1quina de bolas (pinball) en Microsoft Word.[18]\u200b[19]\u200b\nLos sistemas operativos Microsoft Windows anteriores a XP tienen el huevo de Pascua de volc\u00e1n. En el salvapantallas de texto si se introduce \u00abvolcano\u00bb se muestran todos los nombres de volcanes en los Estados Unidos. Microsoft retir\u00f3 este huevo de Pascua en XP, pero a\u00f1adi\u00f3 otros.\nMicrosoft Excel\u00a095 conten\u00eda un juego de acci\u00f3n oculto similar a Doom (1993) llamado The Hall of Tortured Souls.[20]\u200b\nDesde 2002 Microsoft no permite c\u00f3digo oculto o no documentado como parte de su iniciativa de computaci\u00f3n de confianza (trustworthy computing).[21]\u200b\nLinux\nDentro del sistema operativo Linux Debian la herramienta apt-get tiene un huevo de Pascua que dibuja una vaca con caracteres ASCII cuando se introduce en el terminal apt-get moo[22]\u200b\nEn un terminal Linux la orden apt-get help produce un texto de ayuda que al final contiene la frase Este APT tiene poderes de Super Vaca.[23]\u200b\nEn el editor de texto vim la orden :help 42 produce el texto \u00abWhat is the meaning of life, the universe and everything?  42. Douglas Adams, the only person who knew what this question really was about is now dead, unfortunately. So now you might wonder what the meaning of death is...\u00a0\u00bb (\u00ab\u00bfCu\u00e1l es el sentido de la vida, el universo y todo? 42. Douglas Adams, la \u00fanica persona que sab\u00eda de qu\u00e9 iba esta pregunta, ahora est\u00e1 muerta, desafortunadamente. As\u00ed que ahora te podr\u00edas preguntar cu\u00e1l es el sentido de la muerte...\u00bb).\nApple\nEn los comienzos de Apple Steve Jobs ped\u00eda a sus ingenieros que firmaran su trabajo como artistas. Cada programa incluido en el Macintosh ten\u00eda el men\u00fa \u00abAcerca de\u00bb que mostraba claramente los cr\u00e9ditos. Esto hizo que los usuarios conocieran a gente como Andy Hertzfeld, Bill Atkinson, Bruce Horn, Steve Capps o Susan Kare.\nJobs hizo firmar en el molde de la carcasa a todos los que participaron en el proyecto Macintosh, de modo que cuando se abre uno de los Macintosh originales se pueden ver todas esas firmas.\nEn el PowerMacintosh con System 7.5, si se escribe \u00absecret about box\u00bb en el editor SimpleText, y se arrastra al escritorio, aparece una ventana que contiene una bandera con una iguana y el texto \u00abiguana iguana powersurgius\u00bb. La bandera ondea seg\u00fan la posici\u00f3n del cursor y al rato aparece una foto del equipo de desarrollo con los nombres de todos en una caja inferior.\nSteve Jobs, tras su retorno a la compa\u00f1\u00eda, prohibi\u00f3 los huevos de Pascua como una forma de evitar que otras compa\u00f1\u00edas robaran a Apple los ingenieros con talento. En un tiempo en el que la empresa se hund\u00eda r\u00e1pidamente dijo que no ten\u00eda sentido facilitar las cosas a la competencia.\n[24]\u200b\nTras la muerte de Jobs el primer huevo de Pascua apareci\u00f3 en 2012 tras una actualizaci\u00f3n de la Mac App Store para OS X Mountain Lion, en la que las aplicaciones descargadas ten\u00edan temporalmente como fecha de descarga la de 24 de enero de 1984, la fecha de lanzamiento del Macintosh.[24]\u200b\nGoogle\nDan Sandler, cuando trabajaba en el software Android, dijo que los huevos de Pascua ayudaban a establecer el software como una forma de arte, siguiendo los pasos de pintores, m\u00fasicos y artesanos que introduc\u00edan peque\u00f1as bromas y referencias dentro de su trabajo desde hace siglos.\nPara la versi\u00f3n Android P crearon una app secreta de dibujo en la que los trazos desaparecen al poco tiempo y la obra no se puede guardar.\nEn la divisi\u00f3n de Google Maps lanzaron el huevo de Pascua el 10 de marzo de 2018, \u00abD\u00eda Internacional de Mario\u00bb (Mar10), en el que cambiaron el punto azul de posici\u00f3n por el coche de Mario Kart.\nLos huevos de Pascua est\u00e1n incorporados en la cultura de Google y tienen un grupo de correo interno sobre huevos de Pascua (llamado Poultry). Crearon herramientas de software para incorporar f\u00e1cilmente huevos de Pascua a los resultados de b\u00fasqueda.[2]\u200b\nEl buscador de Google a veces da huevos de Pascua como respuesta a ciertas preguntas. Por ejemplo, Google Maps una vez respondi\u00f3 a la petici\u00f3n de indicaciones para ir de Jap\u00f3n a China diciendo que usara un jet-ski para atravesar el Oc\u00e9ano Pac\u00edfico.\nEn Google Earth la combinaci\u00f3n de teclas \nCtrl\n+\nAlt\n+\nA\npone al usuario en un simulador de vuelo que le permite volar sobre la superficie de la Tierra.[25]\u200b\nWordPress\nEn el contrato de t\u00e9rminos de servicio de WordPress hay un p\u00e1rrafo de renuncia de garant\u00edas que dice:\nEl enlace abre una fotograf\u00eda de un bistec de carne y un tributo al restaurante de barbacoa Memphys Minnie de San Francisco.\nEste huevo de Pascua se ha copiado a muchas empresas que utilizan las plantillas de WordPress y no han adaptado el contrato de t\u00e9rminos de servicio.[2]\u200b"}, {"name": "Hardware", "text": "Los huevos de Pascua tambi\u00e9n pueden encontrarse en hardware o firmware de algunos aparatos como la BIOS ROM de algunos ordenadores personales.\nEl 13 de noviembre algunas AMI BIOS en lugar de arrancar se ponen a tocar en bucle la melod\u00eda de feliz cumplea\u00f1os hasta que se aprieta una tecla.[26]\u200b\nLos primeros Apple Macintosh ten\u00edan fotograf\u00edas del equipo de desarrollo en la ROM. Estos huevos de Pascua fueron muy publicitados en la prensa de entonces.[27]\u200b[28]\u200b[29]\u200b\nEn el Radio Shack Color Computer\u00a03 si se presionan a la vez las teclas \nCtrl\n+\nAlt\n+\nReset\n muestra la foto de tres desarrolladores que est\u00e1 almacenada en la ROM.[30]\u200b\nAlgunos osciloscopios contienen huevos de Pascua. El osciloscopio HP\u00a054600B, contiene un clon del juego Tetris (1984),[31]\u200b\nEl osciloscopio HP\u00a054622D contiene un juego similar a Asteroids (1979) llamado Rocks.[32]\u200b\nEl osciloscopio Tektronix 1755A Vector and Waveform Monitor muestra un pez nadando cuando en el men\u00fa de configuraci\u00f3n se selecciona \u00abRemote>Software version\u00bb.[33]\u200b\nLa calculadora Hewlett-Packard HP-45 (lanzada en 1973) contiene un cron\u00f3metro no documentado al que se accede mediante una secuencia de teclas.[34]\u200b\nEl ordenador Commodore Amiga 1000 tiene dentro de la carcasa las firmas de los componentes de los equipos de dise\u00f1o y desarrollo. Se incluye la firma de Jay Miner y la huella de su perro Mitchy.[35]\u200b\nLos ordenadores Commodore Amiga el sistema operativo Amiga OS contiene mensajes ocultos.[36]\u200b\n[37]\u200b\nMuchos dise\u00f1adores de circuitos integrados (chips) incluyen elementos gr\u00e1ficos llamados \u00abchip art\u00bb, que incluyen im\u00e1genes, frases, iniciales de desarrolladores, logos y m\u00e1s. Este arte, como el resto del chip, se reproduce en cada copia por litograf\u00eda y grabado. Solo se hace visible cuando se abre el chip y se examina con un microscopio.[38]\u200b\nA mediados de la d\u00e9cada de 1980 en un laboratorio de Kombinat Mikroelektronik Erfurt del Ministerio de Interior de la antigua Rep\u00fablica Democr\u00e1tica Alemana (RDA) se descubri\u00f3 un mensaje dentro de un microprocesador DEC cuando estaban analizando el chip. Estaba escrito en el nivel de metalizaci\u00f3n, que sirve para conectar los distintos componentes individuales en un circuito integrado. Como ese nivel no est\u00e1 arriba, el texto solo se pod\u00eda encontrar cuando se retiraba capa a capa para entender la tecnolog\u00eda de fabricaci\u00f3n mediante ingenier\u00eda inversa.\nLa foto original del texto est\u00e1 en algunos archivos de la Stasi (BStU, Ast. Erfurt, Abt. XVIII, Bd. 13, Bl. 70).[39]\u200b\nEl microchip CVAX de la CPU MicroVAX conten\u00eda grabada la frase en alfabeto cir\u00edlico:\nLos ingenieros de DEC intentaron copiar el eslogan de las tarjetas Hallmark que dec\u00eda:\ny lo cambiaron a:\nEn 1983, una fuente de inteligencia comunic\u00f3 a DEC que un ordenador VAX-11/780 que estaba operando en un complejo de misiles sovi\u00e9ticos SS-20 ten\u00eda escrita esa frase sobre la carcasa.[38]\u200b\nSabiendo que algunos CVAX terminar\u00edan en la Uni\u00f3n Sovi\u00e9tica, a pesar de la prohibici\u00f3n sobre su venta, DEC decidi\u00f3 incluir la frase para que los sovi\u00e9ticos supieran que estaban pensando en ellos cuando trataran de copiar el microprocesador con t\u00e9cnicas de ingenier\u00eda inversa.[40]\u200b[38]\u200b\nLa traducci\u00f3n al ruso es bastante mala y probablemente fue hecha palabra a palabra usando un diccionario.[41]\u200b"}]}, {"name": "Tesla", "text": "Art\u00edculo principal:\nTesla es una \u00abempresa de software que fabrica ordenadores sobre ruedas\u00bb. Desde sus inicios ha incluido huevos de Pascua y se han descubierto entre otros:\nModo Romance: La pantalla muestra una hoguera, la calefacci\u00f3n se enciende y suenan canciones rom\u00e1nticas.[43]\u200b\nModo Santa Claus: El icono del coche se transforma en trineo, caen copos de nieve y el intermitente suena como una campanilla.\nModo de Prueba de Emisiones: Suenan flatulencias en el punto determinado y a discreci\u00f3n.[44]\u200b\nRegreso al Futuro: Con la bater\u00eda cargada para una autonom\u00eda de 121 km (o 121 millas), se abre la APP del tel\u00e9fono y se toca en el icono de la bater\u00eda, aparecen m\u00faltiples referencias a la pel\u00edcula de 1985 Back to the Future.[45]\u200b\nMonty Python: Cambiando el nombre del coche a Patsy, Rabbit of Caerbannog, Mr. Creosote, Biggus Dickus o Unladen Swallow activar\u00e1 el pie de Cupido.[46]\u200b\nGu\u00eda del autoestopista gal\u00e1ctico: Si se intenta cambiar el nombre del coche a \u00ab42\u00bb este cambiar\u00e1 a \u00abLife, the Universe, and Everything\u00bb (La vida, el universo y todo).\nSpinal Tap: El volumen de sonido sube hasta 11 como gui\u00f1o a la pel\u00edcula This is Spinal Tap (1984) dirigida por Rob Reiner. En la pel\u00edcula falso documental un m\u00fasico muestra su amplificador Marshall en el que todos los diales llegan hasta 11.[47]\u200b\nAhoy-Hoy: Si se aprieta el icono de tel\u00e9fono durante tres segundos el texto cambia a Ahoy-Hoy, que fue la frase propuesta por el inventor del tel\u00e9fono, Alexander Graham Bell, para responder un tel\u00e9fono.\n1984: Los discos duros usados para el modo Centinela se pueden formatear en FAT32 o EXT4. Cuando el formato es EXT4 las grabaciones tendr\u00e1n como propietario y grupo el \u00ab1984\u00bb. Es un homenaje a la novela de ficci\u00f3n dist\u00f3pica 1984 escrita por George Orwell entre 1947 y 1948 y publicada el 8 de junio de 1949. La novela populariz\u00f3 los conceptos del omnipresente y vigilante Gran Hermano.\nMarte: Tras la activaci\u00f3n la pantalla muestra la superficie de Marte en lugar de la de la Tierra.\nHecho en la Tierra: Los Tesla Roadster llevan escrito en un circuito impreso \u00abHecho en la Tierra por humanos\u00bb (\u00abMade on Earth by humans\u00bb).93 9495 El circuito impreso PCB lleva los fusibles de 150A en la l\u00ednea de entrada de corriente. El n\u00famero de pieza es ASSY 09-000226-01 REV.[48]\u200b\nS3XY: En el sitio web de Tesla y en sus presentaciones el orden en que se muestran los modelos no es el cronol\u00f3gico y seg\u00fan Elon Musk est\u00e1 hecho a prop\u00f3sito para que sus letras formen el acr\u00f3nimo \u00abS3XY\u00bb que visualmente se parece a \u00abSEXY\u00bb.\nSuperbottle: Un sofisticado dep\u00f3sito para el sistema de refrigeraci\u00f3n del Tesla Model 3 lleva impreso en relieve la palabra \u00abSUPERBOTTLE\u00bb (Superbotella). Tambi\u00e9n lleva impresa una caricatura de una botella con capa al estilo de los superh\u00e9roes. La caricatura tiene brazos y piernas musculados y lleva la T del logo de Tesla en el pecho.[49]\u200b\nOctovalve: El dep\u00f3sito del sistema de refrigeraci\u00f3n del Tesla Model Y tiene impresa en relieve una caricatura de un pulpo con el s\u00edmbolo estrellado de un copo de nieve (octovalve).[50]\u200b[51]\u200b[52]\u200b[53]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Entrada ficticia\nBomba l\u00f3gica", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abdiccionario de la lengua espa\u00f1ola\u00bb.\u00a0\n\u2191 a b c d Pogue, David (8 de agosto de 2019). \u00abThe Secret History of 'Easter Eggs'\u00bb. The New York Times. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 Robinett, Warren: Adventure as a Video Game. Adventure for the Atari 2600. In: Katie Salen a. Eric Zimmerman (eds.): The Game Design Reader. A Rules of the Play Anthology. MIT Press 2006, p. 690\u2013713 (here p. 713) ISBN 0-262-19536-4\n\u2191 \nWayback Machine, ed. (4 de agosto de 1980). \u00abLetter to Atari\u00bb. 2600 Connections. Archivado desde el original el 13 de octubre de 2016. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nBaker, Chris (13 de marzo de 2015). \u00abHow One Man Invented the Console Adventure Game\u00bb. WIRED. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nSalen, Katie; Zimmerman, Eric (2005).  MIT Press, ed. The Game Design Reader: A Rules of Play Anthology. Cambridge, Massachusetts. pp.\u00a0690-713. ISBN\u00a00262195364. OCLC\u00a058919795.\u00a0\n\u2191 \nJerz, Dennis G. (2007). \u00abSomewhere Nearby is Colossal Cave: Examining Will Crowther's Original \"Adventure\" in Code and in Kentucky\u00bb.  En The Alliance of Digital Humanities Organizations, ed. Digital Humanities Quarterly 1 (2). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 a b \nWolf, Mark J.P. (2012).  Greenwood, ed. Encyclopedia of Video Games: The Culture, Technology, and Art of Gaming. Santa Barbara, California. p.\u00a0177. ISBN\u00a09780313379369.\u00a0\n\u2191 \nMachkovech, Sam (22 de marzo de 2017). \u00abThe arcade world's first Easter egg discovered after fraught journey\u00bb. Ars Technica (en ingl\u00e9s estadounidense). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nFries, Ed (24 de marzo de 2017). \u00abThe Hunt For The First Arcade Game Easter Egg\u00bb. Kotaku. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 a b \nConsalvo, Mia (2007).  MIT Press, ed. Cheating: Gaining Advantage in Videogames. Cambridge, Massachusetts. ISBN\u00a09780262033657.\u00a0\n\u2191 a b \nBj\u00f6rk, Staffan; Holopainen, Jussi (2005).  Charles River Media, ed. Patterns In Game Design (1 edici\u00f3n). Hingham, Massachusetts. p.\u00a0235. ISBN\u00a09781584503545. Consultado el 25 de enero de 2013.\u00a0\n\u2191 \nMeckler Publishing, ed. (1 de febrero de 1994). \u00abOptical Information Systems Update/library & Information Center Applications\u00bb. CD-ROM World (en ingl\u00e9s) 9 (1\u20135). Consultado el 4 de noviembre de 2017. \u00abThe best Easter egg of all is the entire Maniac Mansion game, which appears on a computer in Doctor Fred's mansion. Users can play the original game in its entirety.\u00a0\u00bb\u00a0\n\u2191 \nGarmon, Jay (5 de marzo de 2007). \u00abGeek Trivia: The cheat goes on\u00bb. TechRepublic (en ingl\u00e9s). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nOrland, Kyle (4 de octubre de 2017). \u00abHow hitting a game cartridge unlocks gaming's weirdest Easter egg\u00bb. Ars Technica (en ingl\u00e9s estadounidense). Consultado el 4 de octubre de 2017.\u00a0\n\u2191 \nMontfort, Nick; Bogost, Ian (2009).  MIT Press, ed. Racing the Beam: The Atari Video Computer System. Cambridge, Massachusetts. p.\u00a059. ISBN\u00a09780262012577. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \n\u00abOpenVMS Undocumented Features\u00bb. PARSEC Group (en ingl\u00e9s). Consultado el 6 de abril de 2016.\u00a0\n\u2191 \nAnonymous (19 de julio de 1999). \u00abExcel Easter Egg - Excel 97 Flight to Credits\u00bb. The Easter Egg Archive (en ingl\u00e9s). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nArima, Kevin (20 de julio de 2009). \u00abWord (Microsoft) Easter Egg - Pinball in Word 97\u00bb. The Easter Egg Archive (en ingl\u00e9s). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nGaskell, John (19 de julio de 1999). \u00abExcel Easter Egg - Excel 95 Hall of Tortured Souls\u00bb. The Easter Egg Archive (en ingl\u00e9s). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nLarry Osterman (21 de octubre de 2005). \u00abWhy no Easter Eggs?\u00bb.  En MSDN Blogs, ed. Larry Osterman's WebLog. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nGrant, Rickford with; Bull, Phil (2010).  No Starch, ed. Ubuntu for Non-Geeks: A Pain-Free, Get-Things-Done Guide (4 edici\u00f3n). San Francisco. p.\u00a0168. ISBN\u00a09781593272579. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nkcbhiw (24 de julio de 2001). \u00abApt-Get and Super Cow Powers\u00bb. The Easter Egg Archive (en ingl\u00e9s). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 a b \nDiaz, Jesus (26 de julio de 2012). \u00abThe Easter Eggs Are Back in OS X\u2014And This One Is Insanely Great\u00bb. Gizmodo. Consultado el 4 de noviembre de 2017.\u00a0\n\u2191 \nFirth, Niall (29 de octubre de 2010). \u00abHow do I get to China? Jet ski! Google Maps joke gives users unorthodox instructions for crossing the Pacific\u00bb. Daily Mail. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \n\u00abHappy Birthday Description\u00bb. F-Secure Labs (en ingl\u00e9s). Consultado el 3 de julio de 2012.\u00a0\n\u2191 \nKendig, Brain (1994). \u00abMacintosh/Newton Easter Egg List\u00bb. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nhudson (21 de agosto de 2012). \u00abGhosts in the ROM\u00bb. NYC Resistor. Archivado desde el original el 17 de febrero de 2015. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nTirosh, Udi (22 de agosto de 2012). \u00abPhotographs Of Apple Team Found In 25 Years Old Macintosh SE\u00bb. DIY Photography. Archivado desde el original el 26 de febrero de 2013. Consultado el 4 de noviembre de 2017.\u00a0\n\u2191 \nFARNA Systems, ed. (1 de mayo de 1998). The World of 68' Micros, The - Vol. 5 Number 6 5 (6). p.\u00a05. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nkcbhiw (24 de julio de 2001). \u00abHP 54600B Oscilloscope Easter Egg - Tetris Within Oscilloscope\u00bb. The Easter Egg Archive (en ingl\u00e9s). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nTonyK (24 de abril de 2002). \u00abHP 54622D Easter Egg - HP Asteroids\u00bb. The Easter Egg Archive (en ingl\u00e9s). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 \nPavel (8 de abril de 2000). \u00abTektronix 1751 Digital Video Osciloscope / Vectorscope Easter Egg - Fishes Swimming on Screen\u00bb. The Easter Egg Archive (en ingl\u00e9s). Consultado el 10 de mayo de 2020.\u00a0\n\u2191 Paul E. Miller (de junio de 1976). \u00abHow To Use The HP-45 Calculator As a Stopwatch Or Elapsed-time Indicator\u00bb. Popular Electronics.\u00a0\n\u2191 \nCorrigan, Patricia (2007).  Reedy Press, ed. Bringing Science to Life: A Guide from the Saint Louis Science. St. Louis, Missouri. p.\u00a069. ISBN\u00a09781933370163.\u00a0\n\u2191 \nPetersen, Julie K. (2002).  CRC Press, ed. The Telecommunications Illustrated Dictionary (2nd edici\u00f3n). Boca Raton, Florida. p.\u00a0293. ISBN\u00a09780849311734. Consultado el 24 de enero de 2013.\u00a0\n\u2191 \nHyman, Michael (1995).  Programmers Press, ed. PC Roadkill (en ingl\u00e9s). Foster City, California. p.\u00a0c. ISBN\u00a09781568843483. Consultado el 24 de enero de 2013.\u00a0\n\u2191 a b c \nBob Supnik (24 de febrero de 2008). \u00abCVAX\u00bb. Computer Simulation and History. Archivado desde el original el 17 de enero de 2015. Consultado el 23 de mayo de 2019.\u00a0\n\u2191 Barkleit, Gerhard (2000).  Technischen Universit\u00e4t Dresden, ed. \u00abMikroelektronik in der DDR\u00bb (en alem\u00e1n). Dresden. Consultado el 11 de mayo de 2020.\u00a0\n\u2191 \n\u00abSteal The Best\u00bb. Molecular Expressions: The Silicon Zoo. 7 de julio de 1999. Consultado el 10 de mayo de 2020.\u00a0\n\u2191 stackexchange (ed.). \u00abWas there Cyrillic text visible on Intel 386 chips after decapping?\u00bb. skeptics (en ingl\u00e9s). Consultado el 11 de mayo de 2020.\u00a0\n\u2191 Nuno Cristovao (1 de diciembre de 2020). \u00abTesla Back to the Future Easter Egg\u00bb (en ingl\u00e9s). p.\u00a0notateslaapp.com. Consultado el 17 de marzo de 2022.\u00a0\n\u2191 P, Syp (1 de abril de 2019). \u00abAll 20 Tesla Easter Eggs Discovered so Far, and How to Find Them\u00bb. Drive Tribe (en ingl\u00e9s). Consultado el 20 de marzo de 2020.\u00a0\n\u2191 Lekach, Sasha (8 de febrero de 2019). \u00abTesla's fart mode is a real gem\u00bb. mashable (en ingl\u00e9s). Consultado el 16 de abril de 2020.\u00a0\n\u2191 \nLambert, Fred (12 de febrero de 2019). \u00abTesla hides extensive \u2018Back to the Future\u2019 Easter egg in latest software\u00bb. Electrek. Consultado el 15 de abril de 2020.\u00a0\n\u2191 \nLambert, Fred (6 de octubre de 2019). \u00abTesla owner finds Monty Python Easter egg in V10 software update\u00bb. Electrek. Consultado el 15 de abril de 2020.\u00a0\n\u2191 Ayre, James (30 de septiembre de 2015). \u00ab\u201cThese Go To 11\u201d \u2014 Tesla, Spinal Tap, Christopher Guest, & Jamie Lee Curtis\u00bb. ev obsession (en ingl\u00e9s). Consultado el 20 de marzo de 2020.\u00a0\n\u2191 \nBrown, Mike (7 de febrero de 2018). \u00abElon Musk Jokes About Confused Aliens Finding His Tesla in Space\u00bb. Inverse. Consultado el 15 de abril de 2020.\u00a0\n\u2191 \nTracy, David (18 de diciembre de 2018). \u00abThe Tesla Model 3 'Superbottle' Easter Egg Is a Fascinating Packaging Solution\u00bb. Jalopnik. Consultado el 15 de abril de 2020.\u00a0\n\u2191 \u00abOptimal source electric vehicle heat pump with extreme temperature heating capability and efficient thermal preconditioning\u00bb (en ingl\u00e9s). 7 de septiembre de 2018. Consultado el 12 de abril de 2020.\u00a0\n\u2191 Lambert, Fred (23 de marzo de 2020). \u00abElon Musk: Tesla Model Y heat pump is some of the best engineering I\u2019ve seen in a while\u00bb.  En Electrek, ed. ElecTrek (en ingl\u00e9s).\u00a0\n\u2191 Page, Trevor (17 de marzo de 2020). \u00abModel Y's secret trick\u00bb. Tesla Owners Online (en ingl\u00e9s). Archivado desde el original el 31 de marzo de 2022. Consultado el 12 de abril de 2020.\u00a0\n\u2191 Third Row Tesla Podcast, ed. (15 de abril de 2020). \u00abThird Row Tesla - Episode 14 - Tesla Manufacturing with Sandy Munro and Elon Musk!\u00bb (en ingl\u00e9s). Archivado desde el original el 19 de abril de 2020. Consultado el 17 de abril de 2020.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio recopilatorio de huevos de Pascua virtuales (en ingl\u00e9s)\nEsta obra contiene una traducci\u00f3n  derivada de \u00abEaster egg (media)\u00bb de Wikipedia en ingl\u00e9s, publicada por sus editores bajo la Licencia de documentaci\u00f3n libre de GNU y la Licencia Creative Commons Atribuci\u00f3n-CompartirIgual 3.0 Unported.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Humorista", "title": "Humorista", "summary": "Un humorista seg\u00fan la definici\u00f3n del DCVB es \u00abuna persona que tiene la facultad del humor\u00bb.[1]\u200b Puede ser una persona que se dedique profesionalmente a la producci\u00f3n de obras escritas o gr\u00e1ficas, o a hacer intervenciones p\u00fablicas con fines humor\u00edsticos. Un humorista no es un c\u00f3mico, a pesar de que hay casos en que se pueden combinar ambas profesiones. Tambi\u00e9n son frecuentes los ejemplos de producciones humor\u00edsticas parciales entre otras actividades de car\u00e1cter general referidas a una misma persona.", "sections": [{"name": "\u00cdndice", "text": "1 Humorismo literario\n1.1 Era cristiana\n1.2 A\u00f1o 1000\n1.3 A\u00f1o 1500\n1.4 A\u00f1o 1600\n1.5 A\u00f1o 1700\n1.6 A\u00f1o 1800\n1.7 A\u00f1o 1900\n1.8 Humorismo teatral\n2 Lista gen\u00e9rica de humoristas notables\n3 Humorismo gr\u00e1fico\n3.1 Caricaturistas\n4 Humorismo cinematogr\u00e1fico\n5 Referencias\n6 V\u00e9ase tambi\u00e9n", "subsections": []}, {"name": "Humorismo literario", "text": "Muchos autores literarios cultivaron el humorismo. Algunos de forma casi exclusiva. Otros en forma parcial o limitada. Se incluye una lista tan solo a t\u00edtulo representativo. \n448 aC-380 aC. Arist\u00f2fanes\n411 aC. Lis\u00edstrata\nc 341 aC-c 290 aC. Menandre de Atenas\n216 aC-184 aC. Plaute\n184 aC-c 159 aC. Terenci", "subsections": [{"name": "Era cristiana", "text": "43 d. C.-104 mi\u00e9. Marc Valeri Marcial."}, {"name": "A\u00f1o 1000", "text": "c 1283-c 1351. Juan Ru\u00edz Arcipreste de Hita\nLibro de buen amor\nc 1300. Geoffrey Chaucer\nc 1401-1478. Jaume Roig\nc 1450? Jaume Gassull\n1456-1460. La Farce de Ma\u00eetre Pathelin.[2]\u200b\n1480-1545. Antonio de Guevara.[3]\u200b\n1490-1553. Fran\u00e7ois Rabelais"}, {"name": "A\u00f1o 1500", "text": "1547-1616. Miguel de Cervantes Saavedra\nDon Quijote\n1565-1635. Alessandro Tassoni\nLa secchia rapita (El cubo robado).[4]\u200b[5]\u200b\n1578-1623. Rector de Vallfogona"}, {"name": "A\u00f1o 1600", "text": "1619-1655. Cyrano de Bergerac.[6]\u200b\n1622-1673. Moli\u00e8re\n1672-1719. Joseph Addison.[7]\u200b"}, {"name": "A\u00f1o 1700", "text": "1706-1790. Benjamin Franklin\n1707-1793. Carlo Goldoni\n1721\u20131771. Tobias Smollett\nThe Adventures of Peregrino Pickle.[8]\u200b"}, {"name": "A\u00f1o 1800", "text": "1812-1870. Charles Dickens\nLos papeles p\u00f3stumos del Club Pickwick.[9]\u200b[10]\u200b\n1815-1888. Eug\u00e8ne Labiche\n1835-1910. Mark Twain\n1840-1847. Alphonse Daudet\nTartarin de Tarascon.[11]\u200b\n1854-1900. Oscar Wilde\nThe Importance of Being Earnest, A Trivial Comedy for Serious People\n1859-1927. Jerome K. Jerome.[12]\u200b\nThree Men in a Boat.[13]\u200b\n1866-1943. Carlos Arniches Barreda\nLa se\u00f1orita de Tr\u00e9velez.[14]\u200b\n1874-1936.  Chesterton\n1879-1936. Pedro Mu\u00f1oz Seca\nLa venganza de Don Mendo\n1880-1950. Josep Maria Folch y Torres.\nLas Formidables aventuras de en Pere Fino.[15]\u200b\n1881 - 1975. P. G. Wodehouse.[16]\u200b\n1893-1971.Harold Lloyd.\n1899- 1995. Noel Claras\u00f3 y Serrat.[17]\u200b"}, {"name": "A\u00f1o 1900", "text": "1908-1968. Giovannino Guareschi.[18]\u200b\nIl destino si chiama Clotilde.[19]\u200b[20]\u200b\n1917-2000. Joan Capri\n1918-1990. Manuel de Pedrolo\nDomicilio provisional\n1928-2013. Tom Sharpe.\n1943.  Eduardo Mendoza\nSin noticias de Gurb.\n1958. Helen Fielding.[21]\u200b\nEl diario de Bridget Jones"}, {"name": "Humorismo teatral", "text": "La escena dram\u00e1tica cuenta con muchas obras c\u00f3micas universalmente reconocidas. Algunas de estas comedias, principalmente destinadas a dar risa, muestran aspectos humor\u00edsticos bastante sutiles. No siempre es f\u00e1cil seleccionar las obras de teatro (comedias o tragicomedies) que ofrecen matices de humor. Los autores seleccionados se han listado m\u00e1s arriba, entre los otros escritores."}]}, {"name": "Lista gen\u00e9rica de humoristas notables", "text": "Douglas Adams\nLuis Sandrini\nLuis Landriscina\nKev Adams\nScott Adams\nGeorge Ade\nMoin Akhter\nSholom Aleichem\nHenry Alford\nWoody Allen\nMichael Attree\nBugs Baer\nRussell Baker\nLinwood Barclay\nDave Barry\nGuy Bedos\nNicolas Bedos\nRobert Benchley\nStefano Benni\nAmbrose Bierce\nJean-Marie Bigard\nJosh Billings\nLewis Black\nRoy Blount, Jr.\nTom Bodett\nErma Bombeck\nVictor Borge\nAndy Borowitz\nDylan Brody\nCraig Brown\nArt Buchwald\nChristopher Buckley\nW. Bruce Cameron\nAl Capp\nLewis Carroll\nGuy Wetmore Carryl\nBennett Cerf\nG. K. Chesterton\nAl Clouston\nColuche\nWilliam Combe\nAlan Coren\nWill Cuppy\nIvor Cutler\nHugleikur Dagsson\nBertha Damon\nDick DeBartolo\nJamel Debbouze\nRaymond Devos\nDaniel Dickey\nDrew\nFranck Dubosc\nGad Elmaleh\nEvan Esar\nJohn O'Farrell\nMax Ferguson\nWill Ferguson\nScott Fivelson\nMichael Flanders\nBenjamin Franklin\nMichael Frayn\nIan Frazier\nLewis Burke Frumkes\nJames Finn Garner\nVeronica Geng\nMichael Gerber\nStrickland Gillilan\nJonathan Goldstein\nLewis Grizzard\nRobert Grossman\nDick Wick Hall\nJack Handey\nChelsea Handler\nSteve Hely\nA.P. Herbert\nDon Herold\nCarl Hiaasen\nNasrettin Hoca\nJohn Hodgman\nAndy Offutt Irwin\nDonald Jack\nRoberta Beach Jacobson\nDouglas William Jerrold\nJerome K. Jerome\nGeorge S. Kaufman\nGarrison Keillor\nWalt Kelly\nDoug Kenney\nMarvin Kitman\nRonald Knox\nHarvey Kurtzman\nJonathan Lambert\nChristian Lander\nRing Lardner\nGary Lautens\nStephen Leacock\nFran Lebowitz\nVirginie Lemoine\nMartin Lewis\nLennie Lower\nPaul B. Lowney\nDieudonn\u00e9 M'bala M'bala\nMerrill Markoe\nDon Marquis\nNin\u00ed Marshall\nDavid Martin\nDemetri Martin\nSteve Martin\nBruce McCall\nStuart McLean\nPatrick F. McManus\nMoli\u00e8re\nNurul Momen\nLorna Jean Moorhead\nJ. B. Morton\nEbrahim Nabavi\nPetroleum V. Nasby\nOgden Nash\nRichard J. Needham\nAziz Nesin\nEric Nicol\nChris Onstad\nRaffaele Palma\nDorothy Parker\nS. J. Perelman\nCharles Phoenix\nTerry Pratchett\nRoger Price\nBoles\u0142aw Prus\nJoe Queenan\nDavid Rakoff\nPaul Rhymer\nBill Richardson\nRyan Max Riley\nSteve Rizzo\nWill Rogers\nAndy Rooney\nAnne Roumanoff\nP. J. O'Rourke\nHelen Rowland\nPaul Rudnick\nPeter Sagal\nTim Sample\nGeorge Saunders\nDavid Sedaris\n\u00c9lie Semoun\nTom Sharpe\nJean Shepherd\nHerb Shriner\nWil Shriner\nMark Shulman\nMax Shulman\nNeil Simon\nH. Allen Smith\nJill Sobule\nEd Subitzky\nJulia Sweeney\nJonathan Swift\nHerbert Tarr\nJeremy Taylor\nWilliam Tenn\nLarry Thompson\nThomas Bangs Thorpe\nJames Thurber\nJohn Kennedy Toole\nCalvin Trillin\nMark Twain\nAisha Tyler\nBrian Unger\nPeter Ustinov\nKurt Vonnegut\nSarah Vowell\nArtemus Ward\nSam. R. Watkins\nBill Watterson\nEllis Weiner\nE.B. White\nOscar Wilde\nMarshall P. Wilder\nJustin Wilson\nRobert Wringham\nP. G. Wodehouse", "subsections": []}, {"name": "Humorismo gr\u00e1fico", "text": "1820-1914. John Tenniel\n1854-1936. Apeles Mestres y O\u00f1\u00f3s\n1881-1948. Joan Junceda\n1884-1954. Bud Fisher\n1914-2012. Joaquim Munta\u00f1ola y Puig\n1936. Francisco Ib\u00e1\u00f1ez Talavera\n1941-1995. Jaume Perich y Escala", "subsections": [{"name": "Caricaturistas", "text": "1799\u20131846. Rodolphe T\u00f6pffer\n1858-1909. Caran d'Ache\n1900-1990. Xavier Cugat\n1909-1979. Manuel del Arco \u00c1lvarez"}]}, {"name": "Humorismo cinematogr\u00e1fico", "text": "Los films con elementos humor\u00edsticos pueden ser de varios grados. Por el hecho que las comedias cinematogr\u00e1ficas acostumbran a ser el resultado de varias personas (sociedad productora, productor, director, guionista, actores, redactor de di\u00e1logos, maquillaje, efectos especiales, etc.)  trabajando en equipo, la lista de humoristas cinematogr\u00e1ficos queda sustituida por una lista de pel\u00edculas ordenadas por el a\u00f1o de su estreno. En cada caso, el art\u00edculo puede recordar los responsables m\u00e1s importantes (particularmente el director y los actores m\u00e1s importantes), que tendr\u00edan que consultarse en el art\u00edculo espec\u00edfico del filme.\n1923. Safety Last!.\nHarold Lloyd\n1926. El maquinista de la General\nBuster Keaton\n1935. Una noche a la \u00f3pera\nHermanos Marx\n1942.  Tono Be oro Not tono Be.[22]\u200b\nErnst Lubitsch, director.\n1949. Passport tono Pimlico.[23]\u200b\nHenry Cornelius, director\nT. E. B. Clarke, guionista\n1952.  The Crimson Pirate.[24]\u200b\nRobert Siodmak, director\n1955. El quinteto de la muerte\n1958. Y soliti ignoti\n1965. Signore e signori\n1965. Those Magnificent Men in Their Flying Machines\n1965.  The Great Race\n1966. Golfus de Roma\n1971. Trafic de Jacques Tati.[25]\u200b\n1975.  Amici miei", "subsections": []}, {"name": "Referencias", "text": "\u2191 DCVB: humorista\n\u2191 La farce de Ma\u00eetre Pathelin. Librairie des bibliophiles. 1876. pp.\u00a017-.\u00a0\n\u2191 Antonio de Guevara (1673). Menosprecio de Corte y Alabanza de Aldea, aviso de privados, y doctrina de Cortesanos, Arte de Marear, y Trabajos de la Galera. Viuda de Melchor Alegre. pp.\u00a02-.\u00a0\n\u2191 Tassoni (Alessandro) (1834). La secchia rapita: poema eroicomico. presso G. Moro. pp.\u00a0173-.\u00a0\n\u2191 Alessandro Tassoni (1825). La secchia rapita. J. M. Richardson. pp.\u00a015-.\u00a0\n\u2191 Cyrano de Bergerac; P. L. Jacob (1858). \u0152uvres comiques, galantes et litt\u00e9raires. Delahays.\u00a0\n\u2191 Addison's humorous essays, selected from the 'Spectator'.. 1863.\u00a0\n\u2191 Tobias Smollett (1776). The Adventures of Peregrine Pickle: In which are Included, Memoirs of a Lady of Quality. In Four Volumes. .... R. Baldwin. [sic] and Robinson and Roberts; and T. Becket and T. Cadell. pp.\u00a0295-.\u00a0\n\u2191 Charles Dickens (1866). Posthumous Papers of the Pickwick Club. Chapman and Hall.\u00a0\n\u2191 The Monthly Review. R. Griffiths. 1837. pp.\u00a0153-.\u00a0\n\u2191 Revue britannique: ou Choix d'articles traduits des meilleurs \u00e9crits p\u00e9riodiques de la Grande-Bretagne. Revue britannique. 1872. pp.\u00a0280-.\u00a0\n\u2191 Hymns Ancient & Modern Ltd (November 1981). ThirdWay. Hymns Ancient & Modern Ltd. pp.\u00a014-.\u00a0\n\u2191 Stephen Lambe (15 de septiembre de 2012). The Three Men in a Boat Companion: The Thames of Jerome K. Jerome. Amberley Publishing Limited. ISBN\u00a0978-1-4456-1574-5.\u00a0\n\u2191 Video: LA SE\u00d1ORITA DE TREV\u00c9LEZ de CARLOS ARNICHES.\n\u2191 Josep Maria Folch i Torres (1983). Les Formidables aventures d'en Pere Fi. La Llar del Llibre. ISBN\u00a0978-84-7279-156-5.\u00a0\n\u2191 Brian Taves (18 de mayo de 2006). P.G. Wodehouse and Hollywood: Screenwriting, Satires and Adaptations. McFarland. ISBN\u00a0978-0-7864-8443-0.\u00a0\n\u2191 Salvador P\u00e1niker (1966). Conversaciones en Catalu\u00f1a. Editorial Kair\u00f3s. pp.\u00a087-. GGKEY:6PKZDBY98G0.\u00a0\n\u2191 Alan R. Perry (23 de febrero de 2008). Don Camillo Stories of Giovannino Guareschi: A Humorist Potrays the Sacred. University of Toronto Press. ISBN\u00a0978-1-4426-9239-8.\u00a0\n\u2191 Giovannino Guareschi (1 de junio de 2013). Il destino si chiama Clotilde. Bur. ISBN\u00a0978-88-586-3173-7.\u00a0\n\u2191 Gaetana Marrone; Paolo Puppa (26 de diciembre de 2006). Encyclopedia of Italian Literary Studies. Routledge. pp.\u00a0900-. ISBN\u00a0978-1-135-45530-9.\u00a0\n\u2191 Helen Fielding (12 de noviembre de 2013). El diari de Bridget Jones. Grup 62. ISBN\u00a0978-84-297-7272-2.\u00a0\n\u2191 Kevin Starr (28 de noviembre de 2002). The Dream Endures: California Enters the 1940s. Oxford University Press. pp.\u00a0462-. ISBN\u00a0978-0-19-992393-9.\u00a0\n\u2191 Wheeler W. Dixon (1994). Re-Viewing British Cinema, 1900-1992: Essays and Interviews. SUNY Press. pp.\u00a096-. ISBN\u00a0978-0-7914-1861-1.\u00a0\n\u2191 Ed Andreychuk (18 de abril de 2005). Burt Lancaster: A Filmography and Biography. McFarland. pp.\u00a060-. ISBN\u00a0978-1-4766-0649-1.\u00a0\n\u2191 Michel Chion (2003). The Films of Jacques Tati. Guernica Editions. pp.\u00a031-. ISBN\u00a0978-1-55071-175-2.\u00a0", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Historia del humor\nAnexo:Humoristas\nAnexo:Humoristas gr\u00e1ficos\nF\u00e1bulas de Esopo", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/IDLE", "title": "IDLE", "summary": "IDLE (abreviatura de Integrated Development and Learning Environment, en espa\u00f1ol: \u00abEntorno de desarrollo y aprendizaje integrado\u00bb)[1]\u200b es un entorno de desarrollo integrado para Python, que se incluye con la implementaci\u00f3n predeterminada del lenguaje desde la versi\u00f3n 1.5.2b1.[2]\u200b Est\u00e1 empaquetado como una parte opcional del paquete de Python con muchas distribuciones de Linux.\nIDLE est\u00e1 destinado a ser un entorno de desarrollo integrado simple y enfocado para su uso por parte de usuarios principiantes, especialmente en un entorno educativo. Con ese fin, es multiplataforma y evita la sobrecarga de funcionalidades.\nSeg\u00fan el archivo README incluido, sus principales caracter\u00edsticas son:\nEditor de texto de m\u00faltiples ventanas con resaltado de sintaxis, autocompletado, sangr\u00eda inteligente y otros.\nInt\u00e9rprete de Python con resaltado de sintaxis.\nDepurador integrado con pasos, breakpoints persistentes y visualizaci\u00f3n de espacios de nombres locales y globales.[3]\u200b\nEl autor, Guido van Rossum, explic\u00f3 que IDLE significa \"Integrated DeveLopment Environment\",[4]\u200b y dado que van Rossum nombr\u00f3 al lenguaje Python en honor al grupo de comedia brit\u00e1nico Monty Python, el nombre IDLE probablemente tambi\u00e9n fue elegido para honrar a Eric Idle, uno de los miembros fundadores de Monty Python.[5]\u200b [6]\u200b", "sections": [{"name": "Referencias", "text": "\u2191 \u00abArchived copy\u00bb. Archivado desde el original el 4 de junio de 2020. Consultado el 4 de junio de 2020.\u00a0\n\u2191 IDLE 0.1 was distributed with the Python 1.5.2b1 release on 12/22/98., From: \\Python-1.5.2\\Tools\\idle\\NEWS.txt\n\u2191 \u00abIDLE \u2014 documentaci\u00f3n de Python - 3.9.0\u00bb. docs.python.org. Consultado el 14 de noviembre de 2020.\u00a0\n\u2191 Primer on Installing Python and VPython, Author: M. Haley\n\u2191 Lutz, Mark & Ascher, David (2004). Learning Python, p. 40. O'Reilly Media, Inc. ISBN\u00a00-596-00281-5.\n\u2191 Hammond, Mark & Robinson, Andy (2000). Python Programming On Win32: Help for Windows Programmers, p. 59. O'Reilly Media, Inc. ISBN\u00a0978-1565926219.", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre IDLE.\nEsta obra contiene una traducci\u00f3n total derivada de \u00abIDLE\u00bb de Wikipedia en ingl\u00e9s,\u00a0concretamente de esta versi\u00f3n del 21 de septiembre de 2020, publicada por sus editores bajo la Licencia de documentaci\u00f3n libre de GNU y la Licencia Creative Commons Atribuci\u00f3n-CompartirIgual 3.0 Unported.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/IPython", "title": "IPython", "summary": "PythonJavaScriptC\nIPython es un shell interactivo que a\u00f1ade funcionalidades extra al modo interactivo incluido con Python, como resaltado de l\u00edneas y errores mediante colores, una sintaxis adicional para el shell, autocompletado mediante tabulador de variables, m\u00f3dulos y atributos; entre otras funcionalidades. Es un componente del paquete SciPy.", "sections": [{"name": "\u00cdndice", "text": "1 Computaci\u00f3n en paralelo Parallel computing\n2 Notebook\n3 Proyecto Jupyter\n4 Otras caracter\u00edsticas\n5 En los medios de comunicaci\u00f3n\n6 Fin de la compatibilidad con Python 2\n7 Proyecto Jupyter\n8 Referencias\n9 Enlaces de inter\u00e9s", "subsections": []}, {"name": "Computaci\u00f3n en paralelo Parallel computing", "text": "IPython est\u00e1 basado en una arquitectura que suministra computaci\u00f3n distribuida y en paralelo. IPython permite la ejecuci\u00f3n de aplicaciones en paralelo, pudi\u00e9ndose estas desarrollar, ejecutar, depurar y ser monitoreadas interactivamente. Es por esto que el nombre de IPython toma la letra I del inicio, como referencia a interactivo. La arquitectura abstrae situaciones en paralelo, lo que permite a IPython dar soporte a m\u00faltiples tipos de computaci\u00f3n en paralelo. Entre estos se incluyen:\nParalelismo \u00abun programa, m\u00faltiples datos\u00bb (SPMD por sus siglas en ingl\u00e9s).\nParalelismo \u00abm\u00faltiples programas, m\u00faltiples datos\u00bb (MPMD).\nPaso de mensajes usando MPI.\nParalelismo de control.\nParalelismo de datos.\nCombinaci\u00f3n de las aproximaciones anteriores.\nAproximaciones personalizables por los usuarios.", "subsections": []}, {"name": "Notebook", "text": "El cuaderno Notebook de IPython est\u00e1 basado en la web y es interactivo. Un notebook en IPython es un documento JSON que contiene una lista ordenada de entradas / salidas las cuales pueden tener c\u00f3digo, texto, matem\u00e1ticas, dibujos y rich media.\nLos notebooks de IPython pueden ser convertidos a otros formatos de archivos como HTML, presentaciones de diapositivas, LaTeX, PDF, Python, etc).", "subsections": []}, {"name": "Proyecto Jupyter", "text": "En 2014 Fernando P\u00e9rez anunci\u00f3 un proyecto alternativo a IPython llamado Jupyter.[1]\u200b IPython seguir\u00e1 existiendo como un shell de Python y como kernel para Jupyter, mientras que el notebook y otras partes de IPython pasar\u00e1n a formar parte del proyecto Jupyter.[2]\u200b Jupyter a\u00f1adi\u00f3 soporte para Julia, R, Haskell y Ruby al notebook", "subsections": []}, {"name": "Otras caracter\u00edsticas", "text": "IPython incluye adem\u00e1s una versi\u00f3n en GNU/Linux para ser ejecutado en X y usando la biblioteca wxWidgets. En el uso de bibliotecas GUI, IPython no permite el bloqueo en la interacci\u00f3n con Tkinter, GTK+, Qt ni wxWidgets; solo permite la interacci\u00f3n con Tkinter. Ipython puede gestionar de forma interactiva el uso paralelo de varios cl\u00fasteres. IPython puede ser utilizado para reemplazar el shell de sistema gracias a lo flexible y modificable que es mediante su archivo de configuraci\u00f3n, especialmente en windows. El shell de IPython recuerda a un shell de unix, e incluso permite usar comandos bash durante su uso para, por ejemplo, cambiar de directorio de trabajo.", "subsections": []}, {"name": "En los medios de comunicaci\u00f3n", "text": "IPython ha sido mencionado en prensa del \u00e1mbito inform\u00e1tico,[3]\u200b y en conferencias del mundo cient\u00edfico.[4]\u200b IPython es considerado como una herramienta para el trabajo cient\u00edfico, y frecuentemente ha sido presentado junto con Matplotlib[5]\u200b", "subsections": []}, {"name": "Fin de la compatibilidad con Python 2", "text": "La serie IPython 5.x (Long Time Support) es la \u00faltima versi\u00f3n de IPython compatible con Python 2. El proyecto IPython se comprometi\u00f3 a no admitir Python 2 despu\u00e9s de 2020[6]\u200b al ser uno de los primeros proyectos en unirse a la Declaraci\u00f3n de Python 3, el La serie 6.x solo es compatible con Python 3 y versiones posteriores. Sin embargo, todav\u00eda es posible ejecutar un kernel IPython y un servidor Jupyter Notebook en diferentes versiones de Python, lo que permite a los usuarios acceder a Python 2 en la versi\u00f3n m\u00e1s reciente de Jupyter.[7]\u200b", "subsections": []}, {"name": "Proyecto Jupyter", "text": "En 2014, Fernando P\u00e9rez anunci\u00f3 un proyecto derivado de IPython llamado Project Jupyter.[8]\u200b IPython continu\u00f3 existiendo como un shell y kernel de Python para Jupyter, pero la interfaz del notebook y otras partes independientes del lenguaje de IPython se movieron bajo el nombre de Jupyter. Jupyter es independiente del lenguaje y su nombre es una referencia a los lenguajes de programaci\u00f3n centrales compatibles con Jupyter, que son Julia, Python y R.[9]\u200b\nJupyter Notebook (anteriormente IPython Notebooks) es un entorno computacional interactivo basado en web para crear, ejecutar y visualizar cuadernos de Jupyter. Es similar a la interfaz de cuaderno de otros programas como Maple, Mathematica y SageMath, un estilo de interfaz computacional que se origin\u00f3 con Mathematica en la d\u00e9cada de 1980. Admite entornos de ejecuci\u00f3n (tambi\u00e9n conocidos como n\u00facleos) en docenas de idiomas. De forma predeterminada, Jupyter Notebook se env\u00eda con el kernel de IPython, pero hay m\u00e1s de 100 kernels de Jupyter a partir de mayo de 2018.", "subsections": []}, {"name": "Referencias", "text": "\u2191 Python for all (2): What are Jupyter Notebooks?\n\u2191 https://youtube.com/devicesupport, 17 de abril de 2015, consultado el 26 de mayo de 2015\u00a0.\n\u2191 Conrad Koziol (September 12, 2005). \"Introducing IPython\". NewsForge.\n\u2191 \u00abAbout/Presentations - IPython\u00bb. Archivado desde el original el 5 de febrero de 2010. Consultado el 26 de febrero de 2010.\u00a0\n\u2191 IPython: A System for Interactive Scientific Computing.\n\u2191 \u00abRelease of IPython 5.0 \u2013 Jupyter Blog\u00bb. Jupyter Blog. 8 de julio de 2016. Consultado el 11 de abril de 2018.\u00a0\n\u2191 Jake VanderPlas (2016). Python Data Science Handbook. O'Reilly Media. ISBN\u00a0978-1491912058.\u00a0\n\u2191 \u00abProject Jupyter // Speaker Deck\u00bb.\u00a0\n\u2191 \u00abJupyter Logo \u00b7 jupyter/Design Wiki\u00bb.\u00a0", "subsections": []}, {"name": "Enlaces de inter\u00e9s", "text": "Sitio web de IPython\nDocumentaci\u00f3n de IPython\nJeremy Jones (27, January 2005). \u00abEnhanced Interactive Python with IPython\u00bb. ONLamp.com (en ingl\u00e9s). Archivado desde el original el 23 de marzo de 2016. Consultado el 26 de febrero de 2010.\u00a0\nVarias presentaciones de IPython y Python en conferencias cient\u00edficas en the Scientific Python website.\nIPython introduction videos en showmedo", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/ISBN", "title": "ISBN", "summary": "El ISBN (por las siglas en ingl\u00e9s de International Standard Book Number, en espa\u00f1ol \u00abc\u00f3digo Internacional normalizado para libros\u00bb)[1]\u200b es un identificador \u00fanico para libros.[Nota 1]\u200b Mediante este sistema, a cada libro se le asigna una cadena alfanum\u00e9rica \u00fanica internacional que sirve para identificar datos b\u00e1sicos del objeto tales como t\u00edtulo, editorial, tirada, extensi\u00f3n, materia, pa\u00eds, traductor, lengua original, etc. No debe confundirse con el ISSN (International Standard Serial Number, en espa\u00f1ol \u00abn\u00famero internacional normalizado de publicaciones peri\u00f3dicas\u00bb),[2]\u200b que corresponde al de las publicaciones peri\u00f3dicas, como revistas y diarios.", "sections": [{"name": "\u00cdndice", "text": "1 Descripci\u00f3n\n1.1 El ISBN de diez d\u00edgitos\n1.2 El ISBN de trece d\u00edgitos\n1.3 Bookland\n2 Sistemas similares\n3 V\u00e9ase tambi\u00e9n\n4 Notas\n5 Referencias\n6 Enlaces externos\n6.1 Agencias nacionales e internacionales\n6.2 Herramientas en l\u00ednea", "subsections": []}, {"name": "Descripci\u00f3n", "text": "", "subsections": [{"name": "El ISBN de diez d\u00edgitos", "text": "Fue creado en 1970 al adoptar el est\u00e1ndar internacional ISO 2018,[3]\u200b hasta la reforma que entr\u00f3 en vigor en 2007, cada edici\u00f3n y variaci\u00f3n (excepto las reimpresiones) de un libro recib\u00eda un ISBN compuesto por 10 d\u00edgitos de longitud, y dividido en cuatro partes:\nel c\u00f3digo de pa\u00eds o lengua de origen,\nel editor,\nel n\u00famero del art\u00edculo y\nun d\u00edgito de control.\nEstas partes tienen distintas longitudes y, para mejorar su legibilidad (lectura humana), es conveniente, aunque no obligatorio, que se separen con espacios en blanco o con guiones. Adem\u00e1s, se utilizan prefijos para asegurarse de que dos c\u00f3digos no puedan comenzar de la misma forma.\nEn caso de usarse, tiene que estar situado correctamente, el primer guion se colocaba despu\u00e9s del primer d\u00edgito, el segundo guion era de ubicaci\u00f3n variable y el tercer guion despu\u00e9s del noveno, justo antes del d\u00edgito de control.[4]\u200b\nEl c\u00f3digo de pa\u00eds era 0 o 1 para pa\u00edses de habla inglesa, 2 para pa\u00edses de habla francesa, 3 para pa\u00edses de habla alemana, etc. El sistema original ISBN carec\u00eda del c\u00f3digo de pa\u00eds, pero anteponiendo un 0 a un n\u00famero SBN de 9 d\u00edgitos se creaba un ISBN v\u00e1lido. El c\u00f3digo de pa\u00eds puede tener hasta 5 d\u00edgitos de longitud; por ejemplo, el 99936 se usa para But\u00e1n. Se puede consultar la lista de ISBN por pa\u00edses.\nEl n\u00famero del editor es asignado por la agencia nacional del ISBN, y el n\u00famero del art\u00edculo es elegido por el editor.\nLos editores reciben bloques de ISBN m\u00e1s grandes de los que se espera que necesiten; un editor peque\u00f1o puede recibir ISBN que consistan en un d\u00edgito para el idioma, siete d\u00edgitos para el editor y un solo d\u00edgito para los art\u00edculos individuales. Una vez que termine ese bloque puede recibir otro, con un n\u00famero de editor diferente. Por tanto, a veces diferentes n\u00fameros de editor corresponden en realidad al mismo.\nEl d\u00edgito de control de un ISBN de diez cifras se halla mediante un c\u00e1lculo basado en el m\u00f3dulo 11: Se multiplica cada uno de los nueve primeros d\u00edgitos por la posici\u00f3n que ocupan en la secuencia num\u00e9rica, es decir, el primero por 1, el segundo por dos y as\u00ed sucesivamente hasta el noveno que se multiplica por 9. Luego se suman estas multiplicaciones y el resultado se divide entre 11. Dicha divisi\u00f3n dejar\u00e1 un resto entre 0 y 10. Si el resto est\u00e1 entre 0 y 9, este mismo valor es el del d\u00edgito de control. Pero si el resto es 10, entonces se establece como d\u00edgito de control la letra\u00a0X."}, {"name": "El ISBN de trece d\u00edgitos", "text": "Debido a la escasez existente en ciertas categor\u00edas del ISBN, la organizaci\u00f3n internacional de est\u00e1ndares adopt\u00f3 implantar un ISBN de trece d\u00edgitos desde el 1 de enero de 2007. Esta actualizaci\u00f3n pone a la par el sistema del ISBN con el sistema de c\u00f3digos de barras EAN.[5]\u200b Los ISBN existentes se prefijan con \u00ab978\u00bb (y el d\u00edgito de control ser\u00e1 recalculado); cuando se agoten los ISBN \u00ab978\u00bb, se introducir\u00e1 el prefijo 979. Cabe se\u00f1alar la poca probabilidad de que coincidan los n\u00fameros de identificaci\u00f3n del editor asignados en los ISBN \u00ab978\u00bb y \u00ab979\u00bb.\nEl d\u00edgito de control de un ISBN de trece cifras se calcula de un modo diferente al del ISBN de 10 cifras, con un c\u00e1lculo basado en el m\u00f3dulo 10: multiplicando el primero de los 12 n\u00fameros iniciales por 1, el segundo por 3, el tercero por 1, el cuarto por 3, y as\u00ed sucesivamente hasta llegar al n\u00famero 12; el d\u00edgito de control es el valor que se debe a\u00f1adir a la suma de todos estos productos para hacerla divisible por 10 (por ejemplo si la suma es 97, el d\u00edgito de control es 3, porque 97 + 3 = 100, que es divisible por 10; si la suma es 86, el d\u00edgito de control ser\u00e1 4; si suman 120, ser\u00e1 0; y as\u00ed en cualquier otro caso).[6]\u200b\nMuchos editores, incluida la editorial Barnes & Noble, han optado por utilizar los ISBN. Pero muchos detallistas prefieren el est\u00e1ndar m\u00e1s universal European Article Number (EAN), puesto que este se aplica a todos los soportes y no solo a los libros."}, {"name": "Bookland", "text": "Bookland es el nombre informal del prefijo de C\u00f3digo \u00danico de Pa\u00eds (UCC) asignado en la d\u00e9cada de 1980 para los identificadores de N\u00famero de Art\u00edculo Europeo (EAN) de los libros publicados, independientemente del pa\u00eds de origen, por lo que el espacio de nombres EAN puede mantener un sistema de numeraci\u00f3n paralela redundante. En otras palabras, Bookland es un pa\u00eds ficticio que existe \u00fanicamente en EAN con el prop\u00f3sito de catalogar geogr\u00e1ficamente los libros en el sistema de codificaci\u00f3n EAN, que de otro modo tendr\u00eda una clave geogr\u00e1fica."}]}, {"name": "Sistemas similares", "text": "ASIN: Amazon Standard Identification Number o \u2018N\u00famero de Identificaci\u00f3n Est\u00e1ndar de Amazon\u2019.\nISMN: International Standard Music Number o \u2018N\u00famero Musical Est\u00e1ndar Internacional\u2019.\nISAN: International Standard Audiovisual Number o \u2018N\u00famero Audiovisual Est\u00e1ndar Internacional\u2019.\nISSN: International Standard Serial Number o \u2018N\u00famero Internacional Normalizado de Publicaciones Peri\u00f3dicas\u2019,[7]\u200b que se utiliza en publicaciones peri\u00f3dicas, como revistas y peri\u00f3dicos.\nIBSN: Internet Blog Serial Number o \u2018N\u00famero Serie de Blogs de Internet\u2019.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "ASIN\nEuropean Article Number\nP\u00e1gina especial: fuentes de libros\nWikipedia:Fuentes de libros", "subsections": []}, {"name": "Notas", "text": "\u2191 No siempre se ha mantenido este criterio; por ejemplo, la primera edici\u00f3n de The Ultimate Alphabet y The Ultimate Alphabet Answerbook tienen el mismo ISBN, y se ha publicado al menos un libro con cuatro n\u00fameros ISBN impresos, dependiendo el uso de uno de ellos de las consideraciones que los m\u00faltiples editores vean oportunas para una copia en particular.", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00ab\u00bfQu\u00e9 es un ISBN?\u00bb. International ISBN Agency. Consultado el 6 de diciembre de 2022.\u00a0\n\u2191 \u00abLey Federal de Derechos de Autor\u00bb (doc). C\u00e1mara de Diputados (M\u00e9xico). 24 de diciembre de 1996. Archivado desde el original el 8 de diciembre de 2018. Consultado el 7 de diciembre de 2018. \u00abArt\u00edculo 53.- Los editores deben hacer constar en forma y lugar visibles de las obras que publiquen, los siguientes datos: I. Nombre, denominaci\u00f3n o raz\u00f3n social y domicilio del editor; II. A\u00f1o de la edici\u00f3n o reimpresi\u00f3n; III. N\u00famero ordinal que corresponde a la edici\u00f3n o reimpresi\u00f3n, cuando esto sea posible, y IV. N\u00famero Internacional Normalizado del Libro (ISBN), o el N\u00famero Internacional Normalizado para Publicaciones Peri\u00f3dicas (ISSN), en caso de publicaciones peri\u00f3dicas.\u00a0\u00bb\u00a0\n\u2191 \u00abISO 2108:2017(en) Information and documentation \u2014 International Standard Book Number (ISBN)\u00bb. ISO (en ingl\u00e9s). Consultado el 6 de diciembre de 2022.\u00a0\n\u2191 \u00abHyphenation Instructions\u00bb (html). ISBN Org. (en ingl\u00e9s). Archivado desde el original el 3 de abril de 2005. Consultado el 7 de diciembre de 2018. \u00abThe position of the hyphens are determined by the publisher prefix range established by each national agency in accordance with the industry needs. The knowledge of the prefix ranges for each country or group of countries is necessary to develop the hyphenation output program.\u00a0\u00bb\u00a0\n\u2191 \u00abFrequently Asked Questions about changes to the ISBN\u00bb (html). Organizaci\u00f3n Internacional de Normalizaci\u00f3n (en ingl\u00e9s). 15 de octubre de 2004. Archivado desde el original el 6 de abril de 2005. Consultado el 7 de diciembre de 2018. \u00abWhen a barcode is applied to the publication, as is required by retail systems throughout the supply chain, that 10-digit ISBN has to become compatible with the 13-digit EAN-UCC international product coding system for bar codes. This is done by adding the 3-digit EAN product code for books \"978\" in front of the 10-digit ISBN and recalculating that ISBN's check digit to include those extra 3 digits. This 13-digit combination of the EAN 978 product code and an ISBN with a recalculated check digit is sometimes referred to as the \"Bookland EAN\".\u00a0\u00bb\u00a0\n\u2191 Pearce, Bill (16 de marzo de 2015). \u00abAnatomy of a 13-digit ISBN\u00bb (html). isbn-information (en ingl\u00e9s). Archivado desde el original el 15 de agosto de 2015. Consultado el 7 de diciembre de 2018. \u00abIt is possible to validate a complete 13-digit ISBN, one that includes its check digit, by a similar procedure to calculating the check digit. Simply perform the same calculation, adding the check digit to the calculated product with a weighting of one. When the division by ten is performed, the remainder will be zero for a valid ISBN.\u00a0\u00bb\u00a0\n\u2191 \u00daltima reforma (23 de julio de 2003) de la Ley Federal del Derecho de Autor de los Estados Unidos Mexicanos (publicada por el Diario Oficial de la Federaci\u00f3n el 24 de diciembre de 1996).", "subsections": []}, {"name": "Enlaces externos", "text": "Esta obra contiene una traducci\u00f3n parcial (secci\u00f3n Bookland) derivada de \u00abBookland \u00bb de Wikipedia en ingl\u00e9s,\u00a0concretamente de esta versi\u00f3n del 13 de junio de 2018, publicada por sus editores bajo la Licencia de documentaci\u00f3n libre de GNU y la Licencia Creative Commons Atribuci\u00f3n-CompartirIgual 3.0 Unported.\nLista completa de ISBN (en ingl\u00e9s).\nComo hacer c\u00f3digos ISBN y EAN.\nC\u00f3digos de Barras EAN.\nConsultas al ISBN espa\u00f1ol.\nP\u00e1gina de ISBN.\nISBN Chile.\nBuscador de ISBN en Per\u00fa.\nConsultas al ISBN argentino.\nBuscador de ISBN en Ecuador.\nConsultas al ISBN en M\u00e9xico (Instituto Nacional del Derecho de Autor de la Secretar\u00eda de Educaci\u00f3n P\u00fablica del gobierno mexicano).\nN\u00famero Internacional Normalizado de Publicaciones Peri\u00f3dicas.\nP\u00e1gina de ISBN (en ingl\u00e9s).\nBreve resumen sobre el ISBN (en ingl\u00e9s).\nC\u00f3mo encontrar un libro desde Wikibooks (en ingl\u00e9s).\nGenerador de C\u00f3digo de Barras de ISBN 13 en l\u00ednea (en ingl\u00e9s).\nGenerador en l\u00ednea de c\u00f3digo de barras ISBN (de 10 o 13 d\u00edgitos).\nP\u00e1gina para generar c\u00f3digos IBSN para blogs.", "subsections": [{"name": "Agencias nacionales e internacionales", "text": "Agencia Internacional de ISBN. Coordina y supervisa el uso del ISBN a nivel mundial (en ingl\u00e9s).\nAgencia argentina del ISBN.\nAgencia peruana del ISBN.\nAgencia del ISBN de Espa\u00f1a.\nAgencia de ISBN para el Reino Unido y la Rep\u00fablica de Irlanda Nielsen BookData (en ingl\u00e9s).\nAgencia de ISBN para Estados Unidos y Puerto Rico R. R. Bowker LLC (en ingl\u00e9s).\nLista de identificadores por grupo Lista de prefijos de idioma y regi\u00f3n (en ingl\u00e9s).\nLa Agencia del ISBN de Venezuela.\nAgencia ISBN de Ecuador"}, {"name": "Herramientas en l\u00ednea", "text": "ISBN Espa\u00f1a Busca de libros editados en Espa\u00f1a.\nISBNdb.com Busca libros por ISBN, autor, t\u00edtulo, tema, etc.; corrige autom\u00e1ticamente el d\u00edgito de control del ISBN si fuera necesario (en ingl\u00e9s).\nISBN.nu Ofrece b\u00fasquedas gratuitas en una base de datos de t\u00edtulos (en ingl\u00e9s).\nRFC 3187  Using International Standard Book Numbers as Uniform resource names (URN) (en ingl\u00e9s).\nBarcodeRobot  Permite generar c\u00f3digos de barras a partir de n\u00fameros ISBN format pdf (en ingl\u00e9s).\nGu\u00eda de Implementaci\u00f3n Para el c\u00f3digo ISBN de 13 d\u00edgitos (documento pdf en ingl\u00e9s)."}]}]}
{"url": "https://es.wikipedia.org/wiki/Icon", "title": "Icon", "summary": "Icon es un lenguaje de programaci\u00f3n de muy alto nivel, especialmente recomendado para trabajar con cadenas de texto, ya que permite una programaci\u00f3n r\u00e1pida y concisa. Puede ser usado para an\u00e1lisis y formateo de textos, inteligencia artificial o programaci\u00f3n de prototipos. Las \u00faltimas versiones, adem\u00e1s, incluyen gr\u00e1ficos y facilidades GUI. Fue dise\u00f1ado en los a\u00f1os 1970 por Ralph E. Griswold, y otros colaboradores en el \"Department of Computer Science\" de la Universidad de Arizona. Griswold, que lideraba el proyecto, ya ten\u00eda experiencia anterior en el dise\u00f1o de lenguajes de alto nivel, ya que fue uno de los creadores de Snobol, del que tomaron algunas caracter\u00edsticas.", "sections": [{"name": "\u00cdndice", "text": "1 Sintaxis b\u00e1sica\n2 Evaluaci\u00f3n de expresiones\n2.1 Condicional\n3 Generadores\n4 Exploraci\u00f3n de cadenas\n5 Estructuras\n5.1 Listas\n5.2 Conjuntos\n6 Facilidades gr\u00e1ficas\n7 Enlaces externos", "subsections": []}, {"name": "Sintaxis b\u00e1sica", "text": "Se deriva de la clase ALGOL de los lenguajes de programaci\u00f3n estructurada, por lo que tiene una sintaxis similar a la de C, pero sobre todo, a la de Pascal, ya que utiliza el s\u00edmbolo \u2018:=\u2019 para las asignaciones. Por otra parte, se asemeja a C en la utilizaci\u00f3n de los corchetes para estructurar el programa y en la ejecuci\u00f3n de un procedimiento principal llamado \"main\".\nOtras caracter\u00edsticas comunes a otros lenguajes de programaci\u00f3n de scripting es que no es necesario declarar las variables, los tipos son emitidos autom\u00e1ticamente y los n\u00fameros pueden ser convertidos a cadena de caracteres y volver autom\u00e1ticamente. Otro aspecto a destacar es la ausencia de un car\u00e1cter de fin de l\u00ednea. Las l\u00edneas no terminan en punto y coma como en el caso de C, por ejemplo, sino que terminan en una coma impl\u00edcita siempre que la l\u00ednea tenga sentido.\nLos procedimientos son los bloques de construcci\u00f3n b\u00e1sicos en los programas. Aunque los nombres y palabras utilizadas en ICON se asemejen m\u00e1s a Pascal, el funcionamiento es m\u00e1s similar al que se le da en C, y puede devolver valores.", "subsections": []}, {"name": "Evaluaci\u00f3n de expresiones", "text": "", "subsections": [{"name": "Condicional", "text": "Hay expresiones condicionales que pueden tener \u00e9xito y producir un resultado, o fallar y no producir ning\u00fan resultado. Un ejemplo es la operaci\u00f3n de comparaci\u00f3n, i > j que tendr\u00e1 \u00e9xito siempre que el valor de i sea mayor que el de j. Algo parecido ocurre con i > j > k que tendr\u00e1 \u00e9xito cuando el valor de j se encuentre entre el de i y el de k.\nEl \u00e9xito o el fracaso de las operaciones condicionales se utiliza en lugar de valores booleanos para conducir las estructuras de control en ICON. Por ejemplo: \nSe asignar\u00eda el valor de i a k en el caso de que el valor de i sea mayor que el de j, y se le asignar\u00eda el valor de j en el caso contrario.\nLa utilidad de estos conceptos de \u00e9xito o fracaso es ilustrada mediante la orden \u201cfind(s1,s2)\u201d, que falla en el caso de que s1 no sea una subcadena de s2. Por ejemplo:\nEsto devolver\u00eda i, que es la posici\u00f3n de la cadena \u201cline\u201d en la que se encuentra la subcadena \u201cor\u201d. En el caso de que no se encuentre la subcadena, el programa no devolver\u00eda ning\u00fan resultado.\nMuchas expresiones son condicionales. Un ejemplo es \u201cread()\u201d, que devuelve la siguiente l\u00ednea de un archivo de entrada, y termina cuando se alcanza el final del archivo.\nEsta expresi\u00f3n copia el archivo de entrada en el archivo de salida.\nSi un argumento de una funci\u00f3n falla, la funci\u00f3n no se llama, la llamada falla."}]}, {"name": "Generadores", "text": "En algunas situaciones, una expresi\u00f3n puede ser capaz de producir m\u00e1s de un resultado diferente. Por ejemplo:\nAqu\u00ed, la subcadena \u201cor\u201d se repite 3 veces a lo largo de la cadena, en la posici\u00f3n 3, 23 y 33. Muchos lenguajes superan este problema eligiendo solo una de las opciones, generalmente se quedan con el primer resultado obtenido, en este caso el 3. Sin embargo, en ICON, podemos generar los 3 resultados distintos.\nLos resultados que produce un generador depender\u00e1 del contexto. En una situaci\u00f3n en la que \u00fanicamente uno de los resultados en necesario, se produce as\u00ed:\nLo que asignar\u00eda a la variable i el valor 3.\nSi el resultado de un generador no da lugar al \u00e9xito de la expresi\u00f3n que encierra, entonces la condici\u00f3n falla, pero el generador se reanuda para producir otro valor. Un ejemplo:\nEn este ejemplo, el primer resultado obtenido ser\u00eda 3, pero como no cumple la condici\u00f3n de que sea menor que 5, la expresi\u00f3n falla, pero se volver\u00e1 a ejecutar hasta encontrar el siguiente resultado, 23, que s\u00ed cumple la condici\u00f3n impuesta (23 > 5), y lo mismo ocurre con el 33. En estos casos, la operaci\u00f3n de comparaci\u00f3n tiene \u00e9xito.\nLa anterior expresi\u00f3n se puede expresar tambi\u00e9n de la siguiente manera:\nEs posible utilizar las expresiones en situaciones dif\u00edciles y rebuscadas, como por ejemplo:\nTendr\u00e1 \u00e9xito cuando la subcadena \u201cor\u201d, de la cadena sentence1, se encuentre en la misma posici\u00f3n que la subcadena \u201cand\u201d en la cadena sentence2. \nUn generador se puede reanudar repetidas veces para producir todos sus resultados mediante el uso de las tareas de control de cada estructura:\nEste bucle escribir\u00e1 todas las posiciones en las que se encuentre la subcadena \u201cor\u201d dentro de la oraci\u00f3n \u201csentence\u201d. Otra expresi\u00f3n que realiza la misma tarea que la anterior es la siguiente:\nExisten varios generadores predise\u00f1ados en ICON. Uno de los m\u00e1s conocidos es:\nUn ejemplo de su uso:\nO esta otra opci\u00f3n m\u00e1s compacta:\nEstas expresiones ejecutaran f(k) para cada valor de \u201ck\u201d que se encuentre entre \u2018i\u2019 y \u2018j\u2019.\nHay otras estructuras de control relacionadas con la generaci\u00f3n. Una de ellas es la alternancia:\nQue generar\u00e1 los resultados de expr1 seguidos de los de expr2. Por ejemplo:\nEscribir\u00e1 la posici\u00f3n de \u201cor\u201d en sentence1, seguido de la posici\u00f3n de la misma subcadena \u201cor\u201d en sentence2. Otra forma de escribir esta instrucci\u00f3n:\nOtro uso de la alternancia es el que pone de manifiesto la siguiente orden:\nQue tendr\u00e1 \u00e9xito cuando o bien i, o bien j, o bien k, tengan el valor 0 o 1.\nLos procedimientos podr\u00e1n ser usados para a\u00f1adir generadores al repertorio de los incluidos en ICON. Por ejemplo:\nEste procedimiento genera el valor de las posiciones de s1 que tambi\u00e9n ocurren en s2. La estructura de control \u201csuspend\u201d devuelve un valor desde el procedimiento, pero lo deja en suspensi\u00f3n para que pueda ser reanudado por otro valor. Cuando el bucle termina, el control de las corrientes de fuera del final del procedimiento sin producir otro valor.", "subsections": []}, {"name": "Exploraci\u00f3n de cadenas", "text": "Para operaciones complicadas sobre las posiciones en las cadenas, y en las que es muy f\u00e1cil cometer un error, ICON facilita la tarea gestionando autom\u00e1ticamente las posiciones de cada cadena. Por ejemplo:\nDonde s es la cadena que hay que examinar y \u201cexpr\u201d es una expresi\u00f3n que se encarga de llevar a cabo la exploraci\u00f3n. La exploraci\u00f3n empieza en la posici\u00f3n 1.\nLa funci\u00f3n \u201cmove(i)\u201d se mueve por la cadena hasta la posici\u00f3n \u2018i\u2019 y produce en la salida la subcadena contenida entre las posiciones anteriores y dicha posici\u00f3n. Si esta subcadena no pudiera ser producida porque la cadena original no es lo suficientemente larga, la funci\u00f3n falla. Por ejemplo:\nQue escribe subcadenas de dos caracteres consecutivos de la l\u00ednea, y parar\u00e1 cuando acabe la l\u00ednea.\nOtra funci\u00f3n de combinaci\u00f3n es la \u201ctab(i)\u201d, que se establece en la posici\u00f3n \u2018i\u2019 y devuelve la subcadena contenida entre las anteriores y las nuevas posiciones. Por ejemplo:\nLo que escribir\u00eda todos los caracteres desde la posici\u00f3n 10 hasta el final, siempre y cuando la funci\u00f3n no falle, por lo que la cadena debe ser lo suficientemente larga.\nLas funciones de an\u00e1lisis, como \u201cfind()\u201d pueden ser usadas en la exploraci\u00f3n de una cadena. Por ejemplo:\nQue escribir\u00e1 todas las subcadenas que encuentre en la l\u00ednea antes de la posici\u00f3n en la que se encuentra la subcadena \u201cor\u201d. \u201cfind()\u201d encuentra una posici\u00f3n, que es utilizada por \u201ctab\u201d para producir las subcadenas.\nOtro ejemplo de utilizaci\u00f3n de las funciones de an\u00e1lisis en exploraci\u00f3n de cadenas es:\nEsto escribir\u00eda todas las palabras en l\u00ednea.", "subsections": []}, {"name": "Estructuras", "text": "", "subsections": [{"name": "Listas", "text": "Si bien las cadenas son secuencias de caracteres, las listas en ICON son secuencias de valores de tipo arbitrario. Son creadas asignando a una variable una lista de valores entre corchetes, as\u00ed:\nLa lista \u201ccar1\u201d tiene cuatro valores, dos de los cuales son cadenas y otros dos son enteros. Los valores de una lista no tienen porque ser todos del mismo tipo. De hecho, en una lista se pueden introducir cualquier tipo de valores, incluso una lista dentro de otra:\nTambi\u00e9n pueden ser creadas mediante:\nQue crear\u00e1 una lista de \u2018i\u2019 valores, cada uno con el valor de \u2018x\u2019.\nSe pueden a\u00f1adir valores en una lista directamente a una posici\u00f3n. Por ejemplo:\nEsta instrucci\u00f3n cambiar\u00eda el \u00faltimo valor de la lista \u201ccar1\u201d a 2400. Si la posici\u00f3n indicada no pertenece a la lista, falla:\nLos valores en una lista L son generados por !L. As\u00ed:\nEscribe todos los valores en L.\nLas listas pueden ser manipuladas como pilas o colas. La funci\u00f3n \u201cpush(L,x)\u201d a\u00f1ade el valor de \u2018x\u2019 al extremo izquierdo de la lista L, autom\u00e1ticamente, aumentando el tama\u00f1o de L en 1. Del mismo modo, \u201cpop(L)\u201d elimina el valor del extremo izquierdo de la lista, disminuyendo autom\u00e1ticamente en 1 el tama\u00f1o total, adem\u00e1s de devolver el valor eliminado."}, {"name": "Conjuntos", "text": "Un conjunto es una colecci\u00f3n de valores. Para crear un conjunto vac\u00edo se utiliza \u201cset()\u201d. Alternativamente, \u201cset(L)\u201d produce un conjunto de los valores en la lista L. Por ejemplo:\nSe asigna al conjunto que contiene el entero 1, la cadena \u201cabc\u201d y una lista vac\u00eda.\nLa funci\u00f3n \u201cmember(S,x)\u201d tiene \u00e9xito si \u2018x\u2019 es un miembro de la serie S pero falla en otro caso. La funci\u00f3n \u201cinsert(S,x)\u201d a\u00f1ade \u2018x\u2019 a la serie S, mientras que la funci\u00f3n \u201cdelete(S,x)\u201d hace justamente la operaci\u00f3n contraria. Los valores de un conjunto no se pueden repetir. Si se intenta insertar un valor \u2018x\u2019 en un conjunto que ya contiene dicho valor, fallar\u00e1. La instrucci\u00f3n !S generar\u00e1 los miembros del conjunto S.\nUn ejemplo simple de la utilizaci\u00f3n de los conjuntos, en el que se enumeran todas las palabras que aparecen en el fichero de entrada:"}]}, {"name": "Facilidades gr\u00e1ficas", "text": "ICON soporta gr\u00e1ficos de alto nivel, aportando una serie de facilidades:\nSe pueden abrir y cerrar ventanas cuando se desee.\nEl texto puede ser escrito en ventanas con una gran variedad de tama\u00f1os y estilos.\nSe pueden utilizar puntos, l\u00edneas, pol\u00edgonos, c\u00edrculos, \u00e1reas y suavizar las curvas.\nUtilizar colores en texto y elementos gr\u00e1ficos.\nLos archivos de imagen pueden ser le\u00eddos y escritos.", "subsections": []}, {"name": "Enlaces externos", "text": "Icon\nRalph E. Griswold & Madge T. Griswold, The Icon Programming Language. Coriolis Group Books, 2002. PDF | OpenLibra Libro gratuito (ingl\u00e9s)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Instagram", "title": "Instagram", "summary": "help.instagram.com\nInstagram (com\u00fanmente abreviado como IG o Insta)[1]\u200b es una aplicaci\u00f3n y red social de origen estadounidense, propiedad de Meta. Creada por Kevin Systrom y Mike Krieger, fue lanzada el 6 de octubre de 2010. Gan\u00f3 r\u00e1pidamente popularidad, llegando a tener m\u00e1s de 100 millones de usuarios activos en abril de 2012 y m\u00e1s de 300 millones en diciembre de 2014.[2]\u200b Fue dise\u00f1ada originariamente para iPhone y a su vez est\u00e1 disponible para sus hermanos iPad y iPod con el sistema iOS 3.0.2 o superior. A principios de abril de 2012, se public\u00f3 una versi\u00f3n para Android, y en 2013 se lanz\u00f3 la versi\u00f3n beta para Windows Phone y oficial para Windows 10 en 2016.\nInstagram tambi\u00e9n posee un medio de comunicaci\u00f3n privado para hablar llamado Instagram Direct, y una funci\u00f3n llamada Historias (en ingl\u00e9s, Stories) donde todas las personas pueden publicar fotograf\u00edas y v\u00eddeos temporales a su perfil, agregando variados filtros y efectos, con una duraci\u00f3n m\u00e1xima de permanencia de 24 horas; que tambi\u00e9n se pueden guardar en el perfil permanentemente para que puedan ser vistos, como \u00abHistorias destacadas\u00bb. Esta caracter\u00edstica tambi\u00e9n permite a los usuarios una funci\u00f3n de videos en directo, que tambi\u00e9n pueden ser guardados para ver con posterioridad y a trav\u00e9s de los que pueden interactuar con otros seguidores; compartir gifs; crear y editar reels e incluso hacer videollamadas, una funci\u00f3n muy utilizada por los usuarios.\nSeg\u00fan datos de DataReportal en enero de 2020 era la sexta red social m\u00e1s utilizada a nivel mundial, con alrededor de 1000 millones de usuarios activos mensuales.[3]\u200b A noviembre de 2022, la cuenta con m\u00e1s seguidores es la propia de Instagram, con m\u00e1s de 592 millones de seguidores.[4]\u200b El hombre m\u00e1s seguido es el futbolista portugu\u00e9s Cristiano Ronaldo con m\u00e1s de 552 millones de seguidores,[5]\u200b mientras que la mujer m\u00e1s seguida es la actriz y cantante estadounidense Selena G\u00f3mez con m\u00e1s de 387 millones de seguidores.[6]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Logotipo\n3 Impacto\n4 Funciones y herramientas\n4.1 Hashtags\n4.2 Instagram Direct\n4.3 Instagram Stories\n4.3.1 IGTV\n4.3.2 Reels\n4.4 Creator Studio\n5 Comunidad\n5.1 Weekend Hashtag Project\n5.2 Worldwide InstaMeet\n6 Premios\n7 V\u00e9ase tambi\u00e9n\n8 Referencias\n9 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "El desarrollo de Instagram se inici\u00f3 en San Francisco, cuando Kevin Systrom y Mike Krieger optaron por centrar sus m\u00faltiples funciones HTML5 check-in Burbn en un proyecto de fotograf\u00eda m\u00f3vil. El producto fue lanzado en el Apple App Store el 6 de octubre de 2010.[2]\u200b\nPoco despu\u00e9s del lanzamiento, Josh Riedel se uni\u00f3 al equipo como gerente de la comunidad. Shayne Sweeney se uni\u00f3 en noviembre de 2010 como ingeniero y Jessica Zollman fue contratada como encargada de promoci\u00f3n en agosto de 2011.\nEn el mes de enero de 2011, Instagram a\u00f1adi\u00f3 hashtags para ayudar a los usuarios a descubrir las fotos que los dem\u00e1s compart\u00edan sobre un mismo tema. Animaba as\u00ed a sus usuarios a a\u00f1adir hashtags relevantes y espec\u00edficos, en lugar de etiquetar palabras como foto con el objetivo de hacer las fotograf\u00edas m\u00e1s populares, atraer a un mayor n\u00famero de fan\u00e1ticos y conseguir m\u00e1s me gusta.[7]\u200b\nEn septiembre de 2011, la versi\u00f3n 2.0 se puso en marcha en la App Store. Se incluyeron nuevos filtros en vivo, opci\u00f3n de aplicar efectos de desenfoque a \u00e1reas concretas, edici\u00f3n de im\u00e1genes de alta resoluci\u00f3n, bordes opcionales, bot\u00f3n de rotaci\u00f3n de la imagen y un bot\u00f3n de actualizaci\u00f3n.[8]\u200b\nEl 3 de abril de 2012 sali\u00f3 la versi\u00f3n abierta al p\u00fablico para Android.[9]\u200b Algunas semanas antes, Instagram hab\u00eda anunciado que estaba llevando a cabo pruebas en Android mediante una beta cerrada. En ese momento, se dio la posibilidad de registrarse en una web para recibir un aviso una vez que fuera lanzada la aplicaci\u00f3n final, lo que hicieron unas 430 000 personas. Una vez lanzada, la versi\u00f3n para Android consigui\u00f3 m\u00e1s de un mill\u00f3n de descargas en menos de 24 horas. En los tres meses siguientes Instagram fue evaluado m\u00e1s de un mill\u00f3n de veces por los usuarios de Google Play, convirti\u00e9ndose de esta forma en la quinta aplicaci\u00f3n m\u00e1s evaluada en mayo de 2013, con m\u00e1s de 4 millones de veces. Asimismo, se liber\u00f3 la API de la aplicaci\u00f3n permitiendo a terceros crear sus propias apps que incluyesen los servicios de Instagram como Instamaps, Instahood o Instaweather.\nEl 9 de abril de 2012, se anunci\u00f3 que Facebook hab\u00eda adquirido la compa\u00f1\u00eda por mil millones de USD.[10]\u200b\nA partir de la versi\u00f3n 4.0 la aplicaci\u00f3n permite al usuario la toma de v\u00eddeos con una duraci\u00f3n m\u00e1xima de 1 minuto. Esta nueva herramienta incluye estabilizaci\u00f3n de imagen.\nEl 17 de diciembre de 2012, Instagram actualiz\u00f3 sus t\u00e9rminos de privacidad y condiciones de uso, otorg\u00e1ndose as\u00ed el derecho a vender las fotos de los usuarios a terceros sin notificaci\u00f3n o compensaci\u00f3n a partir del 16 de enero de 2013.[11]\u200b La cr\u00edtica de los defensores de la privacidad, los consumidores,[12]\u200b National Geographic[13]\u200b y celebridades como Kim Kardashian llev\u00f3 a Instagram a deshacer los cambios impuestos en la declaraci\u00f3n de los t\u00e9rminos de privacidad.[14]\u200b Aun as\u00ed, Instagram perdi\u00f3 gran parte de usuarios, que optaron por cambiarse a otros servicios similares a Instagram. Instagram est\u00e1 trabajando actualmente en el desarrollo de un nuevo texto para reemplazar los t\u00e9rminos controvertidos.[15]\u200b\nEl 2 de mayo de 2013, Instagram introdujo la posibilidad de etiquetar a personas y marcas en cualquiera de las fotos. De esta forma, satisfac\u00eda una de las caracter\u00edsticas m\u00e1s demandadas por los usuarios.[16]\u200b El 12 de diciembre de ese mismo a\u00f1o integr\u00f3 Instagram Direct,\u00a0es la forma de enviar mensajes directos y privados con fotograf\u00edas o v\u00eddeos, tal como los mensajes de Facebook.\nEn 2014, Windows Phone empez\u00f3 a contar con la aplicaci\u00f3n en fase beta, pudiendo utilizar todas sus funciones excepto la de subir v\u00eddeos.[17]\u200b Mientras en Windows 10 Mobile ya se encuentra la versi\u00f3n completa de la aplicaci\u00f3n, luego de estar tanto tiempo en versi\u00f3n beta.\nEn 2015 se incorpor\u00f3 la posibilidad de pautar publicidad desde la plataforma de avisos de Facebook para y en Instagram.\nEn mayo de 2016, Instagram renueva su logotipo, dejando la caracter\u00edstica c\u00e1mara vintage por un dise\u00f1o m\u00e1s colorido, es simplemente una c\u00e1mara detr\u00e1s de un arco iris en gradiente, seg\u00fan la compa\u00f1\u00eda.[18]\u200b\nEn agosto de 2016, Instagram a\u00f1ade la posibilidad de subir fotos y v\u00eddeos cuya duraci\u00f3n est\u00e1 limitada a 24 horas (un d\u00eda) en un nuevo apartado llamado Instagram Stories. Estas publicaciones se pueden acompa\u00f1ar de filtros y stickers y hay varios formatos, como texto, m\u00fasica, directo, boomerang, superzoom, focus, rewind y manos libres.[19]\u200b\nEn enero de 2018 Instagram se vincul\u00f3 con la p\u00e1gina Giphy, la cual permite agregar una variedad de im\u00e1genes Graphics Interchange Format (GIF) al material que se quiera compartir.\nEn 2018 se lanz\u00f3 IGTV (Instagram TV), una funci\u00f3n que permite subir videos de m\u00e1s de un minuto y transmitir v\u00eddeos en vivo a trav\u00e9s de Instagram.\nEn septiembre de 2018 los fundadores de la compa\u00f1\u00eda, Systrom y Krieger, se retiraron de la gesti\u00f3n de la misma, dej\u00e1ndola completamente en manos de Facebook.[20]\u200b\nEn noviembre de 2019, la red social elimin\u00f3 la pesta\u00f1a Suscripciones para \u00abevitar malentendidos\u00bb.[21]\u200b En la pesta\u00f1a se pod\u00eda realizar un seguimiento de las acciones de otros usuarios: me gusta, comentarios y suscripciones.", "subsections": []}, {"name": "Logotipo", "text": "El logo de Instagram ha cambiado cuatro veces a lo largo de su historia. Tuvo dos en el a\u00f1o 2010, que no estuvieron mucho tiempo en uso. En el a\u00f1o 2011 el logo se renov\u00f3 y, aunque segu\u00eda siendo muy parecido al anterior, era un poco m\u00e1s sofisticado y moderno. Este fue el que m\u00e1s tiempo ha estado activo en la red social, durando cinco a\u00f1os identificando a la red social. El \u00edcono cl\u00e1sico fue cambiado en el a\u00f1o 2016 por uno radicalmente diferente, lo cual molest\u00f3 a muchos de sus usuarios, ya que dec\u00edan sentir que la identidad de la red social hab\u00eda cambiado. En el a\u00f1o 2020, en el mes de octubre, en el a\u00f1o de aniversario n\u00famero diez del nacimiento de esta red social, Instagram dio la opci\u00f3n de que sus usuarios elijan qu\u00e9 logo quisieran utilizar de todos los que ha tenido a lo largo de su historia, a\u00f1adiendo tambi\u00e9n opciones de diferentes colores y motivos, como en blanco y negro o con los colores del arco\u00edris y m\u00e1s.", "subsections": []}, {"name": "Impacto", "text": "El 11 de marzo de 2012, Instagram anunci\u00f3 que hab\u00eda alcanzado la cifra de 27 millones de usuarios registrados.[22]\u200b Sin embargo, a principios de septiembre de 2012, Mark Zuckerberg, el CEO de Facebook, anunci\u00f3 que la red social ya tiene m\u00e1s de 100 millones de usuarios registrados.[23]\u200b\nEn mayo de 2012, a cada segundo se sub\u00edan 58 fotograf\u00edas y se un\u00eda un usuario m\u00e1s a la aplicaci\u00f3n. El n\u00famero total de fotograf\u00edas subidas hab\u00eda superado los mil millones.[24]\u200b\nEl 9 de agosto de 2012, la cantante inglesa Ellie Goulding estren\u00f3 un original videoclip de su canci\u00f3n Anything could happen. El video consta solamente de fotograf\u00edas retocadas con los filtros t\u00edpicos de Instagram. Con dichas fotograf\u00edas se representan palabras o letras de la canci\u00f3n. En casi cuatro minutos de video se utilizaron m\u00e1s de 1200 fotograf\u00edas diferentes.[25]\u200b\nEl 27 de febrero de 2013, Instagram anunci\u00f3 que contaba con 100 millones de usuarios activos, solo dos a\u00f1os y medio despu\u00e9s de la primera puesta en marcha. Signific\u00f3 un aumento de aproximadamente 10 millones de usuarios en poco m\u00e1s de un mes.[26]\u200b\nFinalmente, en noviembre de 2018, se confirma que Instagram llega a superar los 1000 millones de usuarios activos.[27]\u200b\nSe estima que el crecimiento de Instagram tiene relaci\u00f3n con las nuevas funcionalidades que fue agregando a lo largo de los a\u00f1os. Una de las \u00faltimas fue Instagram Shopping. Esta herramienta permite etiquetar hasta cinco productos en una sola foto (o hasta 20 en formato carrusel), y se puede usar tanto en las publicaciones del feed como en las historias (stories) de Instagram.[28]\u200b De esta manera, una marca puede mostrar un producto con una etiqueta, su precio y redirigir a las personas a la tienda en l\u00ednea para que concreten la compra. Instagram Shopping se lanz\u00f3 por primera vez en Estados Unidos durante 2017 como una especie de prueba para descubrir qu\u00e9 tal funcionaba la herramienta en el mercado del ecommerce norteamericano. Luego de ese per\u00edodo de evaluaci\u00f3n, y aprobada por los consumidores estadounidenses, Instagram shopping se expandi\u00f3 progresivamente a otros pa\u00edses como Francia, Reino Unido, Espa\u00f1a, Argentina, Brasil, Colombia, M\u00e9xico, entre otros. La empresa tiene planeado seguir extendiendo la funcionalidad a territorios como Argelia, Chile, Costa Rica, Egipto, Hong Kong, India, Turqu\u00eda y muchos m\u00e1s.[cita\u00a0requerida]", "subsections": []}, {"name": "Funciones y herramientas", "text": "Los usuarios de Instagram pueden aplicar efectos fotogr\u00e1ficos como filtros, marcos, similitudes t\u00e9rmicas, \u00e1reas subyacentes en las bases c\u00f3ncavas, colores retro y posteriormente compartir las fotograf\u00edas en la misma red social o en otras como Facebook, Tumblr, Flickr y Twitter. Una caracter\u00edstica distintiva de la aplicaci\u00f3n es que da una forma cuadrada a las fotograf\u00edas en honor a la Kodak Instamatic y las c\u00e1maras Polaroid, contrastando con la relaci\u00f3n de aspecto 16:9 y 4:3 que actualmente usan la mayor\u00eda de las c\u00e1maras de tel\u00e9fonos m\u00f3viles pero que el 19:9 no quiere soportarlo. Hoy en d\u00eda, las fotos pueden estar en horizontal y en vertical sin el uso de los bordes blancos, aunque estas son recortadas parcialmente.\nInstagram se identifica por sus conocidos filtros que provienen de Polaroid que hacen referencia a que fueron tomadas por las mismas.\nClarendon: Intensifica las sombras e ilumina los reflejos. Originalmente lanzado como un filtro solo para v\u00eddeo.\nGingham: Lava las fotos. Da un tono amarillento cuando se usa en fotos oscuras o un aspecto m\u00e1s brillante y so\u00f1oliento cuando se usa en fotos claras.\nMoon: Versi\u00f3n en blanco y negro de Gingham, con sombras ligeramente m\u00e1s intensas.\nLark: Desatura los rojos mientras amplifica azules y verdes: hace que los paisajes cobren vida.\nReyes: Le da a las fotos un aspecto polvoriento y vintage.\nJuno: Matiza los tonos fr\u00edos en verde, hace que los tonos c\u00e1lidos resalten y los blancos brillen.\nSlumber: Desatura la imagen y agrega bruma para una apariencia retro y so\u00f1olienta, con \u00e9nfasis en negros y azules y amarillos.\nCrema: Agrega una apariencia cremosa que calienta y enfr\u00eda a la vez la imagen.\nLudwig: Un ligero toque de desaturaci\u00f3n que tambi\u00e9n mejora la luz.\nAden: Da un aspecto natural de azules y verdes.\nPerpetua: A\u00f1ade un aspecto pastel, ideal para retratos.\nAmaro: Agrega luz a la imagen, con un foco en el centro.\nMayfair: Aplica un tono rosado c\u00e1lido, vi\u00f1etas sutiles para iluminar el centro de la fotograf\u00eda y un borde negro delgado.\nRise: Agrega un \u00abresplandor\u00bb a la imagen, con una iluminaci\u00f3n m\u00e1s suave del sujeto.\nHudson: Crea una ilusi\u00f3n \u00abhelada\u00bb con sombras intensas, tinte fr\u00edo y centro esquivado.\nValencia: Desvanece la imagen al aumentar la exposici\u00f3n y calentar los colores, d\u00e1ndole un toque antiguo\nX-Pro II: Aumenta la vitalidad del color con un tinte dorado, alto contraste y una leve vi\u00f1eta agregada a los bordes.\nSierra: Da un aspecto desva\u00eddo y suave.\nWillow: Un filtro monocrom\u00e1tico con sutiles tonos morados y un borde blanco transl\u00facido.\nLo-Fi: Enriquece el color y agrega sombras fuertes mediante el uso de saturaci\u00f3n y \u00abcalentamiento\u00bb de la temperatura.\nEarlybird: Le da a las fotograf\u00edas una apariencia m\u00e1s antigua con un tono sepia y una temperatura c\u00e1lida.\nBrannan: Aumenta el contraste y la exposici\u00f3n y agrega un tinte met\u00e1lico.\nInkwell: Cambio directo a blanco y negro - sin edici\u00f3n adicional.\nHefe: Alto contraste y saturaci\u00f3n, con un efecto similar al Lo-Fi pero no tan dram\u00e1tico.\nNashville: Calienta la temperatura, reduce el contraste y aumenta la exposici\u00f3n para dar un ligero tinte \u00abrosado\u00bb, d\u00e1ndole un aire \u00abnost\u00e1lgico\u00bb.\nSutro: Quema los bordes de las fotos, aumenta los reflejos y las sombras dram\u00e1ticamente con un enfoque en los colores morado y marr\u00f3n.\nToaster: Hace que se \u00abqueme\u00bb el centro de la imagen y agrega una vi\u00f1eta dram\u00e1tica.\nWalden: Aumenta la exposici\u00f3n y agrega un tinte amarillo.\n1977: Una mayor exposici\u00f3n con un tinte rojo da a la fotograf\u00eda una apariencia rosada, brillante y desva\u00edda.\nKelvin: Aumenta la saturaci\u00f3n y la temperatura para darle un \u00abresplandor\u00bb radiante.\nStinson: Filtro sutil que ilumina la imagen, eliminando ligeramente los colores.\nVesper.\nMaven.\nGinza.\nSkyline.\nDogpatch.\nBrooklyn.\nHelena.\nAshby.\nCharmes.\nDentro de la modalidad de las historias, tambi\u00e9n existen diversos filtros para editar los videos y fotos que se comparten, a los cuales se les otorg\u00f3 nombres de ciudades del mundo y son: \nParis: Da un efecto de brillo y tiene un tono azulado.\nR\u00edo de Janeiro: Da un efecto de colores degradados, del morado al amarillo.\nTokyo: Da un efecto blanco y negro.\nCairo: Da un matiz amarillento y vintage.\nJaipur: Da un matiz rosado y con claridad.\nNew York: Crea un efecto de vi\u00f1eta obscurecida y resalta los tonos obscuros.\nBuenos Aires: Realza las luces y satura los tonos obscuros.\nAbu Dabi: Suaviza la imagen y realza los tonos amarillos.\nJakarta: Realza las luces y da un tono p\u00e1lido.\nMelbourne: Disminuye la saturaci\u00f3n y suaviza.\nLagos: Suaviza la imagen en un tono amarillento.\nOslo: Realza las sombras.", "subsections": [{"name": "Hashtags", "text": "En enero de 2011, Instagram introdujo hashtags para ayudar a los usuarios a descubrir tanto fotos como a otros. Instagram anima a los usuarios a crear etiquetas tanto espec\u00edficas como relevantes, en lugar de etiquetar palabras gen\u00e9ricas como \u00abfoto\u00bb, para hacer que las fotograf\u00edas se destaquen y atraer a usuarios de Instagram de ideas afines.[29]\u200b\nLos usuarios de Instagram han creado \u00abtendencias\u00bb a trav\u00e9s de hashtags. Las tendencias que se consideran las m\u00e1s populares en la plataforma a menudo destacan un d\u00eda espec\u00edfico de la semana para publicar el material. Ejemplos de tendencias populares incluyen #SelfieSunday, en el que los usuarios publican una foto de sus caras los domingos; #MotivationMonday, en el que los usuarios publican fotos de motivaci\u00f3n los lunes; #TransformationTuesday, en el que los usuarios publican fotos que destacan las diferencias del pasado al presente; #WomanCrushMonday, en el que los usuarios publican fotos de mujeres en las que tienen un inter\u00e9s rom\u00e1ntico o que ven favorablemente, as\u00ed como su contraparte #ManCrushMonday centrada en los hombres; y #ThrowbackThursday, en el que los usuarios publican una foto de su pasado, destacando un momento en particular.[30]\u200b\nEn diciembre de 2017, Instagram comenz\u00f3 a permitir a los usuarios seguir hashtags, que muestran aspectos destacados relevantes del tema en sus feeds.[31]\u200b\nSe crearon como una forma de competir con Twitter."}, {"name": "Instagram Direct", "text": "En diciembre de 2013, Instagram anunci\u00f3 Instagram Direct, una funci\u00f3n que permite a los usuarios interactuar a trav\u00e9s de mensajes privados. Los usuarios que se siguen pueden enviar mensajes privados con fotos y videos, en contraste con el requisito de solo p\u00fablico que exist\u00eda anteriormente. Cuando los usuarios reciben un mensaje privado de alguien a quien no siguen, el mensaje se marca como pendiente y el usuario debe aceptar para verlo. Los usuarios pueden enviar una foto a un m\u00e1ximo de 15 personas. La funci\u00f3n recibi\u00f3 una actualizaci\u00f3n importante en septiembre de 2015, agregando hilos de conversaci\u00f3n y haciendo posible que los usuarios compartan ubicaciones, p\u00e1ginas de hashtags y perfiles a trav\u00e9s de mensajes privados directamente desde el servicio de noticias. Adem\u00e1s, los usuarios ahora pueden responder a mensajes privados con texto, emoji o haciendo clic en un icono de coraz\u00f3n. Una c\u00e1mara dentro de Direct permite a los usuarios tomar una foto y enviarla al destinatario sin salir de la conversaci\u00f3n. Una nueva actualizaci\u00f3n de noviembre de 2016 permite a los usuarios hacer que sus mensajes privados \u00abdesaparezcan\u00bb despu\u00e9s de que el destinatario los vea, y el remitente recibe una notificaci\u00f3n si el destinatario toma una captura de pantalla.[32]\u200b\nEn abril de 2017, Instagram redise\u00f1\u00f3 Direct para combinar todos los mensajes privados, tanto permanentes como ef\u00edmeros, en los mismos hilos de mensajes. En mayo, Instagram hizo posible enviar enlaces a sitios web en mensajes, y tambi\u00e9n agreg\u00f3 soporte para enviar fotos en su orientaci\u00f3n original vertical u horizontal sin recortar.[33]\u200b\nEn abril de 2020, Direct se volvi\u00f3 accesible desde el sitio web de Instagram.[34]\u200b"}, {"name": "Instagram Stories", "text": "En agosto de 2016, Instagram lanz\u00f3 Instagram Stories, una funci\u00f3n que permite a los usuarios tomar fotos, agregar efectos y capas, y agregarlos a su historia de Instagram. Las im\u00e1genes subidas a la historia de un usuario caducan despu\u00e9s de 24 horas. Los medios notaron las similitudes de la funci\u00f3n con Snapchat. En respuesta a las cr\u00edticas de que copiaba la funcionalidad de Snapchat, el CEO Kevin Systrom dijo a Recode que \u00abD\u00eda uno: Instagram fue una combinaci\u00f3n de Hipstamatic, Twitter [y] algunas cosas de Facebook como el bot\u00f3n 'Me gusta'. Puedes rastrear las ra\u00edces de cada caracter\u00edstica que cualquiera tiene en su aplicaci\u00f3n, en alg\u00fan lugar de la historia de la tecnolog\u00eda\u00bb. Aunque Systrom reconoci\u00f3 las cr\u00edticas como \u00abjustas\u00bb, Recode escribi\u00f3 que \u00abcompar\u00f3 las caracter\u00edsticas comunes de las dos aplicaciones sociales con la industria automotriz: pueden coexistir m\u00faltiples compa\u00f1\u00edas automotrices, con suficientes diferencias entre ellas para que atiendan a diferentes audiencias de consumidores\u00bb. Systrom declar\u00f3 adem\u00e1s que \u00abCuando adoptamos [Historias], decidimos que una de las cosas realmente molestas del formato es que segu\u00eda funcionando y no se pod\u00eda pausar para mirar algo, no se pod\u00eda rebobinar. Lo hicimos todo eso, lo implementamos\u00bb. Tambi\u00e9n le dijo a la publicaci\u00f3n que Snapchat \u00aboriginalmente no ten\u00eda filtros. Adoptaron filtros porque Instagram ten\u00eda filtros y muchos otros estaban tratando de adoptar filtros tambi\u00e9n\u00bb.[35]\u200b\nEn noviembre, Instagram agreg\u00f3 la funcionalidad de video en vivo a las Historias de Instagram, lo que permite a los usuarios transmitirse en vivo, y el video desaparece inmediatamente despu\u00e9s de finalizar.\nEn enero de 2017, Instagram lanz\u00f3 anuncios que se pueden omitir, donde aparecen anuncios de fotos de cinco segundos y videos de 15 segundos entre diferentes historias.[36]\u200b\nEn abril de 2017, Instagram Stories incorpor\u00f3 pegatinas de realidad aumentada, un \u00abclon\u00bb de la funcionalidad de Snapchat.[37]\u200b\nEn mayo de 2017, Instagram ampli\u00f3 la funci\u00f3n de pegatinas de realidad aumentada para admitir filtros faciales, lo que permite a los usuarios agregar caracter\u00edsticas visuales espec\u00edficas en sus rostros. M\u00e1s tarde, en mayo, TechCrunch inform\u00f3 sobre las pruebas de una funci\u00f3n de Historias de ubicaci\u00f3n en Historias de Instagram, donde el contenido de Historias p\u00fablicas en una ubicaci\u00f3n determinada se compila y muestra en la p\u00e1gina de Instagram de una empresa, punto de referencia o lugar. Unos d\u00edas despu\u00e9s, Instagram anunci\u00f3 la \u00abB\u00fasqueda de historias\u00bb, en la que los usuarios pueden buscar ubicaciones geogr\u00e1ficas o hashtags y la aplicaci\u00f3n muestra contenido de Historias p\u00fablicas relevantes con el t\u00e9rmino de b\u00fasqueda.[38]\u200b\nEn junio de 2017, Instagram revis\u00f3 su funcionalidad de video en vivo para permitir a los usuarios agregar su transmisi\u00f3n en vivo a su historia para disponibilidad en las pr\u00f3ximas 24 horas, o descartar la transmisi\u00f3n inmediatamente.En julio, Instagram comenz\u00f3 a permitir a los usuarios responder al contenido de las Historias enviando fotos y videos, con efectos de Instagram como filtros, pegatinas y hashtags.[39]\u200b\nLas historias estuvieron disponibles para su visualizaci\u00f3n en los sitios web m\u00f3viles y de escritorio de Instagram a fines de agosto de 2017.\nEl 5 de diciembre de 2017, Instagram present\u00f3 \u00abHistorias destacadas\u00bb, tambi\u00e9n conocidas como \u00abHistorias permanentes\u00bb, que son similares a las Historias de Instagram, pero que no caducan. Aparecen como c\u00edrculos debajo de la foto de perfil y la biograf\u00eda y tambi\u00e9n son accesibles desde el sitio web de escritorio.\nEn junio de 2018, los usuarios de historias activos diarios de Instagram hab\u00edan alcanzado los 400 millones de usuarios, y los usuarios activos mensuales hab\u00edan alcanzado los mil millones de usuarios activos.[40]\u200b\nIGTV\nArt\u00edculo principal:\nIGTV es una aplicaci\u00f3n de video vertical lanzada por Instagram en junio de 2018. La funcionalidad b\u00e1sica tambi\u00e9n est\u00e1 disponible dentro de la aplicaci\u00f3n y el sitio web de Instagram. IGTV permite cargas de hasta 10 minutos de duraci\u00f3n con un tama\u00f1o de archivo de hasta 650 MB, y los usuarios verificados y populares permiten cargar videos de hasta 60 minutos de duraci\u00f3n con un tama\u00f1o de archivo de hasta 5,4 GB. La aplicaci\u00f3n comienza a reproducir videos autom\u00e1ticamente tan pronto como se lanza, lo que el CEO Kevin Systrom contrast\u00f3 con los hosts de video donde primero se debe ubicar un video.[41]\u200b[42]\u200b\nReels\nEn noviembre de 2019, se inform\u00f3 que Instagram hab\u00eda comenzado a poner a prueba una nueva funci\u00f3n de video conocida como \u00abReels\u00bb en Brasil, que luego se expandi\u00f3 a Francia y Alemania. Es similar en funcionalidad al servicio chino para compartir videos TikTok, con un enfoque en permitir a los usuarios grabar videos cortos configurados con clips de sonido preexistentes de otras publicaciones. Reels tambi\u00e9n se integra con los filtros de Instagram y las herramientas de edici\u00f3n existentes.[43]\u200b\nEn julio de 2020, Instagram lanz\u00f3 Reels en India despu\u00e9s de que TikTok fuera prohibido en el pa\u00eds.[44]\u200b\nEl 5 de agosto de 2020, Reels se lanz\u00f3 oficialmente en 50 pa\u00edses, incluidos Estados Unidos y Reino Unido.[45]\u200b"}, {"name": "Creator Studio", "text": "Es una herramienta pensada para creadores de contenido o influencers que ayuda con las estad\u00edsticas, la gesti\u00f3n de los mensajes y comentarios, como tambi\u00e9n a la monetizaci\u00f3n.[46]\u200b"}]}, {"name": "Comunidad", "text": "", "subsections": [{"name": "Weekend Hashtag Project", "text": "El \u00abWeekend Hashtag Project\u00bb es un proyecto lanzado desde Instagram que anima a los usuarios a subir fotograf\u00edas creativas al servicio de un tema determinado, escogido previamente por la Comunidad Instagram. Los seguidores reciben el proyecto de fin de semana todos los viernes, y han de subir sus fotograf\u00edas acompa\u00f1adas de una marca correspondiente.[47]\u200b"}, {"name": "Worldwide InstaMeet", "text": "A causa de la expansi\u00f3n de usuarios en la plataforma, muchos fot\u00f3grafos de la comunidad de Instagram han decidido organizar eventos donde se re\u00fanen a compartir su gusto por la fotograf\u00eda. Generalmente estos son organizados por moderadores de grupos regionales, instagramers o por personas de relevancia en la plataforma.[48]\u200b\nEste evento se organiza anualmente en lugares ic\u00f3nicos de los diversos pa\u00edses. En los Estados Unidos solo se eligen lugares que permitan la toma de fotograf\u00edas como parques nacionales, bosques, playas, museos o parques arqueol\u00f3gicos, entre otros lugares.\nPor otra parte, en pa\u00edses europeos es com\u00fan que se realiza en plazas en fechas festivas.\nTambi\u00e9n es realizado en los pa\u00edses del resto del continente americano.\nPara etiquetar y organizar las fotograf\u00edas del evento, de utiliza el hashtag WWIM y el n\u00famero de la edici\u00f3n del evento."}]}, {"name": "Premios", "text": "Este aviso fue puesto el 31 de mayo de 2021.\nEn enero de 2011, Instagram fue el subcampe\u00f3n de \u00abMejor aplicaci\u00f3n m\u00f3vil\u00bb en el TechCrunch Crunchies de 2010.\nEn mayo de 2011, Kevin Systrom aparece en el n\u00famero 66 en \u00abLas 100 personas m\u00e1s creativas en los negocios en 2011\u00bb.\nEn junio de 2011 la revista \u00ab30 Under 30\u00bb incluy\u00f3 a los cofundadores (Systrom y Krieger) en su lista.\nEn septiembre de 2011, Instagram gan\u00f3 \u00abMejor aplicaci\u00f3n Fabricaci\u00f3n local\u00bb en el \u00abSF Weekly Web Awards\u00bb.\nEn diciembre de 2011, Apple Inc. reconoci\u00f3 a Instagram como \u00abApp del a\u00f1o\u00bb 2011.\nEn 2015 Instagram fue n\u00famero uno en el ranking \u00abLas 100 mejores apps de iPhone\u00bb creado por Mashable, quienes destacaron que Instagram era \u00abuna de las redes sociales m\u00e1s influyentes en el mundo\u00bb.[49]\u200b\nEn junio de 2017, MTV MIAW. reconoci\u00f3 a Instagram como \u00abAdicci\u00f3n del A\u00f1o\u00bb 2017.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Internet. Contenido relacionado con Internet.\nCuentas de Instagram con m\u00e1s seguidores\nPublicaciones de Instagram con m\u00e1s likes\nPicsArt\nTumblr", "subsections": []}, {"name": "Referencias", "text": "\u2191 Edwards, Erica B.; Esposito, Jennifer (27 de noviembre de 2019). Intersectional Analysis as a Method to Analyze Popular Culture: Clarity in the Matrix (en ingl\u00e9s). Routledge. ISBN\u00a0978-0-429-55700-2. Consultado el 24 de mayo de 2021.\u00a0\n\u2191 a b \u00abCon 300 millones de usuarios, Instagram ya supera a Twitter\u00bb. Consultado el 11 de diciembre de 2014.\u00a0\n\u2191 \u00abPrincipales redes sociales globales en 2020\u00bb. Statista. Consultado el 24 de abril de 2020.\u00a0\n\u2191 \u00abInstagram (@instagram) \u2022 Fotos y videos de Instagram\u00bb. www.instagram.com. Consultado el 28 de noviembre de 2022.\u00a0\n\u2191 \u00abICristiano Ronaldo (@cristiano) \u2022 Fotos y v\u00eddeos de Instagram\u00bb. www.instagram.com. Consultado el 28 de noviembre de 2022.\u00a0\n\u2191 \u00abSelena Gomez (@selenagomez) \u2022 Fotos y v\u00eddeos de Instagram\u00bb. www.instagram.com. Consultado el 27 de febrero de 2023.\u00a0\n\u2191 \u00abInstagram tips: Using Hashtags\u00bb. Archivado desde el original el 2 de mayo de 2017. Consultado el 29 de mayo de 2013.\u00a0 Explicaci\u00f3n del correcto uso de etiquetas desde el blog oficial de Instagram.\n\u2191 \u00abIntroducing Instagram v2.0\u00bb. Archivado desde el original el 25 de agosto de 2012. Consultado el 29 de mayo de 2013.\u00a0 Explicaci\u00f3n de las novedades que inclu\u00eda la versi\u00f3n Instagram 2.0 desde el blog oficial de Instagram.\n\u2191 am-for-android-available-now \u00abInstagram for Android - Available now\u00bb.\u00a0 Instagram anuncia desde su blog oficial el lanzamiento oficial de la versi\u00f3n para Android.\n\u2191 \u00abFacebook compra Instagram por mil millones de d\u00f3lares\u00bb. Consultado el 9 de abril de 2012.\u00a0\n\u2191 \u00abPrivacy and Terms of Service Changes on Instagram\u00bb. Archivado desde el original el 30 de mayo de 2013. Consultado el 30 de mayo de 2013.\u00a0 Instagram anuncia desde su blog oficial cambios en sus t\u00e9rminos de privacidad y condiciones de uso.\n\u2191 \u00abEl cambio en la pol\u00edtica de privacidad de Instagram irrita a los usuarios\u00bb.\u00a0 Noticia publicada por la Vanguardia, 18 de diciembre de 2012. Consultado el 30 de mayo de 2013.\n\u2191 \u00abNational Geographic da plant\u00f3n a Instagram por la nueva pol\u00edtica de privacidad\u00bb.\u00a0 Noticia publicada por M\u00e1rketing Directo, 20 de diciembre de 2012. Consultado el 30 de mayo de 2013. \n\u2191 \u00abInstagram vuelve a su pol\u00edtica de privacidad original tras las cr\u00edticas\u00bb.\u00a0 Noticia publicada por la Vanguardia, 21 de diciembre de 2012. Consultado el 30 de mayo de 2013.\n\u2191 \u00abThank you, we\u2019re listening\u00bb. Archivado desde el original el 2 de mayo de 2017. Consultado el 30 de mayo de 2013.\u00a0 Publicaci\u00f3n desde el blog oficial de Instagram anunciando el retroceso en los cambios de los t\u00e9rminos de privacidad\n\u2191 \u00abPhotos of you#\u00bb. Archivado desde el original el 29 de mayo de 2013. Consultado el 30 de mayo de 2013.\u00a0 Instagram anuncia desde su blog oficial la posibilidad de etiquetar personas y marcas en las fotograf\u00edas.\n\u2191 \u00abDisponible Itsdagram para Windows Phone\u00bb.\u00a0 Art\u00edculo de WinPhoneMetro que habla de la aplicaci\u00f3n Itsdagram. \n\u2191 \u00abInstagram manda al ba\u00fal de los recuerdos su caracter\u00edstico logo y lo renueva completamente\u00bb. Radio B\u00edo B\u00edo. 11 de mayo de 2016.\u00a0\n\u2191 \u00abInstagram se vuelve ef\u00edmero con la nueva funci\u00f3n Stories\u00bb.\u00a0\n\u2191 \u00abLos fundadores de Instagram, Kevin Systrom y Mike Krieger, abandonan la compa\u00f1\u00eda\u00bb.\u00a0\n\u2191 \u00abHorny People, You\u2019re Free: Instagram\u2019s Following Tab Is Gone\u00bb. BuzzFeed News (en ingl\u00e9s). Consultado el 2 de noviembre de 2020.\u00a0\n\u2191 Bosker, Bianca (11 de marzo de 2011). \u00abInstagram Announces 27 Million Users, Android App Coming 'Very Soon'\u00bb (en ingl\u00e9s). Consultado el 18 de febrero de 2016.\u00a0\n\u2191 Instagram ya cuenta con m\u00e1s de 100 millones de usuarios registrados - Generaccion.com\n\u2191 \u00abInfographic Instagram stats\u00bb.\u00a0 Gr\u00e1fica estad\u00edstica de la actividad en Instagram, por Digital Buzz Blog.\n\u2191 \u00abAnything Could Happen\u00bb. Archivado desde el original el 25 de mayo de 2013. Consultado el 30 de mayo de 2013.\u00a0 Videoclip del m\u00fasico ingl\u00e9s Ellie Goulding hecho con diferentes fotograf\u00edas subidas a Instagram.\n\u2191 \u00ab100 million\u00bb. Archivado desde el original el 15 de junio de 2013. Consultado el 30 de mayo de 2013.\u00a0 Instagram anuncia desde su blog oficial que cuenta con 100 millones de usuarios activos.\n\u2191 \u00abInstagram ya tiene 800 millones de usuarios activos, 100 millones m\u00e1s desde abril\u00bb.\u00a0\n\u2191 Tienda Nube. \u00abC\u00f3mo vender por Instagram\u00bb. Consultado el 8 de marzo de 2019.\u00a0\n\u2191 Grove, Jennifer Van. \u00abInstagram Introduces Hashtags for Users & Brands\u00bb. Mashable (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 www.digitaltrends.com https://www.digitaltrends.com/social-media/instagram-hashtags-for-every-day-of-week/ |url= sin t\u00edtulo (ayuda). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 \u00abInstagram becomes an interest network with hashtag following\u00bb. TechCrunch (en ingl\u00e9s estadounidense). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Setalvad, Ariha (1 de septiembre de 2015). \u00abInstagram Direct gets a huge update focused on messaging your friends\u00bb. The Verge (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Gottsegen, Gordon. \u00abInstagram Direct messages just became more like Snapchat\u00bb. CNET (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Carman, Ashley (10 de abril de 2020). \u00abEveryone can now access their Instagram DMs on the web\u00bb. The Verge (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Johnson, Eric (5 de junio de 2017). \u00abDid Instagram copy Snapchat? Not exactly, Instagram CEO Kevin Systrom says.\u00bb. Vox (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 \u00abInstagram Stories hits 150M daily users, launches skippable ads\u00bb. TechCrunch (en ingl\u00e9s estadounidense). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 \u00abInstagram Stories hits 200M users, surpassing Snapchat as it copies its AR stickers\u00bb. TechCrunch (en ingl\u00e9s estadounidense). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 \u00abInstagram launches Story Search for hashtags and locations\u00bb. TechCrunch (en ingl\u00e9s estadounidense). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 \u00abInstagram Stories hits 250M daily users, adds Live video replays\u00bb. TechCrunch (en ingl\u00e9s estadounidense). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 \u00abInstagram Marketing Agency - Instagram Services\u00bb. Tej SolPro (en ingl\u00e9s estadounidense). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Newton, Casey (20 de junio de 2018). \u00abInstagram announces IGTV, a standalone app for longer videos\u00bb. The Verge (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Rosney, Daniel (20 de junio de 2018). \u00abInstagram now allows 60-minute videos\u00bb. BBC News (en ingl\u00e9s brit\u00e1nico). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Vincent, James (12 de noviembre de 2019). \u00abInstagram is testing a new video editing tool called Reels that copies TikTok\u2019s best features\u00bb. The Verge (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Porter, Jon (6 de julio de 2020). \u00abInstagram\u2019s Reels feature reportedly expands to India following TikTok ban\u00bb. The Verge (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 Alexander, Julia (5 de agosto de 2020). \u00abInstagram launches Reels, its attempt to keep you off TikTok\u00bb. The Verge (en ingl\u00e9s). Consultado el 8 de agosto de 2020.\u00a0\n\u2191 \u00abGu\u00eda para influencers en Creator Studio de Instagram en 10 pasos\u00bb. Fernando Rubio. 26 de mayo de 2021. Consultado el 16 de septiembre de 2021.\u00a0\n\u2191 \u00abWeekend hashtag project\u00bb.\u00a0 Explicaci\u00f3n del concurso lanzado por Instagram \u201cWeekend hashtag project\u201d, por Allinstagram.com \n\u2191 Instagram - Instameets Conce nuestros eventos fotogr\u00e1ficos.\n\u2191 \u00abThe 100 Best iPhone Apps of All Time\u00bb.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web oficial", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Int%C3%A9rprete_(inform%C3%A1tica)", "title": "Int\u00e9rprete (inform\u00e1tica)", "summary": "En ciencias de la computaci\u00f3n, int\u00e9rprete o interpretador es un programa inform\u00e1tico capaz de analizar y ejecutar otros programas. Los int\u00e9rpretes se diferencian de los compiladores o de los ensambladores en que mientras estos traducen un programa desde su descripci\u00f3n en un lenguaje de programaci\u00f3n al c\u00f3digo de m\u00e1quina del sistema, los int\u00e9rpretes solo realizan la traducci\u00f3n a medida que sea necesaria, t\u00edpicamente, instrucci\u00f3n por instrucci\u00f3n, y normalmente no guardan el resultado de dicha traducci\u00f3n.\nUsando un int\u00e9rprete, un solo archivo fuente puede producir resultados iguales incluso en sistemas sumamente diferentes (ejemplo. una PC y una PlayStation 4). Usando un compilador, un solo archivo fuente puede producir resultados iguales solo si es compilado a distintos ejecutables espec\u00edficos a cada sistema.\nLos programas interpretados suelen ser m\u00e1s lentos que los compilados debido a la necesidad de traducir el programa mientras se ejecuta, pero a cambio son m\u00e1s flexibles como entornos de programaci\u00f3n y depuraci\u00f3n (lo que se traduce, por ejemplo, en una mayor facilidad para reemplazar partes enteras del programa o a\u00f1adir m\u00f3dulos completamente nuevos), y permiten ofrecer al programa interpretado un entorno no dependiente de la m\u00e1quina donde se ejecuta el int\u00e9rprete, sino del propio int\u00e9rprete (lo que se conoce com\u00fanmente como m\u00e1quina virtual).\nPara mejorar el desempe\u00f1o, algunas implementaciones de algunos lenguajes de programaci\u00f3n pueden interpretar o compilar el c\u00f3digo fuente original en una forma intermedia  m\u00e1s compacta, y despu\u00e9s traducir eso al c\u00f3digo de m\u00e1quina (ej. Perl, Python, MATLAB, y Ruby). Algunos aceptan los archivos fuente guardados en esta representaci\u00f3n intermedia (ej. Python, UCSD Pascal y Java).\nEn la actualidad, uno de los entornos m\u00e1s comunes de uso de los int\u00e9rpretes es en los navegadores web, debido a la posibilidad que estos tienen de ejecutarse independientemente de la plataforma.", "sections": [{"name": "\u00cdndice", "text": "1 Int\u00e9rpretes de bytecode\n2 Eficiencia\n3 Interpretadores de \u00e1rbol de sintaxis abstracta\n4 Compilaci\u00f3n justo a tiempo\n5 Ejemplos\n6 Lenguaje interpretado\n6.1 Antecedentes hist\u00f3ricos de interpretado y compilado\n6.2 Ventajas de interpretar un lenguaje\n6.3 Desventajas de los lenguajes interpretados\n6.4 Lista de lenguajes m\u00e1s usados de forma interpretada\n6.4.1 Lenguajes normalmente compilados a c\u00f3digo byte\n7 Notas y referencias\n8 V\u00e9ase tambi\u00e9n\n9 Enlaces externos", "subsections": []}, {"name": "Int\u00e9rpretes de bytecode", "text": "Art\u00edculo principal:\nHay un espectro de posibilidades entre la interpretaci\u00f3n y la compilaci\u00f3n, dependiendo de la cantidad de an\u00e1lisis realizados antes de que el programa sea ejecutado. Por ejemplo, el Emacs Lisp es compilado a bytecode, que es una representaci\u00f3n altamente comprimida y optimizada del c\u00f3digo fuente del Lisp, pero no es c\u00f3digo de m\u00e1quina (y por lo tanto no est\u00e1 atado a cualquier hardware particular). Este bytecode es entonces interpretado por un int\u00e9rprete de bytecode (que est\u00e1 escrito en C). En este caso, el c\u00f3digo compilado es el c\u00f3digo de m\u00e1quina para una m\u00e1quina virtual, que no est\u00e1 implementada en el hardware, sino en el int\u00e9rprete de bytecode. El mismo acercamiento es utilizado con el c\u00f3digo Forth usado en sistemas Open Firmware: el lenguaje fuente es compilado en \"c\u00f3digo F\" (un bytecode).", "subsections": []}, {"name": "Eficiencia", "text": "La desventaja principal de los interpretadores es que cuando se interpreta un programa, t\u00edpicamente corre m\u00e1s lentamente que si hubiera sido compilado. La diferencia en velocidades puede ser min\u00fascula o grande; a menudo un orden de magnitud y a veces m\u00e1s. Generalmente toma m\u00e1s tiempo correr un programa bajo un interpretador que correr el c\u00f3digo compilado, pero puede tomar menos tiempo para interpretarlo que el tiempo total requerido para compilarlo y ejecutarlo. Esto es especialmente importante si se est\u00e1 haciendo y probando un c\u00f3digo prototipo cuando un ciclo de editar, interpretar y depurar del interpretador, a menudo puede ser mucho m\u00e1s corto que el ciclo de editar, compilar, ejecutar y depurar del compilador.\nLa interpretaci\u00f3n de c\u00f3digo es m\u00e1s lenta que la ejecuci\u00f3n de c\u00f3digo compilado porque el interpretador debe analizar cada sentencia en el programa cada vez que es ejecutada y entonces realizar la acci\u00f3n deseada, mientras que el c\u00f3digo compilado solo realiza la acci\u00f3n dentro de un determinado contexto fijo por la compilaci\u00f3n. Este an\u00e1lisis en tiempo de ejecuci\u00f3n se conoce como \"sobrecarga interpretativa\". En un interpretador, el acceso a las variables es tambi\u00e9n m\u00e1s lento porque el mapeo de identificadores hacia las localizaciones de almacenamiento debe hacerse repetidamente en tiempo de ejecuci\u00f3n en vez de en el tiempo de compilaci\u00f3n. Hay varios compromisos entre la velocidad de desarrollo al usar un interpretador y la velocidad de ejecuci\u00f3n al usar un compilador. Algunos sistemas (ej., algunos LISPs) permiten al c\u00f3digo interpretado y al compilado llamarse el uno al otro y compartir variables. Esto significa que una vez que una rutina ha sido probada y depurada bajo el interpretador puede ser compilada y por lo tanto beneficiarse de una ejecuci\u00f3n m\u00e1s r\u00e1pida mientras que otras rutinas est\u00e1n siendo desarrolladas. Muchos interpretadores no ejecutan el c\u00f3digo fuente tal y como est\u00e1 sino que lo convierten en una forma interna m\u00e1s compacta. Por ejemplo, algunos interpretadores BASIC reemplazan palabras clave (keywords) con tokens de un simple byte que pueden ser usados para encontrar la instrucci\u00f3n en una tabla de saltos. Un interpretador puede bien usar el mismo analizador lexicogr\u00e1fico y el analizador sint\u00e1ctico (parser) que el compilador y entonces interpretar el \u00e1rbol de sintaxis abstracta resultante.", "subsections": []}, {"name": "Interpretadores de \u00e1rbol de sintaxis abstracta", "text": "En el espectro entre la interpretaci\u00f3n y la compilaci\u00f3n, otro acercamiento est\u00e1 transformando el c\u00f3digo fuente en un \u00e1rbol de sintaxis abstracta optimizado (AST), y despu\u00e9s procediendo a ejecutar el programa siguiendo esta estructura arborescente.[1]\u200b En este acercamiento cada sentencia necesita ser analizada (parsed) solo una vez. Como una ventaja sobre el bytecode, el AST mantiene la estructura y las relaciones globales del programa entre las sentencias (que se pierden en una representaci\u00f3n de bytecode), y proporciona una representaci\u00f3n m\u00e1s compacta.[2]\u200b\nAs\u00ed, el AST se ha propuesto como un mejor formato intermedio para los compiladores justo a tiempo que el bytecode. Tambi\u00e9n, permite realizar un mejor an\u00e1lisis durante tiempo de ejecuci\u00f3n. Un interpretador Java basado en AST ha demostrado ser m\u00e1s r\u00e1pido que un interpretador similar basado en bytecode,[3]\u200b gracias a las m\u00e1s poderosas optimizaciones permitidas al tener la estructura completa del programa, as\u00ed como tipos de datos de alto nivel, disponibles durante la ejecuci\u00f3n.", "subsections": []}, {"name": "Compilaci\u00f3n justo a tiempo", "text": "Para desdibujar m\u00e1s la distinci\u00f3n entre los interpretadores, los interpretadores de bytecode y la compilaci\u00f3n, est\u00e1 la compilaci\u00f3n justo a tiempo (o JIT), una t\u00e9cnica en la cual la representaci\u00f3n intermedia es compilada a c\u00f3digo de m\u00e1quina nativo en tiempo de ejecuci\u00f3n. Esto confiere la eficiencia de ejecutar el c\u00f3digo nativo, al costo de tiempo de inicio y de un uso creciente de la memoria cuando el bytecode o el AST es compilado por primera vez. La optimizaci\u00f3n adaptativa es una t\u00e9cnica complementaria en la cual el interpretador hace un an\u00e1lisis de desempe\u00f1o del programa que est\u00e1 corriendo (profiling) y compila sus partes m\u00e1s frecuentemente ejecutadas a c\u00f3digo nativo. Ambas t\u00e9cnicas tienen algunas d\u00e9cadas, apareciendo en lenguajes tales como Smalltalk en la d\u00e9cada de 1980.\nEn a\u00f1os recientes, la compilaci\u00f3n justo a tiempo ha ganado la atenci\u00f3n de la mayor\u00eda de los implementadores de lenguajes de programaci\u00f3n, con Java, Python, y el Microsoft .NET Framework todos ahora incluyendo JITs.", "subsections": []}, {"name": "Ejemplos", "text": "Algunos ejemplos de int\u00e9rpretes:\nMotor Zend\nCPython\nRuby MRI\nYARV\nen:Basic", "subsections": []}, {"name": "Lenguaje interpretado", "text": "Un lenguaje interpretado es un lenguaje de programaci\u00f3n para el que la mayor\u00eda de sus implementaciones ejecuta las instrucciones directamente, sin una previa compilaci\u00f3n del programa a instrucciones en lenguaje m\u00e1quina. El int\u00e9rprete ejecuta el programa directamente, traduciendo cada sentencia en una secuencia de una o m\u00e1s subrutinas ya compiladas en c\u00f3digo m\u00e1quina.\nLos t\u00e9rminos lenguaje interpretado y lenguaje compilado[4]\u200b no est\u00e1n bien definidos porque, en teor\u00eda, cualquier lenguaje de programaci\u00f3n puede ser interpretado o compilado. Cada vez es m\u00e1s popular, en las implementaciones m\u00e1s modernas de un lenguaje de programaci\u00f3n, ofrecer ambas opciones.\nLos lenguajes interpretados tambi\u00e9n pueden diferenciarse de los lenguajes de m\u00e1quina. Funcionalmente, tanto la ejecuci\u00f3n y la interpretaci\u00f3n significan lo mismo -obtener la siguiente instrucci\u00f3n/sentencia del programa y su ejecuci\u00f3n-. Aunque el bytecode (c\u00f3digo byte) interpretado es adem\u00e1s id\u00e9ntico a su forma en c\u00f3digo m\u00e1quina y tiene una representaci\u00f3n en ensamblador, el t\u00e9rmino \"interpretado\" se reserva en la pr\u00e1ctica para lenguajes \"procesados por software\" (como las m\u00e1quinas virtuales o emuladores) por encima del procesado nativo (por ejemplo, por hardware).\nEn principio, los programas de muchos lenguajes se pueden compilar o interpretar, emular o ejecutar nativamente, as\u00ed que esta designaci\u00f3n se aplica solamente a la implementaci\u00f3n pr\u00e1ctica m\u00e1s usual, en vez de representar una propiedad esencial del lenguaje. De forma parecida al microc\u00f3digo del procesador, muchos int\u00e9rpretes, internamente recaen en una compilaci\u00f3n en tiempo de ejecuci\u00f3n.\nEvitando la compilaci\u00f3n, los programas interpretados son m\u00e1s f\u00e1ciles de evolucionar durante el desarrollo y la ejecuci\u00f3n (transform\u00e1ndose en ocasiones de uno en la otra). De otra parte, ya que la compilaci\u00f3n implica una traducci\u00f3n a un formato m\u00e1s amigable con la m\u00e1quina, los programas interpretados corren m\u00e1s lentamente y menos eficientemente (es decir, gastan considerablemente m\u00e1s energ\u00eda). Esto es especialmente verdad para los lenguajes de guion, cuyas sentencias son m\u00e1s complejas de analizar comparadas con las instrucciones m\u00e1quina.\nMuchos lenguajes se han implementado usando tanto compiladores como int\u00e9rpretes, incluyendo  BASIC, C, Lisp, Pascal y Python. Java y C# se compilan a c\u00f3digo byte, el lenguaje interpretado espec\u00edfico para la m\u00e1quina virtual. Muchas implementaciones de Lisp pueden mezclar libremente c\u00f3digo interpretado y compilado.", "subsections": [{"name": "Antecedentes hist\u00f3ricos de interpretado y compilado", "text": "En los comienzos de la computaci\u00f3n, el dise\u00f1o de lenguajes fue fuertemente influenciado por la decisi\u00f3n de usar la compilaci\u00f3n o la interpretaci\u00f3n como modos de ejecuci\u00f3n. Por ejemplo, algunos lenguajes compilados requieren que los programas deban indicar expl\u00edcitamente el tipo de dato de una variable en el momento en que sea declarada o al ser usada por primera vez, mientras que algunos lenguajes interpretados toman ventaja de los aspectos din\u00e1micos de la interpretaci\u00f3n para hacer tales declaraciones innecesarias. Por ejemplo, Smalltalk (1980), que fue dise\u00f1ado para ser interpretado en tiempo de ejecuci\u00f3n, permite a objetos gen\u00e9ricos interactuar din\u00e1micamente entre s\u00ed.\nInicialmente, los lenguajes interpretados eran compilados l\u00ednea por l\u00ednea, es decir, cada l\u00ednea era compilada a medida que estaba a punto de ser ejecutada, y si un bucle o una subrutina hicieran que ciertas l\u00edneas se ejecutaran m\u00faltiples veces, ser\u00edan recompiladas repetidamente. Esto ha llegado a ser mucho menos com\u00fan. La mayor\u00eda de los lenguajes interpretados usan una representaci\u00f3n intermedia, que combina tanto la compilaci\u00f3n como la interpretaci\u00f3n. En este caso, un compilador puede producir el c\u00f3digo byte o el c\u00f3digo enhebrado, que entonces es ejecutado por un int\u00e9rprete de c\u00f3digo byte.\nLos ejemplos incluyen:\nJava\nPython\nRuby (de forma similar, utiliza un \u00e1rbol de sintaxis abstracta como representaci\u00f3n intermedia)\nForth\nLa representaci\u00f3n intermedia se puede compilar una sola vez (como en Java), cada vez que se vaya a ejecutar (como en Perl o Ruby), o cada vez que se detecte un cambio en el c\u00f3digo fuente antes de la ejecuci\u00f3n (como en Python)."}, {"name": "Ventajas de interpretar un lenguaje", "text": "Interpretar un lenguaje da a las implementaciones una flexibilidad adicional sobre las implementaciones compiladas. Algunas caracter\u00edsticas son m\u00e1s f\u00e1ciles de implementar en int\u00e9rpretes que en compiladores son (pero no se limitan a estas):\nIndependencia de la plataforma (por ejemplo el bytecode de Java)\nReflexi\u00f3n y uso reflexivo del evaluador (por ejemplo, una funci\u00f3n eval de primer orden)\nTipos din\u00e1micos\nUn tama\u00f1o del programa m\u00e1s peque\u00f1o (puesto que las implementaciones tienen la flexibilidad de elegir el conjunto de instrucciones)\n\u00c1mbito din\u00e1mico\nFacilidad en la depuraci\u00f3n (es m\u00e1s f\u00e1cil obtener informaci\u00f3n del c\u00f3digo fuente en lenguajes interpretados)"}, {"name": "Desventajas de los lenguajes interpretados", "text": "La principal desventaja de la interpretaci\u00f3n es una velocidad de ejecuci\u00f3n del programa mucho m\u00e1s lenta, comparada con la ejecuci\u00f3n directa del c\u00f3digo m\u00e1quina en la CPU del ordenador. Una t\u00e9cnica utilizada para mejorar las prestaciones es la compilaci\u00f3n en tiempo de ejecuci\u00f3n, que convierte las secuencias ejecutadas m\u00e1s frecuentes en c\u00f3digo m\u00e1quina del ordenador."}, {"name": "Lista de lenguajes m\u00e1s usados de forma interpretada", "text": "APL Un lenguaje orientado a vectores que usa un conjunto de caracteres inusual\nJ Una variante de en el que la definici\u00f3n t\u00e1cita ofrece algunos de los beneficios de la compilaci\u00f3n\nBASIC (aunque la versi\u00f3n original, era compilada, as\u00ed como muchos modernos)\nthinBasic\nECMAScript\nActionScript (versi\u00f3n 3.0 no es interpretado, por lo que se elimin\u00f3 la funci\u00f3n eval())\nE4X (ECMAScript for XML)\nJavaScript (primero se llam\u00f3 Mocha, y luego LiveScript)\nJScript\nManipulaci\u00f3n de ecuaciones y sistemas de resoluci\u00f3n\nGNU Octave\nIDL (Interactive Data Language)\nTK Solver\nMathematica\nMATLAB\nEUPHORIA interpretado o compilado\nForth\nGame Maker Language\nJava (lenguaje de programaci\u00f3n)\nMadness Script\nPerl\nPHP\nPostScript\nPython\nLisp\nLogo\nScheme\nMUMPS (tradicionalmente interpretado, compilado en las versiones modernas)\nREXX\nRuby\nJRuby (una implementaci\u00f3n Java de Ruby)\nSeed7 interpretado o compilado\nSmalltalk\nBistro\nDolphin Smalltalk\nF-Script\nLittle Smalltalk\nSqueak\nVisualAge\nVisualWorks\nLenguajes de scripting\nWebDNA\nHojas de c\u00e1lculo\nExcel almacena f\u00f3rmulas, y las interpreta desde un formato simb\u00f3lico\nS\nR\nTcl\nXOTcl\nVBScript\nPowerShell\nXMLmosaic Archivado el 2 de agosto de 2009 en Wayback Machine. Un lenguaje de programaci\u00f3n interpretado parecido a C# escrito en Visual Basic .NET\nLenguajes normalmente compilados a c\u00f3digo byte\nMuchos lenguajes interpretados son primero compilados a c\u00f3digo byte, que luego es normalmente interpretado por la m\u00e1quina virtual usando la compilaci\u00f3n en tiempo de ejecuci\u00f3n, del c\u00f3digo byte a c\u00f3digo nativo. Sin embargo, algunas veces, el c\u00f3digo byte tambi\u00e9n puede ser compilado a un binario nativo usando un compilador Ahead-of-time compilation (compilaci\u00f3n por adelantado), o ejecutado nativamente, por el procesador hardware.\nJava (se compila en c\u00f3digo byte Java para que sea interpretado por la JVM)\nGroovy\nJoin Java\nColdFusion\nScala\nLua\n.NET Framework (traducidos a c\u00f3digo byte, llamado CIL)\nC/C++\nC#\nVisual Basic .NET\nPike\nPython\nSqueak Smalltalk\nVisual FoxPro\nLisp\nAppleScript"}]}, {"name": "Notas y referencias", "text": "\u2191 AST intermediate representations, Lambda the Ultimate forum\n\u2191 A Tree-Based Alternative to Java Byte-Codes, Thomas Kistler, Michael Franz\n\u2191 Trees Versus Bytes, BComp Honours thesis by Kade Hansson\n\u2191 Colburn, Rafe (2003). Sams Teach Yourself CGI in 24 Hours (2003 edici\u00f3n). Estados Unidos: Sams Publishing. p.\u00a048. ISBN\u00a00672324040. Consultado el 13 de marzo de 2015.\u00a0. Consultado el 13 de marzo de 2015.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Lenguaje de programaci\u00f3n\nProceso de traducci\u00f3n de programas\nCompilador\nDepurador\nLenguaje interpretado\nLenguaje compilado", "subsections": []}, {"name": "Enlaces externos", "text": "DrPubaGump (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima). A tiny Interpreter written in Scheme, which provides to interpret PUBA-GUMP (a subset of BASIC) in Scheme\nIBM Card Interpreters page at Columbia University", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Int%C3%A9rprete_de_comandos", "title": "Int\u00e9rprete de comandos", "summary": "Para m\u00e1s informaci\u00f3n, v\u00e9ase la discusi\u00f3n.\nUn int\u00e9rprete de \u00f3rdenes o de comandos es un programa inform\u00e1tico que tiene la capacidad de traducir las \u00f3rdenes que introducen los usuarios, mediante un conjunto de instrucciones facilitadas por \u00e9l mismo directamente al n\u00facleo y al conjunto de herramientas que forman el sistema operativo.[1]\u200b Las \u00f3rdenes se introducen siguiendo la sintaxis incorporada por dicho int\u00e9rprete, dentro del entorno proporcionado por el emulador de terminal, mediante un inductor que espera a que le sean introducidos los comandos o instrucciones PROMPT>nombrecomando argumento/s /ruta/hacia/el/o/los/ficheros\nAl ingresar la orden con la tecla 'Intro', el int\u00e9rprete analiza la secuencia de caracteres ingresada y, si la sintaxis de la orden es correcta, la ejecuta, recurriendo para ello a las funciones que ofrece el sistema operativo o el programa que representa, bien sea un gestor de datos de banco, una sesi\u00f3n de FTP, de ssh, etc. La respuesta al usuario se representa en el monitor o en forma de segundo plano. Se trabaja de manera interactiva, es decir, usuario y m\u00e1quina se comunican de forma sucesiva.[2]\u200b\nIncorporan caracter\u00edsticas tales como control de procesos, redirecci\u00f3n de entrada/salida, listado y lectura de ficheros, protecci\u00f3n, comunicaciones y un lenguaje de \u00f3rdenes para escribir programas por lotes o (scripts o guiones). Uno de los int\u00e9rpretes m\u00e1s conocidos, es el Bourne Shell, el cual fue el int\u00e9rprete usado en las primeras versiones de Unix y se convirti\u00f3 en un est\u00e1ndar de facto.[3]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Interfaz de l\u00ednea de comandos\n2 Historia\n3 Funcionamiento\n4 Implementaciones\n5 Est\u00e1ndar de invocaci\u00f3n\n6 Ejemplos de interacci\u00f3n\n7 Interfaz textual de usuario\n8 Referencias\n9 Enlaces externos", "subsections": []}, {"name": "Interfaz de l\u00ednea de comandos", "text": "La interfaz de l\u00ednea de comandos o interfaz de l\u00ednea de \u00f3rdenes (en ingl\u00e9s: command-line interface, CLI) es un tipo de interfaz de usuario de computadora que permite a los usuarios dar instrucciones a alg\u00fan programa inform\u00e1tico o al sistema operativo por medio de una l\u00ednea de texto simple. Debe notarse que los conceptos de CLI, shell y emulador de terminal no son lo mismo ya que CLI se refiere al paradigma, mientras que un shell o un emulador de terminal son programas inform\u00e1ticos espec\u00edficos, que usualmente en conjunto implementan la CLI. Sin embargo, los tres suelen utilizarse como sin\u00f3nimos.\nLas CLI pueden emplearse interactivamente, escribiendo instrucciones en alguna especie de entrada de texto, o pueden utilizarse de una forma mucho m\u00e1s automatizada (archivo batch), leyendo \u00f3rdenes desde un archivo de scripts.\nEsta interfaz existe casi desde los comienzos de la computaci\u00f3n, superada en antig\u00fcedad solo por las tarjetas perforadas y mecanismos similares. Existen para diversos programas y sistemas operativos, para diverso hardware, y con distinta funcionalidad.\nPor ejemplo, las CLI son parte fundamental de los shells o emuladores de terminal. Aparecen en todas las interfaces de escritorio (GNOME, KDE, Microsoft Windows) como un m\u00e9todo para ejecutar aplicaciones r\u00e1pidamente. Aparecen como interfaz de lenguajes interpretados tales como Java, Python, Ruby o Perl. Tambi\u00e9n se utilizan en aplicaciones cliente-servidor, en gestores de bases de datos, en clientes FTP, etc. Las CLI son un elemento fundamental de aplicaciones de ingenier\u00eda tan importantes como MATLAB y AutoCAD.\nLa contraparte de CLI es la interfaz gr\u00e1fica de usuario (GUI) que ofrece una est\u00e9tica mejorada y una mayor simplificaci\u00f3n, a costa de un mayor consumo de recursos computacionales, y, en general, de una reducci\u00f3n de la funcionalidad alcanzable. Asimismo aparece el problema de una mayor vulnerabilidad dada su complejidad.\nLas CLI son usadas por muchos programadores y administradores de sistemas como herramienta primaria de trabajo, especialmente en sistemas operativos basados en Unix; en entornos cient\u00edficos y de ingenier\u00eda, y un subconjunto m\u00e1s peque\u00f1o de usuarios dom\u00e9sticos avanzados.\nEn dispositivos port\u00e1tiles y PDA, las CLI no se utilizan, debido a lo complejo que resulta ingresar datos de texto, o por la ausencia total de teclados.", "subsections": []}, {"name": "Historia", "text": "En los primeros a\u00f1os de las computadoras, y durante la era de los computadores denominados mainframes, el control de la ejecuci\u00f3n de los programas se hac\u00eda desde lugares especiales (normalmente ubicados cerca del computador en salas con aire acondicionado), donde el administrador manipulaba directamente la m\u00e1quina.\nSe escrib\u00eda la orden en el teclado y se recib\u00eda la respuesta impresa en papel. Estos sistemas basados en teletipos dieron origen a la primera forma eficiente de interactuar con computadores: l\u00edneas de texto simple.\nCon el advenimiento del sistema operativo Unix a inicios de la d\u00e9cada de 1970, el uso de la l\u00ednea de comandos se convirti\u00f3 en un est\u00e1ndar. Se canonizaron las reglas de ejecuci\u00f3n basadas en tuber\u00edas, filtrado de archivos utilizando comodines, y todas aquellas funcionalidades que permit\u00edan las nacientes interfaces de texto. Los sistemas operativos que vendr\u00edan (CP/M, DOS) adoptar\u00edan como propias aquellas cualidades.\nCon la popularizaci\u00f3n de la computadora personal en la d\u00e9cada de 1980, las aplicaciones entraron a un nuevo escenario donde ya no se ten\u00eda que compartir los recursos del sistema con otros usuarios. Ahora cada usuario contaba con su propia m\u00e1quina, con la que interactuaba de una forma mucho m\u00e1s personalizada. Apple y luego Microsoft lanzaron exitosamente al mercado sistemas que explotaban todos los conceptos visuales que hab\u00edan sido desarrollados por Alan Kay y su equipo del PARC, es decir, una interfaz gr\u00e1fica para controlar al computador por medio de un rat\u00f3n.\nHasta la actualidad las GUI permanecen como la interfaz dominante y las CLI como interfaz secundaria. No obstante, el mismo Dr. Alan Kay ha se\u00f1alado que \u00abes necesario desarrollar un nuevo tipo de interfaz\u00bb para optimizar la relaci\u00f3n entre humanos y computadores.[4]\u200b", "subsections": []}, {"name": "Funcionamiento", "text": "En su forma m\u00e1s simple, una CLI consiste en un espacio donde se pueden escribir \u00f3rdenes (por lo general, se\u00f1alizado con un prompt). El usuario teclea una orden y la ejecuta al pasar a la l\u00ednea siguiente, utilizando la tecla Entrar.\nLas \u00f3rdenes dadas a la CLI son con frecuencia de la forma:\nPROMPT>aplicaci\u00f3n [parametros] ficheros o URI...\nAl finalizar y enviar la orden con la tecla Entrar, un m\u00f3dulo interpretador de \u00f3rdenes analiza la secuencia de caracteres recibida y, si la sintaxis de la orden es correcta, ejecuta la orden dentro del contexto del programa o del sistema operativo donde se encuentra. Esta forma de trabajo es secuencial, y equivale a un tipo de programaci\u00f3n paso a paso.\nEl usuario percibe el procesamiento de sus instrucciones en forma de acci\u00f3n. Si al usuario se le env\u00eda esta informaci\u00f3n de procesamiento en forma de texto simple, entonces se le llama salida est\u00e1ndar o \u00abstdout\u00bb. El usuario tambi\u00e9n puede recibir un informe textual de errores en un canal especializado llamado \u00abstderr\u00bb. Casi todos los shells implementan la visualizaci\u00f3n de \u00abstdout\u00bb y \u00abstderr\u00bb al mismo dispositivo, en la mayor\u00eda de los casos la pantalla.\nTambi\u00e9n es posible usar scripts, es decir, archivos con instrucciones guardadas como si se estuviesen escribiendo en el momento. En caso de error, la ejecuci\u00f3n del script puede abortarse. De esta forma, la l\u00ednea de comandos puede utilizarse sin siquiera tener que lidiar con el prompt, ni estando presente frente al monitor o teclado.", "subsections": []}, {"name": "Implementaciones", "text": "Casi cualquier programa puede dise\u00f1arse para ofrecer al usuario alguna clase de int\u00e9rprete de instrucciones. Por ejemplo, algunos videojuegos para PC en primera persona tienen un int\u00e9rprete de \u00f3rdenes incorporado, conocido com\u00fanmente como \u00abconsola\u00bb (no confundir con Videoconsola), utilizado para diagn\u00f3stico y labores administrativas. Quake, Unreal Tournament, Ragnarok Online o Battlefield son algunos ejemplos. A veces la consola es el \u00fanico medio para reparar problemas.\nCuando se trata de un programa que interact\u00faa con el kernel de un sistema operativo se le llama con frecuencia shell. Algunos ejemplos son los diversas shell de Unix (ksh, csh, tcsh, Bourne Shell, etc.), el hist\u00f3rico CP/M, y el command.com de DOS, estos dos \u00faltimos fuertemente basados en las CLI de RSTS y RSX-11, sistemas operativos del PDP-11 de DEC. El sistema operativo Windows Vista promet\u00eda una CLI llamada Windows PowerShell, que combinaba caracter\u00edsticas de las tradicionales shells de Unix con su framework orientado a objetos .NET. Este desarrollo no fue integrado por defecto en el sistema operativo, en especial debido a sus riesgos de seguridad iniciales.[5]\u200b\nLas implementanciones de lenguajes interpretados suelen ofrecer tambi\u00e9n un ambiente de trabajo basado en CLI. En estos ambientes se crea una instancia de la m\u00e1quina virtual con la que el usuario puede interactuar.\nAlgunas aplicaciones proporcionan tanto una CLI como una GUI. Un ejemplo es el programa de CAD AutoCAD. El paquete cient\u00edfico/ingenieril de computaci\u00f3n num\u00e9rica Matlab no proporciona GUI para algunos c\u00e1lculos, pero la CLI puede realizar cualquier c\u00e1lculo. El programa de modelado tridimensional Rhinoceros 3D (que se usa para dise\u00f1ar las cajas de la mayor parte de los tel\u00e9fonos port\u00e1tiles, as\u00ed como miles de otros productos industriales) proporciona una CLI (cuyo lenguaje, por cierto, es distinto del lenguaje scripts de Rhino). En algunos entornos inform\u00e1ticos, como la interfaz de usuario de Smalltalk u Oberon, la mayor parte del texto que aparece en la pantalla se puede usar para dar \u00f3rdenes.", "subsections": []}, {"name": "Est\u00e1ndar de invocaci\u00f3n", "text": "No existe ninguna normativa obligatoria en cuanto al formato de invocaci\u00f3n (escritura y ejecuci\u00f3n) o a la documentaci\u00f3n que las aplicaciones o funciones deben presentar. No obstante, se han acu\u00f1ado est\u00e1ndares informales al momento de definir formas. El m\u00e1s importante consiste en la utilizaci\u00f3n de corchetes [ ] para indicar par\u00e1metros opcionales. Estos pueden anidarse ([..[..]]). Por ejemplo, la documentaci\u00f3n de la aplicaci\u00f3n cal de POSIX dice que la forma de ejecutarse por medio de la CLI es:\nEsto significa que si se desea ver el a\u00f1o 2012, tendr\u00eda que escribirse literalmente:", "subsections": []}, {"name": "Ejemplos de interacci\u00f3n", "text": "La instrucci\u00f3n para listar archivos, en diversos entornos:", "subsections": []}, {"name": "Interfaz textual de usuario", "text": "Art\u00edculo principal:\nUna interfaz textual de usuario consiste en una interfaz gr\u00e1fica hecha enteramente de texto. No es lo mismo que un CLI, aunque ambos usan el mismo perif\u00e9rico.", "subsections": []}, {"name": "Referencias", "text": "\u2191 linux10.com.ar, ed. (2009). \u00abInt\u00e9rprete de comandos\u00bb. Archivado desde el original el 2 de octubre de 2009. Consultado el 21 de diciembre de 2009.\u00a0\n\u2191 \u00abfivem scripts\u00bb. fivem-store. Consultado el 6 de noviembre de 2021.\u00a0\n\u2191 escomposlinux.org (ed.). \u00abBeyond Linux From Scratch - Versi\u00f3n 6.0 Parte II. Configuraci\u00f3n posterior a LFS y Software Adicional\u00bb. Consultado el 21 de diciembre de 2009.\u00a0\n\u2191 Exposici\u00f3n de Alan Kay en TED 2007.\n\u2191 http://www.zdnet.com/windows-vista-tool-targeted-by-virus-writers-3039212024/ Windows Vista tool targeted by virus writers (en ingl\u00e9s).", "subsections": []}, {"name": "Enlaces externos", "text": "El int\u00e9rprete de comandos tcsh", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Inteligencia_artificial", "title": "Inteligencia artificial", "summary": "La inteligencia artificial (IA), en el contexto de las ciencias de la computaci\u00f3n, es el conjunto de sistemas o combinaci\u00f3n de algoritmos, cuyo prop\u00f3sito es crear m\u00e1quinas que imitan la inteligencia humana para realizar tareas y pueden mejorar conforme la informaci\u00f3n que recopilan. La inteligencia artificial no tiene como finalidad reemplazar a los humanos, sino mejorar significativamente las capacidades y contribuciones humanas. Se hizo presente poco despu\u00e9s de la Segunda Guerra Mundial, y el nombre lo acu\u00f1\u00f3 en 1956 el inform\u00e1tico John McCarthy, en la Conferencia de Dartmouth.\nEn la actualidad, la inteligencia artificial abarca una gran variedad de subcampos. \u00c9stos van desde \u00e1reas de prop\u00f3sito general, aprendizaje y percepci\u00f3n, a otras m\u00e1s espec\u00edficas como el juego de ajedrez, la demostraci\u00f3n de teoremas matem\u00e1ticos, la escritura de poes\u00eda y el diagn\u00f3stico de enfermedades. La Inteligencia Artificial sintetiza y automatiza tareas que en principio son intelectuales y, por lo tanto, es potencialmente relevante para cualquier \u00e1mbito de diversas actividades intelectuales humanas. En este sentido, es un campo genuinamente universal.[1]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 En cuanto a la definici\u00f3n del t\u00e9rmino\n2 Tipos\n3 Escuelas de pensamiento\n3.1 Inteligencia artificial convencional\n3.2 Inteligencia artificial computacional\n4 Historia\n5 Implicaciones sociales, \u00e9ticas y filos\u00f3ficas\n6 Regulaci\u00f3n\n7 Objetivos\n7.1 Razonamiento y resoluci\u00f3n de problemas\n7.2 Representaci\u00f3n del conocimiento\n7.3 Planificaci\u00f3n\n7.4 Aprendizaje\n7.5 Procesamiento de lenguajes naturales\n7.6 Percepci\u00f3n\n8 Importancia de la Inteligencia Artificial\n9 Cr\u00edticas\n10 Aplicaciones de la inteligencia artificial\n11 Diferencia entre Inteligencia Artificial y Machine Learning\n12 Propiedad intelectual de la inteligencia artificial\n13 En la cultura popular\n13.1 En el cine\n14 V\u00e9ase tambi\u00e9n\n15 Referencias\n16 Bibliograf\u00eda\n17 Enlaces externos", "subsections": []}, {"name": "En cuanto a la definici\u00f3n del t\u00e9rmino", "text": "Coloquialmente, el t\u00e9rmino inteligencia artificial se aplica cuando una m\u00e1quina imita las funciones \u00abcognitivas\u00bb que los humanos asocian como competencias humanas, por ejemplo: \u00abpercibir\u00bb, \u00abrazonar\u00bb, \u00abaprender\u00bb y \u00abresolver problemas\u00bb.[2]\u200b Andreas Kaplan y Michael Haenlein definen la inteligencia artificial como \u00abla capacidad de un sistema para interpretar correctamente datos externos, y as\u00ed aprender y emplear esos conocimientos para lograr tareas y metas concretas a trav\u00e9s de la adaptaci\u00f3n flexible\u00bb.[3]\u200b A medida que las m\u00e1quinas se vuelven cada vez m\u00e1s capaces, se elimina de la definici\u00f3n la tecnolog\u00eda que alguna vez se pens\u00f3 que requer\u00eda de inteligencia.\nPor ejemplo, el reconocimiento \u00f3ptico de caracteres ya no se percibe como un ejemplo de la \u00abinteligencia artificial\u00bb habi\u00e9ndose convertido en una tecnolog\u00eda com\u00fan.[4]\u200b Avances tecnol\u00f3gicos todav\u00eda clasificados como inteligencia artificial son los sistemas de conducci\u00f3n aut\u00f3nomos o los capaces de jugar ajedrez o Go.[5]\u200b\nLa inteligencia artificial es una nueva forma de resolver problemas dentro de los cuales se incluyen los sistemas expertos, el manejo y control de robots y los procesadores, que intenta integrar el conocimiento en tales sistemas, en otras palabras, un sistema inteligente capaz de escribir su propio programa. Un sistema experto definido como una estructura de programaci\u00f3n capaz de almacenar y utilizar un conocimiento sobre un \u00e1rea determinada que se traduce en su capacidad de aprendizaje. [6]\u200b De igual manera se puede considerar a la IA como la capacidad de las m\u00e1quinas para usar algoritmos, aprender de los datos y utilizar lo aprendido en la toma de decisiones tal y como lo har\u00eda un ser humano,[7]\u200b adem\u00e1s uno de los enfoques principales de la inteligencia artificial es el aprendizaje autom\u00e1tico, de tal forma que los ordenadores o las m\u00e1quinas tienen la capacidad de aprender sin estar programados para ello.[7]\u200b \nSeg\u00fan Takeyas (2007) la IA es una rama de las ciencias computacionales encargada de estudiar modelos de c\u00f3mputo capaces de realizar actividades propias de los seres humanos con base en dos de sus caracter\u00edsticas primordiales: el razonamiento y la conducta.[8]\u200b\nEn 1956, John McCarthy acu\u00f1\u00f3 la expresi\u00f3n \u00abinteligencia artificial\u00bb, y la defini\u00f3 como \u00abla ciencia e ingenio de hacer m\u00e1quinas inteligentes, especialmente programas de c\u00f3mputo inteligentes\u00bb.[9]\u200b\nTambi\u00e9n existen distintos tipos de percepciones y acciones, que pueden ser obtenidas y producidas, respectivamente, por sensores f\u00edsicos y sensores mec\u00e1nicos en m\u00e1quinas, pulsos el\u00e9ctricos u \u00f3pticos en computadoras, tanto como por entradas y salidas de bits de un software y su entorno software. \nVarios ejemplos se encuentran en el \u00e1rea de control de sistemas, planificaci\u00f3n autom\u00e1tica, la capacidad de responder a diagn\u00f3sticos y a consultas de los consumidores, reconocimiento de escritura, reconocimiento del habla y reconocimiento de patrones. Los sistemas de IA actualmente son parte de la rutina en campos como econom\u00eda, medicina, ingenier\u00eda, el transporte, las comunicaciones y la milicia, y se ha usado en gran variedad de programas inform\u00e1ticos, juegos de estrategia, como ajedrez de computador, y otros videojuegos.", "subsections": []}, {"name": "Tipos", "text": "Stuart J. Russell y Peter Norvig diferencian varios tipos de inteligencia artificial:[10]\u200b\nLos sistemas que piensan como humanos: Estos sistemas tratan de emular el pensamiento humano; por ejemplo las redes neuronales  artificiales. La automatizaci\u00f3n de actividades que vinculamos con procesos de pensamiento humano, actividades como la toma de decisiones, resoluci\u00f3n de problemas y aprendizaje.[11]\u200b\nLos sistemas que act\u00faan como humanos: Estos sistemas tratan de actuar como humanos; es decir, imitan el comportamiento humano; por ejemplo la rob\u00f3tica (El estudio de c\u00f3mo lograr que los computadores realicen tareas que, por el momento, los humanos hacen mejor).[12]\u200b\nLos sistemas que piensan racionalmente: Es decir, con l\u00f3gica (idealmente), tratan de imitar el pensamiento racional del ser humano; por ejemplo, los sistemas expertos, (el estudio de los c\u00e1lculos que hacen posible percibir, razonar y actuar).[13]\u200b\nLos sistemas que act\u00faan racionalmente: Tratan de emular de forma racional el comportamiento humano; por ejemplo los agentes inteligentes, que est\u00e1 relacionado con conductas inteligentes en artefactos.[14]\u200b", "subsections": []}, {"name": "Escuelas de pensamiento", "text": "La IA se divide en dos escuelas de pensamiento:\nLa inteligencia artificial convencional.\nLa inteligencia computacional.", "subsections": [{"name": "Inteligencia artificial convencional", "text": "Se conoce tambi\u00e9n como IA simb\u00f3lica-deductiva. Est\u00e1 basada en el an\u00e1lisis formal y estad\u00edstico del comportamiento humano ante diferentes problemas:\nRazonamiento basado en casos: Ayuda a tomar decisiones mientras se resuelven ciertos problemas concretos y, aparte de que son muy importantes, requieren de un buen funcionamiento.\nSistemas expertos: Infieren una soluci\u00f3n a trav\u00e9s del conocimiento previo del contexto en que se aplica y utiliza ciertas reglas o relaciones.[15]\u200b\nRedes bayesianas: Propone soluciones mediante inferencia probabil\u00edstica.[16]\u200b\nInteligencia artificial basada en comportamientos: Esta inteligencia contiene autonom\u00eda, es decir, puede auto-regularse y controlarse para mejorar.\nSmart process management: Facilita la toma de decisiones complejas, proponiendo una soluci\u00f3n a un determinado problema al igual que lo har\u00eda un especialista en dicha actividad."}, {"name": "Inteligencia artificial computacional", "text": "Art\u00edculo principal:\nLa inteligencia computacional (tambi\u00e9n conocida como IA subsimb\u00f3lica-inductiva) implica desarrollo o aprendizaje interactivo (por ejemplo, modificaciones interactivas de los par\u00e1metros en sistemas de conexiones). El aprendizaje se realiza bas\u00e1ndose en datos emp\u00edricos.\nLa inteligencia computacional tiene una doble finalidad. Por un lado, su objetivo cient\u00edfico es comprender los principios que posibilitan el comportamiento inteligente (ya sea en sistemas naturales o artificiales) y, por otro, su objetivo tecnol\u00f3gico consiste en especificar los m\u00e9todos para dise\u00f1ar sistemas inteligentes.[17]\u200b"}]}, {"name": "Historia", "text": "El t\u00e9rmino \u00abinteligencia artificial\u00bb fue acu\u00f1ado formalmente en 1956 durante la Conferencia de Dartmouth, pero para entonces ya se hab\u00eda estado trabajando en ello durante cinco a\u00f1os en los cuales se hab\u00eda propuesto muchas definiciones distintas que en ning\u00fan caso hab\u00edan logrado ser aceptadas totalmente por la comunidad investigadora. La IA es una de las disciplinas m\u00e1s recientes junto con la gen\u00e9tica moderna.\nLas ideas m\u00e1s b\u00e1sicas se remontan a los griegos, antes de Cristo. Arist\u00f3teles (384-322\u00a0a.\u00a0C.) fue el primero en describir un conjunto de reglas que describen una parte del funcionamiento de la mente para obtener conclusiones racionales, y Ctesibio de Alejandr\u00eda (250\u00a0a.\u00a0C.) construy\u00f3 la primera m\u00e1quina autocontrolada, un regulador del flujo de agua (racional pero sin razonamiento).\nEn 1315 Ramon Llull en su libro Ars magna tuvo la idea de que el razonamiento pod\u00eda ser efectuado de manera artificial.\nEn 1840 Ada Lovelace previ\u00f3 la capacidad de las m\u00e1quinas para ir m\u00e1s all\u00e1 de los simples c\u00e1lculos y aport\u00f3 una primera idea de lo que ser\u00eda el software.\nEn 1936 Alan Turing dise\u00f1a formalmente una M\u00e1quina universal que demuestra la viabilidad de un dispositivo f\u00edsico para implementar cualquier c\u00f3mputo formalmente definido.\nEn 1943 Warren McCulloch y Walter Pitts presentaron su modelo de neuronas artificiales, el cual se considera el primer trabajo del campo, aun cuando todav\u00eda no exist\u00eda el t\u00e9rmino. Los primeros avances importantes comenzaron a principios del a\u00f1o 1950 con el trabajo de Alan Turing, a partir de lo cual la ciencia ha pasado por diversas situaciones.\nEn 1955 Herbert Simon, Allen Newell y Joseph Carl Shaw, desarrollan el primer lenguaje de programaci\u00f3n orientado a la resoluci\u00f3n de problemas, el IPL-11. Un a\u00f1o m\u00e1s tarde desarrollan el LogicTheorist, el cual era capaz de demostrar teoremas matem\u00e1ticos.\nEn 1956 fue inventado el t\u00e9rmino inteligencia artificial por John McCarthy, Marvin Minsky y Claude Shannon en la Conferencia de Dartmouth, un congreso en el que se hicieron previsiones triunfalistas a diez a\u00f1os que jam\u00e1s se cumplieron, lo que provoc\u00f3 el abandono casi total de las investigaciones durante quince a\u00f1os.\nEn 1957 Newell y Simon contin\u00faan su trabajo con el desarrollo del General Problem Solver (GPS). GPS era un sistema orientado a la resoluci\u00f3n de problemas.\nEn 1958 John McCarthy desarrolla en el Instituto Tecnol\u00f3gico de Massachusetts (MIT) el LISP. Su nombre se deriva de LISt Processor. LISP fue el primer lenguaje para procesamiento simb\u00f3lico.\nEn 1959 Rosenblatt introduce el \u00abperceptr\u00f3n\u00bb.\nA finales de la d\u00e9cada de 1950 y comienzos de la de 1960 Robert K. Lindsay desarrolla \u00abSad Sam\u00bb, un programa para la lectura de oraciones en ingl\u00e9s y la inferencia de conclusiones a partir de su interpretaci\u00f3n.\nEn 1963 Quillian desarrolla las redes sem\u00e1nticas como modelo de representaci\u00f3n del conocimiento.\nEn 1964 Bertrand Raphael construye el sistema SIR (Semantic Information Retrieval) el cual era capaz de inferir conocimiento basado en informaci\u00f3n que se le suministra. Bobrow desarrolla STUDENT.\nA mediados de los a\u00f1os 60, aparecen los sistemas expertos, que predicen la probabilidad de una soluci\u00f3n bajo un set de condiciones. Por ejemplo DENDRAL, iniciado en 1965 por Buchanan, Feigenbaum y Lederberg, el primer Sistema Experto, que asist\u00eda a qu\u00edmicos en estructuras qu\u00edmicas complejas, MACSYMA, que asist\u00eda a ingenieros y cient\u00edficos en la soluci\u00f3n de ecuaciones matem\u00e1ticas complejas.\nPosteriormente entre los a\u00f1os 1968-1970 Terry Winograd desarroll\u00f3 el sistema SHRDLU, que permit\u00eda interrogar y dar \u00f3rdenes a un robot que se mov\u00eda dentro de un mundo de bloques.\nEn 1968 Marvin Minsky publica Semantic Information Processing.\nEn 1968 Seymour Papert, Danny Bobrow y Wally Feurzeig desarrollan el lenguaje de programaci\u00f3n LOGO.\nEn 1969 Alan Kay desarrolla el lenguaje Smalltalk en Xerox PARC y se publica en 1980.\nEn 1973 Alain Colmenauer y su equipo de investigaci\u00f3n en la Universidad de Aix-Marseille crean PROLOG (del franc\u00e9s PROgrammation en LOGique) un lenguaje de programaci\u00f3n ampliamente utilizado en IA.\nEn 1973 Shank y Abelson desarrollan los guiones, o scripts, pilares de muchas t\u00e9cnicas actuales en Inteligencia Artificial y la inform\u00e1tica en general.\nEn 1974 Edward Shortliffe escribe su tesis con MYCIN, uno de los Sistemas Expertos m\u00e1s conocidos, que asisti\u00f3 a m\u00e9dicos en el diagn\u00f3stico y tratamiento de infecciones en la sangre.\nEn las d\u00e9cadas de 1970 y 1980, creci\u00f3 el uso de sistemas expertos, como MYCIN: R1/XCON, ABRL, PIP, PUFF, CASNET, INTERNIST/CADUCEUS, etc. Algunos permanecen hasta hoy (Shells) como EMYCIN, EXPERT, OPSS.\nEn 1981 Kazuhiro Fuchi anuncia el proyecto japon\u00e9s de la quinta generaci\u00f3n de computadoras.\nEn 1986 McClelland y Rumelhart publican Parallel Distributed Processing (Redes Neuronales).\nEn 1988 se establecen los lenguajes Orientados a Objetos.\nEn 1997 Gari Kasp\u00e1rov, campe\u00f3n mundial de ajedrez, pierde ante la computadora aut\u00f3noma Deep Blue.\nEn 2006 se celebr\u00f3 el aniversario con el Congreso en espa\u00f1ol 50 a\u00f1os de Inteligencia Artificial - Campus Multidisciplinar en Percepci\u00f3n e Inteligencia 2006.\nEn 2009 ya hab\u00eda en desarrollo sistemas inteligentes terap\u00e9uticos que permiten detectar emociones para poder interactuar con ni\u00f1os autistas.\nEn 2011 IBM desarroll\u00f3 un superordenador llamado Watson, el cual gan\u00f3 una ronda de tres juegos seguidos de Jeopardy!, venciendo a sus dos m\u00e1ximos campeones, y ganando un premio de 1 mill\u00f3n de d\u00f3lares que IBM luego don\u00f3 a obras de caridad.[18]\u200b\nEn 2016, un programa inform\u00e1tico gan\u00f3 cinco a cero al triple campe\u00f3n de Europa de Go.[19]\u200b\nEn 2016, el entonces presidente Obama habla sobre el futuro de la inteligencia artificial y la tecnolog\u00eda.[20]\u200b\nExisten personas que al dialogar sin saberlo con un chatbot no se percatan de hablar con un programa, de modo tal que se cumple la prueba de Turing como cuando se formul\u00f3: \u00abExistir\u00e1 Inteligencia Artificial cuando no seamos capaces de distinguir entre un ser humano y un programa de computadora en una conversaci\u00f3n a ciegas\u00bb.\nEn 2017 AlphaGo desarrollado por DeepMind derrota 4-1 en una competencia de Go al campe\u00f3n mundial Lee Sedol. Este suceso fue muy medi\u00e1tico y marc\u00f3 un hito en la historia de este juego.[21]\u200b A finales de ese mismo a\u00f1o, Stockfish, el motor de ajedrez considerado el mejor del mundo con 3 400 puntos ELO, fue abrumadoramente derrotado por AlphaZero con solo conocer las reglas del juego y tras solo 4 horas de entrenamiento jugando contra s\u00ed mismo.[22]\u200b\nComo an\u00e9cdota, muchos de los investigadores sobre IA sostienen que \u00abla inteligencia es un programa capaz de ser ejecutado independientemente de la m\u00e1quina que lo ejecute, computador o cerebro\u00bb.\nEn 2018, se lanza el primer televisor con Inteligencia Artificial por parte de LG Electronics con una plataforma denominada ThinQ.[23]\u200b\nEn 2019, Google present\u00f3 su Doodle en que, con ayuda de la Inteligencia Artificial, hace un homenaje a Johann Sebastian Bach, en el que, a\u00f1adiendo una simple melod\u00eda de dos compases la IA crea el resto.\nEn 2020, la OECD (Organizaci\u00f3n para la Cooperaci\u00f3n y el Desarrollo Econ\u00f3mico) publica el documento de trabajo intitulado Hola, mundo: La inteligencia artificial y su uso en el sector p\u00fablico, dirigido a funcionarios de gobierno con el af\u00e1n de resaltar la importancia de la IA y de sus aplicaciones pr\u00e1cticas en el \u00e1mbito gubernamental.[24]\u200b", "subsections": []}, {"name": "Implicaciones sociales, \u00e9ticas y filos\u00f3ficas", "text": "Ante la posibilidad de crear m\u00e1quinas dotadas de inteligencia, se volvi\u00f3 importante preocuparse por la cuesti\u00f3n \u00e9tica de las m\u00e1quinas para tratar de garantizar que no se produzca ning\u00fan da\u00f1o a los seres humanos, a otros seres vivos e incluso a las mismas m\u00e1quinas seg\u00fan algunas corrientes de pensamiento[25]\u200b. Es as\u00ed como surgi\u00f3 un amplio campo de estudios conocido como \u00e9tica de la inteligencia artificial de relativamente reciente aparici\u00f3n y que generalmente se divide en dos ramas, la robo\u00e9tica, encargada de estudiar las acciones de los seres humanos hacia los robots, y la \u00e9tica de las m\u00e1quinas encargada del estudio del comportamiento de los robots para con los seres humanos.\nEl acelerado desarrollo tecnol\u00f3gico y cient\u00edfico de la inteligencia artificial que se ha producido en el siglo\u00a0XXI supone tambi\u00e9n un importante impacto en otros campos. En la econom\u00eda mundial durante la segunda revoluci\u00f3n industrial se vivi\u00f3 un fen\u00f3meno conocido como desempleo tecnol\u00f3gico, que se refiere a cuando la automatizaci\u00f3n industrial de los procesos de producci\u00f3n a gran escala reemplaza la mano de obra humana. Con la inteligencia artificial podr\u00eda darse un fen\u00f3meno parecido, especialmente en los procesos en los que interviene la inteligencia humana, tal como se ilustraba en el cuento \u00a1C\u00f3mo se divert\u00edan! de Isaac Asimov, en el que su autor vislumbra algunos de los efectos que tendr\u00eda la interacci\u00f3n de m\u00e1quinas inteligentes especializadas en pedagog\u00eda infantil, en lugar de profesores humanos, con los ni\u00f1os en etapa escolar. Este mismo escritor dise\u00f1\u00f3 lo que hoy se conocen como las tres leyes de la rob\u00f3tica, aparecidas por primera vez en el relato C\u00edrculo vicioso (Runaround) de 1942, donde establec\u00eda lo siguiente:\nOtras obras de ciencia ficci\u00f3n m\u00e1s recientes tambi\u00e9n exploran algunas cuestiones \u00e9ticas y filos\u00f3ficas con respecto a la Inteligencia artificial fuerte, como las pel\u00edculas Yo, robot o A.I. Inteligencia Artificial, en los que se tratan temas tales como la autoconsciencia o el origen de una conciencia emergente de los robots inteligentes o sistemas computacionales, o si \u00e9stos podr\u00edan considerarse sujetos de derecho debido a sus caracter\u00edsticas casi humanas relacionadas con la sintiencia, como el poder ser capaces de sentir dolor y emociones o hasta qu\u00e9 punto obedecer\u00edan al objetivo de su programaci\u00f3n, y en caso de no ser as\u00ed, si podr\u00edan ejercer libre albedr\u00edo. Esto \u00faltimo es el tema central de la famosa saga de Terminator, en la que las m\u00e1quinas superan a la humanidad y deciden aniquilarla, historia que seg\u00fan varios especialistas, podr\u00eda no limitarse a la ciencia ficci\u00f3n y ser una posibilidad real en una sociedad posthumana que dependiese de la tecnolog\u00eda y las m\u00e1quinas completamente.[27]\u200b[28]\u200b", "subsections": []}, {"name": "Regulaci\u00f3n", "text": "El Derecho[29]\u200b desempe\u00f1a un papel fundamental en el uso y desarrollo de la IA. Las leyes establecen reglas y normas de comportamiento para asegurar el bienestar social y proteger los derechos individuales, y pueden ayudarnos a obtener los beneficios de esta tecnolog\u00eda mientras minimizamos sus riesgos, que son significativos. De momento no hay normas jur\u00eddicas que regulen directamente a la IA. Pero con fecha 21 de abril de 2021, la Comisi\u00f3n Europea ha presentado una propuesta de Reglamento europeo para la regulaci\u00f3n armonizada de la inteligencia artificial (IA) en la UE. Su t\u00edtulo exacto es Propuesta de Reglamento del Parlamento Europeo y del Consejo por el que se establecen normas armonizadas en materia de inteligencia artificial \u2013Ley de Inteligencia Artificial\u2013 y se modifican otros actos legislativos de la Uni\u00f3n. ", "subsections": []}, {"name": "Objetivos", "text": "", "subsections": [{"name": "Razonamiento y resoluci\u00f3n de problemas", "text": "Los primeros investigadores desarrollaron algoritmos que imitaban el razonamiento paso a paso que los humanos usan cuando resuelven acertijos o hacen deducciones l\u00f3gicas.[30]\u200b A finales de la d\u00e9cada de 1981-1990, la investigaci\u00f3n de la inteligencia artificial hab\u00eda desarrollado m\u00e9todos para tratar con informaci\u00f3n incierta o incompleta, empleando conceptos de probabilidad y econom\u00eda.[31]\u200b\nEstos algoritmos demostraron ser insuficientes para resolver grandes problemas de razonamiento porque experimentaron una \u00abexplosi\u00f3n combinatoria\u00bb: se volvieron exponencialmente m\u00e1s lentos a medida que los problemas crec\u00edan.[32]\u200b De esta manera, se concluy\u00f3 que los seres humanos rara vez usan la deducci\u00f3n paso a paso que la investigaci\u00f3n temprana de la inteligencia artificial segu\u00eda; en cambio, resuelven la mayor\u00eda de sus problemas utilizando juicios r\u00e1pidos e intuitivos.[33]\u200b"}, {"name": "Representaci\u00f3n del conocimiento", "text": "La representaci\u00f3n del conocimiento[34]\u200b y la ingenier\u00eda del conocimiento[35]\u200b son fundamentales para la investigaci\u00f3n cl\u00e1sica de la inteligencia artificial. Algunos \u00absistemas expertos\u00bb intentan recopilar el conocimiento que poseen los expertos en alg\u00fan \u00e1mbito concreto. Adem\u00e1s, otros proyectos tratan de reunir el \u00abconocimiento de sentido com\u00fan\u00bb conocido por una persona promedio en una base de datos que contiene un amplio conocimiento sobre el mundo.\nEntre los temas que contendr\u00eda una base de conocimiento de sentido com\u00fan est\u00e1n: objetos, propiedades, categor\u00edas y relaciones entre objetos,[36]\u200b situaciones, eventos, estados y tiempo[37]\u200b causas y efectos; Poole, Mackworth y Goebel, 1998, pp.\u00a0335\u2013337 y el conocimiento sobre el conocimiento (lo que sabemos sobre lo que saben otras personas)[38]\u200b entre otros."}, {"name": "Planificaci\u00f3n", "text": "Otro objetivo de la inteligencia artificial consiste en poder establecer metas y eventualmente alcanzarlas.[39]\u200b Para ello necesitan una forma de visualizar el futuro, una representaci\u00f3n del estado del mundo y poder hacer predicciones sobre c\u00f3mo sus acciones lo cambiar\u00e1n, con tal de poder tomar decisiones que maximicen la utilidad (o el \u00abvalor\u00bb) de las opciones disponibles. Russell y Norvig, 2003, pp.\u00a0600\u2013604\nEn los problemas cl\u00e1sicos de planificaci\u00f3n, el agente puede asumir que es el \u00fanico sistema que act\u00faa en el mundo, lo que le permite estar seguro de las consecuencias de sus acciones.[40]\u200b Sin embargo, si el agente no es el \u00fanico actor, entonces se requiere que este pueda razonar bajo incertidumbre. Esto requiere un agente que no solo pueda evaluar su entorno y hacer predicciones, sino tambi\u00e9n evaluar sus predicciones y adaptarse en funci\u00f3n de su evaluaci\u00f3n. Russell y Norvig, 2003, pp.\u00a0430\u2013449 La planificaci\u00f3n de m\u00faltiples agentes utiliza la cooperaci\u00f3n y la competencia de muchos sistemas para lograr un objetivo determinado. El comportamiento emergente como este es utilizado por algoritmos evolutivos e inteligencia de enjambre. Russell y Norvig, 2003, pp.\u00a0449\u2013455"}, {"name": "Aprendizaje", "text": "El aprendizaje autom\u00e1tico es un concepto fundamental de la investigaci\u00f3n de la inteligencia artificial desde el inicio de los estudios de este campo; consiste en la investigaci\u00f3n de algoritmos inform\u00e1ticos que mejoran autom\u00e1ticamente a trav\u00e9s de la experiencia.[41]\u200b\nEl aprendizaje no supervisado es la capacidad de encontrar patrones en un flujo de entrada, sin que sea necesario que un humano etiquete las entradas primero. El aprendizaje supervisado incluye clasificaci\u00f3n y regresi\u00f3n num\u00e9rica, lo que requiere que un humano etiquete primero los datos de entrada. La clasificaci\u00f3n se usa para determinar a qu\u00e9 categor\u00eda pertenece algo y ocurre despu\u00e9s de que un programa observe varios ejemplos de entradas de varias categor\u00edas. La regresi\u00f3n es el intento de producir una funci\u00f3n que describa la relaci\u00f3n entre entradas y salidas y predice c\u00f3mo deben cambiar las salidas a medida que cambian las entradas.[41]\u200b Tanto los clasificadores como los aprendices de regresi\u00f3n intentan aprender una funci\u00f3n desconocida; por ejemplo, un clasificador de spam puede verse como el aprendizaje de una funci\u00f3n que asigna el texto de un correo electr\u00f3nico a una de dos categor\u00edas, \u00abspam\u00bb o \u00abno spam\u00bb. La teor\u00eda del aprendizaje computacional puede evaluar a los estudiantes por complejidad computacional, complejidad de la muestra (cu\u00e1ntos datos se requieren) o por otras nociones de optimizaci\u00f3n.[42]\u200b"}, {"name": "Procesamiento de lenguajes naturales", "text": "El procesamiento del lenguaje natural[43]\u200b permite a las m\u00e1quinas leer y comprender el lenguaje humano. Un sistema de procesamiento de lenguaje natural suficientemente eficaz permitir\u00eda interfaces de usuario de lenguaje natural y la adquisici\u00f3n de conocimiento directamente de fuentes escritas por humanos, como los textos de noticias. Algunas aplicaciones sencillas del procesamiento del lenguaje natural incluyen la recuperaci\u00f3n de informaci\u00f3n, la miner\u00eda de textos, la respuesta a preguntas y la traducci\u00f3n autom\u00e1tica.[44]\u200b Muchos enfoques utilizan las frecuencias de palabras para construir representaciones sint\u00e1cticas de texto. Las estrategias de b\u00fasqueda de \u00abdetecci\u00f3n de palabras clave\u00bb son populares y escalables, pero poco \u00f3ptimas; una consulta de b\u00fasqueda para \u00abperro\u00bb solo puede coincidir con documentos que contengan la palabra literal \u00abperro\u00bb y perder un documento con la palabra \u00abcaniche\u00bb. Los enfoques estad\u00edsticos de procesamiento de lenguaje pueden combinar todas estas estrategias, as\u00ed como otras, y a menudo logran una precisi\u00f3n aceptable a nivel de p\u00e1gina o p\u00e1rrafo. M\u00e1s all\u00e1 del procesamiento de la sem\u00e1ntica, el objetivo final de este es incorporar una comprensi\u00f3n completa del razonamiento de sentido com\u00fan.[45]\u200b En 2019, las arquitecturas de aprendizaje profundo basadas en transformadores pod\u00edan generar texto coherente.[46]\u200b"}, {"name": "Percepci\u00f3n", "text": "La percepci\u00f3n de la m\u00e1quina[47]\u200b es la capacidad de utilizar la entrada de sensores (como c\u00e1maras de espectro visible o infrarrojo, micr\u00f3fonos, se\u00f1ales inal\u00e1mbricas y lidar, sonar, radar y sensores t\u00e1ctiles) para entender aspectos del mundo. Las aplicaciones incluyen reconocimiento de voz,[48]\u200b reconocimiento facial y reconocimiento de objetos. Russell y Norvig, 2003, pp.\u00a0885\u2013892 La visi\u00f3n artificial es la capacidad de analizar la informaci\u00f3n visual, que suele ser ambigua; un peat\u00f3n gigante de cincuenta metros de altura muy lejos puede producir los mismos p\u00edxeles que un peat\u00f3n de tama\u00f1o normal cercano, lo que requiere que la inteligencia artificial juzgue la probabilidad relativa y la razonabilidad de las diferentes interpretaciones, por ejemplo, utilizando su \u00abmodelo de objeto\u00bb para evaluar que los peatones de cincuenta metros no existen.[49]\u200b"}]}, {"name": "Importancia de la Inteligencia Artificial", "text": "Esta herramienta ayuda a automatizar el aprendizaje y descubrimiento repetitivo a trav\u00e9s de datos, realiza tareas computarizadas frecuentes de manera confiable, sin embargo, necesita intervenci\u00f3n humana para la configuraci\u00f3n del sistema. Analiza m\u00e1s datos m\u00e1s profundos. Agrega inteligencia, ya que, no se puede vender como una aplicaci\u00f3n individual por lo que es un valor agregado a los productos. Tiene una gran precisi\u00f3n a trav\u00e9s de redes neuronales profundas; por ejemplo, en medicina se puede utilizar la AI para detectar c\u00e1ncer con MRIs (im\u00e1genes de resonancia magn\u00e9tica). Se adapta a trav\u00e9s de algoritmos de aprendizaje progresivo, encuentra estructura y regularidades en los datos de modo que el algoritmo se convierte en un clasificador o predictor. Y por \u00faltimo, la inteligencia artificial, saca el mayor provecho de datos. ", "subsections": []}, {"name": "Cr\u00edticas", "text": "Las principales cr\u00edticas a la inteligencia artificial tienen que ver con su capacidad de imitar por completo a un ser humano[50]\u200b. Sin embargo, hay expertos[cita\u00a0requerida] en el tema que indican que ning\u00fan humano individual tiene capacidad para resolver todo tipo de problemas, y autores como Howard Gardner han teorizado sobre la soluci\u00f3n.\nEn los humanos, la capacidad de resolver problemas tiene dos aspectos: los aspectos innatos y los aspectos aprendidos. Los aspectos innatos permiten, por ejemplo, almacenar y recuperar informaci\u00f3n en la memoria, mientras que en los aspectos aprendidos reside el saber resolver un problema matem\u00e1tico mediante el algoritmo adecuado. Del mismo modo que un humano debe disponer de herramientas que le permitan solucionar ciertos problemas, los sistemas artificiales deben ser programados para que puedan llegar a resolverlos.\nMuchas personas consideran que la Prueba de Turing ha sido superada, citando conversaciones en que al dialogar con un programa de inteligencia artificial para chat no saben que hablan con un programa. Sin embargo, esta situaci\u00f3n no es equivalente a una prueba de Turing, que requiere que el participante se encuentre sobre aviso de la posibilidad de hablar con una m\u00e1quina.\nOtros experimentos mentales como la habitaci\u00f3n china, de John Searle, han mostrado c\u00f3mo una m\u00e1quina podr\u00eda simular pensamiento sin realmente poseerlo, pasando la prueba de Turing sin siquiera entender lo que hace, tan solo reaccionando de una forma concreta a determinados est\u00edmulos (en el sentido m\u00e1s amplio de la palabra). Esto demostrar\u00eda que la m\u00e1quina en realidad no est\u00e1 pensando, ya que actuar de acuerdo con un programa preestablecido ser\u00eda suficiente. Si para Turing el hecho de enga\u00f1ar a un ser humano que intenta evitar que le enga\u00f1en es muestra de una mente inteligente, Searle considera posible lograr dicho efecto mediante reglas definidas a priori.\nUno de los mayores problemas en sistemas de inteligencia artificial es la comunicaci\u00f3n con el usuario. Este obst\u00e1culo es debido a la ambig\u00fcedad del lenguaje, y se remonta a los inicios de los primeros sistemas operativos inform\u00e1ticos. La capacidad de los humanos para comunicarse entre s\u00ed implica el conocimiento del lenguaje que utiliza el interlocutor. Para que un humano pueda comunicarse con un sistema inteligente hay dos opciones: o bien que el humano aprenda el lenguaje del sistema como si aprendiese a hablar cualquier otro idioma distinto al nativo, o bien que el sistema tenga la capacidad de interpretar el mensaje del usuario en la lengua que el usuario utiliza. Tambi\u00e9n puede haber desperfectos en las instalaciones de los mismos.\nUn humano, durante toda su vida, aprende el vocabulario de su lengua nativa o materna, siendo capaz de interpretar los mensajes (a pesar de la polisemia de las palabras) y utilizando el contexto para resolver ambig\u00fcedades. Sin embargo, debe conocer los distintos significados para poder interpretar, y es por esto que lenguajes especializados y t\u00e9cnicos son conocidos solamente por expertos en las respectivas disciplinas. Un sistema de inteligencia artificial se enfrenta con el mismo problema, la polisemia del lenguaje humano, su sintaxis poco estructurada y los dialectos entre grupos.\nLos desarrollos en inteligencia artificial son mayores en los campos disciplinares en los que existe mayor consenso entre especialistas. Un sistema experto es m\u00e1s probable que sea programado en f\u00edsica o en medicina que en sociolog\u00eda o en psicolog\u00eda. Esto se debe al problema del consenso entre especialistas en la definici\u00f3n de los conceptos involucrados y en los procedimientos y t\u00e9cnicas a utilizar. Por ejemplo, en f\u00edsica hay acuerdo sobre el concepto de velocidad y c\u00f3mo calcularla. Sin embargo, en psicolog\u00eda se discuten los conceptos, la etiolog\u00eda, la psicopatolog\u00eda, y c\u00f3mo proceder ante cierto diagn\u00f3stico. Esto dificulta la creaci\u00f3n de sistemas inteligentes porque siempre habr\u00e1 desacuerdo sobre la forma en que deber\u00eda actuar el sistema para diferentes situaciones. A pesar de esto, hay grandes avances en el dise\u00f1o de sistemas expertos para el diagn\u00f3stico y toma de decisiones en el \u00e1mbito m\u00e9dico y psiqui\u00e1trico (Adaraga Morales, Zaccagnini Sancho, 1994).\nAl desarrollar un robot con inteligencia artificial se debe tener cuidado con la autonom\u00eda,[51]\u200b hay que tener en cuenta el no vincular el hecho de que el robot tenga interacciones con seres humanos a su grado de autonom\u00eda. Si la relaci\u00f3n de los humanos con el robot es de tipo maestro esclavo, y el papel de los humanos es dar \u00f3rdenes y el del robot obedecerlas, entonces s\u00ed cabe hablar de una limitaci\u00f3n de la autonom\u00eda del robot. Pero si la interacci\u00f3n de los humanos con el robot es de igual a igual, entonces su presencia no tiene por qu\u00e9 estar asociada a restricciones para que el robot pueda tomar sus propias decisiones.\n[52]\u200b\nCon el desarrollo de la tecnolog\u00eda de inteligencia artificial, muchas compa\u00f1\u00edas de software como el aprendizaje profundo y el procesamiento del lenguaje natural han comenzado a producirse y la cantidad de pel\u00edculas sobre inteligencia artificial ha aumentado.\nStephen Hawking advirti\u00f3 sobre los peligros de la inteligencia artificial y lo consider\u00f3 una amenaza para la supervivencia de la humanidad.[53]\u200b", "subsections": []}, {"name": "Aplicaciones de la inteligencia artificial", "text": "Las t\u00e9cnicas desarrolladas en el campo de la inteligencia artificial son numerosas y ubicuas. Com\u00fanmente cuando un problema es resuelto mediante inteligencia artificial la soluci\u00f3n es incorporada en \u00e1mbitos de la industria y de la vida[54]\u200b diaria de los usuarios de programas de computadora, pero la percepci\u00f3n popular se olvida de los or\u00edgenes de estas tecnolog\u00edas que dejan de ser percibidas como inteligencia artificial. A este fen\u00f3meno se le conoce como el efecto IA.[55]\u200b\nLing\u00fc\u00edstica computacional\nMiner\u00eda de datos (Data Mining)\nIndustria\nMedicina\nMundos virtuales\nProcesamiento de lenguaje natural (Natural Language Processing)\nRob\u00f3tica\nSistemas de control\nSistemas de apoyo a la decisi\u00f3n\nVideojuegos\nPrototipos inform\u00e1ticos\nAn\u00e1lisis de sistemas din\u00e1micos\nSimulaci\u00f3n de multitudes\nSistemas Operativos\nAutomoci\u00f3n", "subsections": []}, {"name": "Diferencia entre Inteligencia Artificial y Machine Learning", "text": "Como se mencion\u00f3 anteriormente, en resumen, la inteligencia artificial es la ciencia que entrena m\u00e1quinas para que realicen tareas humanas, por lo que todo nuestro alrededor est\u00e1 rodeado de ella y mientras existan recursos con ese tipo de lenguaje la AI estar\u00e1 presente. Machine Learning es una rama de la inteligencia artificial que le entrena a una m\u00e1quina a c\u00f3mo aprender, esta se encarga de ver patrones y data para llegar a una conclusi\u00f3n por s\u00ed sola; c\u00f3mo funciona es: haces una pregunta, recolecta informaci\u00f3n, entrena al algoritmo, lo pone a prueba, recolecta la retroalimentaci\u00f3n y usa esa retroalimentaci\u00f3n. ", "subsections": []}, {"name": "Propiedad intelectual de la inteligencia artificial", "text": "Al hablar acerca de la propiedad intelectual atribuida a creaciones de la inteligencia artificial se forma un debate fuerte alrededor de si una m\u00e1quina puede tener derechos de autor. Seg\u00fan la Organizaci\u00f3n Mundial de la Propiedad Intelectual (OMPI), cualquier creaci\u00f3n de la mente puede ser parte de la propiedad intelectual, pero no especifica si la mente debe ser humana o puede ser una m\u00e1quina, dejando la creatividad artificial en la incertidumbre.\nAlrededor del mundo han comenzado a surgir distintas legislaciones con el fin de manejar la inteligencia artificial, tanto su uso como creaci\u00f3n. Los legisladores y miembros del gobierno han comenzado a pensar acerca de esta tecnolog\u00eda, enfatizando el riesgo y los desaf\u00edos complejos de esta. Observando el trabajo creado por una m\u00e1quina, las leyes cuestionan la posibilidad de otorgarle propiedad intelectual a una m\u00e1quina, abriendo una discusi\u00f3n respecto a la legislaci\u00f3n relacionada con IA.\nEl 5 de febrero de 2020, la Oficina del Derecho de Autor de los Estados Unidos y la OMPI asistieron a un simposio donde observaron de manera profunda c\u00f3mo la comunidad creativa utiliza la inteligencia artificial (IA) para crear trabajo original. Se discutieron las relaciones entre la inteligencia artificial y el derecho de autor, qu\u00e9 nivel de involucramiento es suficiente para que el trabajo resultante sea v\u00e1lido para protecci\u00f3n de derechos de autor; los desaf\u00edos y consideraciones de usar inputs con derechos de autor para entrenar una m\u00e1quina; y el futuro de la inteligencia artificial y sus pol\u00edticas de derecho de autor.[56]\u200b[57]\u200b\nEl director general de la OMPI, Francis Gurry, present\u00f3 su preocupaci\u00f3n ante la falta de atenci\u00f3n que hay frente a los derechos de propiedad intelectual, pues la gente suele dirigir su inter\u00e9s hacia temas de ciberseguridad, privacidad e integridad de datos al hablar de la inteligencia artificial. As\u00ed mismo, Gurry cuestion\u00f3 si el crecimiento y la sostenibilidad de la tecnolog\u00eda IA nos guiar\u00eda a desarrollar dos sistemas para manejar derechos de autor- uno para creaciones humanas y otro para creaciones de m\u00e1quinas.[58]\u200b\nA\u00fan hay una falta de claridad en el entendimiento alrededor de  la inteligencia artificial. Los desarrollos tecnol\u00f3gicos avanzan a paso r\u00e1pido, aumentando su complejidad en pol\u00edticas, legalidades y problemas \u00e9ticos que se merecen la atenci\u00f3n global. Antes de encontrar una manera de trabajar con los derechos de autor, es necesario entenderlo correctamente, pues a\u00fan no se sabe c\u00f3mo juzgar la originalidad de un trabajo que nace de una composici\u00f3n de una serie de fragmentos de otros trabajos.\nLa asignaci\u00f3n de derechos de autor alrededor de la inteligencia artificial a\u00fan no ha sido regulada por la falta de conocimientos y definiciones. A\u00fan hay incertidumbre sobre si, y hasta que punto, la inteligencia artificial es capaz de producir contenido de manera aut\u00f3noma y sin ning\u00fan humano involucrado, algo que podr\u00eda influenciar si sus resultados pueden ser protegidos por derechos de autor. \nEl sistema general de derechos de autor a\u00fan debe adaptarse al contexto digital de inteligencia artificial, pues est\u00e1n centrados en la creatividad humana. Los derechos de autor no est\u00e1n dise\u00f1ados para manejar cualquier problema en las pol\u00edticas relacionado con la creaci\u00f3n y el uso de propiedad intelectual, y puede llegar a ser da\u00f1ino estirar excesivamente los derechos de autor para resolver problemas perif\u00e9ricos dado que:\n\u00abUsar los derechos de autor para gobernar la inteligencia artificial es poco inteligente y contradictorio con la funci\u00f3n primordial de los derechos de autor de ofrecer un espacio habilitado para que la creatividad florezca\u00bb[59]\u200b\nLa conversaci\u00f3n acerca de la propiedad intelectual tendr\u00e1 que continuar hasta asegurarse de que la innovaci\u00f3n sea protegida pero tambi\u00e9n tenga espacio para florecer.", "subsections": []}, {"name": "En la cultura popular", "text": "", "subsections": [{"name": "En el cine", "text": "La IA est\u00e1 cada vez m\u00e1s presente en la sociedad, la evoluci\u00f3n de la tecnolog\u00eda es una realidad y con ello, la producci\u00f3n de pel\u00edculas sobre esta tem\u00e1tica. Cabe destacar, que lleva habiendo piezas audiovisuales sobre inteligencia artificial desde hace mucho tiempo, ya sea incluyendo personajes o mostrando un trasfondo moral y \u00e9tico. A continuaci\u00f3n, se muestra una lista de algunas de las principales pel\u00edculas que tratan este tema: \nEx Machina (2015): En la interpretaci\u00f3n de Alicia Vikander, incre\u00edblemente editada, como Ava, encontramos un probable robot a prueba de Turing escondido en la mansi\u00f3n de un genio, Nathan, un poco loco. Y es que, hablamos de una creaci\u00f3n extra\u00f1a que se siente totalmente real y a la vez inhumana. Est\u00e1 considerada como una de las mejores pel\u00edculas que tratan la inteligencia artificial. Esto se debe principalmente a que parece cubrir todo el concepto IA integrado en una pel\u00edcula: el protagonista es un sustituto del ser humano y nos adentra en multitud de argumentos morales que rodean a esta, al tiempo que vemos un arco narrativo de thriller que, desde luego, acaba enganch\u00e1ndonos. Desde luego aqu\u00ed la representaci\u00f3n del personaje de la IA no es blanco o negro. Ava no es buena, pero tampoco es del todo mala. Y en esto, el p\u00fablico se queda reflexionando sobre cuestiones profundas sobre la naturaleza de la IA.\nMinority Report (2002): La pel\u00edcula sobre IA de Steven Spielberg, Minority Report, sigue a John (Tom Cruise), un agente de la ley, que es acusado de un asesinato que cometer\u00e1 en el futuro. En esta pel\u00edcula de principios de los a\u00f1os 2000, el protagonista utiliza una tecnolog\u00eda del futuro que permite a la polic\u00eda atrapar a los criminales antes de que hayan cometido un delito. En Minority Report, la IA se representa a trav\u00e9s de los Precogs, los gemelos que poseen habilidades ps\u00edquicas. Los Precogs ven los asesinatos antes de que se produzcan, lo que permite a las fuerzas del orden perseguir el crimen antes de que se cometa. En lugar de los robots f\u00edsicos de IA tipo cyborg, aqu\u00ed explora la IA mediante el uso de seres humanos.\nMatrix (1999): En esta pel\u00edcula Keanu Reeves interpreta a Thomas Anderson / Neo, un programador de d\u00eda y hacker de noche que trata de desentra\u00f1ar la verdad oculta tras una simulaci\u00f3n conocida como \u00abMatrix\u00bb. Esta realidad simulada es producto de programas de inteligencia artificial que terminan esclavizando a la humanidad y utilizando sus cuerpos como fuente de energ\u00eda.\nYo, robot (2004): Esta pel\u00edcula de ciencia ficci\u00f3n protagonizada por Will Smith est\u00e1 ambientada en 2035, en una sociedad donde los humanos viven en perfecta armon\u00eda con robots inteligentes en los que conf\u00edan para todo. Los problemas emergen a la superficie cuando un error en la programaci\u00f3n de un superordenador llamado VIKI le lleva a creer que los robots deben tomar las riendas para proteger a la humanidad de s\u00ed misma.\nInteligencia artificial (2001): Un trabajador de Cybertronics Manufacturing adopta a David de forma moment\u00e1nea para, as\u00ed, estudiar su comportamiento. Tanto \u00e9l como su esposa acaban por tratar al ni\u00f1o artificial como a su propio hijo biol\u00f3gico. A pesar del cari\u00f1o que le profesan, David siente la necesidad de escapar de su hogar e iniciar un viaje que le ayude a descubrir a qui\u00e9n pertenece realmente. Ante sus perplejos ojos, se abrir\u00e1 un nuevo mundo oscuro, injusto, violento, insensible.. .. Algo que le resultar\u00e1 dif\u00edcil aceptar. Se pregunta cosas como: \u00bfc\u00f3mo es posible que sienta algo tan real como el amor y que \u00e9l sea artificial?\nHer (2013): Esta pel\u00edcula de Spike Jonze relata la historia de un escritor de cartas quien est\u00e1 solo y a punto de divorciarse. Este personaje lo represent\u00f3 el galardonado Joaquin Phoenix. Este hombre compr\u00f3 un sistema operativo con inteligencia artificial para utilizarlo a fin de complacer a todos los usuarios y adaptarse a sus necesidades. Sin embargo, el resultado es que desarrolla un sentimiento rom\u00e1ntico con Samantha. Quien es la voz femenina del sistema operativo."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "AI box\naprendizaje\naprendizaje autom\u00e1tico\nautomatizaci\u00f3n de los procesos de negocio\nbot conversacional\ncerebro artificial\ncibern\u00e9tica\ncomputaci\u00f3n basada en humanos\ndin\u00e1mica de sistemas\nELIZA\ninteligencia artificial fuerte\ninteligencia computacional\ninteligencia sint\u00e9tica\ninterfaces de usuario\nrazonamiento automatizado\nred neuronal artificial\nWilliam Ross Ashby\nsingularidad tecnol\u00f3gica\nsistema complejo\nsistema din\u00e1mico\nsistema inteligente\nvisi\u00f3n artificial", "subsections": []}, {"name": "Referencias", "text": "\u2191 Rusell, S. J.; Norvig, P. (2004), \u00abInteligencia artificial. Un enfoque moderno\u00bb, Pearson Educaci\u00f3n (Segunda edici\u00f3n) (Madrid), ISBN\u00a0978-84-205-4003-0\u00a0.\n\u2191 , Russell y Norvig, 2009, p.\u00a02.\n\u2191 \u00abAndreas Kaplan; Michael Haenlein (2019) Siri, Siri in my Hand, who's the Fairest in the Land? On the Interpretations, Illustrations and Implications of Artificial Intelligence, Business Horizons, 62(1), 15-25\u00bb. Archivado desde el original el 21 de noviembre de 2018. Consultado el 13 de noviembre de 2018.\u00a0\n\u2191 Schank, Roger C. (1991). \u00abWhere's the AI\u00bb (PDF). AI Magazine (en ingl\u00e9s) 12 (4): 38.\u00a0\n\u2191 Kaplan, Andreas; Haenlein, Michael (2018). Siri, Siri in my Hand, who's the Fairest in the Land? On the Interpretations, Illustrations and Implications of Artificial Intelligence (PDF) (en ingl\u00e9s) 62 (1). Archivado desde el original el 21 de noviembre de 2018. Consultado el 13 de noviembre de 2018.\u00a0\n\u2191 Ferrer Abello (1986). \u00abIntroducci\u00f3n a la Inteligencia Artificial\u00bb.  En Antonio M. Ferrer Abello, ed. Inteligencia Artificial y Sistemas Expertos. Ediciones Ingelek, S.A. p.\u00a07-20. ISBN\u00a084-85831-31-4.\u00a0\n\u2191 a b Rouhiainen, Lasse (2018). Inteligencia Artificial 101 cosas que debes saber hoy sobre nuestro futuro. Alienta. Consultado el 2021.\u00a0\n\u2191 L\u00f3pez Takeyas, Bruno. \u00abIntroducci\u00f3n a la Inteligencia Artificial\u00bb.\u00a0\n\u2191 McCarthy, John (11 de noviembre de 2007). \u00abWhat Is Artificial Intelligence\u00bb (en ingl\u00e9s). Secci\u00f3n \u00abBasic Questions\u00bb. Consultado el 27 de octubre de 2011.\u00a0\n\u2191 Russell y Norvig, 2009.\n\u2191 Bellman, 1978.\n\u2191 Rich y Knight, 1991.\n\u2191 Winston, 1992.\n\u2191 Nilsson, 1998.\n\u2191 CASTILLO, Enrique; GUTI\u00c9RREZ, Jos\u00e9 Manuel; HADI, Ali S. (1997). \u00ab1\u00bb. Sistemas expertos y modelos de redes probabil\u0131sticas. Academia de Ingenier\u0131a. p.\u00a03. Consultado el 16 de noviembre de 2021.\u00a0\n\u2191 Miller Rivera, Lozano (2011). urosario. edu. co/Administracion/documentos/investigacion/laboratori o/miller_2_3. pdf. El papel de las redes bayesianas en la toma de decisiones.. Consultado el 16 de noviembre de 2021.\u00a0\n\u2191 \u00ab\u00bfQu\u00e9 es la Inteligencia Computacional?\u00bb.\u00a0\n\u2191 \u00abWatson y otros sistemas que mejoran nuestras vidas con inteligencia artificial\u00bb. Pinggers. Archivado desde el original el 8 de marzo de 2011. Consultado el 21 de febrero de 2011.\u00a0\n\u2191 Salas, Javier (28 de enero de 2016). \u00abLa inteligencia artificial conquista el \u00faltimo tablero de los humanos\u00bb. El Pa\u00eds.\u00a0\n\u2191 Ortega, Andr\u00e9s (27 de octubre de 2016). \u00abObama y la Inteligencia Artificial\u00bb. p.\u00a0elDiario.es. Consultado el 9 de junio de 2021.\u00a0\n\u2191 \u00abAlpha Go\u00bb.\u00a0\n\u2191 Rodr\u00edguez, Roberto (14 de diciembre de 2017). \u00abAlpha Zero, el programa que revoluciona el ajedrez y puede cambiar el mundo\u00bb. La Vanguardia. Consultado el 21 de mayo de 2021.\u00a0\n\u2191 \u00abAI ThinQ: La plataforma de inteligencia artificial de LG llega a todos sus televisores\u00bb. El Financiero. Consultado el 23 de septiembre de 2021.\u00a0\n\u2191 Berryhill, Heang, Clogher, McBride, Asociaci\u00f3n M\u00e9xicana de Internet (2020). \u00abHola, mundo: La inteligencia artificial y su uso en el sector p\u00fablico.\u00bb. DOCUMENTOS DE TRABAJO DE LA OCDE SOBRE GOBERNANZA P\u00daBLICA. Consultado el 9 de junio de 2021.\u00a0\n\u2191 Jaramillo Arango, Diego Alejandro; Montenegro, Diego Ignacio (17 de diciembre de 2019). \u00abDe la Inteligencia Artificial al juego de los dioses\u00bb. ComHumanitas: revista cient\u00edfica de comunicaci\u00f3n 10 (3): 85-106. ISSN\u00a01390-776X. doi:10.31207/rch.v10i3.210. Consultado el 3 de octubre de 2022.\u00a0\n\u2191 Asimov, Isaac (1989). \u00abC\u00edrculo vicioso\u00bb. Los robots. trad. Domingo Santos. Barcelona: Mart\u00ednez Roca. ISBN\u00a084-270-0906-2.\u00a0\n\u2191 \u00abRiesgos de la inteligencia artificial\u00bb. El Mundo. Consultado el 21 de mayo de 2021.\u00a0\n\u2191 Santos, Josilene C.; Wong, Jeannie Hsiu Ding; Pallath, Vinod; Ng, Kwan Hoong (20 de julio de 2021). \u00abThe perceptions of medical physicists towards relevance and impact of artificial intelligence\u00bb. Physical and Engineering Sciences in Medicine (en ingl\u00e9s). ISSN\u00a02662-4737. doi:10.1007/s13246-021-01036-9. Consultado el 21 de julio de 2021.\u00a0\n\u2191 Barrio Andres, Moises (23 de junio de 2021). \u00abTowards legal regulation of artificial intelligence\u00bb. REVISTA IUS (en ingl\u00e9s) 15 (48). ISSN\u00a01870-2147. doi:10.35487/rius.v15i48.2021.661. Consultado el 30 de agosto de 2021.\u00a0\n\u2191 Resoluci\u00f3n de problemas, resoluci\u00f3n de acertijos, juego y deducci\u00f3n: Russell y Norvig, 2003, c. 3\u20139, Poole, Mackworth y Goebel, 1998, c. 2,3,7,9, Luger y Stubblefield, 2004, c. 3,4,6,8, Nilsson, 1998, c. 7\u201312\n\u2191 Razonamiento incierto: Russell y Norvig, 2003, pp.\u00a0452\u2013644, Poole, Mackworth y Goebel, 1998, pp.\u00a0345\u2013395, Luger y Stubblefield, 2004, pp.\u00a0333\u2013381, Nilsson, 1998, c. 19\n\u2191 Intratabilidad y eficiencia y la explosi\u00f3n combinatoria: Russell y Norvig, 2003, pp.\u00a09, 21\u201322\n\u2191 Evidencia psicol\u00f3gica del razonamiento sub-simb\u00f3lico: Wason\u00a0y Shapiro (1966), Kahneman, Slovic y Tversky (1982), Lakoff\u00a0y N\u00fa\u00f1ez (2000)\n\u2191 Representaci\u00f3n del conocimiento: ACM, 1998, I.2.4, Russell y Norvig, 2003, pp.\u00a0320\u2013363, Poole, Mackworth y Goebel, 1998, pp.\u00a023\u201346, 69\u201381, 169\u2013196, 235\u2013277, 281\u2013298, 319\u2013345, Luger y Stubblefield, 2004, pp.\u00a0227\u2013243, Nilsson, 1998, c. 18\n\u2191 Ingieneria del conocimiento: * Russell y Norvig, 2003, pp.\u00a0260\u2013266, Poole, Mackworth y Goebel, 1998, pp.\u00a0199\u2013233, Nilsson, 1998, c. 17.1\u201317.4\n\u2191 Representaci\u00f3n de categor\u00edas y relaciones: Russell y Norvig, 2003, pp.\u00a0349\u2013354, Poole, Mackworth y Goebel, 1998, pp.\u00a0174\u2013177, Luger y Stubblefield, 2004, pp.\u00a0248\u2013258, Nilsson, 1998, c. 18.3\n\u2191 Representaci\u00f3n de eventos y el tiempo: Russell y Norvig, 2003, pp.\u00a0328\u2013341, Poole, Mackworth y Goebel, 1998, pp.\u00a0281\u2013298, Nilsson, 1998, c. 18.2\n\u2191  Russell y Norvig, 2003, pp.\u00a0341\u2013344, Poole, Mackworth y Goebel, 1998, pp.\u00a0275\u2013277\n\u2191 Planificaci\u00f3n autom\u00e1tica: ACM, 1998, ~I.2.8, Russell y Norvig, 2003, pp.\u00a0375\u2013459, Poole, Mackworth y Goebel, 1998, pp.\u00a0281\u2013316, Luger y Stubblefield, 2004, pp.\u00a0314\u2013329, Nilsson, 1998, c. 10.1\u20132, 22\n\u2191 Planificaci\u00f3n cl\u00e1sica: * Russell y Norvig, 2003, pp.\u00a0375\u2013430, Poole, Mackworth y Goebel, 1998, pp.\u00a0281\u2013315, Luger y Stubblefield, 2004, pp.\u00a0314\u2013329, Nilsson, 1998, c. 10.1\u20132, 22\n\u2191 a b Aprendizaje autom\u00e1tico: ACM, 1998, I.2.6, Russell y Norvig, 2003, pp.\u00a0649\u2013788, Poole, Mackworth y Goebel, 1998, pp.\u00a0397\u2013438, Luger y Stubblefield, 2004, pp.\u00a0385\u2013542, Nilsson, 1998, c. 3.3, 10.3, 17.5, 20\n\u2191 Jordan, M. I.; Mitchell, T. M. (16 de julio de 2015). \u00abMachine learning: Trends, perspectives, and prospects\u00bb. Science (en ingl\u00e9s) 349 (6245): 255-260. Bibcode:2015Sci...349..255J. PMID\u00a026185243. S2CID\u00a0677218. doi:10.1126/science.aaa8415.\u00a0\n\u2191 Procesamiento de lenguaje natural: ACM, 1998, I.2.7, Russell y Norvig, 2003, pp.\u00a0790\u2013831, Poole, Mackworth y Goebel, 1998, pp.\u00a091\u2013104, Luger y Stubblefield, 2004, pp.\u00a0591\u2013632\n\u2191 Aplicaciones del procesamiento de lenguaje natural: Russell y Norvig, 2003, pp.\u00a0840\u2013857, Luger y Stubblefield, 2004, pp.\u00a0623\u2013630\n\u2191 Cambria, Erik; White, Bebo (Mayo de 2014). \u00abJumping NLP Curves: A review of Natural Language Processing Research [Review Article]\u00bb. IEEE Computational Intelligence Magazine (en ingl\u00e9s) 9 (2): 48-57. S2CID\u00a0206451986. doi:10.1109/MCI.2014.2307227.\u00a0\n\u2191 Vincent, James (7 de noviembre de 2019). \u00abOpenAI has published the text-generating AI it said was too dangerous to share\u00bb. The Verge (en ingl\u00e9s). Archivado desde el original el 11 de junio de 2020. Consultado el 11 de junio de 2020.\u00a0\n\u2191 Percepci\u00f3n de la m\u00e1quina: Russell y Norvig, 2003, pp.\u00a0537\u2013581, 863\u2013898, Nilsson, 1998, ~c. 6\n\u2191 Reconocimiento de voz: * ACM, 1998, ~I.2.7 * Russell y Norvig, 2003, pp.\u00a0568\u2013578\n\u2191 Visi\u00f3n computacional: ACM, 1998, I.2.10, Russell y Norvig, 2003, pp.\u00a0863\u2013898, Nilsson, 1998, c. 6\n\u2191 Sadin, \u00c9ric (2021). La inteligencia artificial o el desaf\u00edo del siglo\u00a0: anatom\u00eda de un antihumanismo radical (1\u00aa ed., 1\u00aa reimp edici\u00f3n). Caja Negra. ISBN\u00a0978-987-1622-86-3. OCLC\u00a01193413308. Consultado el 3 de octubre de 2022.\u00a0\n\u2191 Salichs, Miguel A.; Malfaz, Mar\u00eda; Gorostiza, Javi F. (1 de octubre de 2010). \u00abToma de Decisiones en Rob\u00f3tica\u00bb. Revista Iberoamericana de Autom\u00e1tica e Inform\u00e1tica Industrial RIAI 7 (4): 5-16. doi:10.1016/S1697-7912(10)70055-8. Consultado el 21 de marzo de 2016.\u00a0\n\u2191 osmany-yildirim, Osman (26 de marzo de 2020). \u00abThe Effect of Artificial Intelligence on Society\u00bb. Artificial Intelligence (en ingl\u00e9s brit\u00e1nico). Consultado el 26 de marzo de 2020.\u00a0\n\u2191 Cellan-Jones, Rory (20 de octubre de 2016). \u00abStephen Hawking - will AI kill or save?\u00bb. BBC News (en ingl\u00e9s brit\u00e1nico). Consultado el 28 de octubre de 2018.\u00a0\n\u2191 Europasur.es. \u00abLa inteligencia artificial como herramienta de progreso social\u00bb. Consultado el 16 de octubre de 2018.\u00a0\n\u2191 \u00abAI set to exceed human brain power\u00bb (en ingl\u00e9s). CNN. 26 de julio de 2006.\u00a0\n\u2191 \u00abCopyright in the Age of Artificial Intelligence | U.S. Copyright Office\u00bb. www.copyright.gov. Consultado el 22 de mayo de 2020.\u00a0\n\u2191 \u00ab\"expertos en inteligencia artificial en Espa\u00f1a\"\u00bb. cronicaglobal.elespanol.com. Consultado el 22 de mayo de 2020.\u00a0\n\u2191 United States Copyright Office (5 de febrero de 2020). \u00abCopyright in the Age of Artificial Intelligence\u00bb. Library of Congress.\u00a0\n\u2191 \u00abWhy We're Advocating for a Cautious Approach to Copyright and Artificial Intelligence\u00bb. Creative Commons (en ingl\u00e9s estadounidense). 20 de febrero de 2020. Consultado el 22 de mayo de 2020.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Botella, Fernando (2018). Bienvenidos a la revoluci\u00f3n 4.0. Barcelona: Editorial Alienta. ISBN\u00a0978-84-16928-64-4.\u00a0\nKurose, James (2017). Redes de computadoras. Madrid: Pearson Educaci\u00f3n, S.A. ISBN\u00a0978-84-9035-528-2.\u00a0\nMartos Rubio, Ana (2017). Internet 2017. Madrid: Anaya Multimedia. ISBN\u00a0978-84-415-3879-5.\u00a0\nMorozov, Evgeny (2012). El desenga\u00f1o de Internet: los mitos de la libertad en la red. Barcelona: Ediciones Destino. ISBN\u00a0978-84-233-2779-9.\u00a0\nQuerol, Ricardo de (2023). La gran fragmentaci\u00f3n. Barcelona: Arpa Editores. ISBN\u00a0978-84-18741-86-9.\u00a0\nTegmark, Max (2018). Vida 3.0. Barcelona: Editorial Taurus. ISBN\u00a0978-84-306-1962-7.\u00a0\nHarari, Yuval Noah (2022). Homo Deus: Breve historia del ma\u00f1ana. Barcelona: Suma de Letras, S.L. ISBN\u00a0978-84-663-6268-9.\u00a0\nBellman, Richard (1978). An introduction to artificial intelligence: can computers think? (en ingl\u00e9s). San Francisco: Boyd & Fraser Pub. Co. ISBN\u00a0978-0878350667.\u00a0\nNilsson, Nils J. (1998). Artificial Intelligence: A New Synthesis (en ingl\u00e9s) (4.\u00aa edici\u00f3n). San Francisco: Kaufmann. ISBN\u00a0978-1558604674.\u00a0\nRich, Elaine; Knight, Kevin (1991). Artificial intelligence (en ingl\u00e9s) (2.\u00aa edici\u00f3n). New York: McGraw-Hill. ISBN\u00a0978-0070522633.\u00a0\nRussell, Stuart J.; Norvig, Peter Norvig (2009). Artificial intelligence: a modern approach (en ingl\u00e9s) (3.\u00aa edici\u00f3n). Upper Saddle River, N.J.: Prentice Hall. ISBN\u00a00-13-604259-7.\u00a0\nWinston, Patrick Henry (1992). Artificial intelligence (en ingl\u00e9s) (3.\u00aa edici\u00f3n). Reading, Mass.: Addison-Wesley Pub. Co. ISBN\u00a0978-0201533774.\u00a0\nRussell, Stuart J.; Norvig, Peter (2003), Artificial Intelligence: A Modern Approach (en ingl\u00e9s) (2\u00aa edici\u00f3n), Upper Saddle River, New Jersey: Prentice Hall, ISBN\u00a00-13-790395-2\u00a0.\nPoole, David; Mackworth, Alan; Goebel, Randy (1998). Computational Intelligence: A Logical Approach (en ingl\u00e9s). New York: Oxford University Press. ISBN\u00a0978-0-19-510270-3. Archivado desde el original el 26 de julio de 2020. Consultado el 22 de agosto de 2020.\u00a0\nLuger, George; Stubblefield, William (2004). Artificial Intelligence: Structures and Strategies for Complex Problem Solving (en ingl\u00e9s) (5\u00aa edici\u00f3n). Benjamin/Cummings. ISBN\u00a0978-0-8053-4780-7. Archivado desde el original el 26 de julio de 2020. Consultado el 17 de diciembre de 2019.\u00a0\nWason, P. C.; Shapiro, D. (1966). New horizons in psychology (en ingl\u00e9s). Harmondsworth: Penguin. Archivado desde el original el 26 de julio de 2020. Consultado el 18 de noviembre de 2019.\u00a0\nKahneman, Daniel; Slovic, D.; Tversky, Amos (1982). \u00abJudgment under uncertainty: Heuristics and biases\u00bb. Science (en ingl\u00e9s) 185 (4157) (New York: Cambridge University Press). pp.\u00a01124-1131. ISBN\u00a0978-0-521-28414-1. PMID\u00a017835457. S2CID\u00a0143452957. doi:10.1126/science.185.4157.1124.\u00a0\n\u00abACM Computing Classification System: Artificial intelligence\u00bb (en ingl\u00e9s). ACM. 1998. Archivado desde el original el 12 de octubre de 2007. Consultado el 30 de agosto de 2007.\u00a0\nLakoff, George; N\u00fa\u00f1ez, Rafael E. (2000). Where Mathematics Comes From: How the Embodied Mind Brings Mathematics into Being (en ingl\u00e9s). Basic Books. ISBN\u00a0978-0-465-03771-1.\u00a0\nSAS. (2018, 27 septiembre). Inteligencia Artificial: Qu\u00e9 es y Por Qu\u00e9 Importa. https://www.sas.com/es_mx/insights/analytics/what-is-artificial-intelligence.html\nGrupo Iberdrola. (2019, 17 junio). \u00bfSomos conscientes de los retos y principales aplicaciones de la Inteligencia Artificial? Iberdrola. https://www.iberdrola.com/innovacion/que-es-inteligencia-artificial\nOracle. (2021, 13 enero). \u00bfQu\u00e9 es la inteligencia artificial? https://www.oracle.com/mx/artificial-intelligence/what-is-ai/", "subsections": []}, {"name": "Enlaces externos", "text": " Wikilibros alberga un libro o manual sobre Ingenier\u00eda del conocimiento.\nRevista \u00abInteligencia Artificial\u00bb\nP\u00e1gina sobre inteligencia artificial", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Intersecci%C3%B3n_de_conjuntos", "title": "Intersecci\u00f3n de conjuntos", "summary": "A\nB\nA \u2229 B\nEn teor\u00eda de conjuntos, la intersecci\u00f3n de dos (o m\u00e1s) conjuntos es una operaci\u00f3n que resulta en otro conjunto que contiene los elementos comunes a los conjuntos de partida. Por ejemplo, dado el conjunto de los n\u00fameros pares P y el conjunto de los cuadrados C de n\u00fameros naturales, su intersecci\u00f3n es el conjunto de los cuadrados pares.\nP\n=\n{\n2\n,\n4\n,\n6\n,\n8\n,\n10\n,\n\u2026\n}\n{\\displaystyle P=\\{2,4,6,8,10,\\ldots \\}}\nC\n=\n{\n1\n,\n4\n,\n9\n,\n16\n,\n25\n,\n\u2026\n}\n{\\displaystyle C=\\{1,4,9,16,25,\\ldots \\}}\nD\n=\n{\n4\n,\n16\n,\n36\n,\n64\n,\n\u2026\n}\n{\\displaystyle D=\\{4,16,36,64,\\ldots \\}}\nEn otras palabras: C\u00f3mo, por ejemplo, si A = { a, b, c, d, e, f} y B = { a, e, i, o, u}, entonces la intersecci\u00f3n de dichos conjuntos estar\u00e1 formada por todos los elementos que est\u00e9n a la vez en los dos conjuntos, esto es: A\u2229B = { a, e} \nLa intersecci\u00f3n de conjuntos se denota por el s\u00edmbolo \u2229 por lo que D = P \u2229 C.", "sections": [{"name": "\u00cdndice", "text": "1 Definici\u00f3n\n1.1 Generalizaciones\n2 Propiedades\n3 Teor\u00eda axiom\u00e1tica\n4 V\u00e9ase tambi\u00e9n\n5 Referencias\n6 Literatura del tema", "subsections": []}, {"name": "Definici\u00f3n", "text": "Dados dos conjuntos A y B, su intersecci\u00f3n es otro subconjunto cuyos   elementos, necesariamente,   pertenecen a ambos conjunto. A = { \u03c0, c, 8, \u03b3, 5, P} y B = {\u03c9, c, 0, \u0394, 5, R}. Entonces la intersecci\u00f3n es A \u2229 B = {5, c}.\nSean los conjuntos de n\u00fameros naturales C = {n: n es una potencia de 2} y D = {n: n es un cubo}. Su intersecci\u00f3n es C \u2229 D = {n: n es una potencia de 2 y un cubo} = {n: n es una potencia de 2 cuyo exponente es m\u00faltiplo de 3} = {8, 64, 512, ...}.\nSean los conjuntos de n\u00fameros pares e impares. Su intersecci\u00f3n es el conjunto vac\u00edo \u2205, ya que no existe ning\u00fan n\u00famero natural que sea par e impar a la vez.\nCuando la intersecci\u00f3n de dos conjuntos es vac\u00eda, se dice que son disjuntos:\nDos conjuntos A y B se dicen disjuntos si su intersecci\u00f3n es el conjunto vac\u00edo:\nA\n\u2229\nB\n=\n\u2205\n{\\displaystyle A\\cap B=\\varnothing }", "subsections": [{"name": "Generalizaciones", "text": "La intersecci\u00f3n de un n\u00famero finito de conjuntos, superior a dos, se define teniendo en cuenta que, debido a la propiedad asociativa (m\u00e1s abajo), el orden en el que se intersequen los conjuntos es irrelevante:\nA\n1\n\u2229\nA\n2\n\u2229\n\u2026\n\u2229\nA\nn\n=\nA\n1\n\u2229\n(\nA\n2\n\u2229\n(\n\u2026\n(\nA\nn\n\u2212\n1\n\u2229\nA\nn\n)\n\u2026\n)\n{\\displaystyle A_{1}\\cap A_{2}\\cap \\ldots \\cap A_{n}=A_{1}\\cap (A_{2}\\cap (\\ldots (A_{n-1}\\cap A_{n}){\\scriptstyle \\ldots })}\nLa definici\u00f3n m\u00e1s general en teor\u00eda de conjuntos se refiere a una familia de conjuntos, un conjunto cuyos elementos son conjuntos a su vez:\nSea M una familia de conjuntos. Su intersecci\u00f3n \u2229M se define como:\nx\n\u2208\n\u22c2\nM\n\u00a0si para cada\u00a0\nA\n\u2208\nM\n\u00a0se tiene que\u00a0\nx\n\u2208\nA\n{\\displaystyle x\\in \\bigcap M{\\text{ si para cada }}A\\in M{\\text{ se tiene que }}x\\in A}\nDe este modo, la intersecci\u00f3n de un n\u00famero finito de conjuntos es s\u00f3lo un caso particular de esta definici\u00f3n general:\nA \u2229 B = \u2229M\nM = {A, B}\nA1 \u2229 ... \u2229 An = \u2229M\nM = {A1, ..., An}\nLa intersecci\u00f3n general de conjuntos se denota de diversas maneras:v\n\u22c2\nM\n=\n\u22c2\nA\n\u2208\nM\nA\n=\n\u22c2\ni\n\u2208\nI\nA\ni\n\u00a0,\n{\\displaystyle \\bigcap M=\\bigcap _{A\\in M}A=\\bigcap _{i\\in I}A_{i}{\\text{ ,}}}\ndonde esta \u00faltima se aplica en el caso de que utilicemos un conjunto \u00edndice, definiendo M como {Ai: i \u2208 I}."}]}, {"name": "Propiedades", "text": "Art\u00edculo principal:\nDe la definici\u00f3n de intersecci\u00f3n puede deducirse directamente:\nIdempotencia. La intersecci\u00f3n de un conjunto A consigo mismo es el propio A\u00a0:\nA\n\u2229\nA\n=\nA\n{\\displaystyle A\\cap A=A}\nLa intersecci\u00f3n de A y B es un subconjunto de ambos:\nA\n\u2229\nB\n\u2286\nA\n,\nB\n{\\displaystyle A\\cap B\\subseteq A,B}\nLa intersecci\u00f3n de un conjunto B con un conjunto A que lo contenga, deja a B inalterado:\nB\n\u2286\nA\n\u2192\nA\n\u2229\nB\n=\nB\n{\\displaystyle B\\subseteq A\\rightarrow A\\cap B=B}\nLa intersecci\u00f3n de conjuntos poseen tambi\u00e9n propiedades similares a las operaciones con n\u00fameros:\nPropiedad asociativa. La intersecci\u00f3n de los conjuntos A y B \u2229 C es igual a la intersecci\u00f3n de los conjuntos A \u2229 B y C\u00a0:\n(\nA\n\u2229\nB\n)\n\u2229\nC\n=\nA\n\u2229\n(\nB\n\u2229\nC\n)\n{\\displaystyle (A\\cap B)\\cap C=A\\cap (B\\cap C)}\nPropiedad conmutativa. La intersecci\u00f3n de los conjuntos A y B es igual a la intersecci\u00f3n de los conjuntos B y A\u00a0:\nA\n\u2229\nB\n=\nB\n\u2229\nA\n{\\displaystyle A\\cap B=B\\cap A}\nElemento absorbente. La intersecci\u00f3n de un conjunto A con el conjunto vac\u00edo \u2205 es \u2205:\nA\n\u2229\n\u2205\n=\n\u2205\n{\\displaystyle A\\cap \\varnothing =\\varnothing }\nTodas estas propiedades se deducen de propiedades an\u00e1logas para la conjunci\u00f3n l\u00f3gica. \nEn relaci\u00f3n con la operaci\u00f3n de uni\u00f3n existen unas leyes distributivas:\nPropiedad distributiva\nA \u222a (B \u2229 C) = (A \u222a B) \u2229 (A \u222a C), y por tanto:\nA \u222a (A \u2229 B) = A\nA \u2229 (B \u222a C) = (A \u2229 B) \u222a (A \u2229 C), y por tanto:\nA \u2229 (A \u222a B) = A\nSe cumple que \u2205 \u2282 A\u2229B\u2229C \u2282 A\u2229B \u2282 A \u2282 A\u222aB \u2282 A\u222aB\u222aC \u2282 \u03a9 donde \u03a9 es el conjunto universal.[1]\u200b", "subsections": []}, {"name": "Teor\u00eda axiom\u00e1tica", "text": "En las teor\u00edas axiom\u00e1ticas de conjuntos usuales, como ZFC o NBG, la existencia de la intersecci\u00f3n de una familia de conjuntos no se postula de manera independiente, sino que se demuestra como consecuencia del esquema axiom\u00e1tico de reemplazo.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "\u00c1lgebra de conjuntos\nConjunto\nTeor\u00eda de conjuntos\nUni\u00f3n de conjuntos", "subsections": []}, {"name": "Referencias", "text": "\u2191 Rojo. \u00c1lgebra I", "subsections": []}, {"name": "Literatura del tema", "text": "Dorronsoro, Jos\u00e9; Hern\u00e1ndez, Eugenio (1996). N\u00fameros, grupos y anillos. Addison-Wesley/Universidad Aut\u00f3noma de Madrid. ISBN\u00a084-7829-009-5.\u00a0\nLipschutz, Seymour (1991). Teor\u00eda de conjuntos y temas afines. McGraw-Hill. ISBN\u00a0968-422-926-7.\u00a0\nYu. M. Korshunov. Fundamentos matem\u00e1ticos de la cibern\u00e9tica. Editorial Mir, Mosc\u00fa s/f.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/IronPython", "title": "IronPython", "summary": "IronPython es una implementaci\u00f3n del int\u00e9rprete Python (CPython) escrita totalmente en C#. El proyecto trata de seguir al pie de la letra el lenguaje Python, como implementaci\u00f3n de Python que es. Esto hace que cualquier programa escrito en Python pueda ser interpretado con IronPython, con las ventajas a\u00f1adidas de poder usar las bibliotecas de la plataforma .NET y poder compilar el c\u00f3digo a bytecode\nExiste un lenguaje de programaci\u00f3n muy similar a Python llamado Boo. Es un lenguaje claramente influenciado por Python dada la similitud de su sintaxis. Sin embargo, Boo no es realmente una implementaci\u00f3n de Python, sino un nuevo lenguaje independiente con una sintaxis muy parecida a la de Python pero que hace uso de las API de .NET. Por tanto, los programas escritos en Python no se pueden ejecutar con el int\u00e9rprete de Boo, mientras que IronPython est\u00e1 creado precisamente para ello.", "sections": [{"name": "Caracter\u00edsticas de IronPython", "text": "Modo interactivo, heredado de Python. Al igual que en Python, consiste en un shell que interpreta las \u00f3rdenes de forma interactiva.\nSoporte completo de la sintaxis y las bibliotecas (API) de Python.\nIntegraci\u00f3n con la plataforma .NET y sus bibliotecas.\nCompilaci\u00f3n del c\u00f3digo a bytecode, de forma que puede usarse en cualquier otro lenguaje soportado por la plataforma .NET.\nIntegraci\u00f3n del int\u00e9rprete de IronPython en cualquier aplicaci\u00f3n .NET para extender sus funcionalidades de forma sencilla.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Python\nJython, implementaci\u00f3n de Python en Java", "subsections": []}, {"name": "Enlaces externos", "text": "P\u00e1gina oficial de IronPython\nRepositorio GitHub de IronPython", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/JavaScript", "title": "JavaScript", "summary": "[\n]\nJavaScript (abreviado com\u00fanmente JS) es un lenguaje de programaci\u00f3n interpretado, dialecto del est\u00e1ndar ECMAScript. Se define como orientado a objetos,[2]\u200b basado en prototipos, imperativo, d\u00e9bilmente tipado y din\u00e1mico.\nSe utiliza principalmente del  lado del cliente, implementado como parte de un navegador web permitiendo mejoras en la interfaz de usuario y p\u00e1ginas web din\u00e1micas[3]\u200b y JavaScript del lado del servidor (Server-side JavaScript o SSJS). Su uso en aplicaciones externas a la web, por ejemplo en documentos PDF, aplicaciones de escritorio (mayoritariamente widgets) es tambi\u00e9n significativo.\nDesde 2012, todos los navegadores modernos soportan completamente ECMAScript 5.1, una versi\u00f3n de JavaScript. Los navegadores m\u00e1s antiguos soportan por lo menos ECMAScript 3. La sexta edici\u00f3n se liber\u00f3 en julio de 2015.[4]\u200b\nJavaScript se dise\u00f1\u00f3 con una sintaxis similar a C++ y Java,[5]\u200b[6]\u200b aunque adopta nombres y convenciones del lenguaje de programaci\u00f3n Java. Sin embargo, Java y JavaScript tienen sem\u00e1nticas y prop\u00f3sitos diferentes. Su relaci\u00f3n es puramente comercial, tras la compra del creador de Java (Sun Microsystems) de Netscape Navigator (creador de LiveScript) y el cambio de nombre del lenguaje de programaci\u00f3n.\nTodos los navegadores modernos interpretan el c\u00f3digo JavaScript integrado en las p\u00e1ginas web. Para interactuar con una p\u00e1gina web se provee al lenguaje JavaScript de una implementaci\u00f3n del Document Object Model (DOM). Javascript es el \u00fanico lenguaje de programaci\u00f3n que entienden de forma nativa los navegadores.\nTradicionalmente se ven\u00eda utilizando en p\u00e1ginas web HTML para realizar operaciones y \u00fanicamente en el marco de la aplicaci\u00f3n cliente, sin acceso a funciones del servidor. Actualmente es ampliamente utilizado para enviar y recibir informaci\u00f3n del servidor junto con ayuda de otras tecnolog\u00edas como AJAX. JavaScript se interpreta en el agente de usuario al mismo tiempo que las sentencias van descarg\u00e1ndose junto con el c\u00f3digo HTML.\nDesde el lanzamiento en junio de 1997 del est\u00e1ndar ECMAScript 1, han existido las versiones 2, 3 y 5, que es la m\u00e1s usada actualmente (la 4 se abandon\u00f3[7]\u200b). En junio de 2015 se cerr\u00f3 y public\u00f3 la versi\u00f3n ECMAScript 6.[8]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n1.1 Nacimiento de JavaScript\n1.2 JavaScript en el lado servidor\n1.3 Desarrollos posteriores\n2 Caracter\u00edsticas\n2.1 Imperativo y estructurado\n2.2 Din\u00e1micos\n2.3 Funcional\n2.4 Protot\u00edpico\n2.5 Otras caracter\u00edsticas\n2.6 Extensiones espec\u00edficas del fabricante\n3 Sintaxis y sem\u00e1ntica\n3.1 Ejemplos sencillos\n3.2 Ejemplos m\u00e1s avanzados\n4 Uso en p\u00e1ginas web\n4.1 Ejemplo de script\n4.2 Consideraciones acerca de la compatibilidad\n4.3 Accesibilidad\n5 Seguridad\n5.1 Vulnerabilidades cross-site\n6 Herramientas de desarrollo\n7 V\u00e9ase tambi\u00e9n\n8 Referencias\n9 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "", "subsections": [{"name": "Nacimiento de JavaScript", "text": "JavaScript fue desarrollado originalmente por Brendan Eich de Netscape con el nombre de Mocha, el cual fue renombrado posteriormente a LiveScript, para finalmente quedar como JavaScript. El cambio de nombre coincidi\u00f3 aproximadamente con el momento en que Netscape agreg\u00f3 compatibilidad con la tecnolog\u00eda Java en su navegador web Netscape Navigator en la versi\u00f3n 2002 en diciembre de 1995. La denominaci\u00f3n produjo confusi\u00f3n, dando la impresi\u00f3n de que el lenguaje es una prolongaci\u00f3n de Java, y fue considerada por muchos como una estrategia de mercadotecnia de Netscape para obtener prestigio e innovar en el \u00e1mbito de los nuevos lenguajes de programaci\u00f3n web.[9]\u200b[10]\u200b\n\u00abJAVASCRIPT\u00bb es una marca registrada de Oracle Corporation.[11]\u200b Es usada con licencia por los productos creados por Netscape Communications y entidades actuales como la Fundaci\u00f3n Mozilla.[12]\u200b[13]\u200b\nMicrosoft dio como nombre a su dialecto de JavaScript \u00abJScript\u00bb, para evitar problemas relacionadas con la marca. JScript fue adoptado en la versi\u00f3n 3.0 de Internet Explorer, liberado en agosto de 1996, e incluy\u00f3 compatibilidad con el Efecto 2000 con las funciones de fecha, una diferencia de los que se basaban en ese momento. Los dialectos pueden parecer tan similares que los t\u00e9rminos \u00abJavaScript\u00bb y \u00abJScript\u00bb a menudo se utilizan indistintamente, pero la especificaci\u00f3n de JScript es incompatible con la de ECMA en muchos aspectos.\nPara evitar estas incompatibilidades, el World Wide Web Consortium dise\u00f1\u00f3 el est\u00e1ndar Document Object Model (DOM, o Modelo de Objetos del Documento en espa\u00f1ol), que incorporan Konqueror, las versiones 6 de Internet Explorer y Netscape Navigator, Opera la versi\u00f3n 7, Mozilla Application Suite y Mozilla Firefox desde su primera versi\u00f3n.[cita\u00a0requerida]\nEn 1997 los autores propusieron[14]\u200b JavaScript para que fuera adoptado como est\u00e1ndar de la European Computer Manufacturers 'Association ECMA, que a pesar de su nombre no es europeo sino internacional, con sede en Ginebra. En junio de 1997 fue adoptado como un est\u00e1ndar ECMA, con el nombre de ECMAScript. Poco despu\u00e9s tambi\u00e9n como un est\u00e1ndar ISO."}, {"name": "JavaScript en el lado servidor", "text": "Netscape introdujo una implementaci\u00f3n de script del lado del servidor con Netscape Enterprise Server, lanzada en diciembre de 1994 (poco despu\u00e9s del lanzamiento de JavaScript para navegadores web).[15]\u200b[16]\u200b\nA partir de mediados de la d\u00e9cada de los 2000, ha habido una proliferaci\u00f3n de implementaciones de JavaScript para el lado servidor. Node.js es uno de los notables ejemplos de JavaScript en el lado del servidor, siendo usado en proyectos importantes.[17]\u200b[18]\u200b"}, {"name": "Desarrollos posteriores", "text": "JavaScript se ha convertido en uno de los lenguajes de programaci\u00f3n m\u00e1s populares en internet y m\u00e1s usados. Al principio, sin embargo, muchos desarrolladores renegaban del lenguaje porque el p\u00fablico al que va dirigido lo formaban publicadores de art\u00edculos y dem\u00e1s aficionados, entre otras razones.[19]\u200b La llegada de Ajax devolvi\u00f3 JavaScript a la fama y atrajo la atenci\u00f3n de muchos otros programadores. Como resultado de esto hubo una proliferaci\u00f3n de un conjunto de frameworks y bibliotecas de \u00e1mbito general, mejorando las pr\u00e1cticas de programaci\u00f3n con JavaScript, y aumentado el uso de JavaScript fuera de los navegadores web, como se ha visto con la proliferaci\u00f3n de entornos JavaScript del lado del servidor.\nEn enero de 2009, el proyecto CommonJS fue inaugurado con el objetivo de especificar una biblioteca para uso de tareas comunes principalmente para el desarrollo fuera del navegador web.[20]\u200b\nEn junio de 2015 se cerr\u00f3 y public\u00f3 el est\u00e1ndar ECMAScript 6[21]\u200b[22]\u200b con un soporte irregular entre navegadores[23]\u200b y que dota a JavaScript de caracter\u00edsticas avanzadas que se echaban de menos y que son de uso habitual en otros lenguajes como, por ejemplo, m\u00f3dulos para organizaci\u00f3n del c\u00f3digo, verdaderas clases para programaci\u00f3n orientada a objetos, expresiones de flecha, iteradores, generadores o promesas para programaci\u00f3n as\u00edncrona.\nLa versi\u00f3n 7 de ECMAScript se conoce como ECMAScript 2016,[24]\u200b y es la \u00faltima versi\u00f3n disponible, publicada en junio de 2016. Se trata de la primera versi\u00f3n para la que se usa un nuevo procedimiento de publicaci\u00f3n anual y un proceso de desarrollo abierto.[25]\u200b"}]}, {"name": "Caracter\u00edsticas", "text": "Las siguientes caracter\u00edsticas son comunes a todas las implementaciones que se ajustan al est\u00e1ndar ECMAScript, a menos que especifique expl\u00edcitamente en caso contrario.", "subsections": [{"name": "Imperativo y estructurado", "text": "JavaScript es compatible con gran parte de la estructura de programaci\u00f3n de C (por ejemplo, sentencias if, bucles for, sentencias switch, etc.). Con una salvedad, en parte: en C, el \u00e1mbito de las variables alcanza al bloque en el cual fueron definidas; sin embargo JavaScript no es compatible con esto, puesto que el \u00e1mbito de las variables es el de la funci\u00f3n en la cual fueron declaradas. Esto cambia con la versi\u00f3n de ECMAScript 2015, ya que a\u00f1ade compatibilidad con block scoping por medio de la palabra clave let. Como en C, JavaScript hace distinci\u00f3n entre expresiones y sentencias. Una diferencia sint\u00e1ctica con respecto a C es la inserci\u00f3n autom\u00e1tica de punto y coma, es decir, en JavaScript los puntos y coma que finalizan una sentencia pueden ser omitidos.[26]\u200b"}, {"name": "Din\u00e1micos", "text": ""}, {"name": "Funcional", "text": ""}, {"name": "Protot\u00edpico", "text": ""}, {"name": "Otras caracter\u00edsticas", "text": ""}, {"name": "Extensiones espec\u00edficas del fabricante", "text": "JavaScript se encuentra oficialmente bajo la organizaci\u00f3n de Mozilla Foundation, y peri\u00f3dicamente se a\u00f1aden nuevas caracter\u00edsticas del lenguaje. Sin embargo, solo algunos motores JavaScript son compatibles con estas caracter\u00edsticas:\nLas propiedades get y set (tambi\u00e9n compatibles con WebKit, Opera,[36]\u200b ActionScript y Rhino).[37]\u200b\nCl\u00e1usulas catch condicionales.\nProtocolo iterador adoptado de Python.\nCorrutinas tambi\u00e9n adoptadas de Python.\nGeneraci\u00f3n de listas y expresiones por comprensi\u00f3n tambi\u00e9n adoptado de Python.\nEstablecer el \u00e1mbito a bloque a trav\u00e9s de la palabra clave let.\nDesestructuraci\u00f3n de arrays y objetos (forma limita de emparejamiento de patrones).\nExpresiones concretas en funciones (function(args) expr).\nECMAScript para XML (E4X), una extensi\u00f3n que a\u00f1ade compatibilidad nativa XML a ECMAScript."}]}, {"name": "Sintaxis y sem\u00e1ntica", "text": "Art\u00edculo principal:\nla \u00faltima versi\u00f3n del lenguaje es ECMAScript 2016 publicada a finales del, 17 de junio del a\u00f1o 2016.[38]\u200b", "subsections": [{"name": "Ejemplos sencillos", "text": "Las variables en JavaScript se definen usando la palabra clave var:[39]\u200b\nvar\nx\n;\n// define la variable x, aunque no tiene ning\u00fan valor asignado por defecto\ny\n=\n2\n// define la variable y y le asigna el valor 2 a ella\nA considerar los comentarios en el ejemplo de arriba, los cuales van precedidos con 2 barras diagonales.\nNo existen funcionalidades para I/O incluidas en el lenguaje; el entorno de ejecuci\u00f3n ya lo proporciona. La especificaci\u00f3n ECMAScript en su edici\u00f3n 5.1 hace menci\u00f3n:[40]\u200b\n... en efecto, no existen provisiones en esta especificaci\u00f3n para entrada de datos externos o salida para resultados computados.\nSin embargo, la mayor\u00eda de los entornos de ejecuci\u00f3n tiene un objeto[41]\u200b llamado console que puede ser usado para imprimir por el flujo de salida de la consola de depuraci\u00f3n. He aqu\u00ed un simple programa que imprime \u201cHello world!\u201d:\nconsole\n.\nlog\n(\n\"Hello world!\"\n);\nUna funci\u00f3n recursiva:\nfunction\nfactorial\nn\n)\n{\nif\n===\n0\nreturn\n1\n}\n*\n-\nEjemplos de funci\u00f3n an\u00f3nima (o funci\u00f3n lambda) y una clausura:\ndisplayClosure\n()\ncount\n++\n};\ninc\n();\n// devuelve 1\n// devuelve 2\n// devuelve 3\nLas expresiones con invocaci\u00f3n autom\u00e1tica permiten a las funciones pasarle variables por par\u00e1metro dentro de sus propias clausuras.\nv\ngetValue\n;};\n}(\n));\n// 1"}, {"name": "Ejemplos m\u00e1s avanzados", "text": "El siguiente c\u00f3digo muestra varias caracter\u00edsticas de JavaScript.\n/* Busca el m\u00ednimo com\u00fan m\u00faltiplo (MCM) de dos n\u00fameros */\nLCMCalculator\n,\n// funci\u00f3n constructora\ncheckInt\n// funci\u00f3n interior\n%\n!==\nthrow\nnew\nTypeError\n+\n\" no es un entero\"\n// lanza una excepci\u00f3n\nthis\na\n// puntos y coma son opcionales\nb\n// El prototipo de las instancias de objeto creados por el constructor es el de la propiedad \u201cprototype\u201d del constructor.\nprototype\n// objeto definido como literal\nconstructor\n:\n// cuando reasignamos un prototipo, establecemos correctamente su propiedad constructor\ngcd\n// m\u00e9todo que calcula el m\u00e1ximo com\u00fan divisor\n// Algoritmo de Euclides:\nMath\nabs\n),\nt\n<\n// intercambiamos variables\nwhile\n// Solo necesitamos calcular el MCD una vez, por lo tanto 'redefinimos' este m\u00e9todo.\n// (Realmente no es una redefinici\u00f3n\u2014est\u00e1 definida en la propia instancia, por lo tanto\n// this.gcd se refiere a esta 'redefinici\u00f3n' en vez de a LCMCalculator.prototype.gcd).\n// Adem\u00e1s, 'gcd' === \"gcd\", this['gcd'] === this.gcd\n[\n'gcd'\n]\n},\n// Los nombres de las propiedades del objeto pueden ser especificados con cadenas delimitadas con comillas simples (') o dobles (\u201c).\n\"lcm\"\n// Los nombres de las variables no colisionan con las propiedades del objeto. Por ejemplo: |lcm| no es |this.lcm|.\n// No usar |this.a * this.b| para evitar problemas con c\u00e1lculos en coma flotante.\nlcm\n/\n// S\u00f3lo necesitamos calcular MCM una vez, por lo tanto \"redefinimos\" este m\u00e9todo.\ntoString\n\"LCMCalculator: a = \"\n\", b = \"\n// Definimos una funci\u00f3n gen\u00e9rica para imprimir un resultado; esta implementaci\u00f3n solo funciona en los navegadores web\noutput\ndocument\nbody\nappendChild\ncreateTextNode\ncreateElement\n'br'\n// Nota: Los m\u00e9todos.map() y.forEach() del prototipo Array est\u00e1n definidos en JavaScript 1.6.\n// Estos m\u00e9todos son usados aqu\u00ed para demostrar la naturaleza funcional inherente del lenguaje.\n[[\n25\n55\n],\n21\n56\n22\n58\n28\n]].\nmap\npair\n// construcci\u00f3n literal de un Array + funci\u00f3n de mapeo.\n]);\n}).\nsort\n// ordenamos la colecci\u00f3n por medio de esta funci\u00f3n\nforEach\nobj\n\", gcd = \"\n\", lcm = \"\n());\n});\nEl siguiente ejemplo muestra la salida que deber\u00eda ser mostrada en la ventana de un navegador."}]}, {"name": "Uso en p\u00e1ginas web", "text": "V\u00e9anse tambi\u00e9n:\n y \nEl uso m\u00e1s com\u00fan de JavaScript es escribir funciones embebidas o incluidas en p\u00e1ginas HTML y que interact\u00faan con el Document Object Model (DOM o Modelo de Objetos del Documento) de la p\u00e1gina. Algunos ejemplos sencillos de este uso son:\nCargar nuevo contenido para la p\u00e1gina o enviar datos al servidor a trav\u00e9s de AJAX sin necesidad de recargar la p\u00e1gina (por ejemplo, una red social puede permitir al usuario enviar actualizaciones de estado sin salir de la p\u00e1gina).\nAnimaci\u00f3n de los elementos de p\u00e1gina, hacerlos desaparecer, cambiar su tama\u00f1o, moverlos, etc.\nContenido interactivo, por ejemplo, juegos y reproducci\u00f3n de audio y v\u00eddeo.\nValidaci\u00f3n de los valores de entrada de un formulario web para asegurarse de que son aceptables antes de ser enviado al servidor.\nTransmisi\u00f3n de informaci\u00f3n sobre los h\u00e1bitos de lectura de los usuarios y las actividades de navegaci\u00f3n a varios sitios web. Las p\u00e1ginas Web con frecuencia lo hacen para hacer an\u00e1lisis web, seguimiento de anuncios, la personalizaci\u00f3n o para otros fines.[42]\u200b\nDado que el c\u00f3digo JavaScript puede ejecutarse localmente en el navegador del usuario (en lugar de en un servidor remoto), el navegador puede responder a las acciones del usuario con rapidez, haciendo una aplicaci\u00f3n m\u00e1s sensible. Por otra parte, el c\u00f3digo JavaScript puede detectar acciones de los usuarios que HTML por s\u00ed sola no puede, como pulsaciones de teclado. Las aplicaciones como Gmail se aprovechan de esto: la mayor parte de la l\u00f3gica de la interfaz de usuario est\u00e1 escrita en JavaScript, enviando peticiones al servidor (por ejemplo, el contenido de un mensaje de correo electr\u00f3nico). La tendencia cada vez mayor por el uso de la programaci\u00f3n Ajax explota de manera similar esta t\u00e9cnica.\nUn motor de JavaScript (tambi\u00e9n conocido como int\u00e9rprete de JavaScript o implementaci\u00f3n JavaScript) es un int\u00e9rprete que interpreta el c\u00f3digo fuente de JavaScript y ejecuta la secuencia de comandos en consecuencia. El primer motor de JavaScript fue creado por Brendan Eich en Netscape Communications Corporation, para el navegador web Netscape Navigator. El motor, denominado SpiderMonkey, est\u00e1 implementado en C. Desde entonces, ha sido actualizado (en JavaScript 1.5) para cumplir con el ECMA-262 edici\u00f3n 3. El motor Rhino, creado principalmente por Norris Boyd (antes de Netscape, ahora en Google) es una implementaci\u00f3n de JavaScript en Java. Rhino, como SpiderMonkey, es compatible con el ECMA-262 edici\u00f3n 3.\nUn navegador web es, con mucho, el entorno de acogida m\u00e1s com\u00fan para JavaScript. Los navegadores web suelen crear objetos no nativos, dependientes del entorno de ejecuci\u00f3n, para representar el Document Object Model (DOM) en JavaScript. El servidor web es otro entorno com\u00fan de servicios. Un servidor web JavaScript suele exponer sus propios objetos para representar objetos de petici\u00f3n y respuesta HTTP, que un programa JavaScript podr\u00eda entonces interrogar y manipular para generar din\u00e1micamente p\u00e1ginas web.\nDebido a que JavaScript es el \u00fanico lenguaje por el que los m\u00e1s populares navegadores comparten su apoyo, se ha convertido en un lenguaje al que muchos frameworks en otros lenguajes compilan, a pesar de que JavaScript no fue dise\u00f1ado para tales prop\u00f3sitos.[43]\u200b A pesar de las limitaciones de rendimiento inherentes a su naturaleza din\u00e1mica, el aumento de la velocidad de los motores de JavaScript ha hecho de este lenguaje un entorno para la compilaci\u00f3n sorprendentemente factible.", "subsections": [{"name": "Ejemplo de script", "text": "A continuaci\u00f3n se muestra un breve ejemplo de una p\u00e1gina web (ajust\u00e1ndose a las normas del est\u00e1ndar para HTML5) que utiliza JavaScript para el manejo del DOM:\n<!DOCTYPE html>\n<\nhtml\n>\nhead\nmeta\ncharset\n\"utf-8\"\ntitle\n</\nbody\nh1\nid\n\"header\"\nscript\n'Hola Mundo!'\nh1\ngetElementById\n'header'\n// contiene la referencia al tag <h1>\ngetElementsByTagName\n'h1'\n)[\n];\n// accediendo al mismo elemento <h1>\nnoscript"}, {"name": "Consideraciones acerca de la compatibilidad", "text": "Debido a que JavaScript se ejecuta en entornos muy variados, una parte importante de las pruebas y la depuraci\u00f3n es probar y verificar que el c\u00f3digo JavaScript funciona correctamente en m\u00faltiples navegadores.\nLa interfaz DOM para acceder y manipular p\u00e1ginas web no es parte del est\u00e1ndar ECMAScript, o de la propia JavaScript. El DOM es definido por los esfuerzos de estandarizaci\u00f3n del W3C, una organizaci\u00f3n independiente. En la pr\u00e1ctica, las implementaciones que hacen de JavaScript los distintos navegadores difieren tanto entre ellos mismos como de las normas del est\u00e1ndar.\nPara hacer frente a estas diferencias, los autores de JavaScript pudieron ser capaces de escribir c\u00f3digo compatible con los est\u00e1ndares que tambi\u00e9n fuera capaz de ejecutarse correctamente en la mayor\u00eda de los navegadores, o en su defecto, que al menos se pudiera escribir c\u00f3digo capaz de comprobar la presencia de ciertas funcionalidades del navegador y que se comportase de manera diferente si no se dispusiese de dicha funcionalidad.[44]\u200b Existen casos en los que dos navegadores pueden llegar a implementar la misma caracter\u00edstica, pero con un comportamiento diferente, hecho que a los programadores les puede resultar de ayuda para detectar qu\u00e9 navegador se est\u00e1 ejecutando en ese instante y as\u00ed cambiar el comportamiento de su escritura para que coincida.[45]\u200b[46]\u200b Los programadores tambi\u00e9n suelen utilizar bibliotecas o herramientas que tengan en cuenta las diferencias entre navegadores.\nAdem\u00e1s, los scripts pueden no funcionar para algunos usuarios. Por ejemplo, un usuario puede:\nUtilizar un navegador antiguo sin compatibilidad completa con la API DOM,\nUtilizar un navegador PDA o tel\u00e9fono m\u00f3vil que no puede ejecutar JavaScript\nTener la ejecuci\u00f3n de JavaScript deshabilitada, como precauci\u00f3n de seguridad,\nUtilizar un navegador de voz debido a, por ejemplo, una discapacidad visual.\nPara apoyar a estos usuarios, los programadores web suelen crear p\u00e1ginas que sean tolerante de fallos seg\u00fan el agente de usuario (tipo de navegador) que no admita JavaScript. En particular, la p\u00e1gina debe seguir siendo \u00fatil aunque sin las caracter\u00edsticas adicionales que JavaScript habr\u00eda a\u00f1adido. Un enfoque alternativo que muchos encuentran preferible es primero crear contenido utilizando las tecnolog\u00edas que funcionan en todos los navegadores, y mejorar el contenido para los usuarios que han permitido JavaScript."}, {"name": "Accesibilidad", "text": "Suponiendo que el usuario no haya desactivado la ejecuci\u00f3n de c\u00f3digo JavaScript, en el lado del cliente JavaScript debe ser escrito tanto con el prop\u00f3sito de mejorar las experiencias de los visitantes con discapacidad visual o f\u00edsica, como el de evitar ocultar informaci\u00f3n a estos visitantes.[47]\u200b\nLos lectores de pantalla, utilizados por los ciegos y deficientes visuales, pueden ser tenidos en cuenta por JavaScript y as\u00ed poder acceder y leer los elementos DOM de la p\u00e1gina. El c\u00f3digo HTML escrito debe ser lo m\u00e1s conciso, navegable y sem\u00e1nticamente rico posible, tanto si JavaScript se ejecuta como si no.\nJavaScript no deber\u00eda de ser totalmente dependiente de los eventos de rat\u00f3n del navegador y deber\u00eda ser accesible para aquellos usuarios que no quieran hacer uso del rat\u00f3n (inform\u00e1tica) para navegar o que opten por utilizar solamente el teclado.\nHay eventos independientes del dispositivo, tales como onfocus y onchange que son preferibles en la mayor\u00eda de los casos.[47]\u200b\nJavaScript no debe ser utilizado para crear confusi\u00f3n o desorientaci\u00f3n al usuario web. Por ejemplo, modificar o desactivar la funcionalidad normal del navegador, como cambiar la forma en que el bot\u00f3n de navegar hacia atr\u00e1s o el evento de actualizaci\u00f3n se comportan, son pr\u00e1cticas que generalmente son mejores evitar. Igualmente, desencadenar eventos que el usuario puede no tener en cuenta reduce la sensaci\u00f3n de control del usuario y provoca cambios inesperados al contenido de la p\u00e1gina.[48]\u200b\nA menudo, el proceso de dotar a una p\u00e1gina web compleja el mayor grado accesibilidad posible, se convierte en un problema no trivial donde muchos temas se acaban llevando al debate y a la opini\u00f3n, siendo necesario el compromiso de todos hasta el final. Sin embargo, los agentes de usuario y las tecnolog\u00edas de apoyo a personas con discapacidad est\u00e1n en constante evoluci\u00f3n y nuevas directrices e informaci\u00f3n al respecto siguen public\u00e1ndose en la web.[47]\u200b"}]}, {"name": "Seguridad", "text": "V\u00e9ase tambi\u00e9n:\nJavaScript y el DOM permite que existan programadores que hagan un uso inapropiado para introducir scripts que ejecuten c\u00f3digo con contenido malicioso sin el consentimiento del usuario y que pueda as\u00ed comprometer su seguridad.\nLos desarrolladores de los navegadores tienen en cuenta este riesgo utilizando dos restricciones.\nEn primer lugar, los scripts se ejecutan en un sandbox en el que solo se pueden llevar a cabo acciones relacionadas con la web, no con tareas de programaci\u00f3n de prop\u00f3sito general, como la creaci\u00f3n de archivos.\nEn segundo lugar, est\u00e1 limitada por la pol\u00edtica del mismo origen: los scripts de un sitio web no tienen acceso a la informaci\u00f3n enviada a otro sitio web (de otro dominio) como pudiera ser nombres de usuario, contrase\u00f1as o cookies. La mayor\u00eda de los fallos de seguridad de JavaScript est\u00e1n relacionados con violaciones de cualquiera de estas dos restricciones.\nExisten proyectos como AdSafe o Secure ECMA script (SES) que proporcionan mayores niveles de seguridad, en especial en el c\u00f3digo creado por terceros (tales como los anuncios).[49]\u200b[50]\u200b\nLa Pol\u00edtica de Contenido Seguro (CSP) es el m\u00e9todo principal previsto para garantizar que solo c\u00f3digo de confianza pueda ser ejecutado en una p\u00e1gina web.", "subsections": [{"name": "Vulnerabilidades cross-site", "text": "Art\u00edculos principales:\nUn problema com\u00fan de seguridad en JavaScript es el cross-site scripting o XSS, una violaci\u00f3n de la pol\u00edtica de mismo origen. Las vulnerabilidades XSS permiten a un atacante inyectar c\u00f3digo JavaScript en p\u00e1ginas web visitadas por el usuario. Una de esas webs podr\u00eda ser la de un banco, pudiendo el atacante acceder a la aplicaci\u00f3n de banca con los privilegios de la v\u00edctima, lo que podr\u00eda revelar informaci\u00f3n secreta o transferir dinero sin la autorizaci\u00f3n de la v\u00edctima.\nUna soluci\u00f3n para las vulnerabilidades XSS es utilizar HTML escaping cuando se muestre informaci\u00f3n de fuentes no confiables.\nAlgunos navegadores incluyen una protecci\u00f3n parcial contra los ataques XSS reflejados (el atacante est\u00e1 en la misma petici\u00f3n web). El atacante proporciona una URL incluyendo c\u00f3digo malicioso. Sin embargo, incluso los usuarios de los navegadores son vulnerables a otros ataques XSS, tales como aquellos en los que el c\u00f3digo malicioso se almacena en una base de datos. Solo el correcto dise\u00f1o de las aplicaciones Web en la parte servidora puede prevenir totalmente XSS.\nLas vulnerabilidades XSS tambi\u00e9n pueden ocurrir debido a errores de ejecuci\u00f3n por los desarrolladores del navegador.[51]\u200b\nOtra vulnerabilidad es la falsificaci\u00f3n de petici\u00f3n de sitio cruzado o CSRF. En CSRF, el c\u00f3digo del sitio web atacante enga\u00f1a al navegador de la v\u00edctima, permitiendo al atacante realizar peticiones en nombre de la v\u00edctima, haciendo imposible saber a la aplicaci\u00f3n de destino (por ejemplo, la de un banco haciendo una transferencia de dinero) saber si la petici\u00f3n ha sido realizada voluntariamente por el usuario o por un ataque CSRF.\nEl ataque funciona porque, si el sitio de destino hace uso \u00fanicamente de las cookies para autenticar las solicitudes de la v\u00edctima, las peticiones iniciadas por el c\u00f3digo del atacante tendr\u00e1n las mismas credenciales de acceso leg\u00edtimo que las solicitudes iniciadas por el propio usuario.\nEn general, la soluci\u00f3n a CSRF consiste en introducir un campo de formulario oculto cuyo valor se utilice para realizar la autenticaci\u00f3n, y no solo por medio de las cookies, en solicitudes que puedan tener efectos duraderos. La comprobaci\u00f3n de la cabecera HTTP referer tambi\u00e9n puede servir de ayuda.\n\"Hijacking JavaScript\" es un tipo de ataque CSRF en el que una etiqueta <script> en el sitio web del atacante explota una vulnerabilidad en la p\u00e1gina del sitio de la v\u00edctima que le hace devolver informaci\u00f3n privada, en forma de JSON o c\u00f3digo JavaScript. Las posibles soluciones son:\nque se requiera un token de autenticaci\u00f3n en los par\u00e1metros de las peticiones POST y GET para aquellas peticiones que requieran devolver informaci\u00f3n privada del usuario.\nusar POST y nunca GET para solicitudes que devuelven informaci\u00f3n privada"}]}, {"name": "Herramientas de desarrollo", "text": "En JavaScript, disponer de un depurador se convierte en necesario cuando se desarrollan grandes aplicaciones, no triviales. Dado que puede haber diferencias de implementaci\u00f3n entre los diferentes navegadores (especialmente en cuanto al DOM), es \u00fatil tener acceso a un depurador para cada uno de los navegadores a los cuales nuestra aplicaci\u00f3n web ir\u00e1 dirigido.[52]\u200b\nLos depuradores web est\u00e1n disponibles para Internet Explorer, Firefox, Safari, Google Chrome y Opera.[53]\u200b\nExisten tres depuradores disponibles para Internet Explorer: Microsoft Visual Studio es el m\u00e1s avanzado de los tres, seguido de cerca por Microsoft Script Editor (un componente de Microsoft Office)[54]\u200b y, finalmente, Microsoft Script Debugger, que es mucho m\u00e1s b\u00e1sico que el otro dos, aunque es gratuito. El IDE gratuito Microsoft Visual Web Developer Express ofrece una versi\u00f3n limitada de la funcionalidad de depuraci\u00f3n de JavaScript en el Microsoft Visual Studio. Internet Explorer ha incluido herramientas de desarrollo desde la versi\u00f3n 8 (se muestra pulsando la tecla F12).\nLas aplicaciones web dentro de Firefox se pueden depurar usando el Firebug add-on o el antiguo depurador Venkman. Firefox tambi\u00e9n tiene integrada una consola de errores b\u00e1sica, que registra y eval\u00faa JavaScript. Tambi\u00e9n registra errores de CSS y advertencias.\nOpera incluye un conjunto de herramientas llamado Dragonfly.[55]\u200b\nEl Inspector Web de WebKit incluye un depurador de JavaScript[56]\u200b utilizado en Safari, junto con una versi\u00f3n modificada de Google Chrome.\nExisten algunas herramientas de ayuda a la depuraci\u00f3n, tambi\u00e9n escritas en JavaScript y construidas para ejecutarse en la Web. Un ejemplo es el programa JSLint, desarrollado por Douglas Crockford, quien ha escrito extensamente sobre el lenguaje. JSLint analiza el c\u00f3digo JavaScript para que este quede conforme con un conjunto de normas y directrices y que aseguran su correcto funcionamiento y mantenibilidad.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "VBScript\nAJAX\nAplicaci\u00f3n web\nDocument Object Model\njQuery\nJSON\nHTML\nHTML5", "subsections": []}, {"name": "Referencias", "text": "\u2191 Douglas Crockford on Functional JavaScript (2:49): \"[JavaScript] es el lenguaje funcional m\u00e1s popular del mundo. JavaScript es y siempre ha sido, al menos desde [la versi\u00f3n] 1.2, un lenguaje de programaci\u00f3n funcional.\"\n\u2191 \u00abCopia archivada\u00bb. Archivado desde el original el 12 de abril de 2015. Consultado el 23 de noviembre de 2010.\u00a0\n\u2191 M. Dom\u00ednguez-Dorado,. Todo Programaci\u00f3n. N\u00ba 12. P\u00e1gs. 48-51. Editorial Iberprensa (Madrid). DL M-13679-2004. Septiembre de 2005. Bases de datos en el cliente con JavaScript DB.\u00a0\n\u2191 \u00abJavaScript\u00bb. Mozilla Developer Network. Consultado el 16 de septiembre de 2016.\u00a0\n\u2191 \u00abAbout JavaScript - JavaScript | MDN\u00bb. developer.mozilla.org (en ingl\u00e9s estadounidense). Consultado el 4 de julio de 2022.\u00a0\n\u2191 \u00abIntroduction\u00bb. web.stanford.edu. Consultado el 4 de julio de 2022.\u00a0\n\u2191 Eich, Brendan (13 de agosto de 2008). \u00abECMAScript Harmony\u00bb. Consultado el 22 de julio de 2015.\u00a0\n\u2191 campusMVP (19 de junio de 2015). \u00abECMAScript 6 es ya un est\u00e1ndar cerrado\u00bb. Consultado el 22 de julio de 2015.\u00a0\n\u2191 Lenguajes de programaci\u00f3n usados en Internet y la World Wide Web (WWW) (castellano)\n\u2191 JavaScript: The Definitive Guide, 6th Edition\n\u2191 http://tsdr.uspto.gov/#caseNumber=75026640&caseType=SERIAL_NO&searchType=statusSearch\n\u2191 Marcas registradas de Oracle.\n\u2191 \u00abAbout JavaScript\u00bb (en ingl\u00e9s). Consultado el 29 de agosto de 2013. \u00abJavaScript is a trademark or registered trademark of Oracle in the U.S. and other countries\u00a0\u00bb.\u00a0\n\u2191 \u00abNetscape Comunicado de prensa (castellano)\u00bb. Archivado desde el original el 3 de diciembre de 1998. Consultado el 13 de septiembre de 2008.\u00a0\n\u2191 \u00abChapter 2: Getting Started\u00bb. Server-Side JavaScript Guide. Netscape Communications Corporation. 1998. Consultado el 25 de abril de 2012.\u00a0\n\u2191 Mike Morgan (1996). \u00abChapter 6: Netscape Internet Application Framework\u00bb. Using Netscape\u2122 LiveWire\u2122, Special Edition. Que. Archivado desde el original el 21 de diciembre de 2012. Consultado el 19 de mayo de 2013.\u00a0\n\u2191 \u00abServer-Side Javascript: Back With a Vengeance\u00bb. Read Write Web. 17 de diciembre de 2009. Archivado desde el original el 2 de junio de 2012. Consultado el 28 de mayo de 2012.\u00a0\n\u2191 \u00abNode's goal is to provide an easy way to build scalable network programs\u00bb. About Node.js. Joyent.\u00a0\n\u2191 \u00abJavaScript: The World's Most Misunderstood Programming Language\u00bb. Crockford.com. Consultado el 19 de mayo de 2009.\u00a0\n\u2191 Kris Kowal (1 de diciembre de 2009). \u00abCommonJS effort sets JavaScript on path for world domination\u00bb. Ars Technica. Cond\u00e9 Nast Publications. Consultado el 18 de abril de 2010.\u00a0\n\u2191 ECMA International (Junio de 2015). \u00abStandard ECMA-262 6th Edition\u00bb.\u00a0\n\u2191 campusMVP (19 de junio de 2015). \u00abECMAScript 6 ya es un est\u00e1ndar cerrado\u00bb. Consultado el 22 de julio de 2015.\u00a0\n\u2191 \u00abTabla de compatibilidad de navegadores con ECMAScript 6 (Ingl\u00e9s)\u00bb.\u00a0\n\u2191 ECMA International (Junio de 2016). \u00abStandard ECMA-262 7th Edition\u00bb.\u00a0\n\u2191 ECMA International (Junio de 2016). \u00abECMAScript 2016 Language Specification\u00bb.\u00a0\n\u2191 Flanagan, 2006, p.\u00a016.\n\u2191 Flanagan, 2006, pp.\u00a0176\u2013178.\n\u2191 \u00abProperties of the Function Object\u00bb. Archivado desde el original el 28 de enero de 2013. Consultado el 19 de mayo de 2013.\u00a0\n\u2191 Flanagan, 2006, p.\u00a0141.\n\u2191 \u00abInheritance and the prototype chain\u00bb. Mozilla Developer Network. Mozilla. Consultado el 6 de abril de 2013.\u00a0\n\u2191 Herman, David (2013). Effective Javascript. Addison-Wesley. p.\u00a083. ISBN\u00a09780321812186.\u00a0\n\u2191 Haverbeke, Marjin (2011). Eloquent Javascript. No Starch Press. pp.\u00a095-97. ISBN\u00a09781593272821.\u00a0\n\u2191 Katz, Yehuda. \u00abUnderstanding \"Prototypes\" in JavaScript\u00bb. Consultado el 6 de abril de 2013.\u00a0\n\u2191 Herman, David (2013). Effective Javascript. Addison-Wesley. pp.\u00a0125-127. ISBN\u00a09780321812186.\u00a0\n\u2191 Haverbeke, Marijn (2011). Eloquent JavaScript. No Starch Press. pp.\u00a0139-149. ISBN\u00a0978-1593272821.\u00a0\n\u2191 Robert Nyman, Getters And Setters With JavaScript \u2013 Code Samples And Demos, published 29 May 2009, accessed 2 January 2010.\n\u2191 John Resig, JavaScript Getters and Setters, 18 July 2007, accessed 2 January 2010\n\u2191 http://www.ecma-international.org/publications/standards/Ecma-262.htm\n\u2191 \u00abvar - JavaScript - MDN\u00bb. The Mozilla Developer Network. Consultado el 22 de diciembre de 2012.\u00a0\n\u2191 \u00abECMAScript Language Specification - ECMA-262 Edition 5.1\u00bb. Ecma International. Consultado el 22 de diciembre de 2012.\u00a0\n\u2191 \u00abconsole\u00bb. Mozilla Developer Network. Mozilla. Consultado el 6 de abril de 2013.\u00a0\n\u2191 \u00abJavaScript tracking - Piwik\u00bb. Piwik. Archivado desde el original el 31 de octubre de 2013. Consultado el 31 de marzo de 2012.\u00a0\n\u2191 Hamilton, Naomi (31 de junio de 2008). \u00abThe A-Z of Programming Languages: JavaScript\u00bb. computerworld.com.au.\u00a0\n\u2191 Peter-Paul Koch, Object detection\n\u2191 Peter-Paul Koch, Mission Impossible - mouse position Archivado el 17 de octubre de 2018 en Wayback Machine.\n\u2191 Peter-Paul Koch, Browser detect\n\u2191 a b c Flanagan, 2006, pp.\u00a0262\u2013263.\n\u2191 \u00abCreating Accessible JavaScript\u00bb. WebAIM. Consultado el 8 de junio de 2010.\u00a0\n\u2191 ADsafe - Making JavaScript Safe for Advertising\n\u2191 Secure ECMA Script (SES)\n\u2191 MozillaZine, Mozilla Cross-Site Scripting Vulnerability Reported and Fixed\n\u2191 \u00abAdvanced Debugging With JavaScript\u00bb. alistapart.com. 3 de febrero de 2009. Consultado el 28 de mayo de 2010.\u00a0\n\u2191 \u00abThe JavaScript Debugging Console\u00bb. javascript.about.com. 28 de mayo de 2010. Consultado el 28 de mayo de 2010.\u00a0\n\u2191 JScript development in Microsoft Office 11 (MS InfoPath 2003)\n\u2191 \u00abOpera DragonFly\u00bb. Opera Software. Archivado desde el original el 22 de agosto de 2011. Consultado el 19 de mayo de 2013.\u00a0\n\u2191 \u00abIntroducing Drosera - Surfin' Safari\u00bb. Webkit.org. 28 de junio de 2006. Consultado el 19 de mayo de 2009.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Mozilla Developer Center.\n(en ingl\u00e9s) Javascript tutorial.\nJavaScript - Mirando tras las bambalinas.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n)", "title": "Java (lenguaje de programaci\u00f3n)", "summary": "[\n]\nJava es un lenguaje de programaci\u00f3n y una plataforma inform\u00e1tica que fue comercializada por primera vez en 1995 por Sun Microsystems.[2]\u200b[3]\u200b\nEl lenguaje de programaci\u00f3n Java fue desarrollado originalmente por James Gosling, de Sun Microsystems (constituida en 1983 y posteriormente adquirida el 27 de enero de 2010 por la compa\u00f1\u00eda Oracle),[4]\u200b y publicado en 1995 como un componente fundamental de la plataforma Java de Sun Microsystems. Su sintaxis deriva en gran medida de C y C++, pero tiene menos utilidades de bajo nivel que cualquiera de ellos. Las aplicaciones de Java son compiladas a bytecode (clase Java), que puede ejecutarse en cualquier m\u00e1quina virtual Java (JVM) sin importar la arquitectura de la computadora subyacente.\nLa compa\u00f1\u00eda Sun desarroll\u00f3 la implementaci\u00f3n de referencia original para los compiladores de Java, m\u00e1quinas virtuales y librer\u00edas de clases en 1991, y las public\u00f3 por primera vez en 1995. A partir de mayo de 2007, en cumplimiento de las especificaciones del Proceso de la Comunidad Java, Sun volvi\u00f3 a licenciar la mayor\u00eda de sus tecnolog\u00edas de Java bajo la Licencia P\u00fablica General de GNU. Otros han desarrollado tambi\u00e9n implementaciones alternas a estas tecnolog\u00edas de Sun, tales como el Compilador de Java de GNU y el GNU Classpath.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n1.1 Versiones\n2 Filosof\u00eda\n2.1 Orientado a objetos\n2.2 Independencia de la plataforma\n2.3 El recolector de basura\n3 Sintaxis\n3.1 Aplicaciones aut\u00f3nomas\n3.2 Applets\n3.3 Servlets\n3.4 Aplicaciones con interfaz\n4 Entornos de funcionamiento\n4.1 En dispositivos m\u00f3viles y sistemas embebidos\n4.2 En el navegador web\n4.3 En sistemas de servidor\n4.4 En aplicaciones de escritorio\n4.5 Plataformas soportadas\n5 Programaci\u00f3n\n5.1 Expresiones\n5.2 Operadores\n5.2.1 Operadores a nivel de bit\n5.2.2 Precedencia de operadores\n5.3 Sentencias\n5.4 Conversi\u00f3n de tipos\n6 Industria relacionada\n7 Cr\u00edticas\n7.1 General\n7.2 El lenguaje\n7.3 Apariencia\n7.4 Rendimiento\n8 Recursos\n8.1 JRE\n8.2 Componentes\n8.3 API\n8.4 Extensiones y arquitecturas relacionadas\n9 Java en c\u00f3digo abierto\n9.1 Alternativas libres\n9.2 Cr\u00edticas referentes a Java y el software libre\n10 V\u00e9ase tambi\u00e9n\n11 Referencias\n12 Notas\n13 Enlaces externos\n13.1 Oracle - Sun\n13.2 Tutoriales\n13.3 Cr\u00edticas", "subsections": []}, {"name": "Historia", "text": "Java se cre\u00f3 como una herramienta de programaci\u00f3n para ser usada en un proyecto de set-top-box en una peque\u00f1a operaci\u00f3n denominada the Green Project en Sun Microsystems en 1991. El equipo (Green Team), compuesto por trece personas y dirigido por James Gosling, trabaj\u00f3 durante 18 meses en Sand Hill Road, en Menlo Park, para desarrollarlo.\nEl lenguaje se denomin\u00f3 inicialmente Oak (por un roble que hab\u00eda fuera de la oficina de Gosling), luego pas\u00f3 a llamarse Green tras descubrir que Oak era ya una marca comercial registrada para adaptadores de tarjetas gr\u00e1ficas, y finalmente se le renombr\u00f3 Java.\nEs frecuentada por algunos de los miembros del equipo. Pero no est\u00e1 claro si es un acr\u00f3nimo o no, aunque algunas fuentes se\u00f1alan que podr\u00eda tratarse de las iniciales de sus dise\u00f1adores: James Gosling, Arthur Van Hoff y Andy Bechtolsheim. Otros abogan por el siguiente acr\u00f3nimo, Just Another Vague Acronym (\"s\u00f3lo otro acr\u00f3nimo ambiguo m\u00e1s\"). La hip\u00f3tesis que m\u00e1s fuerza tiene es la de que Java debe su nombre a un tipo de caf\u00e9 disponible en la cafeter\u00eda cercana; de ah\u00ed que el icono de Java sea una taza de caf\u00e9 caliente. Un peque\u00f1o signo que da fuerza a esta teor\u00eda es que los cuatro primeros bytes (el n\u00famero m\u00e1gico) de los archivos.class que genera el compilador, son en hexadecimal, 0xCAFEBABE. A pesar de todas estas teor\u00edas, el nombre fue sacado al parecer de una lista aleatoria de palabras.[5]\u200b\nLos objetivos de Gosling eran implementar una m\u00e1quina virtual y un lenguaje con una estructura y sintaxis similar a C++. Entre junio y julio de 1994, tras una sesi\u00f3n maratoniana de tres d\u00edas entre John Gage, James Gosling, Patrick Naughton, Wayne Rosing y Eric Schmidt, el equipo reorient\u00f3 la plataforma hacia la Web. Sintieron que la llegada del navegador web Mosaic propiciar\u00eda que Internet se convirtiese en un medio interactivo, como el que pensaban era la televisi\u00f3n por cable. Naughton cre\u00f3 entonces un prototipo de navegador, WebRunner, que m\u00e1s tarde ser\u00eda conocido como HotJava.\nEn 1994, se les hizo una demostraci\u00f3n de HotJava y la plataforma Java a los ejecutivos de Sun. Java 1.0a pudo descargarse por primera vez en 1994, pero hubo que esperar al 23 de mayo de 1995, durante las conferencias de SunWorld, a que vieran la luz p\u00fablica Java y HotJava, el navegador Web. El acontecimiento fue anunciado por John Gage, el director cient\u00edfico de Sun Microsystems. El acto estuvo acompa\u00f1ado por una peque\u00f1a sorpresa adicional, el anuncio por parte de Marc Andreessen, vicepresidente ejecutivo de Netscape, de que Java ser\u00eda soportado en sus navegadores. El 9 de enero del a\u00f1o siguiente, 1996, Sun fund\u00f3 el grupo empresarial JavaSoft para que se encargase del desarrollo tecnol\u00f3gico.[2] Dos semanas m\u00e1s tarde la primera versi\u00f3n de Java fue publicada.\nLa promesa inicial de Gosling era Write Once, Run Anywhere (Escr\u00edbelo una vez, ejec\u00fatalo en cualquier lugar), proporcionando un lenguaje independiente de la plataforma y un entorno de ejecuci\u00f3n (la JVM) ligero y gratuito para las plataformas m\u00e1s populares, de forma que los binarios (bytecode) de las aplicaciones Java pudiesen ejecutarse en cualquier plataforma.\nEl entorno de ejecuci\u00f3n era relativamente seguro, y los principales navegadores web pronto incorporaron la posibilidad de ejecutar applets Java incrustadas en las p\u00e1ginas web.\nJava ha experimentado numerosos cambios desde la versi\u00f3n primigenia, JDK 1.0, as\u00ed como un enorme incremento en el n\u00famero de clases y paquetes que componen la biblioteca est\u00e1ndar.[6]\u200b", "subsections": [{"name": "Versiones", "text": "Desde J2SE 1.4, la evoluci\u00f3n del lenguaje ha sido regulada por el JCP (Java Community Process), que usa Java Specification Requests (JSRs) para proponer y especificar cambios en la plataforma Java. El lenguaje en s\u00ed mismo est\u00e1 especificado en la Java Language Specification (JLS), o Especificaci\u00f3n del Lenguaje Java. Los cambios en los JLS son gestionados en JSR 901.\nJDK 1.0 (23 de enero de 1996) \u2014 Primer lanzamiento: comunicado de prensa\nJDK 1.1 (19 de febrero de 1997) \u2014 Principales adiciones incluidas: comunicado de prensa\nuna reestructuraci\u00f3n intensiva del modelo de eventos AWT (Abstract Windowing Toolkit)\nclases internas (inner classes)\nJavaBeans\nJDBC (Java Database Connectivity), para la integraci\u00f3n de bases de datos\nRMI (Remote Method Invocation)\nJ2SE 1.2 (8 de diciembre de 1998) \u2014 Nombre clave Playground. Esta y las siguientes versiones fueron recogidas bajo la denominaci\u00f3n Java 2 y el nombre \"J2SE\" (Java 2 Platform, Standard Edition) reemplaz\u00f3 a JDK para distinguir la plataforma base de J2EE (Java 2 Platform, Enterprise Edition) y J2ME (Java 2 Platform, Micro Edition). Otras mejoras a\u00f1adidas inclu\u00edan: comunicado de prensa\nla palabra reservada (keyword) strictfp\nreflexi\u00f3n en la programaci\u00f3n\nla API gr\u00e1fica ( Swing) fue integrada en las clases b\u00e1sicas\nla m\u00e1quina virtual (JVM) de Sun fue equipada con un compilador JIT (Just in Time) por primera vez\nJava Plug-in\nJava IDL, una implementaci\u00f3n de IDL (Lenguaje de Descripci\u00f3n de Interfaz) para la interoperabilidad con CORBA\nColecciones (Collections)\nJ2SE 1.3 (8 de mayo de 2000) \u2014 Nombre clave Kestrel. Los cambios m\u00e1s notables fueron: comunicado de prensa lista completa de cambios\nla inclusi\u00f3n de la m\u00e1quina virtual de HotSpot JVM (la JVM de HotSpot fue lanzada inicialmente en abril de 1999, para la JVM de J2SE 1.2)\nRMI fue cambiado para que se basara en CORBA\nJavaSound\nse incluy\u00f3 el Java Naming and Directory Interface (JNDI) en el paquete de bibliotecas principales (anteriormente disponible como una extensi\u00f3n)\nJava Platform Debugger Architecture (JPDA)\nJ2SE 1.4 (6 de febrero de 2002) \u2014 Nombre clave Merlin. Este fue el primer lanzamiento de la plataforma Java desarrollado bajo el Proceso de la Comunidad Java como JSR 59. Los cambios m\u00e1s notables fueron: comunicado de prensalista completa de cambios\nPalabra reservada assert (Especificado en JSR 41.)\nExpresiones regulares modeladas al estilo de las expresiones regulares Perl\nEncadenaci\u00f3n de excepciones Permite a una excepci\u00f3n encapsular la excepci\u00f3n de bajo nivel original.\nnon-blocking NIO (New Input/Output) (Especificado en JSR 51.)\nLogging API (Specified in JSR 47.)\nAPI I/O para la lectura y escritura de im\u00e1genes en formatos como JPEG o PNG\nParser XML integrado y procesador XSLT (JAXP) (Especificado en JSR 5 y JSR 63.)\nSeguridad integrada y extensiones criptogr\u00e1ficas (JCE, JSSE, JAAS)\nJava Web Start incluido (El primer lanzamiento ocurri\u00f3 en marzo de 2001 para J2SE 1.3) (Especificado en JSR 56.)\nJ2SE 5.0 (30 de septiembre de 2004) \u2014 Nombre clave: Tiger. (Originalmente numerado 1.5, esta notaci\u00f3n a\u00fan es usada internamente.[3]) Desarrollado bajo JSR 176, Tiger a\u00f1adi\u00f3 un n\u00famero significativo de nuevas caracter\u00edsticas comunicado de prensa\nPlantillas (gen\u00e9ricos) \u2014 provee conversi\u00f3n de tipos (type safety) en tiempo de compilaci\u00f3n para colecciones y elimina la necesidad de la mayor\u00eda de conversi\u00f3n de tipos (type casting). (Especificado por JSR 14.)\nMetadatos \u2014 tambi\u00e9n llamados anotaciones, permite a estructuras del lenguaje como las clases o los m\u00e9todos, ser etiquetados con datos adicionales, que puedan ser procesados posteriormente por utilidades de proceso de metadatos. (Especificado por JSR 175.)\nAutoboxing/unboxing \u2014 Conversiones autom\u00e1ticas entre tipos primitivos (Como los int) y clases de envoltura primitivas (Como Integer). (Especificado por JSR 201.)\nEnumeraciones \u2014 la palabra reservada enum crea una typesafe, lista ordenada de valores (como Dia.LUNES, Dia.MARTES, etc.). Anteriormente, esto solo pod\u00eda ser llevado a cabo por constantes enteras o clases construidas manualmente (enum pattern). (Especificado por JSR 201.)\nVarargs (n\u00famero de argumentos variable) \u2014 El \u00faltimo par\u00e1metro de un m\u00e9todo puede ser declarado con el nombre del tipo seguido por tres puntos (e.g. void drawtext(String... lines)). En la llamada al m\u00e9todo, puede usarse cualquier n\u00famero de par\u00e1metros de ese tipo, que ser\u00e1n almacenados en un array para pasarlos al m\u00e9todo.\nBucle for mejorado \u2014 La sintaxis para el bucle for se ha extendido con una sintaxis especial para iterar sobre cada miembro de un array o sobre cualquier clase que implemente Iterable, como la clase est\u00e1ndar Collection, de la siguiente forma:\nvoid\ndisplayWidgets\n(\nIterable\n<\nWidget\n>\nwidgets\n)\n{\nfor\nw\n:\n.\ndisplay\n();\n}\nEste ejemplo itera sobre el objeto Iterable widgets, asignando, en orden, cada uno de los elementos a la variable w, y llamando al m\u00e9todo display() de cada uno de ellos. (Especificado por JSR 201.)\nJava SE 6 (11 de diciembre de 2006) \u2014 Nombre clave Mustang. Estuvo en desarrollo bajo la JSR 270. En esta versi\u00f3n, Sun cambi\u00f3 el nombre \"J2SE\" por Java SE y elimin\u00f3 el \".0\" del n\u00famero de versi\u00f3n.[4] Est\u00e1 disponible en http://java.sun.com/javase/6/. Los cambios m\u00e1s importantes introducidos en esta versi\u00f3n son:\nIncluye un nuevo marco de trabajo y API que hacen posible la combinaci\u00f3n de Java con lenguajes din\u00e1micos como PHP, Python, Ruby y JavaScript.\nIncluye el motor Rhino, de Mozilla, una implementaci\u00f3n de Javascript en Java.\nIncluye un cliente completo de Servicios Web y soporta las \u00faltimas especificaciones para Servicios Web, como JAX-WS 2.0, JAXB 2.0, STAX y JAXP.\nMejoras en la interfaz gr\u00e1fica y en el rendimiento.\nJava SE 7 \u2014 Nombre clave Dolphin. En el a\u00f1o 2006 a\u00fan se encontraba en las primeras etapas de planificaci\u00f3n. Su lanzamiento fue en julio de 2011.\nSoporte para XML dentro del propio lenguaje.\nUn nuevo concepto de superpaquete.\nSoporte para closures.\nIntroducci\u00f3n de anotaciones est\u00e1ndar para detectar fallos en el software.\nNo oficiales:\nNIO2.\nJava Module System.\nJava Kernel.\nNueva API para el manejo de D\u00edas y Fechas, la cual reemplazar\u00e1 las antiguas clases Date y Calendar.\nPosibilidad de operar con clases BigDecimal usando operandos.\nJava SE 8 \u2014 lanzada en marzo de 2014. Cabe destacar:\nIncorpora de forma completa la librer\u00eda JavaFX.\nDiferentes mejoras en seguridad.\nDiferentes mejoras en concurrencia.\nA\u00f1ade funcionalidad para programaci\u00f3n funcional mediante expresiones Lambda.\nMejora la integraci\u00f3n de JavaScript.\nNuevas API para manejo de fechas y tiempo (date - time).\nJava SE 9 \u2014 lanzada el 21 de septiembre del 2017.\nJava SE 10 \u2014 lanzada el 20 de marzo de 2018.\nJava SE 11 \u2014 lanzada el 25 de septiembre de 2018.\nJava SE 12 \u2014 lanzada el 19 de marzo de 2019.\nJava SE 15 \u2014 lanzada el 15 de septiembre de 2020.\nJava SE 16 \u2014 lanzada el 18 de marzo de 2021.[7]\u200b\nJava SE 17 \u2014 lanzada el 14 de septiembre de 2021. Como m\u00ednimo tendr\u00e1 soporte hasta septiembre de 2024 al ser una versi\u00f3n LTS (Long Term Support - Soporte a largo plazo).\nJava SE 18 \u2014 lanzada el 22 de marzo de 2022.[8]\u200b\nEn el 2005 se calculaba en 4,5 millones el n\u00famero de desarrolladores y 2500 millones de dispositivos habilitados con tecnolog\u00eda Java."}]}, {"name": "Filosof\u00eda", "text": "El lenguaje Java se cre\u00f3 con cinco objetivos principales:\nDeber\u00eda usar el paradigma de la programaci\u00f3n orientada a objetos.\nDeber\u00eda permitir la ejecuci\u00f3n de un mismo programa en m\u00faltiples sistemas operativos.\nDeber\u00eda incluir por defecto soporte para trabajo en red.\nDeber\u00eda dise\u00f1arse para ejecutar c\u00f3digo en sistemas remotos de forma segura.\nDeber\u00eda ser f\u00e1cil de usar y tomar lo mejor de otros lenguajes orientados a objetos, como C++.\nPara conseguir la ejecuci\u00f3n de c\u00f3digo remoto y el soporte de red, los programadores de Java a veces recurren a extensiones como CORBA (Common Object Request Broker Architecture), Internet Communications Engine u OSGi, respectivamente.", "subsections": [{"name": "Orientado a objetos", "text": "V\u00e9anse tambi\u00e9n:\n y \nLa primera caracter\u00edstica, orientado a objetos (\u201cOO\u201d), se refiere a un m\u00e9todo de programaci\u00f3n y al dise\u00f1o del lenguaje. Aunque hay muchas interpretaciones para OO, una primera idea es dise\u00f1ar el software de forma que los distintos tipos de datos que usen est\u00e9n unidos a sus operaciones. As\u00ed, los datos y el c\u00f3digo (funciones o m\u00e9todos) se combinan en entidades llamadas objetos. Un objeto puede verse como un paquete que contiene el \u201ccomportamiento\u201d (el c\u00f3digo) y el \u201cestado\u201d (datos). El principio es separar aquello que cambia de las cosas que permanecen inalterables. Frecuentemente, cambiar una estructura de datos implica un cambio en el c\u00f3digo que opera sobre los mismos, o viceversa. Esta separaci\u00f3n en objetos coherentes e independientes ofrece una base m\u00e1s estable para el dise\u00f1o de un sistema software. El objetivo es hacer que grandes proyectos sean f\u00e1ciles de gestionar y manejar, mejorando como consecuencia su calidad y reduciendo el n\u00famero de proyectos fallidos.\nOtra de las grandes promesas de la programaci\u00f3n orientada a objetos es la creaci\u00f3n de entidades m\u00e1s gen\u00e9ricas (objetos) que permitan la reutilizaci\u00f3n del software entre proyectos, una de las premisas fundamentales de la Ingenier\u00eda del Software. Un objeto gen\u00e9rico \u201ccliente\u201d, por ejemplo, deber\u00eda en teor\u00eda tener el mismo conjunto de comportamiento en diferentes proyectos, sobre todo cuando estos coinciden en cierta medida, algo que suele suceder en las grandes organizaciones. En este sentido, los objetos podr\u00edan verse como piezas reutilizables que pueden emplearse en m\u00faltiples proyectos distintos, posibilitando as\u00ed a la industria del software construir proyectos de envergadura empleando componentes ya existentes y de comprobada calidad, conduciendo esto finalmente a una reducci\u00f3n dr\u00e1stica del tiempo de desarrollo. Podemos usar como ejemplo de objeto el aluminio. Una vez definidos datos (densidad, maleabilidad, etc.), y su \u201ccomportamiento\u201d (soldar dos piezas, etc.), el objeto \u201caluminio\u201d puede ser reutilizado en el campo de la construcci\u00f3n, del autom\u00f3vil, de la aviaci\u00f3n, etc.\nLa reutilizaci\u00f3n del software ha experimentado resultados dispares, encontrando dos dificultades principales: el dise\u00f1o de objetos realmente gen\u00e9ricos es pobremente comprendido, y falta una metodolog\u00eda para la amplia comunicaci\u00f3n de oportunidades de reutilizaci\u00f3n. Algunas comunidades de \u201cc\u00f3digo abierto\u201d (open source) quieren ayudar en este problema dando medios a los desarrolladores para diseminar la informaci\u00f3n sobre el uso y versatilidad de objetos reutilizables y bibliotecas de objetos."}, {"name": "Independencia de la plataforma", "text": "La segunda caracter\u00edstica, la independencia de la plataforma, significa que programas escritos en el lenguaje Java pueden ejecutarse igualmente en cualquier tipo de hardware. Este es el significado de ser capaz de escribir un programa una vez y que pueda ejecutarse en cualquier dispositivo, tal como reza el axioma de Java, \"write once, run anywhere\".\nPara ello, se compila el c\u00f3digo fuente escrito en lenguaje Java, para generar un c\u00f3digo conocido como \u201cbytecode\u201d (espec\u00edficamente Java bytecode), instrucciones m\u00e1quina simplificadas espec\u00edficas de la plataforma Java. Esta pieza est\u00e1 \u201ca medio camino\u201d entre el c\u00f3digo fuente y el c\u00f3digo m\u00e1quina que entiende el dispositivo destino. El bytecode es ejecutado entonces en la m\u00e1quina virtual (JVM), un programa escrito en c\u00f3digo nativo de la plataforma destino (que es el que entiende su hardware), que interpreta y ejecuta el c\u00f3digo. Adem\u00e1s, se suministran bibliotecas adicionales para acceder a las caracter\u00edsticas de cada dispositivo (como los gr\u00e1ficos, ejecuci\u00f3n mediante hebras o threads, la interfaz de red) de forma unificada. Se debe tener presente que, aunque hay una etapa expl\u00edcita de compilaci\u00f3n, el bytecode generado es interpretado o convertido a instrucciones m\u00e1quina del c\u00f3digo nativo por el compilador JIT (Just In Time).\nHay implementaciones del compilador de Java que convierten el c\u00f3digo fuente directamente en c\u00f3digo objeto nativo, como GCJ. Esto elimina la etapa intermedia donde se genera el bytecode, pero la salida de este tipo de compiladores solamente puede ejecutarse en un tipo de arquitectura.\nLa licencia sobre Java de Sun insiste en que todas las implementaciones sean \u201ccompatibles\u201d. Esto dio lugar a una disputa legal entre Microsoft y Sun, cuando este \u00faltimo aleg\u00f3 que la implementaci\u00f3n de Microsoft no daba soporte a las interfaces RMI y JNI adem\u00e1s de haber a\u00f1adido caracter\u00edsticas \u2018\u2019dependientes\u2019\u2019 de su plataforma. Sun demand\u00f3 a Microsoft y gan\u00f3 por da\u00f1os y perjuicios (unos 20 millones de d\u00f3lares), as\u00ed como una orden judicial forzando el acatamiento de la licencia de Sun. Como respuesta, Microsoft no ofrece Java con su versi\u00f3n de sistema operativo, y en recientes versiones de Windows, su navegador Internet Explorer no admite la ejecuci\u00f3n de applets sin un conector (o plugin) aparte. Sin embargo, Sun y otras fuentes ofrecen versiones gratuitas para distintas versiones de Windows.\nLas primeras implementaciones del lenguaje usaban una m\u00e1quina virtual interpretada para conseguir la portabilidad. Sin embargo, el resultado eran programas que se ejecutaban comparativamente m\u00e1s lentos que aquellos escritos en C o C++. Esto hizo que Java se ganase una reputaci\u00f3n de lento en rendimiento. Las implementaciones recientes de la JVM dan lugar a programas que se ejecutan considerablemente m\u00e1s r\u00e1pido que las versiones antiguas, empleando diversas t\u00e9cnicas, aunque sigue siendo mucho m\u00e1s lentos que otros lenguajes.\nLa primera de estas t\u00e9cnicas es simplemente compilar directamente en c\u00f3digo nativo como hacen los compiladores tradicionales, eliminando la etapa del bytecode. Esto da lugar a un gran rendimiento en la ejecuci\u00f3n, pero tapa el camino a la portabilidad. Otra t\u00e9cnica, conocida como compilaci\u00f3n JIT (Just In Time, o \"compilaci\u00f3n al vuelo\"), convierte el bytecode a c\u00f3digo nativo cuando se ejecuta la aplicaci\u00f3n. Otras m\u00e1quinas virtuales m\u00e1s sofisticadas usan una \"recompilaci\u00f3n din\u00e1mica\" en la que la VM es capaz de analizar el comportamiento del programa en ejecuci\u00f3n y recompila y optimiza las partes cr\u00edticas. La recompilaci\u00f3n din\u00e1mica puede lograr mayor grado de optimizaci\u00f3n que la compilaci\u00f3n tradicional (o est\u00e1tica), ya que puede basar su trabajo en el conocimiento que de primera mano tiene sobre el entorno de ejecuci\u00f3n y el conjunto de clases cargadas en memoria. La compilaci\u00f3n JIT y la recompilaci\u00f3n din\u00e1mica permiten a los programas Java aprovechar la velocidad de ejecuci\u00f3n del c\u00f3digo nativo sin por ello perder la ventaja de la portabilidad en ambos.\nLa portabilidad es t\u00e9cnicamente dif\u00edcil de lograr, y el \u00e9xito de Java en ese campo ha sido dispar. Aunque es de hecho posible escribir programas para la plataforma Java que act\u00faen de forma correcta en m\u00faltiples plataformas de distinta arquitectura, el gran n\u00famero de estas con peque\u00f1os errores o inconsistencias llevan a que a veces se parodie el eslogan de Sun, \"Write once, run anywhere\" como \"Write once, debug everywhere\" (o \u201cEscr\u00edbelo una vez, ejec\u00fatalo en cualquier parte\u201d por \u201cEscr\u00edbelo una vez, dep\u00faralo en todas partes\u201d).\nEl concepto de independencia de la plataforma de Java cuenta, sin embargo, con un gran \u00e9xito en las aplicaciones en el entorno del servidor, como los Servicios Web, los Servlets, los Java Beans, as\u00ed como en sistemas empotrados basados en OSGi, usando entornos Java empotrados."}, {"name": "El recolector de basura", "text": "V\u00e9ase tambi\u00e9n:\nEn Java el problema de fugas de memoria se evita en gran medida gracias a la recolecci\u00f3n de basura (o automatic garbage collector). El programador determina cu\u00e1ndo se crean los objetos, y el entorno, en tiempo de ejecuci\u00f3n de Java (Java runtime), es el responsable de gestionar el ciclo de vida de los objetos. El programa, u otros objetos, pueden tener localizado un objeto mediante una referencia a este. Cuando no quedan referencias a un objeto, el recolector de basura de Java borra el objeto, liberando as\u00ed la memoria que ocupaba previniendo posibles fugas (ejemplo: un objeto creado y \u00fanicamente usado dentro de un m\u00e9todo solamente tiene entidad dentro de este; al salir del m\u00e9todo el objeto es eliminado). Aun as\u00ed, es posible que se produzcan fugas de memoria si el c\u00f3digo almacena referencias a objetos que ya no son necesarios; es decir, pueden a\u00fan ocurrir, pero en un nivel conceptual superior. En definitiva, el recolector de basura de Java permite una f\u00e1cil creaci\u00f3n y eliminaci\u00f3n de objetos y mayor seguridad."}]}, {"name": "Sintaxis", "text": "La sintaxis de Java se deriva en gran medida de C++. Pero a diferencia de este, que combina la sintaxis para programaci\u00f3n gen\u00e9rica, estructurada y orientada a objetos, Java fue construido desde el principio para ser completamente orientado a objetos. Todo en Java es un objeto (salvo algunas excepciones), y todo en Java reside en alguna clase (recordemos que una clase es un molde a partir del cual pueden crearse varios objetos).\nA diferencia de C++, Java no tiene sobrecarga de operadores[9]\u200b o herencia m\u00faltiple para clases, aunque la herencia m\u00faltiple est\u00e1 disponible para interfaces.", "subsections": [{"name": "Aplicaciones aut\u00f3nomas", "text": "Este ejemplo necesita una peque\u00f1a explicaci\u00f3n.\nTodo en Java est\u00e1 dentro de una clase, incluyendo programas aut\u00f3nomos.\nEl c\u00f3digo fuente se guarda en archivos con el mismo nombre que la clase que contienen y con extensi\u00f3n \u201c.java\u201d. Una clase (class) declarada p\u00fablica (public) debe seguir este convenio. Si tenemos una clase llamada Hola, su c\u00f3digo fuente deber\u00e1 guardarse en el fichero \u201cHola.java\u201d.\nEl compilador genera un archivo de clase (con extensi\u00f3n \u201c.class\u201d) por cada una de las clases definidas en el archivo fuente. Una clase an\u00f3nima se trata como si su nombre fuera la concatenaci\u00f3n del nombre de la clase que la encierra, el s\u00edmbolo \u201c$\u201d, y un n\u00famero entero.\nLos programas que se ejecutan de forma independiente y aut\u00f3noma, deben contener el m\u00e9todo \u201dmain()\u201d.\nLa palabra reservada \u201dvoid\u201d indica que el m\u00e9todo main no devuelve nada.\nEl m\u00e9todo main debe aceptar un array de objetos tipo String. Por acuerdo se referencia como \u201dargs\u201d, aunque puede emplearse cualquier otro identificador.\nLa palabra reservada \u201dstatic\u201d indica que el m\u00e9todo es un m\u00e9todo de clase, asociado a la clase en vez de a una instancia de la misma. El m\u00e9todo main debe ser est\u00e1tico o \u2019\u2019de clase\u2019\u2019.\nLa palabra reservada public significa que un m\u00e9todo puede ser llamado desde otras clases, o que la clase puede ser usada por clases fuera de la jerarqu\u00eda de la propia clase. Otros tipos de acceso son \u201dprivate\u201d o \u201dprotected\u201d.\nLa utilidad de impresi\u00f3n (en pantalla por ejemplo) forma parte de la biblioteca est\u00e1ndar de Java: la clase \u2018\u2019\u2019System\u2019\u2019\u2019 define un campo p\u00fablico est\u00e1tico llamado \u2018\u2019\u2019out\u2019\u2019\u2019. El objeto out es una instancia de \u2018\u2019\u2019PrintStream\u2019\u2019\u2019, que ofrece el m\u00e9todo \u2018\u2019\u2019println (String)\u2019\u2019\u2019 para volcar datos en la pantalla (la salida est\u00e1ndar).\nLas aplicaciones aut\u00f3nomas se ejecutan dando al entorno de ejecuci\u00f3n de Java el nombre de la clase cuyo m\u00e9todo main debe invocarse. Por ejemplo, una l\u00ednea de comando (en Unix o Windows) de la forma java \u2013cp . Hola ejecutar\u00e1 el programa del ejemplo (previamente compilado y generado \u201cHola.class\u201d). El nombre de la clase cuyo m\u00e9todo main se llama puede especificarse tambi\u00e9n en el fichero \u201cMANIFEST\u201d del archivo de empaquetamiento de Java (.jar)."}, {"name": "Applets", "text": "Las applet Java son programas incrustados en otras aplicaciones, normalmente una p\u00e1gina web que se muestra en un navegador.\n// Hello.java\nimport\njavax.swing.JApplet\n;\njava.awt.Graphics\npublic\nclass\nHello\nextends\nJApplet\npaint\nGraphics\ng\ndrawString\n\"Hola, mundo!\"\n,\n65\n95\n);\n<!-- Hola.html -->\n<\nhtml\n>\nhead\ntitle\n</\nbody\napplet\ncode\n=\n\"Hola.class\"\nwidth\n\"200\"\nheight\nActualmente HTML 5 ha eliminado el uso de la etiqueta <applet>. Pero todav\u00eda existe la forma de usarlo en HTML5. (Texto en ingl\u00e9s) Java Applets in HTML5.\nLa sentencia import indica al compilador de Java que incluya las clases java.applet. Applet y java.awt. Graphics, para poder referenciarlas por sus nombres, sin tener que anteponer la ruta completa cada vez que se quieran usar en el c\u00f3digo fuente.\nLa clase Hola extiende (extends) a la clase Applet;es decir, es una subclase de \u00e9sta. La clase Applet permite a la aplicaci\u00f3n mostrar y controlar el estado del applet. La clase Applet es un componente del AWT (Abstract Window Toolkit), que permite al applet mostrar una interfaz gr\u00e1fica de usuario o GUI (Graphical User Interface), y responder a eventos generados por el usuario.\nLa clase Hola sobrecarga el m\u00e9todo paint (Graphics) heredado de la superclase contenedora (Applet en este caso), para acceder al c\u00f3digo encargado de dibujar. El m\u00e9todo paint() recibe un objeto Graphics que contiene el contexto gr\u00e1fico para dibujar el applet. El m\u00e9todo paint() llama al m\u00e9todo drawString (String, int, int) del objeto. [5]"}, {"name": "Servlets", "text": "Art\u00edculo principal:\nLos servlets son componentes de la parte del servidor de Java EE encargados de generar respuestas a las peticiones recibidas de los clientes.\n// Hola.java\njava.io.IOException\njavax.servlet.*\nHola\nGenericServlet\nservice\nServletRequest\nrequest\nServletResponse\nresponse\nthrows\nServletException\nIOException\nsetContentType\n\"text/html\"\nPrintWriter\npw\ngetWriter\nprintln\n\"\u00a1Hola, mundo!\"\nclose\nLas sentencias import indican al compilador de Java la inclusi\u00f3n de todas las clases p\u00fablicas e interfaces de los paquetes java.io y javax.servlet en la compilaci\u00f3n.\nLa clase Hola extiende (extends) es heredera de la clase GenericServlet. Esta clase proporciona la interfaz para que el servidor le pase las peticiones al servlet y el mecanismo para controlar el ciclo de vida del servlet.\nLa clase Hola sobrecarga el m\u00e9todo service (ServletRequest, ServletResponse), definido por la interfaz servlet para acceder al manejador de la petici\u00f3n de servicio. El m\u00e9todo service() recibe un objeto de tipo ServletRequest que contiene la petici\u00f3n del cliente y un objeto de tipo ServletResponse, usado para generar la respuesta que se devuelve al cliente. El m\u00e9todo service() puede lanzar (throws) excepciones de tipo ServletException e IOException si ocurre alg\u00fan tipo de anomal\u00eda.\nEl m\u00e9todo setContentType (String) en el objeto respuesta establece el tipo de contenido MIME a \"text/html\", para indicar al cliente que la respuesta a su petici\u00f3n es una p\u00e1gina con formato HTML. El m\u00e9todo getWriter() del objeto respuesta devuelve un objeto de tipo PrintWriter, usado como una tuber\u00eda por la que viajar\u00e1n los datos al cliente. El m\u00e9todo println (String) escribe la cadena \"\u00a1Hola, mundo!\" en la respuesta y finalmente se llama al m\u00e9todo close() para cerrar la conexi\u00f3n, que hace que los datos escritos en la tuber\u00eda o stream sean devueltos al cliente."}, {"name": "Aplicaciones con interfaz", "text": "Swing es la biblioteca para la interfaz gr\u00e1fica de usuario avanzada de la plataforma Java SE.\njavax.swing.*\nJFrame\nHola\n()\nsetDefaultCloseOperation\nWindowConstants\nDISPOSE_ON_CLOSE\nadd\nnew\nJLabel\n));\npack\nstatic\nmain\nString\n[]\nargs\n().\nsetVisible\ntrue\nLas instrucciones import indican al compilador de Java que las clases e interfaces del paquete javax.swing se incluyan en la compilaci\u00f3n.\nLa clase Hola extiende (extends) la clase javax.swing.JFrame, que implementa una ventana con una barra de t\u00edtulo y un control para cerrarla.\nEl constructor Hola() inicializa el marco o frame llamando al m\u00e9todo setDefaultCloseOperation (int) heredado de JFrame para establecer las operaciones por defecto cuando el control de cierre en la barra de t\u00edtulo es seleccionado al valor WindowConstants.DISPOSE_ON_CLOSE. Esto hace que se liberen los recursos tomados por la ventana cuando es cerrada, y no simplemente ocultada, lo que permite a la m\u00e1quina virtual y al programa acabar su ejecuci\u00f3n. A continuaci\u00f3n se crea un objeto de tipo JLabel con el texto \"\u00a1Hola, mundo!\", y se a\u00f1ade al marco mediante el m\u00e9todo add (Component), heredado de la clase Container. El m\u00e9todo pack(), heredado de la clase Window, es invocado para dimensionar la ventana y distribuir su contenido.\nEl m\u00e9todo main() es llamado por la JVM al comienzo del programa. Crea una instancia de la clase Hola y hace la ventana sea mostrada invocando al m\u00e9todo setVisible (boolean) de la superclase (clase de la que hereda) con el par\u00e1metro a true. V\u00e9ase que, una vez el marco es dibujado, el programa no termina cuando se sale del m\u00e9todo main(), ya que el c\u00f3digo del que depende se encuentra en un hilo de ejecuci\u00f3n independiente ya lanzado, y que permanecer\u00e1 activo hasta que todas las ventanas hayan sido destruidas."}]}, {"name": "Entornos de funcionamiento", "text": "El dise\u00f1o de Java, su robustez, el respaldo de la industria y su f\u00e1cil portabilidad han hecho de Java uno de los lenguajes con un mayor crecimiento y amplitud de uso en distintos \u00e1mbitos de la industria de la inform\u00e1tica.", "subsections": [{"name": "En dispositivos m\u00f3viles y sistemas embebidos", "text": "Desde la creaci\u00f3n de la especificaci\u00f3n J2ME (Java 2 Platform, Micro Edition), una versi\u00f3n del entorno de ejecuci\u00f3n Java reducido y altamente optimizado, especialmente desarrollado para el mercado de dispositivos electr\u00f3nicos de consumo, se ha producido toda una revoluci\u00f3n en lo que a la extensi\u00f3n de Java se refiere.\nEs posible encontrar microprocesadores dise\u00f1ados para ejecutar bytecode Java y software Java para tarjetas inteligentes (JavaCard), tel\u00e9fonos m\u00f3viles, buscapersonas, set-top-boxes, sintonizadores de TV y otros peque\u00f1os electrodom\u00e9sticos.\nEl modelo de desarrollo de estas aplicaciones es muy semejante a las applets de los navegadores, salvo que en este caso se denominan MIDlets.\nV\u00e9ase Sun Mobile Device Tecnology"}, {"name": "En el navegador web", "text": "Desde la primera versi\u00f3n de Java existe la posibilidad de desarrollar peque\u00f1as aplicaciones (Applets) en Java que luego pueden ser incrustadas en una p\u00e1gina HTML para que sean descargadas y ejecutadas por el navegador web. Estas miniaplicaciones se ejecutan en una JVM que el navegador tiene configurada como extensi\u00f3n (plug-in) en un contexto de seguridad restringido configurable para impedir la ejecuci\u00f3n local de c\u00f3digo potencialmente malicioso.\nEl \u00e9xito de este tipo de aplicaciones (la visi\u00f3n del equipo de Gosling) no fue realmente el esperado debido a diversos factores, siendo quiz\u00e1s el m\u00e1s importante la lentitud y el reducido ancho de banda de las comunicaciones en aquel entonces que limitaba el tama\u00f1o de las applets que se incrustaban en el navegador. La aparici\u00f3n posterior de otras alternativas (aplicaciones web din\u00e1micas de servidor) dej\u00f3 un reducido \u00e1mbito de uso para esta tecnolog\u00eda, quedando hoy relegada fundamentalmente a componentes espec\u00edficos para la intermediaci\u00f3n desde una aplicaci\u00f3n web din\u00e1mica de servidor con dispositivos ubicados en la m\u00e1quina cliente donde se ejecuta el navegador.\nLas applets Java no son las \u00fanicas tecnolog\u00edas (aunque s\u00ed las primeras) de componentes complejos incrustados en el navegador. Otras tecnolog\u00edas similares pueden ser: ActiveX de Microsoft, Flash, Java Web Start, etc."}, {"name": "En sistemas de servidor", "text": "En la parte del servidor, Java es m\u00e1s popular que nunca, desde la aparici\u00f3n de la especificaci\u00f3n de Servlets y JSP (Java Server Pages).\nHasta entonces, las aplicaciones web din\u00e1micas de servidor que exist\u00edan se basaban fundamentalmente en componentes CGI y lenguajes interpretados. Ambos ten\u00edan diversos inconvenientes (fundamentalmente lentitud, elevada carga computacional o de memoria y propensi\u00f3n a errores por su interpretaci\u00f3n din\u00e1mica).\nLos servlets y las JSP supusieron un importante avance ya que:\nEl API de programaci\u00f3n es muy sencilla, flexible y extensible.\nLos servlets no son procesos independientes (como los CGI) y por tanto se ejecutan dentro del mismo proceso que la JVM mejorando notablemente el rendimiento y reduciendo la carga computacional y de memoria requeridas.\nLas JSP son p\u00e1ginas que se compilan din\u00e1micamente (o se precompilan previamente a su distribuci\u00f3n) de modo que el c\u00f3digo que se consigue supone una ventaja en rendimiento substancial frente a muchos lenguajes interpretados.\nLa especificaci\u00f3n de Servlets y JSP define un API de programaci\u00f3n y los requisitos para un contenedor (servidor) dentro del cual se puedan desplegar estos componentes para formar aplicaciones web din\u00e1micas completas. Hoy d\u00eda existen multitud de contenedores (libres y comerciales) compatibles con estas especificaciones.\nA partir de su expansi\u00f3n entre la comunidad de desarrolladores, estas tecnolog\u00edas han dado paso a modelos de desarrollo mucho m\u00e1s elaborados con frameworks (pe Struts, Webwork) que se sobreponen sobre los servlets y las JSP para conseguir un entorno de trabajo mucho m\u00e1s poderoso y segmentado en el que la especializaci\u00f3n de roles sea posible (desarrolladores, dise\u00f1adores gr\u00e1ficos,...) y se facilite la reutilizaci\u00f3n y robustez de c\u00f3digo. A pesar de todo ello, las tecnolog\u00edas que subyacen (Servlets y JSP) son substancialmente las mismas.\nEste modelo de trabajo se ha convertido en uno de los est\u00e1ndar de facto para el desarrollo de aplicaciones web din\u00e1micas de servidor."}, {"name": "En aplicaciones de escritorio", "text": "Hoy en d\u00eda existen multitud de aplicaciones gr\u00e1ficas de usuario basadas en Java. El entorno de ejecuci\u00f3n Java (JRE) se ha convertido en un componente habitual en los PC de usuario de los sistemas operativos m\u00e1s usados en el mundo. Adem\u00e1s, muchas aplicaciones Java lo incluyen dentro del propio paquete de la aplicaci\u00f3n de modo que se ejecuten en cualquier PC.\nEn las primeras versiones de la plataforma Java exist\u00edan importantes limitaciones en las API de desarrollo gr\u00e1fico (AWT). Desde la aparici\u00f3n de la biblioteca Swing la situaci\u00f3n mejor\u00f3 substancialmente y posteriormente con la aparici\u00f3n de bibliotecas como SWT hacen que el desarrollo de aplicaciones de escritorio complejas y con gran dinamismo, usabilidad, etc. sea relativamente sencillo."}, {"name": "Plataformas soportadas", "text": "Una versi\u00f3n del entorno de ejecuci\u00f3n Java JRE (Java Runtime Environment) est\u00e1 disponible en la mayor\u00eda de equipos de escritorio. Sin embargo, Microsoft no lo ha incluido por defecto en sus sistemas operativos. En el caso de Apple, este incluye una versi\u00f3n propia del JRE en su sistema operativo, el Mac OS. Tambi\u00e9n es un producto que por defecto aparece en la mayor\u00eda de las distribuciones de GNU/Linux. Debido a incompatibilidades entre distintas versiones del JRE, muchas aplicaciones prefieren instalar su propia copia del JRE antes que confiar su suerte a la aplicaci\u00f3n instalada por defecto. Los desarrolladores de applets de Java o bien deben insistir a los usuarios en la actualizaci\u00f3n del JRE, o bien desarrollar bajo una versi\u00f3n antigua de Java y verificar el correcto funcionamiento en las versiones posteriores."}]}, {"name": "Programaci\u00f3n", "text": "", "subsections": [{"name": "Expresiones", "text": "Las expresiones son un conjunto de elementos o tokens junto con literales que son evaluados para devolver un resultado.\nLos tokens son elemento m\u00e1s peque\u00f1o de un programa que es significativo, e interpretado o entendido por el compilador, en Java los tokens se dividen en cinco categor\u00edas que son:\nIdentificadores: Son las representaciones que se les da a los nombres que se asignan a las variables, clases, paquetes, m\u00e9todos y constantes en el c\u00f3digo de Java para que el compilador los identifique y el programador pueda entenderlos. En Java los identificadores pueden diferenciar entre may\u00fasculas o min\u00fasculas por ser case sensitive, por lo que la variable cuyo nombre sea \u201cMivariable\u201d, no es igual a \u201cmivariable\u201d, ya que Java identifica estas como variables diferentes por ser case sensitive, tambi\u00e9n se puede utilizar n\u00fameros, o el signo \u201c_\u201d para asignar un identificador.\nPalabras claves: Son los identificadores reservados por java para cumplir con un objetivo espec\u00edfico en el c\u00f3digo y el compilador, se usan de forma limitada y en casos espec\u00edficos. Las palabras claves que usa Java son las siguientes:\nLas palabras que se encuentran en negrilla, son palabras claves para Java aunque actualmente no se utilicen en la versi\u00f3n de Java, pero se pretenden integrar en las siguientes versiones de Java.\nLiterales y constantes: Los literales son sintaxis para asignar valores a una variable, es decir el valor que puede tomar una variable, tambi\u00e9n es un valor constante que puede ser de tipo num\u00e9rico.\nLas constantes son variables que tienen un valor fijo y no puede ser modificado en el trascurso de la ejecuci\u00f3n del c\u00f3digo, estas se declaran por medio de los modificadores final y static.\nfinal\ndouble\npi\n3.1416\nOperadores: Son los que nos indican una evaluaci\u00f3n que se aplica a un objeto o un dato, sobre un identificador o constante. Un ejemplo de operadores puede ser la suma, resta o multiplicaci\u00f3n.\nSeparadores: Se utilizan para indicarle al compilador de Java donde se ubican los elementos del c\u00f3digo, los separadores que admite Java son:\n{ },:;\nTambi\u00e9n el compilador de Java identifica y elimina los comentarios, retornos de carros espacios vac\u00edos y de tabulaci\u00f3n a la hora de compilar por lo que no son considerados parte de un token.\nLas expresiones pueden ser una combinaci\u00f3n en secuencia de variables, operadores y m\u00e9todos. Las expresiones son utilizadas para realizar c\u00e1lculos, para asignar valores a variables, o para controlar la ejecuci\u00f3n del flujo del programa."}, {"name": "Operadores", "text": "Son las expresiones de Java que tras realizar una operaci\u00f3n devuelven un resultado. Seg\u00fan el n\u00famero de operandos que maneje un operador, puede ser de dos tipos: unario o binario.\nLos operadores unarios son aquellos que solo necesitan un operando para devolver un valor.\nLos operadores binarios son aquellos que necesitan dos o m\u00e1s operandos para devolver un valor.\nOperadores a nivel de bit\nno existe\n~ Complemento a 1, este operador invierte los d\u00edgitos, cambiando los 0 por 1 y los 1 por 0, un ejemplo puede ser:\nComo se puede ver se cambian los valores de 0 a 1 y de 1 a 0.\n& AND a nivel de bit, este operador realiza una operaci\u00f3n AND o suma entre dos n\u00fameros de bit, en donde si dos bit son igual a 1 el resultado ser\u00e1 1, de lo contrario ser\u00e1 0, un ejemplo puede ser:\n| Or a nivel de bit, este operador realiza una operaci\u00f3n OR en donde si alguno de los dos n\u00fameros es 1 el resultado ser\u00e1 1, un ejemplo puede ser:\n^ XOR a nivel de bit, este operador realiza la operaci\u00f3n XOR en donde si los dos n\u00fameros son iguales el resultado ser\u00e1 0 de lo contrario ser\u00e1 1, un ejemplo puede ser:\n<< Desplazamiento a la izquierda, este operador desplaza n cantidad de espacios a la izquierda un bit, un ejemplo puede ser;\nComo se puede ver al realizar el desplazamiento se realiza una inserci\u00f3n de un d\u00edgito 0 a la derecha\nPrecedencia de operadores\nLos operadores son una parte principal en las expresiones, el tipo y forma de uso es fundamental a la hora de programar, pero para su uso se tiene que tener en cuenta una serie de normas, como lo son la precedencia de los operadores.\nLos operadores son ejecutados seg\u00fan su precedencia: si cuentan con una precedencia mayor ser\u00e1n evaluados antes que los de precedencia menor; si por casualidad se llegasen a presentar operadores con el mismo nivel de precedencia, estos se evaluar\u00e1n de derecha a izquierda; y si son operadores binarios (menos los operadores de asignaci\u00f3n) se evaluar\u00e1n de izquierda a derecha.\nA Java se le puede indicar qu\u00e9 operadores debe evaluar primero sin importar su precedencia por medio de par\u00e9ntesis \"( )\", de esta forma el compilador de Java interpreta que primero debe ejecutar las operaciones que se encuentran dentro de los par\u00e9ntesis, y luego continuar con los dem\u00e1s operadores.\nLa siguiente tabla clasifica los operadores utilizados en Java seg\u00fan su nivel de precedencia, siendo arriba el nivel m\u00e1s alto:\nUn ejemplo de la precedencia de los operadores en Java podr\u00eda ser el siguiente, en donde tenemos un c\u00f3digo que se encargar\u00e1 de realizar una serie de operaciones aritm\u00e9ticas:\nint\nnumero1\n3\nnumero2\n4\nresultado\n+\n*\nSystem\nout\n//esto imprime el valor de 15\nSeg\u00fan la precedencia de los operadores, la multiplicaci\u00f3n \"*\" tiene mayor prioridad que la suma \"+\", por lo que primero se ejecuta la multiplicaci\u00f3n y luego se realiza la suma.\n//esto imprime el valor de 21\nEn este caso el resultado cambia ya que primero se eval\u00faan los par\u00e1metros que est\u00e1n dentro del par\u00e9ntesis y luego se eval\u00faa el resto de par\u00e1metros.\nUna de las recomendaciones que da Java para el desarrollo es el uso de los par\u00e9ntesis en las operaciones con m\u00e1s de 3 operandos, as\u00ed de esta forma el c\u00f3digo se hace m\u00e1s legible y se evitan errores al momento de compilar."}, {"name": "Sentencias", "text": "Las sentencias son una representaci\u00f3n de una secuencia de acciones que se realizan en Java. La clave fundamental de las sentencias es su punto final que indica que ha finalizado la sentencia y puede continuar con la siguiente, el indicador utilizado es el signo de punto y coma (;). En Java contamos con sentencias que pueden ser de asignaci\u00f3n, de bucles, de salto y condicionales.\nLas sentencias se conforman com\u00fanmente por una instancia y un operador; un ejemplo es la sentencia de asignaci\u00f3n que se conforma por una instancia de una variable, el signo de asignaci\u00f3n y una expresi\u00f3n; un ejemplo es:\nvariable\n12\n2\nLas sentencias de asignaci\u00f3n son aquellas en las que se asigna un valor a una variable o constante.\nLas sentencias condicionales son las que expresan una condici\u00f3n para definir el flujo de ejecuci\u00f3n del programa; entre ellas tenemos if, else y switch.\nLas sentencias de bucles se encargan de realizar una acci\u00f3n cierta cantidad de tiempo dado, o hasta que se cumpla con una condici\u00f3n; entre ellas tenemos while, do-while, y for.\nLas sentencias de salto llevan al compilador a un punto espec\u00edfico del programa o hacia la siguiente sentencia de ejecuci\u00f3n; entre ellas tenemos break, continue, y return."}, {"name": "Conversi\u00f3n de tipos", "text": "En algunos casos suele ser necesario convertir un tipo de dato a otro, esto se le conoce como conversi\u00f3n de tipos, modelado, o tipado, as\u00ed de esta forma poder realizar las operaciones necesarias sobre el valor que se desea convertir.\nSe debe tener en cuenta el tipo de dato que se va a convertir, ya que si se convierte un dato que tenga una cantidad menor de bit al anterior este tendr\u00e1 perdida de informaci\u00f3n, un ejemplo de tipado puede ser un n\u00famero long que se desea convertir a int, el compilador eliminara los primeros 32bit del long para ajustarlo al int ya que el int es de 32bit y el long de 64.\nSi la conversi\u00f3n se realiza a un tipo de datos de menos bit a un tipo de datos con mayor bit, la conversi\u00f3n se realiza autom\u00e1ticamente llamada conversi\u00f3n impl\u00edcita, pero si se realiza de un tipo de datos con mayor bit a menor bit se tiene que realizar una conversi\u00f3n expl\u00edcita, la cual se realiza con un casting, al usar este m\u00e9todo se obliga a realizar la conversi\u00f3n por lo cual puede haber perdida de datos en la conversi\u00f3n.\nPara realizar una conversi\u00f3n expl\u00edcita se tiene que poner el tipo de dato que se desea realizar la conversi\u00f3n entre par\u00e9ntesis, luego el valor o la variable que se desea convertir.\nUn ejemplo de conversi\u00f3n de tipo expl\u00edcito puede ser:\n32\nbyte\nUn ejemplo de una conversi\u00f3n de tipo impl\u00edcita puede ser:\nlong\nLa siguiente tabla muestra los tipos de datos que se pueden realizar una conversi\u00f3n impl\u00edcita desde el dato origen, hasta el dato destino que es el dato en el que se va a convertir.\nLos tipos de datos booleanos no pueden ser convertidos a otro tipo de datos, por ning\u00fan m\u00e9todo mencionado anteriormente. Otro tipo de conversi\u00f3n que no se encuentre en esta tabla desde el origen al destino, tiene que realizarse por medio de una conversi\u00f3n expl\u00edcita por casting.\nCuando se desea realizar una conversi\u00f3n de un tipo string como origen a otro tipo, es necesario utilizar una funci\u00f3n que se encarga de convertir el tipo de dato, la funci\u00f3n necesaria se compone de la variable que va almacenar el resultado, y dependiendo de la variable se usa el par\u00e1metro que inicia con el tipo de dato a convertir, Integer, Byte, Short, o Long, seguida de punto \u201c. \u201c, el cual indica que se cargar\u00e1n los atributos del par\u00e1metro, en donde cargaremos el parseInt si queremos convertir a interger o parseByte si queremos convertir a byte, o dependiendo del tipo de dato, seguido de par\u00e9ntesis en donde se agregara el valor de string a convertir.\nAlgunos ejemplos puede ser:\nnumero3\ntexto\n\u201c\n2013\n\u201d\nInteger\nparseInt\nLong\nparseLong\nByte\nparseByte\nesto suele ser usado para realizar una conversi\u00f3n de texto cuando se ingresan valores num\u00e9ricos por una entrada a java, la cual los detecta como string, as\u00ed de esta forma puede convertir el texto que se ingresa a un n\u00famero para realizar operaciones, como una calculadora."}]}, {"name": "Industria relacionada", "text": "Sun Microsystem, como creador del lenguaje de programaci\u00f3n Java y de la plataforma JDK, mantiene fuertes pol\u00edticas para mantener una especificaci\u00f3n del lenguaje[10]\u200b as\u00ed como de la m\u00e1quina virtual[11]\u200b a trav\u00e9s del JCP. Es debido a este esfuerzo que se mantiene un est\u00e1ndar de facto.\nSon innumerables las compa\u00f1\u00edas que desarrollan aplicaciones para Java y/o est\u00e1n volcadas con esta tecnolog\u00eda:[12]\u200b\nLa industria de la telefon\u00eda m\u00f3vil est\u00e1 fuertemente influenciada por la tecnolog\u00eda Java.\nLos entornos de desarrollo (IDE) IntelliJ IDEA, Netbeans y Eclipse ha tomado un lugar importante entre la comunidad de desarrolladores Java.\nLa fundaci\u00f3n Apache tiene tambi\u00e9n una presencia importante en el desarrollo de bibliotecas y componentes de servidor basados en Java.\nIBM, BEA, IONA, Oracle,... son empresas con grandes intereses y productos creados en y para Java\nVideojuegos como Minecraft,Pokemon Go (aunque este \u00faltimo es una mezcla entre C++ y C#) fueron programados en Java", "subsections": []}, {"name": "Cr\u00edticas", "text": "En 1995 alguien dijo[\u00bfqui\u00e9n?] que Java fue creado para abrir una nueva v\u00eda en la gesti\u00f3n de software complejo, y es por regla general aceptado que se ha comportado bien en ese aspecto. Sin embargo no puede decirse que Java no tenga grietas ni que se adapta completamente a todos los estilos de programaci\u00f3n, todos los entornos, o todas las necesidades.", "subsections": [{"name": "General", "text": "Java no ha aportado capacidades est\u00e1ndares para aritm\u00e9tica en punto flotante. El est\u00e1ndar IEEE 754 para \u201cEst\u00e1ndar para Aritm\u00e9tica Binaria en Punto Flotante\u201d apareci\u00f3 en 1985, y desde entonces es el est\u00e1ndar para la industria. Y aunque la aritm\u00e9tica flotante de Java (cosa que cambi\u00f3 desde el 13 de noviembre de 2006, cuando se abri\u00f3 el c\u00f3digo fuente y se adopt\u00f3 la licencia GPL, aparte de la ya existente)[cita\u00a0requerida][13]\u200b se basa en gran medida en la norma del IEEE, no soporta a\u00fan algunas caracter\u00edsticas. M\u00e1s informaci\u00f3n al respecto puede encontrarse en la secci\u00f3n final de enlaces externos."}, {"name": "El lenguaje", "text": "En un sentido estricto, Java no es un lenguaje absolutamente orientado a objetos, a diferencia de, por ejemplo, Ruby o Smalltalk. Por motivos de eficiencia, Java ha relajado en cierta medida el paradigma de orientaci\u00f3n a objetos, y as\u00ed por ejemplo, no todos los valores son objetos.\nEl c\u00f3digo Java puede ser a veces redundante en comparaci\u00f3n con otros lenguajes. Esto es en parte debido a las frecuentes declaraciones de tipos y conversiones de tipo manual (casting). Tambi\u00e9n se debe a que no se dispone de operadores sobrecargados, y a una sintaxis relativamente simple. Sin embargo, J2SE 5.0 introduce elementos para tratar de reducir la redundancia, como una nueva construcci\u00f3n para los bucles \u2018\u2019\u2019foreach\u2019\u2019\u2019.\nA diferencia de C++, Java no dispone de operadores de sobrecarga definidos por el usuario. Los dise\u00f1adores de Java tomaron esta decisi\u00f3n puesto que consideraban que, bajo ciertas circunstancias, esta caracter\u00edstica pod\u00eda complicar la lectura y mantenimiento de los programas."}, {"name": "Apariencia", "text": "La apariencia externa (el \u2018\u2018\u2018look and feel\u2019\u2019\u2019) de las aplicaciones GUI (Graphical User Interface) escritas en Java usando la plataforma Swing difiere a menudo de la que muestran aplicaciones nativas. Aunque el programador puede usar el juego de herramientas AWT (Abstract Windowing Toolkit) que genera objetos gr\u00e1ficos de la plataforma nativa, el AWT no es capaz de funciones gr\u00e1ficas avanzadas sin sacrificar la portabilidad entre plataformas; ya que cada una tiene un conjunto de API distinto, especialmente para objetos gr\u00e1ficos de alto nivel.\nLas herramientas de Swing, escritas completamente en Java, evitan este problema construyendo los objetos gr\u00e1ficos a partir de los mecanismos de dibujo b\u00e1sicos que deben estar disponibles en todas las plataformas. El inconveniente es el trabajo extra requerido para conseguir la misma apariencia de la plataforma destino. Aunque esto es posible (usando GTK+ y el Look-and-Feel de Windows), la mayor\u00eda de los usuarios no saben c\u00f3mo cambiar la apariencia que se proporciona por defecto por aquella que se adapta a la de la plataforma."}, {"name": "Rendimiento", "text": "El bytecode de Java puede ser interpretado en tiempo de ejecuci\u00f3n por la m\u00e1quina virtual, o bien compilado al cargarse el programa, o durante la propia ejecuci\u00f3n, para generar c\u00f3digo nativo que se ejecuta directamente sobre el hardware. Si es interpretado, ser\u00e1 m\u00e1s lento que usando el c\u00f3digo m\u00e1quina intr\u00ednseco de la plataforma destino. Si es compilado, durante la carga inicial o la ejecuci\u00f3n, la penalizaci\u00f3n est\u00e1 en el tiempo necesario para llevar a cabo la compilaci\u00f3n.\nAlgunas caracter\u00edsticas del propio lenguaje conllevan una penalizaci\u00f3n en tiempo, aunque no son \u00fanicas de Java. Algunas de ellas son el chequeo de los l\u00edmites de arrays, chequeo en tiempo de ejecuci\u00f3n de tipos, y la indirecci\u00f3n de funciones virtuales.\nEl uso de un recolector de basura para eliminar de forma autom\u00e1tica aquellos objetos no requeridos, a\u00f1ade una sobrecarga que puede afectar al rendimiento, o ser apenas apreciable, dependiendo de la tecnolog\u00eda del recolector y de la aplicaci\u00f3n en concreto.\nLas JVM modernas usan recolectores de basura que gracias a r\u00e1pidos algoritmos de manejo de memoria, consiguen que algunas aplicaciones puedan ejecutarse m\u00e1s eficientemente.\nEl rendimiento entre un compilador JIT y los compiladores nativos puede ser parecido, aunque la distinci\u00f3n no est\u00e1 clara en este punto. La compilaci\u00f3n mediante el JIT puede consumir un tiempo apreciable, un inconveniente principalmente para aplicaciones de corta duraci\u00f3n o con gran cantidad de c\u00f3digo. Sin embargo, una vez compilado, el rendimiento del programa puede ser comparable al que consiguen compiladores nativos de la plataforma destino, inclusive en tareas num\u00e9ricas. Aunque Java no permite la expansi\u00f3n manual de llamadas a m\u00e9todos, muchos compiladores JIT realizan esta optimizaci\u00f3n durante la carga de la aplicaci\u00f3n y pueden aprovechar informaci\u00f3n del entorno en tiempo de ejecuci\u00f3n para llevar a cabo transformaciones eficientes durante la propia ejecuci\u00f3n de la aplicaci\u00f3n. Esta recompilaci\u00f3n din\u00e1mica, como la que proporciona la m\u00e1quina virtual HotSpot de Sun, puede llegar a mejorar el resultado de compiladores est\u00e1ticos tradicionales, gracias a los datos que solamente est\u00e1n disponibles durante el tiempo de ejecuci\u00f3n.\nJava fue dise\u00f1ado para ofrecer seguridad y portabilidad, y no ofrece acceso directo al hardware de la arquitectura ni al espacio de direcciones. Java no soporta expansi\u00f3n de c\u00f3digo ensamblador, aunque las aplicaciones pueden acceder a caracter\u00edsticas de bajo nivel usando bibliotecas nativas (JNI, Java Native Interfaces).\nCaracter\u00edsticas de Java:\n1. Lenguaje Simple: \u201cSe lo conoce como lenguaje simple porque viene de la misma estructura de c y c++; ya que c++ fue un referente para la creaci\u00f3n de java por eso utiliza determinadas caracter\u00edsticas de c++ y se han eliminado otras.\u201d\n2. Orientado a Objetos.\n3. Multihilos: Java tiene una facilidad de cumplir varias funciones al mismo tiempo, gracias a su funci\u00f3n de multihilos, ya que por cada hilo que el programa tenga se ejecutar\u00e1n en tiempo real muchas funciones al mismo tiempo.\nAlto Rendimiento: Java es considerado de alto rendimiento por ser tan veloz en el momento de correr los programas y por ahorrarse muchas l\u00edneas de c\u00f3digo."}]}, {"name": "Recursos", "text": "", "subsections": [{"name": "JRE", "text": "El JRE (Java Runtime Environment, o Entorno en Tiempo de Ejecuci\u00f3n de Java) es el software necesario para ejecutar cualquier aplicaci\u00f3n desarrollada para la plataforma Java. El usuario final usa el JRE como parte de paquetes software o plugins (o conectores) en un navegador Web. Sun ofrece tambi\u00e9n el SDK de Java 2, o JDK (Java Development Kit) en cuyo seno reside el JRE, e incluye herramientas como el compilador de Java, Javadoc para generar documentaci\u00f3n o el depurador. Puede tambi\u00e9n obtenerse como un paquete independiente, y puede considerarse como el entorno necesario para ejecutar una aplicaci\u00f3n Java, mientras que un desarrollador debe adem\u00e1s contar con otras facilidades que ofrece el JDK."}, {"name": "Componentes", "text": "Bibliotecas de Java, que son el resultado de compilar el c\u00f3digo fuente desarrollado por quien implementa la JRE, y que ofrecen apoyo para el desarrollo en Java. Algunos ejemplos de estas bibliotecas son:\nLas bibliotecas centrales, que incluyen:\nUna colecci\u00f3n de bibliotecas para implementar estructuras de datos como listas, arrays, \u00e1rboles y conjuntos.\nBibliotecas para an\u00e1lisis de XML.\nSeguridad.\nBibliotecas de internacionalizaci\u00f3n y localizaci\u00f3n.\nBibliotecas de integraci\u00f3n, que permiten la comunicaci\u00f3n con sistemas externos. Estas bibliotecas incluyen:\nLa API para acceso a bases de datos JDBC (Java DataBase Conectivity).\nLa interfaz JNDI (Java Naming and Directory Interface) para servicios de directorio.\nRMI (Remote Method Invocation) y CORBA para el desarrollo de aplicaciones distribuidas.\nBibliotecas para la interfaz de usuario, que incluyen:\nEl conjunto de herramientas nativas AWT (Abstract Window Toolkit), que ofrece componentes GUI (Graphical User Interface), mecanismos para usarlos y manejar sus eventos asociados.\nLas Bibliotecas de Swing, construidas sobre AWT pero ofrecen implementaciones no nativas de los componentes de AWT.\nAPI para la captura, procesamiento y reproducci\u00f3n de audio.\nUna implementaci\u00f3n dependiente de la plataforma en que se ejecuta de la m\u00e1quina virtual de Java (JVM), que es la encargada de la ejecuci\u00f3n del c\u00f3digo de las bibliotecas y las aplicaciones externas.\nPlugins o conectores que permiten ejecutar applets en los navegadores Web.\nJava Web Start, para la distribuci\u00f3n de aplicaciones Java a trav\u00e9s de Internet.\nDocumentaci\u00f3n y licencia."}, {"name": "API", "text": "Se define tres plataformas en un intento por cubrir distintos entornos de aplicaci\u00f3n. As\u00ed, ha distribuido muchas de sus API (Application Program Interface) de forma que pertenezcan a cada una de las plataformas:\nJava ME (Java Platform, Micro Edition) o J2ME \u2014 orientada a entornos de limitados recursos, como tel\u00e9fonos m\u00f3viles, PDAs (Personal Digital Assistant), etc.\nJava SE (Java Platform, Standard Edition) o J2SE \u2014 para entornos de gama media y estaciones de trabajo. Aqu\u00ed se sit\u00faa al usuario medio en un PC de escritorio.\nJava EE (Java Platform, Enterprise Edition) o J2EE \u2014 orientada a entornos distribuidos empresariales o de Internet.\nLas clases en las API de Java se organizan en grupos disjuntos llamados paquetes. Cada paquete contiene un conjunto de interfaces, clases y excepciones relacionadas. La informaci\u00f3n sobre los paquetes que ofrece cada plataforma puede encontrarse en la documentaci\u00f3n de \u00e9sta.\nEl conjunto de las API es controlado por Sun Microsystems junto con otras entidades o personas a trav\u00e9s del programa JCP (Java Community Process). Las compa\u00f1\u00edas o individuos participantes del JCP pueden influir de forma activa en el dise\u00f1o y desarrollo de las API, algo que ha sido motivo de controversia."}, {"name": "Extensiones y arquitecturas relacionadas", "text": "Las extensiones[14]\u200b de Java est\u00e1n en paquetes que cuelgan de la ra\u00edz javax: javax.*. No se incluyen en la JDK o el JRE. Algunas de las extensiones y arquitecturas ligadas estrechamente al lenguaje Java son:\nJava EE (Java Platform, Enterprise Edition; antes J2EE) \u2014para aplicaciones distribuidas orientadas al entorno empresarial"}]}, {"name": "Java en c\u00f3digo abierto", "text": "La evoluci\u00f3n basada en un comit\u00e9 en el que participen todos los implicados no es suficiente y la comunidad demandaba desde hace tiempo la liberaci\u00f3n de las API y bibliotecas b\u00e1sicas de la JDK.\nEn diciembre de 2006, Sun Microsystems comenz\u00f3 el relanzamiento de su plataforma Java[15]\u200b bajo la licencia GPL de GNU.\nEn abril de 2009 Oracle adquiri\u00f3 Sun Microsystems, lo que gener\u00f3 temor en la comunidad ante la posible mercantilizaci\u00f3n del lenguaje de programaci\u00f3n orientado a objetos m\u00e1s popular actualmente. Por ahora Oracle ha seguido manteniendo Java, estando las versiones posteriores a la 6 bajo su control.\nSe instala una versi\u00f3n homebrew de PSPKVM (0.5.5) para emular la plataforma de Java en PSP. Esto permite usar programas JAVA en esta videoconsola.", "subsections": [{"name": "Alternativas libres", "text": "Existen alternativas para el entorno de ejecuci\u00f3n y de desarrollo de Java con una gran cobertura de funcionalidades con respecto a las implementaciones comerciales de Sun, IBM, Bea, etc."}, {"name": "Cr\u00edticas referentes a Java y el software libre", "text": "Free But Shackled \u2014 The Java Trap, de Richard Stallman, 12 de abril de 2004. (respuesta de James Gosling)\nTraducci\u00f3n al espa\u00f1ol de este art\u00edculo: Libre pero encadenado. La trampa del Java. (N\u00f3tese que hay una nota en un recuadro amarillo que habla de la situaci\u00f3n actual con respecto a lo que se dice en ese art\u00edculo)\nNotar que este art\u00edculo fue escrito antes de la liberaci\u00f3n del c\u00f3digo fuente de Java. En la actualidad la postura de la Free Software Foundation y de Richard Stallman han cambiado[cita\u00a0requerida], mostr\u00e1ndose partidarios ambos de su uso en software libre."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Applet Java\nJavaOne\nJavaOS\nJavapedia\nJava Community Process\nJava User Group\nM\u00e1quina virtual Java\nOpenJDK\nPlataforma Java", "subsections": []}, {"name": "Referencias", "text": "Jon Byous, Java technology: The early years. Sun Developer Network, sin fecha[ca. 1998]. Recuperado 21 de abril de 2005.\nJames Gosling, A brief history of the Green project. Java.net, sin fecha [ca. Q1/1998]. Recuperado 22 de abril de 2005.\nJames Gosling, Bill Joy, Guy Steele, y Gilad Bracha, The Java language specification, tercera edici\u00f3n. Addison-Wesley, 2005. ISBN 0-321-24678-0.\nTim Lindholm y Frank Yellin. The Java Virtual Machine specification, segunda edici\u00f3n. Addison-Wesley, 1999. ISBN 0-201-43294-3.", "subsections": []}, {"name": "Notas", "text": "\u2191 https://www.oracle.com/java/technologies/javase/18-0-1-relnotes.html\n\u2191 \u00abProgramming Language Popularity\u00bb. 2009. Archivado desde el original el 16 de enero de 2009. Consultado el 16 de enero de 2009.\u00a0\n\u2191 \u00abTIOBE Programming Community Index\u00bb. 2009. Consultado el 6 de mayo de 2009.\u00a0\n\u2191 Sun and Oracle (Oracle.com)\n\u2191 \u00abJonathan Schwartz's Blog: Different Isn't Always Better, But Better's Always Different\u00bb. Blogs.sun.com. Archivado desde el original el 5 de septiembre de 2009. Consultado el 24 de septiembre de 2010.\u00a0\n\u2191 M. Dom\u00ednguez-Dorado,. Todo Programaci\u00f3n. N\u00ba 8. P\u00e1gs. 39-42. Editorial Iberprensa (Madrid). DL M-13679-2004. Febrero, 2005. Dibujando sobre lienzos en Java..\u00a0\n\u2191 Redacci\u00f3n Oracle, Oracle anuncia Java 16, 18 de marzo de 2021.\n\u2191 Notas de la Versi\u00f3n [1]\n\u2191 Microsoft (ed.). \u00abSobrecarga de operadores (C# y Java)\u00bb. C# para desarrolladores de Java. Consultado el 21 de junio de 2018.\u00a0\n\u2191 Especificaci\u00f3n del lenguaje Java\n\u2191 Especificaci\u00f3n de la m\u00e1quina virtual Java\n\u2191 madridiario.es. \u00abLa formaci\u00f3n en programaci\u00f3n Java sigue en cabeza en cuanto a la demanda de los estudiantes\u00bb. Consultado el 29 de enero de 2019.\u00a0\n\u2191 \u00abUn an\u00e1lisis a Java - Apuntes de Ingenier\u00eda Inf\u00f3rmatica - Docsity\u00bb. www.docsity.com. Consultado el 14 de noviembre de 2018.\u00a0\n\u2191 M. Dom\u00ednguez-Dorado, Guillermo Som. Todo Programaci\u00f3n. N\u00ba 11. P\u00e1gs. 10-20. Editorial Iberprensa (Madrid). DL M-13679-2004. Agosto, 2005. Imprimir desde Java y .NET.\u00a0\n\u2191 Sun begins releasing Java under the GPL - Free Software Foundation", "subsections": []}, {"name": "Enlaces externos", "text": " Wikilibros alberga un libro o manual sobre Programaci\u00f3n en Java.\nProgramas hechos en java con c\u00f3digo fuente\nRecopilaci\u00f3n de c\u00f3digos fuente en java\n5 Beneficios de Java", "subsections": [{"name": "Oracle - Sun", "text": "Sitio oficial de Java para desarrolladores, etc\nThe Java Language Specification, Tercera edici\u00f3n Especificaci\u00f3n oficial del lenguaje Java\nTutorial de Sun sobre el Lenguaje de programaci\u00f3n Java\nLibro blanco original de Java, 1996"}, {"name": "Tutoriales", "text": "Thinking in Java, de Bruce Eckel (en l\u00ednea)\nAn introduction to Computer Science using Java por Bradley Kjell.\nJava Course, de A.B. Downey.\nComputer-Books.us Colecci\u00f3n de libros sobre Java disponibles para descarga gratuita.\nEn castellano:\nVideoTutoriales para aprender desde cero \u00abEmpieza a Programar\u00bb\nColecci\u00f3n \u00abJava a tope\u00bb de libros electr\u00f3nicos (Universidad de M\u00e1laga. Espa\u00f1a)\nCurso de Java, de cero a hasta conexi\u00f3n a MYSQL, incluye PDF (M\u00e9xico)\nCurso de java que sigue el \u00edndice del libro de java de Kathy Sierra, contiene PDFs y ejercicios (M\u00e9xico)\nCapacitaci\u00f3n en Java sobre Grandes Proyectos\nAprender programaci\u00f3n Java desde cero (Portal web aprenderaprogramar.com, en l\u00ednea y en formato pdf)\nDescifrando Java\nCurso de Java desde cero (pildorasinformaticas.com)"}, {"name": "Cr\u00edticas", "text": "Softpanorama Java Critique Page: Java vs Scripting Languages, de Nikolai Bezroukov\n[6], de W. Kahan und Joseph D. Darcy en el ACM 1998 Workshop on Java for High\u2013Performance Network Computing"}]}]}
{"url": "https://es.wikipedia.org/wiki/Jython", "title": "Jython", "summary": " Jython (Python en Java) es un lenguaje de programaci\u00f3n de alto nivel, din\u00e1mico y orientado a objetos basado en Python e implementado \u00edntegramente en Java. Es el sucesor de JPython. Jython al igual que Python es un proyecto de software libre. El lenguaje de programaci\u00f3n Jython es pr\u00e1cticamente id\u00e9ntico a la versi\u00f3n 2.5[1]\u200b de Python.", "sections": [{"name": "\u00cdndice", "text": "1 Ejecuci\u00f3n\n2 Lenguaje din\u00e1mico\n3 Variables\n4 Utilizando Java en Jython\n5 Referencias\n6 Enlaces externos", "subsections": []}, {"name": "Ejecuci\u00f3n", "text": "Para ejecutarlo hay que darle la siguiente l\u00ednea de comandos en el int\u00e9rprete de comandos del sistema.\nPara ejecutar un programa escrito en Jython basta con agregar a la l\u00ednea de comando el nombre del programa a ejecutar (que puede tener la extensi\u00f3n .py):", "subsections": []}, {"name": "Lenguaje din\u00e1mico", "text": "Jython al igual que Python, Tcl/Tk, Ruby y otros lenguajes similares es un lenguaje din\u00e1mico. Esto quiere decir que se puede escribir y ejecutar el c\u00f3digo de un programa al mismo tiempo. De hecho, no es necesario compilar el programa para ejecutar el c\u00f3digo en Jython: basta con agregar en la l\u00ednea de ejecuci\u00f3n de Jython el nombre del c\u00f3digo a correr para que Jython haga funcionar el programa. Sin embargo, esto se hace a costa del sacrificio en tiempo de ejecuci\u00f3n del programa.", "subsections": []}, {"name": "Variables", "text": "Existen muchos tipos de variables en Jython pero los m\u00e1s importantes son:\nCadenas.\nN\u00fameros enteros.\nN\u00fameros flotantes.\nN\u00fameros largos, en este tipo de variables debe ser indicado con una l al final del n\u00famero.\nN\u00fameros complejos.\nObjetos de Java.\nLas variables en Jython, como en Python, se pueden utilizar en cualquier momento del programa: no es necesario declararlas en un lugar determinado. El siguiente ejemplo muestra el uso de las variables. A la variable a se le asigna el valor 5, se imprime y luego se utiliza la variable b\na\n=\n5\n# Declaramos y le asignamos a \"a\" un valor de 5\nprint\n# Se imprime \"a\"\nb\n+\n2\n# Declaramos y asignamos a \"b\" el valor de a+2\n# Se imprime \"b\"\nAunque no es necesario poner las variables en un lugar concreto, hay restricciones; el siguiente programa nos devolver\u00e1 un error:\nLa raz\u00f3n es simple: ni a ni b tienen valor alguno, puesto que no han sido declaradas. Hay que inicializar las variables para utilizarlas.\nLas variables tanto en Jython como en Python son gen\u00e9ricas y din\u00e1micas, es decir, se pueden utilizar indistintamente para representar enteros, cadenas, flotantes, clases, etc. y pueden ser definidas o cambiadas de tipo en cualquier momento de la ejecuci\u00f3n del programa.", "subsections": []}, {"name": "Utilizando Java en Jython", "text": "El uso de Java en Jython es bastante f\u00e1cil: basta indicar qu\u00e9 biblioteca se va a utilizar y llamar a sus funciones como en el siguiente ejemplo:\nfrom\njava.util\nimport\nRandom\n# Asigna una instancia de la clase \"Random\" a la variable \"Aleatorio\".\nAleatorio\n()\n# A la variable \"b\" se asigna un n\u00famero aleatorio flotante, del 1 hasta aproximadamente el 7.\n.\nnextFloat\n*\n6\n1\nEste es un ejemplo de una peque\u00f1a ventana usando Swing:\npawt\nswing\njava\ndef\nsalir\n(\nevent\n):\njava\nlang\nSystem\nexit\n0\n)\nframe\nJFrame\n'Ejemplo Swing'\n,\nvisible\nboton\nJButton\n'\u00a1\u00a1Este es un bot\u00f3n en Swing!!~'\nactionPerformed\nsalir\ncontentPane\nadd\npack", "subsections": []}, {"name": "Referencias", "text": "\u2191 Is Jython the same language as Python?", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web oficial de Jython (en ingl\u00e9s).\nProyecto Jython en SourceForge (en ingl\u00e9s).", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/LAMP", "title": "LAMP", "summary": "LAMP es el acr\u00f3nimo usado para describir un sistema de infraestructura de internet que usa las siguientes herramientas:[1]\u200b[2]\u200b\nLinux, el sistema operativo; En algunos casos tambi\u00e9n se refiere a LDAP.\nApache, el servidor web;\nMySQL/MariaDB, el gestor de bases de datos;\nPHP, el lenguaje de programaci\u00f3n.\nLa combinaci\u00f3n de estas tecnolog\u00edas es usada principalmente para definir la infraestructura de un servidor web, utilizando un paradigma de programaci\u00f3n para el desarrollo del sistema .\nA pesar de que el origen de estos programas de c\u00f3digo abierto no fue espec\u00edficamente dise\u00f1ado para trabajar entre s\u00ed, la combinaci\u00f3n se populariz\u00f3 debido a su bajo coste de adquisici\u00f3n y ubicuidad de sus componentes (ya que vienen pre-instalados en la mayor\u00eda de las distribuciones linux). Cuando son combinados, representan un conjunto de soluciones que proporcionan servidores de aplicaciones.\nEl t\u00e9rmino fue ampliamente promocionado por el editor de la editorial O'Reilly, Dale Dougherty, a sugerencia de David Axmark y Monty Widenius, desarrolladores de MySQL, debido a que fue la tecnolog\u00eda que se utiliz\u00f3 en Yahoo como propuesta de la Universidad Tecnol\u00f3gica de Nezahualc\u00f3yotl, M\u00e9xico para ser utilizada en la Copa del Mundo; la influencia de dicha editorial en el mundo del software libre hizo que el acr\u00f3nimo se popularizara r\u00e1pidamente en todo el mundo.", "sections": [{"name": "\u00cdndice", "text": "1 Software\n1.1 GNU/Linux\n1.2 Apache HTTP Server\n1.3 MySQL\n1.4 PHP\n2 Variantes y alternativas\n3 V\u00e9ase tambi\u00e9n\n4 Referencias", "subsections": []}, {"name": "Software", "text": "", "subsections": [{"name": "GNU/Linux", "text": "Art\u00edculo principal:\nLinux es un n\u00facleo de sistema operativo libre tipo Unix."}, {"name": "Apache HTTP Server", "text": "El servidor HTTP Apache es un servidor web libre y de c\u00f3digo abierto, el m\u00e1s popular en cuanto a uso[3]\u200b\n, sirviendo de facto como plataforma de referencia para el dise\u00f1o y evaluaci\u00f3n de otros servidores web."}, {"name": "MySQL", "text": "MySQL es un sistema de gesti\u00f3n de bases de datos relacional, que por lo tanto utiliza SQL, multihilo y multiusuario del que se estiman m\u00e1s de un mill\u00f3n de instalaciones."}, {"name": "PHP", "text": "PHP (acr\u00f3nimo recursivo de \"PHP: Hypertext Preprocessor\") es un lenguaje de programaci\u00f3n dise\u00f1ado para producir sitios web din\u00e1micos. PHP es utilizado en aplicaciones del lado del servidor, aunque puede ser usado tambi\u00e9n desde una interfaz de l\u00ednea de comandos o como aplicaci\u00f3n de escritorio."}]}, {"name": "Variantes y alternativas", "text": "PHP es reemplazado a veces por Perl o Python, y el acr\u00f3nimo se mantiene. Algunos desarrolladores prefieren usar la M para referirse a los m\u00f3dulos del servidor HTTP Apache, como mod_perl o mod_python, y utilizar la P para referirse a PostgreSQL, invirtiendo la M y la P en funcionalidad. El acr\u00f3nimo \"LAMR\" es ocasionalmente usado para indicar Ruby on Rails en vez de PHP.\nUna variante de esta designa a la M como Middleware (incluyendo Ruby, Perl, Python, etc.) y la P para PostgreSQL.\nOtras soluciones incluyen entornos de desarrollo como el WebObjects de Apple Inc., Java EE, Grails o la arquitectura Microsoft .NET, de Microsoft.\nSimilarmente, la L es ocasionalmente reemplazada con una M (por Mac OS X), D (por Darwin BSD), B (por BSD) o 'W' (por Microsoft Windows)", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "WAMP\nXAMPP\nMAMP\nMEAN\nAppserv\nServidor\nApache\nMySQL\nPHP\nLinux", "subsections": []}, {"name": "Referencias", "text": "\u2191 Digitalocean (21 de junio de 2018). \u00abC\u00f3mo instalar en Ubuntu 18.04 la pila LAMP \u2014 Linux, Apache, MySQL y PHP\u00bb. Consultado el 31 de enero de 2021.\u00a0\n\u2191 Debian. \u00abLAMP, Linux Apache MySQL PHP\u00bb (en ingl\u00e9s). Consultado el 31 de enero de 2021.\u00a0\n\u2191 \u00abMarket Shares for Top Servers Across All Domains August 1995 - April 2007\u00bb (en ingl\u00e9s). News.netcraft.com. Consultado el 15 de septiembre de 2009.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Latino_(Lenguaje_de_Programaci%C3%B3n)", "title": "Latino (lenguaje de programaci\u00f3n)", "summary": "[\n]\nLatino es un lenguaje de programaci\u00f3n procedural con sintaxis en espa\u00f1ol de c\u00f3digo abierto desarrollado en C, inspirado en Lua y Python.\nEste lenguaje fue creado por Primitivo Roman Montero en el 2015 con la versi\u00f3n v0.1-alpha hasta su versi\u00f3n v1.0 que fue lanzada en el 2017. En la actualidad, este lenguaje sigue su desarrollo bajo la direcci\u00f3n de Melvin Guerrero con las versiones v1.1.0 y v1.2.0 en adelante.\nHasta la fecha este lenguaje dispone de soporte para trabajar en sistemas operativos de 64 bits tales como MS-Windows, Mac OS, y Linux.\nDesarrollo web (server-side),\nConexiones de base de datos,\nC\u00e1lculos matem\u00e1ticas,\nSystem Scripting.", "sections": [{"name": "\u00cdndice", "text": "1 \u00bfY por qu\u00e9 un lenguaje de programaci\u00f3n m\u00e1s?\n2 Caracter\u00edsticas del lenguaje\n3 Ejemplos de c\u00f3digo\n3.1 Ejemplo 1\n3.2 Ejemplo 2\n4 Elementos del lenguaje\n4.1 Operadores\n4.2 Comentarios\n4.2.1 Comentarios de una l\u00ednea simple\n4.2.2 Comentarios de l\u00edneas m\u00faltiples\n4.3 Variables\n5 Referencias\n6 Enlaces externos", "subsections": []}, {"name": "\u00bfY por qu\u00e9 un lenguaje de programaci\u00f3n m\u00e1s?", "text": "Este lenguaje nace de la necesidad de incrementar la educaci\u00f3n de nivel b\u00e1sico y avanzado, para que ni\u00f1os, adolescentes y tambi\u00e9n adultos se motiven a entrar en el mundo de la programaci\u00f3n y desarrollar aplicaciones con una sintaxis a su idioma.\nAl utilizar este lenguaje una sintaxis en espa\u00f1ol, se espera que se reduzca el tiempo de aprendizaje y a su vez se maximice la comprensi\u00f3n al programar.", "subsections": []}, {"name": "Caracter\u00edsticas del lenguaje", "text": "Latino al igual que Python es un lenguaje de programaci\u00f3n multiparadigma. Esto significa que m\u00e1s que forzar a los programadores a adoptar un estilo particular de programaci\u00f3n, permite varios estilos: programaci\u00f3n imperativa y programaci\u00f3n funcional.\nLatino tambi\u00e9n hace uso de un tipado din\u00e1mico y conteo de referencias para la administraci\u00f3n de memoria.\nUna cualidad importante de este lenguaje de programaci\u00f3n es que al estar desarrollado en C facilita la adaptaci\u00f3n de nuevas librer\u00edas por medio de su API (Latino API).", "subsections": []}, {"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": [{"name": "Ejemplo 1", "text": "Este es un ejemplo de un programa Hola Mundo\nescribir\n(\n\"Hola Mundo\"\n)\nprint\n#include\n \n<stdio.h>\nint\nmain\n()\n{\n        \nprintf\n\"Hola mundo\n\\n\n\"\n);\nreturn\n0\n;\n}"}, {"name": "Ejemplo 2", "text": "\"Escribe un numero:\"\nnum\n=\nleer\nsi\n%\n2\n==\n0\n  \n\"El n\u00famero \"\n..\n\" es par\"\nsino\n\" es impar\"\nfin\n<conio.h>\n    \nnumero\n\"Entre un n\u00famero \"\nscanf\n\"%d\"\n,\n&\nif\n2\nEl n\u00famero %d es par\"\nelse\nEl n\u00famero %d es impar\"\ngetch\n();\n/* Pausa */"}]}, {"name": "Elementos del lenguaje", "text": "", "subsections": [{"name": "Operadores", "text": "Los operadores aritm\u00e9ticos funcionan igual que en C y C++.\nEl resultado de los operadores relacionales y l\u00f3gicos es un valor de tipo bool."}, {"name": "Comentarios", "text": "Comentarios de una l\u00ednea simple\nLos comentarios de una l\u00ednea simple pueden comenzar con un signo de # \u00f3 //.\nCualquier texto o c\u00f3digo que este despu\u00e9s de estos signos ser\u00e1n ignorados por Latino (No se ejecutaran).\nx\n5\n#\nDeclaramos\nuna\nvariable\ncon\nel\nnombre\nde\nX\ny\nle\nhemos\nasignado\nun\nvalor\n+\n2\nY\nm\u00e1s\n//\nEn\nesta\nl\u00ednea\nc\u00f3digo\nescribiremos\nen\npantalla\ncual\ntiene\nComentarios de l\u00edneas m\u00faltiples\nLos comentarios de l\u00edneas m\u00faltiples comienzan con /* y terminan con */. Cualquier texto o c\u00f3digo que este dentro de estos signos ser\u00e1n ignorados por Latino (no se ejecutaran).\n/*\nEl\nsiguiente\nrepite\nmismo\nejemplo\nque\nvimos\nhace\nmomento\narriba\nlas\nmismas\nvariables\ncomo\npara\nusar\n*/"}, {"name": "Variables", "text": "Las variables se definen de forma din\u00e1mica, lo que significa que no se tiene que especificar cu\u00e1l es su tipo de antemano y puede tomar distintos valores en otro momento, incluso de un tipo diferente al que ten\u00eda previamente. Se usa el s\u00edmbolo = para asignar valores.\n1\n\"texto\"\nEsto\nes\nposible\nporque\nlos\ntipos\nson\nasignados\ndin\u00e1micamente"}]}, {"name": "Referencias", "text": "\u2191 \u00abLenguaje Latino lista de versiones lanzadas\u00bb. github.com. Consultado el 11 de octubre de 2020.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Lenguaje Latino\nManual Latino\nStack OverFlow", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n", "title": "Lenguaje de programaci\u00f3n", "summary": "Un lenguaje de programaci\u00f3n es un lenguaje formal (o artificial, es decir, un lenguaje con reglas gramaticales bien definidas) que le proporciona a una persona, en este caso el programador, la capacidad de escribir (o programar) una serie de instrucciones o secuencias de \u00f3rdenes en forma de algoritmos con el fin de controlar el comportamiento f\u00edsico o l\u00f3gico de un sistema inform\u00e1tico, de manera que se puedan obtener diversas clases de datos o ejecutar determinadas tareas. A todo este conjunto de \u00f3rdenes escritas mediante un lenguaje de programaci\u00f3n se le denomina programa inform\u00e1tico.[1]\u200b[2]\u200b[3]\u200b[4]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Caracter\u00edsticas\n2 Historia\n3 Clasificaci\u00f3n de los lenguajes de programaci\u00f3n\n3.1 Clasificaci\u00f3n hist\u00f3rica o por generaciones\n4 Paradigma de programaci\u00f3n\n5 Clasificaci\u00f3n por paradigmas\n6 Elementos\n6.1 Variables y vectores\n6.2 Condicionales\n6.3 Bucles\n6.4 Funciones\n6.5 Sintaxis\n6.6 Sem\u00e1ntica est\u00e1tica\n6.7 Sistema de tipos\n6.7.1 Lenguajes tipados versus lenguajes no tipados\n6.7.2 Tipos est\u00e1ticos versus tipos din\u00e1micos\n6.7.3 Tipos d\u00e9biles y tipos fuertes\n7 Implementaci\u00f3n\n8 Dialectos\n9 T\u00e9cnica\n9.1 Paradigmas\n10 V\u00e9ase tambi\u00e9n\n11 Referencias\n12 Enlaces externos", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "Programar viene a ser el proceso de crear un software fiable mediante la escritura, prueba, depuraci\u00f3n, compilaci\u00f3n o interpretaci\u00f3n, y mantenimiento del c\u00f3digo fuente de dicho programa inform\u00e1tico. B\u00e1sicamente, este proceso se define aplicando l\u00f3gicamente los siguientes pasos:\nEl desarrollo l\u00f3gico del programa para resolver un problema en particular.\nEscritura de la l\u00f3gica del programa empleando un lenguaje de programaci\u00f3n espec\u00edfico (codificaci\u00f3n del programa).\nCompilaci\u00f3n o interpretaci\u00f3n del programa hasta convertirlo en lenguaje de m\u00e1quina.\nPrueba y depuraci\u00f3n del programa.\nDesarrollo de la documentaci\u00f3n.\nLos lenguajes de programaci\u00f3n est\u00e1n formados por un conjunto de s\u00edmbolos (llamado alfabeto), reglas gramaticales (l\u00e9xico/morfol\u00f3gicas y sint\u00e1cticas) y sem\u00e1nticas, que en conjunto definen las estructuras v\u00e1lidas del lenguaje y su significado. Existe el error com\u00fan de tratar como sin\u00f3nimos los t\u00e9rminos 'lenguaje de programaci\u00f3n' y 'lenguaje inform\u00e1tico'. Los lenguajes inform\u00e1ticos engloban a los lenguajes de programaci\u00f3n y a otros m\u00e1s, como por ejemplo HTML (lenguaje para el marcado de p\u00e1ginas web, que no es propiamente un lenguaje de programaci\u00f3n, sino un conjunto de instrucciones que permiten estructurar el contenido de los documentos).\nEl lenguaje de programaci\u00f3n permite especificar de manera precisa sobre qu\u00e9 datos debe operar un software espec\u00edfico, c\u00f3mo deben ser almacenados o transmitidos dichos datos, y qu\u00e9 acciones debe tomar el software bajo una variada gama de circunstancias. Todo esto, a trav\u00e9s de un lenguaje que intenta estar relativamente pr\u00f3ximo al lenguaje humano o natural. Una caracter\u00edstica relevante de los lenguajes de programaci\u00f3n es precisamente que m\u00e1s de un programador pueda usar un conjunto com\u00fan de instrucciones que sean comprendidas entre ellos para realizar la construcci\u00f3n de un programa de forma colaborativa.", "subsections": []}, {"name": "Historia", "text": "Art\u00edculo principal:\nPara que la computadora entienda nuestras instrucciones debe usarse un lenguaje espec\u00edfico conocido como c\u00f3digo m\u00e1quina, que la m\u00e1quina lee f\u00e1cilmente, pero que es excesivamente complicado para las personas. De hecho, solo consiste en cadenas extensas de n\u00fameros 0 y 1.\nPara facilitar el trabajo, los primeros operadores de computadoras decidieron crear un traductor para reemplazar los 0 y 1 por palabras o abstracci\u00f3n de palabras y letras provenientes del ingl\u00e9s; este se conoce como lenguaje ensamblador. Por ejemplo, para sumar se usa la letra A de la palabra inglesa add (sumar). El lenguaje ensamblador sigue la misma estructura del lenguaje m\u00e1quina, pero las letras y palabras son m\u00e1s f\u00e1ciles de recordar y entender que los n\u00fameros.\nLa necesidad de recordar secuencias de programaci\u00f3n para las acciones usuales llev\u00f3 a denominarlas con nombres f\u00e1ciles de memorizar y asociar: ADD (sumar), SUB (restar), MUL (multiplicar), CALL (ejecutar subrutina), etc. A esta secuencia de posiciones se le denomin\u00f3 \"instrucciones\", y a este conjunto de instrucciones se le llam\u00f3 lenguaje ensamblador. Posteriormente aparecieron diferentes lenguajes de programaci\u00f3n, los cuales reciben su denominaci\u00f3n porque tienen una estructura sint\u00e1ctica semejante a la de los lenguajes escritos por los humanos, denominados tambi\u00e9n lenguajes de alto nivel.[5]\u200b\nA finales de 1953, John Backus someti\u00f3 una propuesta a sus superiores en IBM para desarrollar una alternativa m\u00e1s pr\u00e1ctica al lenguaje ensamblador, para programar la computadora central IBM 704. El hist\u00f3rico equipo Fortran de John Backus consisti\u00f3 en los programadores Richard Goldberg, Sheldon F. Best, Harlan Herrick, Peter Sheridan, Roy Nutt, Robert Nelson, Irving Ziller, Lois Haibt y David Sayre.[6]\u200b\nEl primer manual para el lenguaje Fortran apareci\u00f3 en octubre de 1956, con el primer compilador Fortran entregado en abril de 1957. Esto era un compilador optimizado, porque los clientes eran reacios a usar un lenguaje de alto nivel a menos que su compilador pudiera generar c\u00f3digo cuyo desempe\u00f1o fuera comparable al de un c\u00f3digo hecho a mano en lenguaje ensamblador.\nEn 1960 se cre\u00f3 COBOL, uno de los lenguajes usados a\u00fan en la actualidad, en inform\u00e1tica de gesti\u00f3n.\nA medida que la complejidad de las tareas que realizaban las computadoras aumentaba, se hizo necesario disponer de un m\u00e9todo m\u00e1s eficiente para programarlas. Entonces se crearon los lenguajes de alto nivel, como lo fue BASIC en las versiones introducidas en los microordenadores de la d\u00e9cada de 1980. Mientras que una tarea tan sencilla como sumar dos n\u00fameros puede necesitar varias instrucciones en lenguaje ensamblador, en un lenguaje de alto nivel bastar\u00e1 una sola sentencia.", "subsections": []}, {"name": "Clasificaci\u00f3n de los lenguajes de programaci\u00f3n", "text": "Los lenguajes de programaci\u00f3n han sido hist\u00f3ricamente clasificados atendiendo a distintos criterios:\nClasificaci\u00f3n hist\u00f3rica\nLenguajes de alto y de bajo nivel\nClasificaci\u00f3n por paradigmas\nClasificaci\u00f3n por prop\u00f3sito\nEn algunas ocasiones los lenguajes de programaci\u00f3n son tambi\u00e9n clasificados en familias que comparten ciertas caracter\u00edsticas comunes como el estilo general de la sintaxis que emplean. Habitualmente estas caracter\u00edsticas suelen ser heredadas de lenguajes de programaci\u00f3n anteriores que sirvieron de inspiraci\u00f3n a los creadores de dicho lenguaje.", "subsections": [{"name": "Clasificaci\u00f3n hist\u00f3rica o por generaciones", "text": "Los equipos de ordenador (el hardware) han pasado por cuatro generaciones, de las que las tres primeras (ordenadores con v\u00e1lvulas, transistores y circuitos integrados) est\u00e1n muy claras; la cuarta (circuitos integrados a gran escala) es m\u00e1s discutible. \nAlgo parecido ha ocurrido con la programaci\u00f3n de los ordenadores (el software), que se realiza en lenguajes que suelen clasificarse en cinco generaciones, de las que las tres primeras son evidentes, mientras no todo el mundo est\u00e1 de acuerdo en las otras dos. Estas generaciones no coincidieron exactamente en el tiempo con las de hardware, pero s\u00ed de forma aproximada, y son las siguientes: \nPrimera generaci\u00f3n: los primeros ordenadores se programaban directamente en c\u00f3digo de m\u00e1quina (basado en sistema binario), que puede representarse mediante secuencias de 0 y 1. No obstante, cada modelo de ordenador tiene su propia estructura interna a la hora de programarse. A estos lenguajes se les denominaba Lenguajes de bajo nivel, porque sus instrucciones ejercen un control directo sobre el hardware y est\u00e1n condicionados por la estructura f\u00edsica de las computadoras que lo soportan. Dado que este tipo de lenguaje se acerca mucho m\u00e1s a la l\u00f3gica de la m\u00e1quina que a la humana, es mucho m\u00e1s complicado programar con \u00e9l. El uso de la palabra bajo en su denominaci\u00f3n no implica que el lenguaje sea menos potente que un lenguaje de alto nivel, sino que se refiere a la reducida abstracci\u00f3n entre el lenguaje y el hardware. Por ejemplo, se utiliza este tipo de lenguajes para programar tareas cr\u00edticas de los sistemas operativos, de aplicaciones en tiempo real o controladores de dispositivos. Otra limitaci\u00f3n de estos lenguajes es que se requiere de ciertos conocimientos de programaci\u00f3n para realizar las secuencias de instrucciones l\u00f3gicas.\nSegunda generaci\u00f3n: los lenguajes simb\u00f3licos, asimismo propios de la m\u00e1quina, simplifican la escritura de las instrucciones y las hacen m\u00e1s legibles. Se refiere al lenguaje ensamblador ensamblado a trav\u00e9s de un macroensamblador. Es el lenguaje de m\u00e1quina combinado con una serie de poderosas macros que permiten declarar estructuras de datos y de control complejas.\nTercera generaci\u00f3n: los lenguajes de alto nivel sustituyen las instrucciones simb\u00f3licas por c\u00f3digos independientes de la m\u00e1quina, parecidas al lenguaje humano o al de las Matem\u00e1ticas. Se crearon para que el usuario com\u00fan pudiese solucionar un problema de procesamiento de datos de una manera m\u00e1s f\u00e1cil y r\u00e1pida. Son usados en \u00e1mbitos computacionales donde se logra un alto rendimiento con respecto a lenguajes de generaciones anteriores. Entre ellos se encuentran C, Fortran, Smalltalk, Ada, C++, C#, Cobol, Delphi, Java y PHP, entre otros. Algunos de estos lenguajes pueden ser de prop\u00f3sito general, es decir, que el lenguaje no est\u00e1 enfocado a una \u00fanica especialidad, sino que puede usarse para crear todo tipo de programas. Para ciertas tareas m\u00e1s comunes, existen bibliotecas para facilitar la programaci\u00f3n que permiten la reutilizaci\u00f3n de c\u00f3digo.\nCuarta generaci\u00f3n: se ha dado este nombre a ciertas herramientas que permiten construir aplicaciones sencillas combinando piezas prefabricadas. Hoy se piensa que estas herramientas no son, propiamente hablando, lenguajes. Cabe mencionar que, algunos proponen reservar el nombre de cuarta generaci\u00f3n para la programaci\u00f3n orientada a objetos. Estos \u00faltimos tienen una estructura muy parecida al idioma ingl\u00e9s. Algunas de sus caracter\u00edsticas son: acceso a base de datos, capacidades gr\u00e1ficas, generaci\u00f3n de c\u00f3digo autom\u00e1ticamente, as\u00ed como poder programar visualmente (como por ejemplo Visual Basic o SQL). Entre sus ventajas se cuenta una mayor productividad y menor agotamiento del programador, as\u00ed como menor concentraci\u00f3n por su parte, ya que las herramientas proporcionadas incluyen secuencias de instrucciones. El nivel de concentraci\u00f3n que se requiere es menor, ya que algunas instrucciones, que le son dadas a las herramientas, a su vez, engloban secuencias de instrucciones a otro nivel dentro de la herramienta. Cuando hay que dar mantenimiento a los programas previamente elaborados, es menos complicado por requerir menor nivel de concentraci\u00f3n. Por otro lado, sus desventajas consisten en que estas herramientas prefabricadas son generalmente menos flexibles que las instrucciones directas en los lenguajes de bajo nivel. Adem\u00e1s, se suelen crear dependencias con uno o varios proveedores externos, lo que se traduce en p\u00e9rdida de autonom\u00eda. Asimismo, es frecuente que dichas herramientas prefabricadas contengan librer\u00edas de otros proveedores, que conlleva instalar opciones adicionales que son consideradas opcionales. A menos que existan acuerdos con otros proveedores, son programas que se ejecutan \u00fanicamente con el lenguaje que lo cre\u00f3. Tampoco suelen cumplir con los est\u00e1ndares internacionales ISO y ANSI, lo cual conlleva un riesgo futuro por desconocerse su tiempo de permanencia en el mercado. Algunos ejemplos son: NATURAL y PL/SQL.\nQuinta generaci\u00f3n: en ocasiones se llama as\u00ed a los lenguajes de inteligencia artificial, aunque con el fracaso del proyecto japon\u00e9s de la quinta generaci\u00f3n esta denominaci\u00f3n ha ca\u00eddo en desuso."}]}, {"name": "Paradigma de programaci\u00f3n", "text": "Un paradigma de programaci\u00f3n consiste en un m\u00e9todo para llevar a cabo c\u00f3mputos y la forma en la que deben estructurarse y organizarse las tareas que debe realizar un programa.[7]\u200b Se trata de una propuesta tecnol\u00f3gica adoptada por una comunidad de programadores, y desarrolladores cuyo n\u00facleo central es incuestionable en cuanto que \u00fanicamente trata de resolver uno o varios problemas claramente delimitados; la resoluci\u00f3n de estos problemas debe suponer consecuentemente un avance significativo en al menos un par\u00e1metro que afecte a la ingenier\u00eda de software. Representa un enfoque particular o filosof\u00eda para dise\u00f1ar soluciones. Los paradigmas difieren unos de otros, en los conceptos y la forma de abstraer los elementos involucrados en un problema, as\u00ed como en los pasos que integran su soluci\u00f3n del problema, en otras palabras, el c\u00f3mputo. Tiene una estrecha relaci\u00f3n con la formalizaci\u00f3n de determinados lenguajes en su momento de definici\u00f3n. Es un estilo de programaci\u00f3n empleado.\nUn paradigma de programaci\u00f3n est\u00e1 delimitado en el tiempo en cuanto a aceptaci\u00f3n y uso, porque nuevos paradigmas aportan nuevas o mejores soluciones que lo sustituyen parcial o totalmente.\nEl paradigma de programaci\u00f3n que actualmente es m\u00e1s utilizado es la \"orientaci\u00f3n a objetos\" (OO). El n\u00facleo central de este paradigma es la uni\u00f3n de datos y procesamiento en una entidad llamada \"objeto\", relacionable a su vez con otras entidades \"objeto\".\nTradicionalmente, datos y procesamiento se han separado en \u00e1reas diferente del dise\u00f1o y la implementaci\u00f3n de software. Esto provoc\u00f3 que grandes desarrollos tuvieran problemas de fiabilidad, mantenimiento, adaptaci\u00f3n a los cambios y escalabilidad. Con la OO y caracter\u00edsticas como el encapsulado, polimorfismo o la herencia, se permiti\u00f3 un avance significativo en el desarrollo de software a cualquier escala de producci\u00f3n. La OO parece estar ligada en sus or\u00edgenes con lenguajes como Lisp y Simula, aunque el primero que acu\u00f1\u00f3 el t\u00edtulo de \"programaci\u00f3n orientada a objetos\" fue Smalltalk.", "subsections": []}, {"name": "Clasificaci\u00f3n por paradigmas", "text": "En general, la mayor\u00eda de paradigmas son variantes de los dos tipos principales de programaci\u00f3n, imperativa y declarativa. En la programaci\u00f3n imperativa se describe paso a paso un conjunto de instrucciones que deben ejecutarse para variar el estado del programa y hallar la soluci\u00f3n, es decir, un algoritmo en el que se describen los pasos necesarios para solucionar el problema.\nEn la programaci\u00f3n declarativa las sentencias que se utilizan lo que hacen es describir el problema que se quiere solucionar; se programa diciendo lo que se quiere resolver a nivel de usuario, pero no las instrucciones necesarias para solucionarlo. Esto \u00faltimo se realizar\u00e1 mediante mecanismos internos de inferencia de informaci\u00f3n a partir de la descripci\u00f3n realizada.\nA continuaci\u00f3n se describen algunas de las distintas variantes de paradigmas de programaci\u00f3n:\nProgramaci\u00f3n imperativa o por procedimientos: es el m\u00e1s usado en general, se basa en dar instrucciones al ordenador de como hacer las cosas en forma de algoritmos, en lugar de describir el problema o la soluci\u00f3n. Las recetas de cocina y las listas de revisi\u00f3n de procesos, a pesar de no ser programas de computadora, son tambi\u00e9n conceptos familiares similares en estilo a la programaci\u00f3n imperativa; donde cada paso es una instrucci\u00f3n. Es la forma de programaci\u00f3n m\u00e1s usada y la m\u00e1s antigua, el ejemplo principal es el lenguaje de m\u00e1quina. Ejemplos de lenguajes puros de este paradigma ser\u00edan el C, BASIC o Pascal.\nProgramaci\u00f3n orientada a objetos: est\u00e1 basada en el imperativo, pero encapsula elementos denominados objetos que incluyen tanto variables como funciones. Est\u00e1 representado por C# o Java entre otros, pero el m\u00e1s representativo ser\u00eda el Smalltalk que est\u00e1 completamente orientado a objetos.\nProgramaci\u00f3n dirigida por eventos: la programaci\u00f3n dirigida por eventos es un paradigma de programaci\u00f3n en el que tanto la estructura como la ejecuci\u00f3n de los programas van determinados por los sucesos que ocurran en el sistema, definidos por el usuario o que ellos mismos provoquen.\nProgramaci\u00f3n declarativa: est\u00e1 basada en describir el problema declarando propiedades y reglas que deben cumplirse, en lugar de instrucciones. Hay lenguajes para la programaci\u00f3n funcional, la programaci\u00f3n l\u00f3gica, o la combinaci\u00f3n l\u00f3gico-funcional. La soluci\u00f3n es obtenida mediante mecanismos internos de control, sin especificar exactamente c\u00f3mo encontrarla (tan solo se le indica a la computadora qu\u00e9 es lo que se desea obtener o qu\u00e9 es lo que se est\u00e1 buscando). No existen asignaciones destructivas, y las variables son utilizadas con transparencia referencial. Los lenguajes declarativos tienen la ventaja de ser razonados matem\u00e1ticamente, lo que permite el uso de mecanismos matem\u00e1ticos para optimizar el rendimiento de los programas.[8]\u200b Unos de los primeros lenguajes funcionales fueron Lisp y Prolog.\nProgramaci\u00f3n funcional: basada en la definici\u00f3n los predicados y es de corte m\u00e1s matem\u00e1tico, est\u00e1 representado por Scheme (una variante de Lisp) o Haskell. Python tambi\u00e9n representa este paradigma.[9]\u200b\nProgramaci\u00f3n l\u00f3gica: basado en la definici\u00f3n de relaciones l\u00f3gicas, est\u00e1 representado por Prolog.\nProgramaci\u00f3n con restricciones: similar a la l\u00f3gica usando ecuaciones. Casi todos los lenguajes son variantes del Prolog.\nProgramaci\u00f3n multiparadigma: es el uso de dos o m\u00e1s paradigmas dentro de un programa. El lenguaje Lisp se considera multiparadigma. Al igual que Python o PHP que son orientados a objetos, reflexivos, imperativos y funcionales.[9]\u200b Seg\u00fan lo describe Bjarne Stroustrup, esos lenguajes permiten crear programas usando m\u00e1s de un estilo de programaci\u00f3n. El objetivo en el dise\u00f1o de estos lenguajes es permitir a los programadores utilizar el mejor paradigma para cada trabajo, admitiendo que ninguno resuelve todos los problemas de la forma m\u00e1s f\u00e1cil y eficiente posible. Por ejemplo, lenguajes de programaci\u00f3n como C++, Genie, Delphi, Visual Basic o D[10]\u200b combinan el paradigma imperativo con la orientaci\u00f3n a objetos. Incluso existen lenguajes multiparadigma que permiten la mezcla de forma natural, como en el caso de Oz, que tiene subconjuntos (particularidad de los lenguajes l\u00f3gicos), y otras caracter\u00edsticas propias de lenguajes de programaci\u00f3n funcional y de orientaci\u00f3n a objetos. Otro ejemplo son los lenguajes como Scheme de paradigma funcional o Prolog (paradigma l\u00f3gico), que cuentan con estructuras repetitivas, propias del paradigma imperativo.\nProgramaci\u00f3n reactiva: este paradigma se basa en la declaraci\u00f3n de una serie de objetos emisores de eventos as\u00edncronos y otra serie de objetos que se \"suscriben\" a los primeros (es decir, quedan a la escucha de la emisi\u00f3n de eventos de estos) y *reaccionan* a los valores que reciben. Es muy com\u00fan usar la librer\u00eda Rx de Microsoft (Acr\u00f3nimo de Reactive Extensions), disponible para m\u00faltiples lenguajes de programaci\u00f3n.\nLenguaje espec\u00edfico del dominio o DSL: se denomina as\u00ed a los lenguajes desarrollados para resolver un problema espec\u00edfico, pudiendo entrar dentro de cualquier grupo anterior. El m\u00e1s representativo ser\u00eda SQL para el manejo de las bases de datos, de tipo declarativo, pero los hay imperativos, como el Logo.", "subsections": []}, {"name": "Elementos", "text": "", "subsections": [{"name": "Variables y vectores", "text": "Las variables son t\u00edtulos asignados a espacios en memoria para almacenar datos espec\u00edficos. Son contenedores de datos y por ello se diferencian seg\u00fan el tipo de dato que son capaces de almacenar. En la mayor\u00eda de lenguajes de programaci\u00f3n se requiere especificar un tipo de variable concreto para guardar un dato espec\u00edfico. Por ejemplo, en Java, si deseamos guardar una cadena de texto debemos especificar que la variable es del tipo String. Por otra parte, en lenguajes como PHP o JavaScript este tipo de especificaci\u00f3n de variables no es necesario. Adem\u00e1s, existen variables compuestas llamadas vectores. Un vector no es m\u00e1s que un conjunto de bytes consecutivas en memoria y del mismo tipo guardadas dentro de una variable contenedor. A continuaci\u00f3n, un listado con los tipos de variables y vectores m\u00e1s comunes:\nEn el caso de variables booleanas, el cero es considerado para muchos lenguajes como el literal falso (\"False\"), mientras que el uno se considera verdadero (\"True\")."}, {"name": "Condicionales", "text": "Las sentencias condicionales son estructuras de c\u00f3digo que indican que, para que cierta parte del programa se ejecute, deben cumplirse ciertas premisas; por ejemplo: que dos valores sean iguales, que un valor exista, que un valor sea mayor que otro\u2026 Estos condicionantes por lo general solo se ejecutan una vez a lo largo del programa. Los condicionantes m\u00e1s conocidos y empleados en programaci\u00f3n son:\nIf: Indica una condici\u00f3n para que se ejecute una parte del programa.\nElse if: Siempre va precedido de un \"If\" e indica una condici\u00f3n para que se ejecute una parte del programa siempre que no cumpla la condici\u00f3n del if previo y s\u00ed se cumpla con la que el \"else if\" especifique.\nElse: Siempre precedido de \"If\" y en ocasiones de \"Else If\". Indica que debe ejecutarse cuando no se cumplan las condiciones previas."}, {"name": "Bucles", "text": "Los bucles son parientes cercanos de los condicionantes, pero ejecutan constantemente un c\u00f3digo mientras se cumpla una determinada condici\u00f3n. Los m\u00e1s frecuentes son:\nFor: Ejecuta un c\u00f3digo mientras una variable se encuentre entre 2 determinados par\u00e1metros.\nWhile: Ejecuta un c\u00f3digo mientras que se cumpla la condici\u00f3n que solicita.\nHay que decir que a pesar de que existan distintos tipos de bucles, todos son capaces de realizar exactamente las mismas funciones. El empleo de uno u otro depende, por lo general, del gusto del programador."}, {"name": "Funciones", "text": "Las funciones se crearon para evitar tener que repetir constantemente fragmentos de c\u00f3digo. Una funci\u00f3n podr\u00eda considerarse como una variable que encierra c\u00f3digo dentro de si. Por lo tanto, cuando accedemos a dicha variable (la funci\u00f3n) en realidad lo que estamos haciendo es ordenar al programa que ejecute un determinado c\u00f3digo predefinido anteriormente.\nTodos los lenguajes de programaci\u00f3n tienen algunos elementos de formaci\u00f3n primitivos para la descripci\u00f3n de los datos y de los procesos o transformaciones aplicadas a estos datos (tal como la suma de dos n\u00fameros o la selecci\u00f3n de un elemento que forma parte de una colecci\u00f3n). Estos elementos primitivos son definidos por reglas sint\u00e1cticas y sem\u00e1nticas que describen su estructura y significado respectivamente."}, {"name": "Sintaxis", "text": "A la forma visible de un lenguaje de programaci\u00f3n se la conoce como sintaxis. La mayor\u00eda de los lenguajes de programaci\u00f3n son puramente textuales, es decir, utilizan secuencias de texto que incluyen palabras, n\u00fameros y puntuaci\u00f3n, de manera similar a los lenguajes naturales escritos. Por otra parte, hay algunos lenguajes de programaci\u00f3n que son m\u00e1s gr\u00e1ficos en su naturaleza, utilizando relaciones visuales entre s\u00edmbolos para especificar un programa.\nLa sintaxis de un lenguaje de programaci\u00f3n describe las combinaciones posibles de los s\u00edmbolos que forman un programa sint\u00e1cticamente correcto. El significado que se le da a una combinaci\u00f3n de s\u00edmbolos es manejado por su sem\u00e1ntica (ya sea formal o como parte del c\u00f3digo duro de la referencia de implementaci\u00f3n). Dado que la mayor\u00eda de los lenguajes son textuales, este art\u00edculo trata de la sintaxis textual.\nLa sintaxis de los lenguajes de programaci\u00f3n es definida generalmente utilizando una combinaci\u00f3n de expresiones regulares (para la estructura l\u00e9xica/morfol\u00f3gica) y la Notaci\u00f3n de Backus-Naur (para la estructura sint\u00e1ctica). Este es un ejemplo de una gram\u00e1tica simple, tomada del lenguaje Lisp:\nexpresi\u00f3n\n::=\n\u00e1tomo\n| lista\n\u00e1tomo\u00a0::= n\u00famero |\ns\u00edmbolo\nn\u00famero\n[+-]?\n[\n'0'-'9']+\n'A'-'Z']\n'a'-'z'].*\nlista\n'\n(\nexpresi\u00f3n*\n)\nCon esta gram\u00e1tica se especifica lo siguiente:\nuna expresi\u00f3n puede ser un \u00e1tomo o una lista;\nun \u00e1tomo puede ser un n\u00famero o un s\u00edmbolo;\nun n\u00famero es una secuencia continua de uno o m\u00e1s d\u00edgitos decimales, precedido opcionalmente por un signo m\u00e1s o un signo menos;\nun s\u00edmbolo es una letra seguida de cero o m\u00e1s caracteres (excluyendo espacios); y\nuna lista es un par de par\u00e9ntesis que abren y cierran, con cero o m\u00e1s expresiones en medio.\nAlgunos ejemplos de secuencias bien formadas de acuerdo a esta gram\u00e1tica:\n'12345', '()', '(a b c232 (1))'\nNo todos los programas sint\u00e1cticamente correctos son sem\u00e1nticamente correctos. Muchos programas sint\u00e1cticamente correctos tienen inconsistencias con las reglas del lenguaje; y pueden (dependiendo de la especificaci\u00f3n del lenguaje y la solidez de la implementaci\u00f3n) resultar en un error de traducci\u00f3n o ejecuci\u00f3n. En algunos casos, tales programas pueden exhibir un comportamiento indefinido. Adem\u00e1s, incluso cuando un programa est\u00e1 bien definido dentro de un lenguaje, todav\u00eda puede tener un significado que no es el que la persona que lo escribi\u00f3 estaba tratando de construir.\nUsando el lenguaje natural, por ejemplo, puede no ser posible asignarle significado a una oraci\u00f3n gramaticalmente v\u00e1lida o la oraci\u00f3n puede ser falsa:\n\"Las ideas verdes y descoloridas duermen furiosamente\" es una oraci\u00f3n bien formada gramaticalmente pero no tiene significado com\u00fanmente aceptado.\n\"Juan es un soltero casado\" tambi\u00e9n est\u00e1 bien formada gramaticalmente pero expresa un significado que no puede ser verdadero.\nEl siguiente fragmento en el lenguaje C es sint\u00e1cticamente correcto, pero ejecuta una operaci\u00f3n que no est\u00e1 definida sem\u00e1nticamente (dado que p es un apuntador nulo, las operaciones p->real y p->im no tienen ning\u00fan significado):\ncomplex\n \n*\np\n=\nNULL\n;\nabs_p\nsqrt\n->\nreal\n+\nim\n);\nSi la declaraci\u00f3n de tipo de la primera l\u00ednea fuera omitida, el programa disparar\u00eda un error de compilaci\u00f3n, pues la variable \"p\" no estar\u00eda definida. Pero el programa ser\u00eda sint\u00e1cticamente correcto todav\u00eda, dado que las declaraciones de tipo proveen informaci\u00f3n sem\u00e1ntica solamente.\nLa gram\u00e1tica necesaria para especificar un lenguaje de programaci\u00f3n puede ser clasificada por su posici\u00f3n en la Jerarqu\u00eda de Chomsky. La sintaxis de la mayor\u00eda de los lenguajes de programaci\u00f3n puede ser especificada utilizando una gram\u00e1tica Tipo-2, es decir, son gram\u00e1ticas libres de contexto. Algunos lenguajes, incluyendo a Perl y a Lisp, contienen construcciones que permiten la ejecuci\u00f3n durante la fase de an\u00e1lisis. Los lenguajes que permiten construcciones que permiten al programador alterar el comportamiento de un analizador hacen del an\u00e1lisis de la sintaxis un problema sin decisi\u00f3n \u00fanica, y generalmente oscurecen la separaci\u00f3n entre an\u00e1lisis y ejecuci\u00f3n. En contraste con el sistema de macros de Lisp y los bloques BEGIN de Perl, que pueden tener c\u00e1lculos generales, las macros de C son meros reemplazos de cadenas, y no requieren ejecuci\u00f3n de c\u00f3digo."}, {"name": "Sem\u00e1ntica est\u00e1tica", "text": "La sem\u00e1ntica est\u00e1tica define las restricciones sobre la estructura de los textos v\u00e1lidos que resulta imposible o muy dif\u00edcil expresar mediante formalismos sint\u00e1cticos est\u00e1ndar. Para los lenguajes compilados, la sem\u00e1ntica est\u00e1tica b\u00e1sicamente incluye las reglas sem\u00e1nticas que se pueden verificar en el momento de compilar. Por ejemplo el chequeo de que cada identificador sea declarado antes de ser usado (en lenguajes que requieren tales declaraciones) o que las etiquetas en cada brazo de una estructura case sean distintas. Muchas restricciones importantes de este tipo, como la validaci\u00f3n de que los identificadores sean usados en los contextos apropiados (por ejemplo no sumar un entero al nombre de una funci\u00f3n), o que las llamadas a subrutinas tengan el n\u00famero y tipo de par\u00e1metros adecuado, pueden ser implementadas defini\u00e9ndolas como reglas en una l\u00f3gica conocida como sistema de tipos. Otras formas de an\u00e1lisis est\u00e1ticos, como los an\u00e1lisis de flujo de datos, tambi\u00e9n pueden ser parte de la sem\u00e1ntica est\u00e1tica. Otros lenguajes de programaci\u00f3n como Java y C# tienen un an\u00e1lisis definido de asignaciones, una forma de an\u00e1lisis de flujo de datos, como parte de su sem\u00e1ntica est\u00e1tica."}, {"name": "Sistema de tipos", "text": "Un sistema de tipos de datos define la manera en la cual un lenguaje de programaci\u00f3n clasifica los valores y expresiones en tipos, c\u00f3mo pueden ser manipulados dichos tipos y c\u00f3mo interact\u00faan. El objetivo de un sistema de tipos es verificar y normalmente poner en vigor un cierto nivel de exactitud en programas escritos en el lenguaje en cuesti\u00f3n, detectando ciertas operaciones inv\u00e1lidas. Cualquier sistema de tipos decidible tiene sus ventajas y desventajas: mientras por un lado rechaza muchos programas incorrectos, tambi\u00e9n proh\u00edbe algunos programas correctos aunque poco comunes. Para poder minimizar esta desventaja, algunos lenguajes incluyen lagunas de tipos, conversiones expl\u00edcitas no verificadas que pueden ser usadas por el programador para permitir expl\u00edcitamente una operaci\u00f3n normalmente no permitida entre diferentes tipos. En la mayor\u00eda de los lenguajes con tipos, el sistema de tipos es usado solamente para verificar los tipos de los programas, pero varios lenguajes, generalmente funcionales, llevan a cabo lo que se conoce como inferencia de tipos, que le quita al programador la tarea de especificar los tipos. Al dise\u00f1o y estudio formal de los sistemas de tipos se le conoce como teor\u00eda de tipos.\nLenguajes tipados versus lenguajes no tipados\nSe dice que un lenguaje es tipado si la especificaci\u00f3n de cada operaci\u00f3n debe definir los tipos de datos para los cuales es aplicable, con la implicaci\u00f3n de que no es aplicable a otros tipos. Por ejemplo, \"este texto entre comillas\" es una cadena de caracteres. En la mayor\u00eda de los lenguajes de programaci\u00f3n, dividir un n\u00famero por una cadena de caracteres no tiene ning\u00fan significado. Por tanto, la mayor\u00eda de los lenguajes de programaci\u00f3n modernos rechazar\u00edan cualquier intento de ejecutar dicha operaci\u00f3n por parte de alg\u00fan programa. En algunos lenguajes, estas operaciones sin significado son detectadas cuando el programa es compilado (validaci\u00f3n de tipos \"est\u00e1tica\") y son rechazadas por el compilador, mientras en otros son detectadas cuando el programa es ejecutado (validaci\u00f3n de tipos \"din\u00e1mica\") y se genera una excepci\u00f3n en tiempo de ejecuci\u00f3n.\nUn caso especial de lenguajes de tipo son los lenguajes de tipo sencillo. Estos son con frecuencia lenguajes de marcado o de scripts, como REXX o SGML, y solamente cuentan con un tipo de datos; com\u00fanmente cadenas de caracteres que luego son usadas tanto para datos num\u00e9ricos como simb\u00f3licos.\nEn contraste, un lenguaje sin tipos, como la mayor\u00eda de los lenguajes ensambladores, permiten que cualquier operaci\u00f3n se aplique a cualquier dato, que por lo general se consideran secuencias de bits de varias longitudes. Lenguajes de alto nivel sin datos incluyen BCPL y algunas variedades de Forth.\nEn la pr\u00e1ctica, aunque pocos lenguajes son considerados con tipo desde el punto de vista de la teor\u00eda de tipos (es decir, que verifican o rechazan todas las operaciones), la mayor\u00eda de los lenguajes modernos ofrecen alg\u00fan grado de manejo de tipos. Si bien muchos lenguajes de producci\u00f3n proveen medios para evitar o rodear el sistema de tipado.\nTipos est\u00e1ticos versus tipos din\u00e1micos\nEn lenguajes con tipos est\u00e1ticos se determina el tipo de todas las expresiones antes de la ejecuci\u00f3n del programa (t\u00edpicamente al compilar). Por ejemplo, 1 y (2+2) son expresiones enteras; no pueden ser pasadas a una funci\u00f3n que espera una cadena, ni pueden guardarse en una variable que est\u00e1 definida como fecha.\nLos lenguajes con tipos est\u00e1ticos pueden manejar tipos expl\u00edcitos o tipos inferidos. En el primer caso, el programador debe escribir los tipos en determinadas posiciones textuales. En el segundo caso, el compilador infiere los tipos de las expresiones y las declaraciones de acuerdo al contexto. La mayor\u00eda de los lenguajes populares con tipos est\u00e1ticos, tales como C++, C# y Java, manejan tipos expl\u00edcitos. Inferencia total de los tipos suele asociarse con lenguajes menos populares, tales como Haskell y ML. Sin embargo, muchos lenguajes de tipos expl\u00edcitos permiten inferencias parciales de tipo; tanto Java y C#, por ejemplo, infieren tipos en un n\u00famero limitado de casos.\nLos lenguajes con tipos din\u00e1micos determinan la validez de los tipos involucrados en las operaciones durante la ejecuci\u00f3n del programa. En otras palabras, los tipos est\u00e1n asociados con valores en ejecuci\u00f3n en lugar de expresiones textuales. Como en el caso de lenguajes con tipos inferidos, los lenguajes con tipos din\u00e1micos no requieren que el programador escriba los tipos de las expresiones. Entre otras cosas, esto permite que una misma variable se pueda asociar con valores de tipos distintos en diferentes momentos de la ejecuci\u00f3n de un programa. Sin embargo, los errores de tipo no pueden ser detectados autom\u00e1ticamente hasta que se ejecuta el c\u00f3digo, dificultando la depuraci\u00f3n de los programas, no obstante, en lenguajes con tipos din\u00e1micos se suele dejar de lado la depuraci\u00f3n en favor de t\u00e9cnicas de desarrollo como por ejemplo BDD y TDD. Ruby, Lisp, JavaScript y Python son lenguajes con tipos din\u00e1micos.\nTipos d\u00e9biles y tipos fuertes\nLos lenguajes d\u00e9bilmente tipados permiten que un valor de un tipo pueda ser tratado como de otro tipo, por ejemplo una cadena puede ser operada como un n\u00famero. Esto puede ser \u00fatil a veces, pero tambi\u00e9n puede permitir ciertos tipos de fallas que no pueden ser detectadas durante la compilaci\u00f3n o a veces ni siquiera durante la ejecuci\u00f3n.\nLos lenguajes fuertemente tipados evitan que pase lo anterior. Cualquier intento de llevar a cabo una operaci\u00f3n sobre el tipo equivocado dispara un error. A los lenguajes con tipos fuertes se les suele llamar de tipos seguros.\nLenguajes con tipos d\u00e9biles como Perl y JavaScript permiten un gran n\u00famero de conversiones de tipo impl\u00edcitas. Por ejemplo en JavaScript la expresi\u00f3n 2 * x convierte impl\u00edcitamente x a un n\u00famero, y esta conversi\u00f3n es exitosa inclusive cuando x es null, undefined, un Array o una cadena de letras. Estas conversiones impl\u00edcitas son \u00fatiles con frecuencia, pero tambi\u00e9n pueden ocultar errores de programaci\u00f3n.\nLas caracter\u00edsticas de est\u00e1ticos y fuertes son ahora generalmente consideradas conceptos ortogonales, pero su trato en diferentes textos var\u00eda. Algunos utilizan el t\u00e9rmino de tipos fuertes para referirse a tipos fuertemente est\u00e1ticos o, para aumentar la confusi\u00f3n, simplemente como equivalencia de tipos est\u00e1ticos. De tal manera que C ha sido llamado tanto lenguaje de tipos fuertes como lenguaje de tipos est\u00e1ticos d\u00e9biles."}]}, {"name": "Implementaci\u00f3n", "text": "La implementaci\u00f3n de un lenguaje es la que provee una manera de que se ejecute un programa para una determinada combinaci\u00f3n de software y hardware. Existen b\u00e1sicamente dos maneras de implementar un lenguaje: compilaci\u00f3n e interpretaci\u00f3n.\nCompilaci\u00f3n: es el proceso que traduce un programa escrito en un lenguaje de programaci\u00f3n a otro lenguaje de programaci\u00f3n, generando un programa equivalente que la m\u00e1quina ser\u00e1 capaz de interpretar. Los programas traductores que pueden realizar esta operaci\u00f3n se llaman compiladores. Estos, como los programas ensambladores avanzados, pueden generar muchas l\u00edneas de c\u00f3digo de m\u00e1quina por cada proposici\u00f3n del programa fuente.\nInterpretaci\u00f3n: es una asignaci\u00f3n de significados a las f\u00f3rmulas bien formadas de un lenguaje formal. Como los lenguajes formales pueden definirse en t\u00e9rminos puramente sint\u00e1cticos, sus f\u00f3rmulas bien formadas pueden no ser m\u00e1s que cadenas de s\u00edmbolos sin ning\u00fan significado. Una interpretaci\u00f3n otorga significado a esas f\u00f3rmulas.\nSe puede tambi\u00e9n utilizar una alternativa para traducir lenguajes de alto nivel. En lugar de traducir el programa fuente y grabar en forma permanente el c\u00f3digo objeto que se produce durante la compilaci\u00f3n para utilizarlo en una ejecuci\u00f3n futura, el programador solo carga el programa fuente en la computadora junto con los datos que se van a procesar. A continuaci\u00f3n, un programa int\u00e9rprete, almacenado en el sistema operativo del disco, o incluido de manera permanente dentro de la m\u00e1quina, convierte cada proposici\u00f3n del programa fuente en lenguaje de m\u00e1quina conforme vaya siendo necesario durante el procesamiento de los datos. El c\u00f3digo objeto no se graba para utilizarlo posteriormente.\nLa siguiente vez que se utilice una instrucci\u00f3n, se la deber\u00e1 interpretar otra vez y traducir a lenguaje m\u00e1quina. Por ejemplo, durante el procesamiento repetitivo de los pasos de un ciclo o bucle, cada instrucci\u00f3n del bucle tendr\u00e1 que volver a ser interpretada en cada ejecuci\u00f3n repetida del ciclo, lo cual hace que el programa sea m\u00e1s lento en tiempo de ejecuci\u00f3n (porque se va revisando el c\u00f3digo en tiempo de ejecuci\u00f3n) pero m\u00e1s r\u00e1pido en tiempo de dise\u00f1o (porque no se tiene que estar compilando a cada momento el c\u00f3digo completo). El int\u00e9rprete elimina la necesidad de realizar una compilaci\u00f3n despu\u00e9s de cada modificaci\u00f3n del programa cuando se quiere agregar funciones o corregir errores; pero es obvio que un programa objeto compilado con antelaci\u00f3n deber\u00e1 ejecutarse con mucha mayor rapidez que uno que se debe interpretar a cada paso durante una ejecuci\u00f3n del c\u00f3digo.\nLa mayor\u00eda de lenguajes de alto nivel permiten la programaci\u00f3n multiprop\u00f3sito, aunque muchos de ellos fueron dise\u00f1ados para permitir programaci\u00f3n dedicada, como lo fue el Pascal con las matem\u00e1ticas en su comienzo. Tambi\u00e9n se han implementado lenguajes educativos infantiles como Logo mediante una serie de simples instrucciones. En la actualidad son muy populares algunos lenguajes especialmente indicados para aplicaciones web, como Perl, PHP, Ruby, Python o JavaScript.", "subsections": []}, {"name": "Dialectos", "text": "Un dialecto de un lenguaje de programaci\u00f3n es una variaci\u00f3n o extensi\u00f3n (relativamente peque\u00f1a) del lenguaje que no cambia su naturaleza intr\u00ednseca. Con lenguajes como Scheme y Forth, los implementadores pueden considerar que los est\u00e1ndares son insuficientes, inadecuados o ileg\u00edtimos, por lo que a menudo se desviar\u00e1n del est\u00e1ndar, haciendo un nuevo dialecto. En otros casos, se crea un dialecto para su uso en un lenguaje espec\u00edfico de dominio, a menudo un subconjunto. En el mundo Lisp, la mayor\u00eda de los lenguajes que utilizan la sintaxis b\u00e1sica de una expresi\u00f3n S y la sem\u00e1ntica similar a Lisp se consideran dialectos Lisp, aunque var\u00edan enormemente, al igual que, digamos, Raqueta y Clojure. Como es com\u00fan que un lenguaje tenga varios dialectos, puede resultar bastante dif\u00edcil para un programador sin experiencia encontrar la documentaci\u00f3n correcta. El lenguaje de programaci\u00f3n BASIC tiene muchos dialectos.", "subsections": []}, {"name": "T\u00e9cnica", "text": "Para escribir programas que proporcionen los mejores resultados, cabe tener en cuenta una serie de detalles.\nCorrecci\u00f3n. Un programa es correcto si hace lo que debe hacer tal y como se estableci\u00f3 en las fases previas a su desarrollo. Para determinar si un programa hace lo que debe, es muy importante especificar claramente qu\u00e9 debe hacer el programa antes de desarrollarlo y, una vez acabado, compararlo con lo que realmente hace.\nClaridad. Es muy importante que el programa sea lo m\u00e1s claro y legible posible, para facilitar as\u00ed su desarrollo y posterior mantenimiento. Al elaborar un programa se debe intentar que su estructura sea sencilla y coherente, as\u00ed como cuidar el estilo en la edici\u00f3n; de esta forma se ve facilitado el trabajo del programador, tanto en la fase de creaci\u00f3n como en las fases posteriores de correcci\u00f3n de errores, ampliaciones, modificaciones, etc. Fases que pueden ser realizadas incluso por otro programador, con lo cual la claridad es a\u00fan m\u00e1s necesaria para que otros programadores puedan continuar el trabajo f\u00e1cilmente. Algunos programadores llegan incluso a utilizar Arte ASCII para delimitar secciones de c\u00f3digo. Otros, por diversi\u00f3n o para impedir un an\u00e1lisis c\u00f3modo a otros programadores, recurren al uso de c\u00f3digo ofuscado.\nEficiencia. Se trata de que el programa, adem\u00e1s de realizar aquello para lo que fue creado (es decir, que sea correcto), lo haga gestionando de la mejor forma posible los recursos que utiliza. Normalmente, al hablar de eficiencia de un programa, se suele hacer referencia al tiempo que tarda en realizar la tarea para la que ha sido creado y a la cantidad de memoria que necesita, pero hay otros recursos que tambi\u00e9n pueden ser de consideraci\u00f3n al obtener la eficiencia de un programa, dependiendo de su naturaleza (espacio en disco que utiliza, tr\u00e1fico de red que genera, etc.).\nPortabilidad. Un programa es portable cuando tiene la capacidad de poder ejecutarse en una plataforma, ya sea hardware o software, diferente a aquella en la que se elabor\u00f3. La portabilidad es una caracter\u00edstica muy deseable para un programa, ya que permite, por ejemplo, a un programa que se ha desarrollado para sistemas GNU/Linux ejecutarse tambi\u00e9n en la familia de sistemas operativos Windows. Esto permite que el programa pueda llegar a m\u00e1s usuarios m\u00e1s f\u00e1cilmente.", "subsections": [{"name": "Paradigmas", "text": "Los programas se pueden clasificar por el paradigma del lenguaje que se use para producirlos. Los principales paradigmas son: imperativos, declarativos y orientaci\u00f3n a objetos.\nLos programas que usan un lenguaje imperativo especifican un algoritmo, usan declaraciones, expresiones y sentencias.[11]\u200b Una declaraci\u00f3n asocia un nombre de variable con un tipo de dato, por ejemplo: var x: integer;. Una expresi\u00f3n contiene un valor, por ejemplo: 2 + 2 contiene el valor 4. Finalmente, una sentencia debe asignar una expresi\u00f3n a una variable o usar el valor de una variable para alterar el flujo de un programa, por ejemplo: x\u00a0:= 2 + 2; if x == 4 then haz_algo();. Una cr\u00edtica com\u00fan en los lenguajes imperativos es el efecto de las sentencias de asignaci\u00f3n sobre una clase de variables llamadas \"no locales\".[12]\u200b\nLos programas que usan un lenguaje declarativo especifican las propiedades que la salida debe conocer y no especifican cualquier detalle de implementaci\u00f3n. Dos amplias categor\u00edas de lenguajes declarativos son los lenguajes funcionales y los lenguajes l\u00f3gicos. Los lenguajes funcionales no permiten asignaciones de variables no locales, as\u00ed, se hacen m\u00e1s f\u00e1cil, por ejemplo, programas como funciones matem\u00e1ticas.[12]\u200b El principio detr\u00e1s de los lenguajes l\u00f3gicos es definir el problema que se quiere resolver (el objetivo) y dejar los detalles de la soluci\u00f3n al sistema.[13]\u200b El objetivo es definido dando una lista de sub-objetivos. Cada sub-objetivo tambi\u00e9n se define dando una lista de sus sub-objetivos, etc. Si al tratar de buscar una soluci\u00f3n, una ruta de sub-objetivos falla, entonces tal sub-objetivo se descarta y sistem\u00e1ticamente se prueba otra ruta.\nLa forma en la cual se programa puede ser por medio de texto o de forma visual. En la programaci\u00f3n visual los elementos son manipulados gr\u00e1ficamente en vez de especificarse por medio de texto."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Anexo:Lenguajes de programaci\u00f3n\nProgramaci\u00f3n estructurada\nProgramaci\u00f3n modular\nProgramaci\u00f3n funcional\nProgramaci\u00f3n orientada a aspectos\nProgramaci\u00f3n con restricciones\nProgramaci\u00f3n a nivel funcional\nProgramaci\u00f3n a nivel de valores\nLenguaje de programaci\u00f3n esot\u00e9rico\nAnexo:Cronolog\u00eda de los lenguajes de programaci\u00f3n", "subsections": []}, {"name": "Referencias", "text": "\u2191 Tecnicos de Soporte Informatico de la Comunidad de Castilla Y Leon. Temario Volumen i Ebook. MAD-Eduforma. ISBN\u00a09788466551021. Consultado el 7 de noviembre de 2019.\u00a0\n\u2191 Juganaru Mathieu, Mihaela (2014). Introducci\u00f3n a la programaci\u00f3n. Grupo Editorial Patria. ISBN\u00a0978-607-438-920-3. Consultado el 21 de mayo de 2021.\u00a0\n\u2191 Y\u00e1\u00f1ez, Luis Hern\u00e1ndez (2013-2014). Fundamentos de la programaci\u00f3n. Consultado el 21 de mayo de 2021.\u00a0\n\u2191 Joyanes Aguilar, Luis (2008).  Jos\u00e9 Luis Garc\u00eda y Cristina S\u00e1nchez, ed. FUNDAMENTOS DE PROGRAMACI\u00d3N Algoritmos, estructura de datos y objetos. McGRAW-HILL/INTERAMERICANA DE ESPA\u00d1A, S. A. U. ISBN\u00a0978-84-481-6111-8.\u00a0 |fechaacceso= requiere |url= (ayuda)\n\u2191 Gary Bronson (2000).  Cengage Learning Editores, S.A. De C.V., 2006, ed. Bronson C++ 2da Edicion.\u00a0\n\u2191 Paul McJones. \u00abHistory of FORTRAN and FORTRAN II\u00bb. Fundaci\u00f3n Plone. Consultado el 20 de febrero de 2019.\u00a0\n\u2191 C\u00e9sar Vaca Rodr\u00edguez. \u00abParadigmas de programaci\u00f3n\u00bb. Departamento de inform\u00e1tica de la Universidad de Valladolid. p.\u00a02. Consultado el 20 de febrero de 2019.\u00a0\n\u2191 \u00abCopia archivada\u00bb. Archivado desde el original el 14 de marzo de 2011. Consultado el 1 de mayo de 2011.\u00a0\n\u2191 a b \u00abFunctional Programming HOWTO \u2014 Python 3.5.3rc1 documentation\u00bb. docs.python.org. Consultado el 13 de enero de 2017.\u00a0\n\u2191 \u00abOverview - D Programming Language\u00bb. dlang.org (en ingl\u00e9s). Consultado el 29 de julio de 2014. \u00abMajor Design Goals of D... 4.Support multi-paradigm programming, i.e. at a minimum support imperative, structured, object oriented, generic and even functional programming paradigms.\u00a0\u00bb\u00a0\n\u2191 Wilson, Leslie B. (1993). Comparative Programming Languages, Second Edition. Addison-Wesley. p.\u00a075. ISBN 0-201-56885-3.\u00a0 (en ingl\u00e9s).\n\u2191 a b Wilson, Leslie B. (1993). Comparative Programming Languages, Second Edition. Addison-Wesley. p.\u00a0213. ISBN 0-201-56885-3.\u00a0 (en ingl\u00e9s).\n\u2191 Wilson, Leslie B. (1993). Comparative Programming Languages, Second Edition. Addison-Wesley. p.\u00a0244. ISBN 0-201-56885-3.\u00a0 (en ingl\u00e9s).", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Lenguaje de programaci\u00f3n.\n Wikiversidad alberga proyectos de aprendizaje sobre Lenguaje de programaci\u00f3n.\n Wikilibros alberga un libro o manual sobre Fundamentos de programaci\u00f3n.\n\u00c1rbol geneal\u00f3gico de los lenguajes de programaci\u00f3n (en ingl\u00e9s)\nLista de lenguajes de programaci\u00f3n (en ingl\u00e9s)\nLenguajes clasificados por paradigmas de programaci\u00f3n: definiciones, ventajas y desventajas.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_ABC", "title": "ABC (lenguaje de programaci\u00f3n)", "summary": "ABC es un lenguaje de programaci\u00f3n imperativo de prop\u00f3sito general y entorno de programaci\u00f3n desarrollado en el Centrum Wiskunde & Informatica de Pa\u00edses Bajos por Leo Geurts, Lambert Meertens y Steven Pemberton. Es interactivo, estructurado, de alto nivel y est\u00e1 pensado para ser utilizado en lugar de BASIC, Pascal o AWK. No pretende ser un lenguaje de programaci\u00f3n de sistemas, sino que est\u00e1 destinado a la ense\u00f1anza o la creaci\u00f3n de prototipos.\nEl lenguaje tuvo una gran influencia en el dise\u00f1o del lenguaje de programaci\u00f3n Python; Guido van Rossum, quien desarroll\u00f3 Python, trabaj\u00f3 anteriormente durante varios a\u00f1os en el sistema ABC a mediados de los a\u00f1os ochenta.[1]\u200b[2]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Caracter\u00edsticas\n2 Ejemplo\n3 Referencias\n3.1 Lectura adicional", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "Sus dise\u00f1adores afirman que los programas ABC suelen tener alrededor de una cuarta parte del tama\u00f1o de los programas equivalentes de Pascal o C, y son m\u00e1s legibles. Las caracter\u00edsticas clave incluyen:\nSolo cinco tipos de datos b\u00e1sicos\nNo requiere declaraci\u00f3n de variables.\nSoporte expl\u00edcito para programaci\u00f3n top-down.\nLa anidaci\u00f3n de instrucciones se indica mediante sangr\u00eda, a trav\u00e9s de la regla de fuera de juego.\nPrecisi\u00f3n arbitraria, Listas y cadenas de tama\u00f1o ilimitado, y otras caracter\u00edsticas que admiten la ortogonalidad y la facilidad de uso para los principiantes.\nComo sucede con otros int\u00e9rpretes, ABC es, adem\u00e1s de un lenguaje de programaci\u00f3n, un entorno interactivo de trabajo. No requiere de declaraciones de variables, cuenta con el apoyo de la programaci\u00f3n top-down. Proporciona una precisi\u00f3n aritm\u00e9tica infinita, ilimitada listas de cadenas, y otras caracter\u00edsticas que da gran facilidad al uso de los principiantes. Sus dise\u00f1adores afirman que los programas de ABC son t\u00edpicamente alrededor de una cuarta parte del tama\u00f1o de los programas equivalentes en lenguaje Pascal o en lenguaje C, y adem\u00e1s es m\u00e1s legible. \nOriginalmente fue una aplicaci\u00f3n monol\u00edtica, dando lugar a una incapacidad para adaptarse a las nuevas exigencias, como la creaci\u00f3n de una interfaz gr\u00e1fica de usuario. Con ABC no se pod\u00eda acceder directamente al sistema de archivos subyacente y el sistema operativo. \nIncluye un entorno de programaci\u00f3n con sintaxis de edici\u00f3n-dirigida, sugerencias, variables persistentes y m\u00faltiples espacios de trabajo. \nABC est\u00e1 disponible como un int\u00e9rprete / compilador, actualmente en la versi\u00f3n 1.05.02. Adem\u00e1s ha sido portado a Unix, DOS, Atari, y Apple Macintosh.\nABC tambi\u00e9n tuvo una gran influencia en el dise\u00f1o del lenguaje de programaci\u00f3n Python, Guido van Rossum, quien desarroll\u00f3 Python, que anteriormente trabaj\u00f3 durante varios a\u00f1os en el sistema ABC a principios de los a\u00f1os 1980.", "subsections": []}, {"name": "Ejemplo", "text": "Un ejemplo del lenguaje, de una funci\u00f3n para recoger el conjunto de todas las palabras de un documento:", "subsections": []}, {"name": "Referencias", "text": "\u2191 The A-Z of Programming Languages: Python (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima)..\n\u2191 An Interview with Guido van Rossum. (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima).", "subsections": [{"name": "Lectura adicional", "text": "ABC Programmer's Handbook\nA Short Introduction to the ABC Language"}]}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_C", "title": "C (lenguaje de programaci\u00f3n)", "summary": "Por favor, ed\u00edtalo para mejorarlo:\nNecesita referencias adicionales para su verificaci\u00f3n.\nExisten dudas o desacuerdos sobre la exactitud de su redacci\u00f3n. Por favor, debate este problema en la p\u00e1gina de discusi\u00f3n.\nPodr\u00eda contener informaci\u00f3n desactualizada.\nPodr\u00eda ser dif\u00edcil de entender para lectores interesados en el tema.\nC\u00f3digo simple en C]\nB (BCPL, CPL), ALGOL 68,[1]\u200b:\u200a201-208\u200a\nC es un lenguaje de programaci\u00f3n de prop\u00f3sito general[2]\u200b:\u200a1\u200a originalmente desarrollado por Dennis Ritchie entre 1969 y 1972 en los Laboratorios Bell,[1]\u200b como evoluci\u00f3n del anterior lenguaje B, a su vez basado en BCPL.[2]\u200b:\u200a1\u200a[3]\u200b[4]\u200b\nAl igual que B, es un lenguaje orientado a la implementaci\u00f3n de sistemas operativos, concretamente Unix. C es apreciado por la eficiencia del c\u00f3digo que produce y es el lenguaje de programaci\u00f3n m\u00e1s popular para crear softwares de sistemas y aplicaciones.\nSe trata de un lenguaje de tipos de datos est\u00e1ticos, d\u00e9bilmente tipado, que dispone de las estructuras t\u00edpicas de los lenguajes de alto nivel pero, a su vez, dispone de construcciones del lenguaje que permiten un control a bajo nivel. Los compiladores suelen ofrecer extensiones al lenguaje que posibilitan mezclar c\u00f3digo en ensamblador con c\u00f3digo C o acceder directamente a memoria o dispositivos perif\u00e9ricos.\nLa primera estandarizaci\u00f3n del lenguaje C fue en ANSI, con el est\u00e1ndar X3.159-1989. El lenguaje que define este est\u00e1ndar fue conocido vulgarmente como ANSI C. Posteriormente, en 1990, fue ratificado como est\u00e1ndar ISO (ISO/IEC 9899:1990).\nLa adopci\u00f3n de este est\u00e1ndar es muy amplia por lo que, si los programas creados lo siguen, el c\u00f3digo es portable entre plataformas y/o arquitecturas.", "sections": [{"name": "\u00cdndice", "text": "1 Filosof\u00eda\n1.1 Propiedades\n1.2 Precauciones que se debe tener por ser un lenguaje de bajo nivel\n1.3 Algunas caracter\u00edsticas de las que carece C\n2 Historia\n2.1 Desarrollo inicial\n2.2 El C de Kernighan y Ritchie\n2.3 ANSI C e ISO C\n2.3.1 Palabras reservadas de ANSI-C\n2.4 C99\n2.5 C11\n2.6 C embebido\n2.7 C18\n3 Lenguajes derivados de C\n4 Proceso de compilaci\u00f3n\n4.1 Ejemplo de c\u00f3digo\n5 Herramientas de programaci\u00f3n\n6 Aplicabilidad\n6.1 Aplicaciones embebidas\n7 Bibliotecas C\n8 V\u00e9ase tambi\u00e9n\n9 Referencias\n10 Enlaces externos", "subsections": []}, {"name": "Filosof\u00eda", "text": "Uno de los objetivos de dise\u00f1o del lenguaje C es que solo sean necesarias unas pocas instrucciones en lenguaje m\u00e1quina para traducir cada elemento del lenguaje, sin que haga falta un soporte intenso en tiempo de ejecuci\u00f3n. Es muy posible escribir C a bajo nivel de abstracci\u00f3n; de hecho, C se us\u00f3 como intermediario entre diferentes lenguajes.\nEn parte, a causa de ser de relativamente bajo nivel y de tener un modesto conjunto de caracter\u00edsticas, se pueden desarrollar compiladores de C f\u00e1cilmente. En consecuencia, el lenguaje C est\u00e1 disponible en un amplio abanico de plataformas (m\u00e1s que cualquier otro lenguaje). Adem\u00e1s, a pesar de su naturaleza de bajo nivel, el lenguaje se desarroll\u00f3 para incentivar la programaci\u00f3n independiente de la m\u00e1quina. Un programa escrito cumpliendo los est\u00e1ndares e intentando que sea port\u00e1til puede compilarse en muchos computadores.\nC se desarroll\u00f3 originalmente (conjuntamente con el sistema operativo Unix, con el que ha estado asociado mucho tiempo) por programadores para programadores. Sin embargo, ha alcanzado una popularidad enorme, y se ha usado en contextos muy alejados de la programaci\u00f3n de software de sistema, para la que se dise\u00f1\u00f3 originalmente.", "subsections": [{"name": "Propiedades", "text": "N\u00facleo del lenguaje simple, con funcionalidades a\u00f1adidas importantes, como funciones matem\u00e1ticas y de gesti\u00f3n de archivos, proporcionadas por bibliotecas.\nEs un lenguaje estructurado, i.e. tiene estructuras de control y tipos de datos estructurados definidos por el programador a partir de los tipos at\u00f3micos t\u00edpicos y mediante arreglos, estructuras, uniones y punteros, incluidos los que apuntan a una funci\u00f3n.\nEn su primera edici\u00f3n no hab\u00eda advertencias sobre asignar a una variable un valor un tipo distinto. Por lo que hab\u00eda un programa llamado lint que detectaba este tipo de errores. Actualmente los compiladores pueden detectar inconsistencias de tipos y otros errores.\nUsa un lenguaje de preprocesado, el preprocesador de C, para tareas como definir macros e incluir m\u00faltiples archivos de c\u00f3digo fuente.\nAcceso a memoria de bajo nivel mediante el uso de punteros.\nManejo de Interrupciones mediante la biblioteca signal.\nUn conjunto reducido de palabras clave.\nEl llamado a funciones es por valor. Aunque se pueden pasar punteros a variables para hacer llamados por referencia.\nDistintos tipos de almacenamiento que permiten un dise\u00f1o modular.\nLa palabra clave static permite encapsular variables y funciones.\nLas estructuras se declaran mediante la palabra clave struct, implementan el producto cartesiano de tipos tambi\u00e9n llamados registros. Y la uni\u00f3n disyunta, tambi\u00e9n llamada suma, co-producto o tipos variantes, se declara con la palabra clave union.\nLas estructuras y uniones permiten la implementaci\u00f3n de \u00e1rboles.\nLenguaje muy eficiente puesto que es posible utilizar sus caracter\u00edsticas de bajo nivel para realizar implementaciones \u00f3ptimas.\nSe dise\u00f1\u00f3 como un lenguaje de programaci\u00f3n de sistemas port\u00e1til.\nEs muy poco lo que requiere uso de ensamblador, lo que permiti\u00f3 portar Unix y otros sistemas operativos a distintos equipos.\nDistingue entre may\u00fasculas y min\u00fasculas, pero conserva su portabilidad en equipos que manejan caracteres de 6 bits, como las computadoras Cyber de CDC que ten\u00edan una palabra de 60 bits, (10 caracteres), porque usan trigr\u00e1ficos para codificar s\u00edmbolos especiales.\nSu compilador de C se ha portado a casi todos los sistemas conocidos. Porque adem\u00e1s de que no se requiere codificar en ensamblador, interact\u00faa con los lenguajes especializados YACC y LEX. tambi\u00e9n escritos en C como parte de Unix.\nFacilita la programaci\u00f3n modular gracias a que cuenta con distintos tipos de almacenamiento de las variables y compilaci\u00f3n separada. Adem\u00e1s del macro procesador integrado cpp, que permite declarar los encabezados de las funciones y los tipos de datos en archivos con extensi\u00f3n h. En el caso de las bibliotecas del sistema Unix y de C se necesita incluir los prototipos con la macros #include por ejemplo #include <system.h>. Ello \u00fanicamente sirve para automatizar la declaraci\u00f3n de objetos externos que se usar\u00e1n en el programa, por lo que es necesario pasar los nombres de las bibliotecas como par\u00e1metros del compilador que este pasa al encadenador (linker loader)."}, {"name": "Precauciones que se debe tener por ser un lenguaje de bajo nivel", "text": "Los programadores novatos deben tener cuidado con la gesti\u00f3n de la memoria; en C el programador ha de reservar y liberar la memoria expl\u00edcitamente. En otros lenguajes (como C# o Java) la memoria es gestionada de forma transparente para el programador. Esto alivia la carga de trabajo y evita errores, pero le quita flexibilidad al lenguaje para escribir controladores del hardware.\nPor esta raz\u00f3n es muy importante que los reci\u00e9n iniciados adopten buenas pr\u00e1cticas a la hora de escribir en C y manejar la memoria, como por ejemplo un uso intensivo de indentaci\u00f3n y conocer a fondo todo lo que implica el manejo de punteros y direcciones de memoria."}, {"name": "Algunas caracter\u00edsticas de las que carece C", "text": "Recolecci\u00f3n de basura nativa, sin embargo se encuentran a tal efecto bibliotecas como la \"libgc\" desarrollada por Sun Microsystems, o el Recolector de basura de Boehm.\nSoporte para programaci\u00f3n orientada a objetos, aunque la implementaci\u00f3n original de C++ fue un preprocesador que traduc\u00eda c\u00f3digo fuente de C++ a C. V\u00e9ase tambi\u00e9n la librer\u00eda GObject.\nFunciones anidadas, aunque GCC tiene esta caracter\u00edstica como extensi\u00f3n.\nSoporte nativo para programaci\u00f3n multihilo. Disponible usando librer\u00edas como libpthread.\nAunque la lista de las caracter\u00edsticas \u00fatiles de las que carece C es larga, este factor ha sido importante para su aceptaci\u00f3n, porque escribir r\u00e1pidamente nuevos compiladores para nuevas plataformas, mantiene lo que realmente hace el programa bajo el control directo del programador, y permite implementar la soluci\u00f3n m\u00e1s natural para cada plataforma. Esta es la causa de que a menudo C sea m\u00e1s eficiente que otros lenguajes. T\u00edpicamente, solo la programaci\u00f3n cuidadosa en lenguaje ensamblador produce un c\u00f3digo m\u00e1s r\u00e1pido, pues da control total sobre la m\u00e1quina, aunque los avances en los compiladores de C y la complejidad creciente de los microprocesadores modernos han reducido gradualmente esta diferencia.\nEl lenguaje se puede extender mediante bibliotecas y macros. Por ejemplo, la implementaci\u00f3n original de C++ consist\u00eda en un preprocesador que traduc\u00eda c\u00f3digo fuente C++ a C."}]}, {"name": "Historia", "text": "", "subsections": [{"name": "Desarrollo inicial", "text": "El desarrollo inicial de C se llev\u00f3 a cabo en los Laboratorios Bell de AT&T entre 1969 y 1973; seg\u00fan Dennis Ritchie, el periodo m\u00e1s creativo tuvo lugar en 1972. [1]\u200b Se le dio el nombre \"C\" porque muchas de sus caracter\u00edsticas fueron tomadas de un lenguaje anterior llamado\n\"B\".\nHay muchas leyendas acerca del origen de C y el sistema operativo con el que est\u00e1 \u00edntimamente relacionado, Unix. Algunas de ellas son:\nEl desarrollo de C fue el resultado del deseo de los programadores de jugar con Space Travel. Hab\u00edan estado jugando en el mainframe de su compa\u00f1\u00eda, pero debido a su poca capacidad de proceso y al tener que soportar 100 usuarios, Ken Thompson y Dennis Ritchie no ten\u00edan suficiente control sobre la nave para evitar colisiones con los asteroides, por ese motivo decidieron portar el juego a un PDP-7 de la oficina que no se utilizaba; pero esa m\u00e1quina no ten\u00eda sistema operativo, as\u00ed que decidieron escribir uno. Finalmente decidieron portar el sistema operativo del PDP-11 que hab\u00eda en su oficina, pero era muy costoso, pues todo el c\u00f3digo estaba escrito en lenguaje ensamblador. Entonces decidieron usar un lenguaje de alto nivel y port\u00e1til para que el sistema operativo se pudiera portar f\u00e1cilmente de un ordenador a otro, consideraron usar B pero carec\u00eda de las funcionalidades necesarias para aprovechar algunas caracter\u00edsticas avanzadas del PDP-11 entonces empezaron a crear un nuevo lenguaje: C.\nLa justificaci\u00f3n para obtener el ordenador original que se us\u00f3 para desarrollar Unix fue crear un sistema que automatizase el archivo de patentes. La versi\u00f3n original de Unix se desarroll\u00f3 en lenguaje ensamblador. M\u00e1s tarde, el lenguaje C se desarroll\u00f3 para poder reescribir el sistema operativo.\nEn 1973, el lenguaje C se hab\u00eda vuelto tan potente que la mayor parte del kernel Unix, originalmente escrito en el lenguaje ensamblador PDP-11, fue reescrita en C.[1]\u200b Este fue uno de los primeros n\u00facleos de sistema operativo implementados en un lenguaje distinto al ensamblador. (Algunos casos anteriores son el sistema Multics, escrito en PL/I, y Master Control Program para el B5000 de Burroughs, escrito en ALGOL en 1961)."}, {"name": "El C de Kernighan y Ritchie", "text": "En 1978, Ritchie y Brian Kernighan publicaron la primera edici\u00f3n de El lenguaje de programaci\u00f3n C, tambi\u00e9n conocido como La biblia de C. Este libro fue durante a\u00f1os la especificaci\u00f3n informal del lenguaje.[2]\u200b:\u200a2\u200a El lenguaje descrito en este libro recibe habitualmente el nombre de \"el C de Kernighan y Ritchie\" o simplemente \"K&R C\" (La segunda edici\u00f3n del libro cubre el est\u00e1ndar ANSI C, descrito m\u00e1s abajo).\nKernighan y Ritchie introdujeron las siguientes caracter\u00edsticas al lenguaje:\nEl tipo de datos struct.\nEl tipo de datos long int.\nEl tipo de datos unsigned int.\nLos operadores =+ y =- fueron sustituidos por += y -= para eliminar la ambig\u00fcedad sint\u00e1ctica de expresiones como i=-10, que se podr\u00eda interpretar bien como i\u00a0=-\u00a010 o bien como i\u00a0=\u00a0-10.\nEl C de Kernighan y Ritchie es el subconjunto m\u00e1s b\u00e1sico del lenguaje que un compilador debe de soportar. Durante muchos a\u00f1os, incluso tras la introducci\u00f3n del ANSI C, fue considerado \"el m\u00ednimo com\u00fan denominador\" en el que los programadores deb\u00edan programar cuando deseaban que sus programas fueran transportables, pues no todos los compiladores soportaban completamente ANSI, y el c\u00f3digo razonablemente bien escrito en K&R C es tambi\u00e9n c\u00f3digo ANSI C v\u00e1lido.\nEn las primeras versiones del lenguaje, la definici\u00f3n de funciones se hac\u00eda mediante un 'prototipo de funci\u00f3n' (function prototype), el cual indicaba al compilador el tipo de retorno de la funci\u00f3n. Aunque este m\u00e9todo tiene una gran desventaja respecto al nuevo, debido a que no comprueba el n\u00famero ni el tipo en la lista de argumentos; en otras palabras, es mucho m\u00e1s f\u00e1cil cometer errores al hacer una llamada a una funci\u00f3n con argumentos incorrectos.\nEjemplo del \"viejo estilo\":\nint\n \npower\n();\n/* Se podr\u00eda usar este prototipo \n                para llamar a la funci\u00f3n. \n                Simplemente power(); \n                u omitirlo dado que el tipo \n                por default es int */\npower\n(\na\n,\nb\n)\n;\n{\n\t\nn\nfor\n=\n1\n>\n0\n--\n\t\t\n*=\nreturn\n}\nEjemplo de la nueva definici\u00f3n:\n    \n        \n(*) Por defecto, el tipo de retorno en C es int, por lo que la declaraci\u00f3n entera int power(); podr\u00eda haberse omitido.\nEn los a\u00f1os siguientes a la publicaci\u00f3n del C de Kernighan y Ritchie, se a\u00f1adieron al lenguaje muchas caracter\u00edsticas no oficiales, que estaba soportadas por los compiladores de AT&T, entre otros. Algunas de estas caracter\u00edsticas eran:\nFunciones void y el tipo de datos void *.\nFunciones que retornaban tipos de datos struct o union (en lugar de punteros).\nAsignaci\u00f3n de tipos de datos struct.\nCalificador const, que hace que un objeto sea de solo lectura.\nUna biblioteca est\u00e1ndar, que incorporaba la mayor\u00eda de las funcionalidades implementadas por varios desarrolladores de compiladores.\nEnumeraciones."}, {"name": "ANSI C e ISO C", "text": "Art\u00edculo principal:\nA finales de la d\u00e9cada de 1970, C empez\u00f3 a sustituir a BASIC como lenguaje de programaci\u00f3n de microcomputadores predominante. Durante la d\u00e9cada de 1980 se empez\u00f3 a usar en los IBM PC, lo que increment\u00f3 su popularidad significativamente.\nAl mismo tiempo, Bjarne Stroustrup empez\u00f3 a trabajar con algunos compa\u00f1eros de Bell Labs para a\u00f1adir funcionalidades de programaci\u00f3n orientada a objetos a C.\nEl lenguaje que crearon, llamado C++, es hoy en d\u00eda el lenguaje de programaci\u00f3n de aplicaciones m\u00e1s com\u00fan en el sistema operativo Microsoft Windows; mientras que C sigue siendo m\u00e1s popular en el entorno Unix. Otro lenguaje que se desarroll\u00f3 en esa \u00e9poca, Objective C, tambi\u00e9n a\u00f1adi\u00f3 caracter\u00edsticas de programaci\u00f3n orientada a objetos a C. Aunque hoy en d\u00eda no es tan popular como C++, se usa para desarrollar aplicaciones Cocoa para Mac OS X.\nEn 1983, el Instituto Nacional Estadounidense de Est\u00e1ndares (ANSI) organiz\u00f3 un comit\u00e9, X3j11, para establecer una especificaci\u00f3n est\u00e1ndar de C. Tras un proceso largo y arduo, se complet\u00f3 el est\u00e1ndar en 1989 y se ratific\u00f3 como el \"Lenguaje de Programaci\u00f3n C\" ANSI X3.159-1989. Esta versi\u00f3n del lenguaje se conoce a menudo como ANSI C, o a veces como C89 (para distinguirla de C99).\nEn 1990, el est\u00e1ndar ANSI (con algunas modificaciones menores) fue adoptado por la Organizaci\u00f3n Internacional para la Estandarizaci\u00f3n (ISO) en el est\u00e1ndar ISO/IEC 9899:1990. Esta versi\u00f3n se conoce a veces como C90. No obstante, \"C89\" y \"C90\" se refieren en esencia al mismo lenguaje.\nUno de los objetivos del proceso de estandarizaci\u00f3n del ANSI C fue producir una extensi\u00f3n al C de Kernighan y Ritchie, incorporando muchas funcionalidades no oficiales. Sin embargo, el comit\u00e9 de estandarizaci\u00f3n incluy\u00f3 tambi\u00e9n muchas funcionalidades nuevas, como prototipos de funci\u00f3n, y un preprocesador mejorado. Tambi\u00e9n se cambi\u00f3 la sintaxis de la declaraci\u00f3n de par\u00e1metros para hacerla semejante a la empleada habitualmente en C++:\nmain\nargc\nargv\n  \nchar\n**\n...\npas\u00f3 a ser:\nmain\n*\n[])\nANSI C est\u00e1 soportado hoy en d\u00eda por casi la totalidad de los compiladores. La mayor\u00eda del c\u00f3digo C que se escribe actualmente est\u00e1 basado en ANSI C. Cualquier programa escrito s\u00f3lo en C est\u00e1ndar sin c\u00f3digo que dependa de un hardware determinado funciona correctamente en cualquier plataforma que disponga de una implementaci\u00f3n de C compatible. Sin embargo, muchos programas han sido escritos de forma que solo pueden compilarse en una cierta plataforma, o con un compilador concreto, esto puede ser debido a diversos motivos:\nLa utilizaci\u00f3n de bibliotecas no est\u00e1ndar, como interfaces gr\u00e1ficas de usuario.\nEl uso de compiladores que no cumplen las especificaciones del est\u00e1ndar.\nEl uso de tipos de datos suponiendo que tendr\u00e1n el mismo tama\u00f1o u orden de los bits en todas las plataformas.\nLa macro __STDC__ puede usarse para dividir el c\u00f3digo en secciones ANSI y K&R para el compilador.\n# if __STDC__\nextern\ngetopt\nconst\n);\n# else\n# endif\nAlgunos programadores recomiendan usar \"#if __STDC__\", como en el ejemplo, en lugar de \"#ifdef __STDC__\" porque algunos compiladores le asignan el valor cero a __STDC__ para indicar que no son compatibles con ANSI.\nEn el siguiente ejemplo, el programa pide al usuario que introduzca un n\u00famero. El programa dividir\u00e1 dicho n\u00famero entre 2 e imprimir\u00e1 el resultado mientras que este sea par, y terminar\u00e1 cuando el n\u00famero sea impar:\n#include\n<stdio.h>\n()\nnumero\nfputs\n\"Introduzca un numero entero par: \"\nstdout\nif\nscanf\n\"%d\"\n&\n!=\n\"Error: numero no valido.\n\\n\n\"\nstderr\n-1\ni\n%\n2\n==\n++\nprintf\n\"%.3d| %d/2 = \"\n/=\n\"%d\n\"No se puede seguir dividiendo: El numero %d es impar.\ngetchar\nPalabras reservadas de ANSI-C\nauto\n      \ndouble\n   \n       \nstruct\nbreak\n     \nelse\nlong\nswitch\ncase\nenum\nregister\ntypedef\nunion\nconst\nfloat\nshort\nunsigned\ncontinue\nsigned\nvoid\ndefault\ngoto\nsizeof\nvolatile\ndo\nstatic\nwhile"}, {"name": "C99", "text": "Para mejorarla, pulsa  junto a su t\u00edtulo:\nPodr\u00eda contener informaci\u00f3n desactualizada.\nTras el proceso de estandarizaci\u00f3n de ANSI, la especificaci\u00f3n del lenguaje C permaneci\u00f3 relativamente estable durante alg\u00fan tiempo, mientras que C++ sigui\u00f3 evolucionando.\nSin embargo, el est\u00e1ndar continu\u00f3 bajo revisi\u00f3n a finales de la d\u00e9cada de 1990, lo que llev\u00f3 a la publicaci\u00f3n del est\u00e1ndar ISO 9899:1999 en 1999.[5]\u200b\nEste est\u00e1ndar se denomina habitualmente \"C99\". Se adopt\u00f3 como est\u00e1ndar ANSI en marzo de 2000.\nLas nuevas caracter\u00edsticas de C99 incluyen:[6]\u200b:\u200axi\u2013xii\u200a\nLas variables pueden declararse en cualquier sitio (como en C++), en lugar de poder declararse solo tras otra declaraci\u00f3n o al comienzo de una declaraci\u00f3n compuesta.\nMuchos tipos de datos, incluyendo long int (para reducir el engorro de la transici\u00f3n de 32 bits a 64 bits), un tipo de dato booleano, y un tipo complex que representa n\u00fameros complejos.\nArrays de longitud variable.\nSoporte para comentarios de una l\u00ednea que empiecen con //, como en BCPL o en C++, caracter\u00edstica para la que muchos compiladores hab\u00edan dado soporte por su cuenta.\nMuchas funciones nuevas, como snprintf()\nAlgunos headers nuevos, como stdint.h.\nEl compilador GCC, entre muchos otros, soportan hoy en d\u00eda la mayor\u00eda de las nuevas caracter\u00edsticas de C99. Sin embargo, este nuevo est\u00e1ndar ha tenido poca acogida entre algunos desarrolladores de compiladores, como Microsoft y Borland, que se han centrado en C++. Brandon Bray, de Microsoft, dijo a este respecto: "}, {"name": "C11", "text": "C11 (antes conocido como C1X) es un nombre informal para ISO/IEC 9899:2011[8]\u200b. El borrador final, N1570, fue publicado en abril de 2011.[9]\u200b El nuevo est\u00e1ndar super\u00f3 su \u00faltima revisi\u00f3n el 10 de octubre de 2011 y fue oficialmente ratificado por la ISO y publicado el 8 de diciembre de 2011."}, {"name": "C embebido", "text": "Hist\u00f3ricamente la programaci\u00f3n en C embebido ha requerido extensiones no est\u00e1ndar del lenguaje C para implementar caracter\u00edsticas no oficiales tales como aritm\u00e9tica de punto fijo y operaciones b\u00e1sicas de entrada y salida.\nEn 2008 el comit\u00e9 de estandarizaci\u00f3n de C, para implementar estas caracter\u00edsticas no oficiales, public\u00f3 un informe t\u00e9cnico en el que extend\u00eda el lenguaje C proporcionando un est\u00e1ndar com\u00fan al que todas las implementaciones se pod\u00edan adherir. Inclu\u00eda varias caracter\u00edsticas no disponibles en C normal, tales como aritm\u00e9tica de punto fijo, espacios de direcciones con nombres y direccionamiento por hardware de entrada y salida b\u00e1sico."}, {"name": "C18", "text": "El \u00faltimo est\u00e1ndar publicado para C ISO/IEC 9899:2018.[10]\u200b"}]}, {"name": "Lenguajes derivados de C", "text": "Desde el inicio del lenguaje han surgido varias ramas de evoluci\u00f3n que han generado varios lenguajes:\nObjective-C es un primer intento de proporcionar soporte para la programaci\u00f3n orientada a objetos en C, pero actualmente usado en Mac OS X, iOS y GNUstep.\nC++ (pronunciado C Plus Plus) dise\u00f1ado por Bjarne Stroustrup fue el segundo intento de proporcionar orientaci\u00f3n a objetos a C y es la variante m\u00e1s difundida y aceptada. Esta versi\u00f3n combina la flexibilidad y el acceso de bajo nivel de C con las caracter\u00edsticas de la programaci\u00f3n orientada a objetos como abstracci\u00f3n, encapsulaci\u00f3n y ocultaci\u00f3n.\nTambi\u00e9n se han creado numerosos lenguajes inspirados en la sintaxis de C, pero que no son compatibles con \u00e9l:\nJava, que une una sintaxis inspirada en la del C++ con una orientaci\u00f3n a objetos m\u00e1s similar a la de Smalltalk y Objective C.\nJavaScript, un lenguaje de scripting creado en Netscape e inspirado en la sintaxis de Java dise\u00f1ado para dar a las p\u00e1ginas web mayor interactividad. A la versi\u00f3n estandarizada se la conoce como ECMAScript.\nC# (pronunciado C Sharp) es un lenguaje desarrollado por Microsoft derivado de C/C++ y Java.", "subsections": []}, {"name": "Proceso de compilaci\u00f3n", "text": "La compilaci\u00f3n de un programa C se realiza en varias fases que normalmente son automatizadas y ocultadas por los entornos de desarrollo:\nPreprocesado consistente en modificar el c\u00f3digo fuente en C seg\u00fan una serie de instrucciones (denominadas directivas de preprocesado) simplificando de esta forma el trabajo del compilador. Por ejemplo, una de las acciones m\u00e1s importantes es la modificaci\u00f3n de las inclusiones (#include) por las declaraciones reales existentes en el archivo indicado.\nCompilaci\u00f3n que genera el c\u00f3digo objeto a partir del c\u00f3digo ya preprocesado.\nEnlazado que une los c\u00f3digos objeto de los distintos m\u00f3dulos y bibliotecas externas (como las bibliotecas del sistema) con el c\u00f3digo objeto generado en el paso anterior para generar el programa ejecutable final.", "subsections": [{"name": "Ejemplo de c\u00f3digo", "text": "El siguiente programa imprime en pantalla la frase \"Hola Mundo\" (C99).\n// necesario para utilizar printf()\n#\ninclude\n\"Hola Mundo\nEl siguiente programa muestra el uso de punteros en C.\n(){\n// Variable\n99\n// Puntero a variable\np\n// Asignaci\u00f3n de puntero\n// Acceso al valor de la variable a la que apunta el puntero\n\"Numero: %d\n// Acceso a la direcci\u00f3n a la que apunta el puntero\n\"Direccion: %d\n// Cambio de valor de la variable a la que apunta el puntero\nEl siguiente escribe \"Hola Mundo\" en C89\n/* comentarios con '//' no permitidos en C89, s\u00ed en C99 */\n  /* necesario para utilizar printf */\n/* tipo 'int' de retorno impl\u00edcito */\nEstructura de control \"else if\"\ncondicion\nsentencia\nsentencias\npor\ndefecto"}]}, {"name": "Herramientas de programaci\u00f3n", "text": "Al programar en C, es habitual usar algunas herramientas de programaci\u00f3n de uso muy extendido, sobre todo en entorno de tipo Unix:\nmake: automatizador del proceso de compilaci\u00f3n y enlazado;\nlint: detector de c\u00f3digo sospechoso, confuso o incompatible entre distintas arquitecturas;\nvalgrind: detector de posibles fugas de memoria;\ngdb: depurador (debugger) usado en GNU;\ndbx: depurador preinstalado en Unix;\nddd: interfaz gr\u00e1fico para los depuradores gdb o dbx.", "subsections": []}, {"name": "Aplicabilidad", "text": "Hecho principalmente para la fluidez de programaci\u00f3n en sistemas Unix. Se usa tambi\u00e9n para el desarrollo de otros sistemas operativos como Windows o GNU/Linux. Igualmente para aplicaciones de escritorio como GIMP, cuyo principal lenguaje de programaci\u00f3n es C.\nDe la misma forma, es muy usado en aplicaciones cient\u00edficas (para experimentos inform\u00e1ticos, f\u00edsicos, qu\u00edmicos, matem\u00e1ticos, entre otros, parte de ellos conocidos como modelos y simuladores), industriales (industria rob\u00f3tica, cibern\u00e9tica, sistemas de informaci\u00f3n y base de datos para la industria petrolera y petroqu\u00edmica. Predominan tambi\u00e9n todo lo que se refiere a simulaci\u00f3n de m\u00e1quinas de manufactura), simulaciones de vuelo (es la m\u00e1s delicada, ya que se tienen que usar demasiados recursos tanto de hardware como de software para desarrollar aplicaciones que permitan simular el vuelo real de una aeronave). Se aplica por tanto, en diversas \u00e1reas desconocidas por gran parte de los usuarios noveles.\nLos ordenadores de finales de los 90 son varios \u00f3rdenes de magnitud m\u00e1s potentes que las m\u00e1quinas en que C se desarroll\u00f3 originalmente. Programas escritos en lenguajes de tipo din\u00e1mico y f\u00e1cil codificaci\u00f3n (Ruby, Python, Perl...) que anta\u00f1o hubieran resultado demasiado lentos, son lo bastante r\u00e1pidos como para desplazar en uso a C. Aun as\u00ed, se puede seguir encontrando c\u00f3digo C en grandes desarrollos de animaciones, modelados y escenas en 3D en pel\u00edculas y otras aplicaciones multimedia.\nActualmente, los grandes proyectos de software se dividen en partes, dentro de un equipo de desarrollo. Aquellas partes que son m\u00e1s \"burocr\u00e1ticas\" o \"de gesti\u00f3n\" con los recursos del sistema, se suelen realizar en lenguajes de tipo din\u00e1mico o de guion (script), mientras que aquellas partes \"cr\u00edticas\", por su necesidad de rapidez de ejecuci\u00f3n, se realizan en un lenguaje de tipo compilado, como C o C++. Si, despu\u00e9s de hacer la divisi\u00f3n, las partes cr\u00edticas no superan un cierto porcentaje del total (aproximadamente el 10%) entonces todo el desarrollo se realiza con lenguajes din\u00e1micos. Si la parte cr\u00edtica no llega a cumplir las expectativas del proyecto, se comparan las alternativas de una inversi\u00f3n en nuevo hardware frente a invertir en el coste de un programador para que reescriba dicha parte cr\u00edtica.", "subsections": [{"name": "Aplicaciones embebidas", "text": "C es el lenguaje com\u00fan para programar sistemas embebidos.[cita\u00a0requerida] El c\u00f3digo ligero que un compilador C genera, combinado con la capacidad de acceso a capas del software cercanas al hardware son la causa de su popularidad en estas aplicaciones.\nUna caracter\u00edstica donde C demuestra comodidad de uso particularmente valiosa en sistemas embebidos es la manipulaci\u00f3n de bits. Los sistemas contienen registros mapeados en memoria (en ingl\u00e9s, MMR) a trav\u00e9s de los cuales los perif\u00e9ricos se configuran. Estos registros mezclan varias configuraciones en la misma direcci\u00f3n de memoria, aunque en bits distintos. Con C es posible modificar f\u00e1cilmente uno de estos bits sin alterar el resto. Por ejemplo:\nmmr\n/* puntero al registro que queremos modificar */\n0x40008ABC\n/* direcci\u00f3n de memoria del registro */\n|=\n<<\n7\n/* pone a 1 el bit 8 sin modificar los dem\u00e1s */\n&=\n~\n12\n/* pone a 0 el bit 13 sin modificar los dem\u00e1s */\nEste tipo de manipulaci\u00f3n es muy tediosa o sencillamente imposible en otros lenguajes de alto nivel, dado que se utilizan operaciones comunes del lenguaje ensamblador como las operaciones a nivel bit OR, AND, SHL y CPL pero que est\u00e1n disponibles en el lenguaje C.\nOtras caracter\u00edsticas de C consideradas desventajas en la programaci\u00f3n para PC -como la ausencia de control de memoria autom\u00e1tico- se convierten en ventajas cuando los sistemas embebidos necesitan c\u00f3digo peque\u00f1o y optimizado. Ese es el caso de los sistemas basados en microcontroladores de poca potencia como el intel 8051 o muchos sistemas ARM."}]}, {"name": "Bibliotecas C", "text": "Una biblioteca de C es una colecci\u00f3n de funciones utilizadas en el lenguaje de programaci\u00f3n C. Las bibliotecas m\u00e1s comunes son la biblioteca est\u00e1ndar de C y la biblioteca del est\u00e1ndar ANSI C, la cual provee las especificaciones de los est\u00e1ndares que son ampliamente compartidas entre bibliotecas. La biblioteca ANSI C est\u00e1ndar, incluye funciones para la entrada y salida de archivos, alojamiento de memoria y operaciones con datos comunes: funciones matem\u00e1ticas, funciones de manejo de cadenas de texto y funciones de hora y fecha.\nOtras bibliotecas C son aquellas utilizadas para desarrollar sistemas Unix, las cuales proveen interfaces hacia el n\u00facleo. Estas funciones son detalladas en varios est\u00e1ndares tales como POSIX y el Single UNIX Specification.\nYa que muchos programas han sido escritos en el lenguaje C existe una gran variedad de bibliotecas disponibles. Muchas bibliotecas son escritas en C debido a que C genera c\u00f3digo objeto r\u00e1pido; los programadores luego generan interfaces a la biblioteca para que las rutinas puedan ser utilizadas desde lenguajes de mayor nivel, tales como Java, Perl y Python.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Anexo:Operadores de C y C++\nC++", "subsections": []}, {"name": "Referencias", "text": "\u2191 a b c d Ritchie, Dennis (1993). \u00abThe Development of the C Language\u00bb. ACM SIGPLAN Notices (en ingl\u00e9s) (ACM Press) 28 (3): 201-208. doi:10.1145/155360.155580. Consultado el 10 de marzo de 2019.\u00a0\n\u2191 a b c Kernighan, Brian W.; Ritchie, Dennis M. (1991). El lenguaje de programaci\u00f3n C (2\u00aa edici\u00f3n). Prentice Hall Hispanoamericana. ISBN\u00a0968-880-205-0.\u00a0\n\u2191 Raymond, Eric S. (2003). The Art of Unix Programming (en ingl\u00e9s). Addison-Wesley. ISBN\u00a00-13-142901-9.\u00a0\n\u2191 Raymond, Eric S. (2003). \u00abEvolution of C\u00bb. The Art of Unix Programming (en ingl\u00e9s). Consultado el 7 de mayo de 2019.\u00a0\n\u2191 \u00abISO/IEC 9899:1999\u00bb. International Organization for Standardization (en ingl\u00e9s). Consultado el 10 de marzo de 2019.\u00a0\n\u2191 \u00abWG14/N1256 Committee Draft \u2014 Septermber 7, 2007 ISO/IEC 9899:TC3\u00bb (PDF). International Organization for Standardization (en ingl\u00e9s). 7 de septiembre de 2007. Consultado el 7 de mayo de 2019.\u00a0\n\u2191 \u00abContent not found\u00bb. Consultado el 2009.\u00a0\n\u2191 \u00abISO/IEC 9899:2011\u00bb. International Organization for Standardization (en ingl\u00e9s). Consultado el 10 de marzo de 2019.\u00a0\n\u2191 \u00abN1570 Committee Draft \u2014 April 12, 2011 ISO/IEC 9899:201x\u00bb (PDF). International Organization for Standardization (en ingl\u00e9s). 12 de abril de 2011. Consultado el 7 de mayo de 2019.\u00a0\n\u2191 14:00-17:00. \u00abISO/IEC 9899:2018\u00bb. ISO (en ingl\u00e9s). Consultado el 18 de mayo de 2019.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikiversidad alberga proyectos de aprendizaje sobre C (lenguaje de programaci\u00f3n).\n Wikilibros alberga un libro o manual sobre Programaci\u00f3n en C.\nP\u00e1gina web oficial del est\u00e1ndar ISO/IEC 9899 - lenguaje de programaci\u00f3n C\nP\u00e1gina web oficial del grupo de trabajo de ISO/IEC JTC1/SC22/WG14 encargado de la estandarizaci\u00f3n del lenguaje de programaci\u00f3n C", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_Java", "title": "Java (lenguaje de programaci\u00f3n)", "summary": "[\n]\nJava es un lenguaje de programaci\u00f3n y una plataforma inform\u00e1tica que fue comercializada por primera vez en 1995 por Sun Microsystems.[2]\u200b[3]\u200b\nEl lenguaje de programaci\u00f3n Java fue desarrollado originalmente por James Gosling, de Sun Microsystems (constituida en 1983 y posteriormente adquirida el 27 de enero de 2010 por la compa\u00f1\u00eda Oracle),[4]\u200b y publicado en 1995 como un componente fundamental de la plataforma Java de Sun Microsystems. Su sintaxis deriva en gran medida de C y C++, pero tiene menos utilidades de bajo nivel que cualquiera de ellos. Las aplicaciones de Java son compiladas a bytecode (clase Java), que puede ejecutarse en cualquier m\u00e1quina virtual Java (JVM) sin importar la arquitectura de la computadora subyacente.\nLa compa\u00f1\u00eda Sun desarroll\u00f3 la implementaci\u00f3n de referencia original para los compiladores de Java, m\u00e1quinas virtuales y librer\u00edas de clases en 1991, y las public\u00f3 por primera vez en 1995. A partir de mayo de 2007, en cumplimiento de las especificaciones del Proceso de la Comunidad Java, Sun volvi\u00f3 a licenciar la mayor\u00eda de sus tecnolog\u00edas de Java bajo la Licencia P\u00fablica General de GNU. Otros han desarrollado tambi\u00e9n implementaciones alternas a estas tecnolog\u00edas de Sun, tales como el Compilador de Java de GNU y el GNU Classpath.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n1.1 Versiones\n2 Filosof\u00eda\n2.1 Orientado a objetos\n2.2 Independencia de la plataforma\n2.3 El recolector de basura\n3 Sintaxis\n3.1 Aplicaciones aut\u00f3nomas\n3.2 Applets\n3.3 Servlets\n3.4 Aplicaciones con interfaz\n4 Entornos de funcionamiento\n4.1 En dispositivos m\u00f3viles y sistemas embebidos\n4.2 En el navegador web\n4.3 En sistemas de servidor\n4.4 En aplicaciones de escritorio\n4.5 Plataformas soportadas\n5 Programaci\u00f3n\n5.1 Expresiones\n5.2 Operadores\n5.2.1 Operadores a nivel de bit\n5.2.2 Precedencia de operadores\n5.3 Sentencias\n5.4 Conversi\u00f3n de tipos\n6 Industria relacionada\n7 Cr\u00edticas\n7.1 General\n7.2 El lenguaje\n7.3 Apariencia\n7.4 Rendimiento\n8 Recursos\n8.1 JRE\n8.2 Componentes\n8.3 API\n8.4 Extensiones y arquitecturas relacionadas\n9 Java en c\u00f3digo abierto\n9.1 Alternativas libres\n9.2 Cr\u00edticas referentes a Java y el software libre\n10 V\u00e9ase tambi\u00e9n\n11 Referencias\n12 Notas\n13 Enlaces externos\n13.1 Oracle - Sun\n13.2 Tutoriales\n13.3 Cr\u00edticas", "subsections": []}, {"name": "Historia", "text": "Java se cre\u00f3 como una herramienta de programaci\u00f3n para ser usada en un proyecto de set-top-box en una peque\u00f1a operaci\u00f3n denominada the Green Project en Sun Microsystems en 1991. El equipo (Green Team), compuesto por trece personas y dirigido por James Gosling, trabaj\u00f3 durante 18 meses en Sand Hill Road, en Menlo Park, para desarrollarlo.\nEl lenguaje se denomin\u00f3 inicialmente Oak (por un roble que hab\u00eda fuera de la oficina de Gosling), luego pas\u00f3 a llamarse Green tras descubrir que Oak era ya una marca comercial registrada para adaptadores de tarjetas gr\u00e1ficas, y finalmente se le renombr\u00f3 Java.\nEs frecuentada por algunos de los miembros del equipo. Pero no est\u00e1 claro si es un acr\u00f3nimo o no, aunque algunas fuentes se\u00f1alan que podr\u00eda tratarse de las iniciales de sus dise\u00f1adores: James Gosling, Arthur Van Hoff y Andy Bechtolsheim. Otros abogan por el siguiente acr\u00f3nimo, Just Another Vague Acronym (\"s\u00f3lo otro acr\u00f3nimo ambiguo m\u00e1s\"). La hip\u00f3tesis que m\u00e1s fuerza tiene es la de que Java debe su nombre a un tipo de caf\u00e9 disponible en la cafeter\u00eda cercana; de ah\u00ed que el icono de Java sea una taza de caf\u00e9 caliente. Un peque\u00f1o signo que da fuerza a esta teor\u00eda es que los cuatro primeros bytes (el n\u00famero m\u00e1gico) de los archivos.class que genera el compilador, son en hexadecimal, 0xCAFEBABE. A pesar de todas estas teor\u00edas, el nombre fue sacado al parecer de una lista aleatoria de palabras.[5]\u200b\nLos objetivos de Gosling eran implementar una m\u00e1quina virtual y un lenguaje con una estructura y sintaxis similar a C++. Entre junio y julio de 1994, tras una sesi\u00f3n maratoniana de tres d\u00edas entre John Gage, James Gosling, Patrick Naughton, Wayne Rosing y Eric Schmidt, el equipo reorient\u00f3 la plataforma hacia la Web. Sintieron que la llegada del navegador web Mosaic propiciar\u00eda que Internet se convirtiese en un medio interactivo, como el que pensaban era la televisi\u00f3n por cable. Naughton cre\u00f3 entonces un prototipo de navegador, WebRunner, que m\u00e1s tarde ser\u00eda conocido como HotJava.\nEn 1994, se les hizo una demostraci\u00f3n de HotJava y la plataforma Java a los ejecutivos de Sun. Java 1.0a pudo descargarse por primera vez en 1994, pero hubo que esperar al 23 de mayo de 1995, durante las conferencias de SunWorld, a que vieran la luz p\u00fablica Java y HotJava, el navegador Web. El acontecimiento fue anunciado por John Gage, el director cient\u00edfico de Sun Microsystems. El acto estuvo acompa\u00f1ado por una peque\u00f1a sorpresa adicional, el anuncio por parte de Marc Andreessen, vicepresidente ejecutivo de Netscape, de que Java ser\u00eda soportado en sus navegadores. El 9 de enero del a\u00f1o siguiente, 1996, Sun fund\u00f3 el grupo empresarial JavaSoft para que se encargase del desarrollo tecnol\u00f3gico.[2] Dos semanas m\u00e1s tarde la primera versi\u00f3n de Java fue publicada.\nLa promesa inicial de Gosling era Write Once, Run Anywhere (Escr\u00edbelo una vez, ejec\u00fatalo en cualquier lugar), proporcionando un lenguaje independiente de la plataforma y un entorno de ejecuci\u00f3n (la JVM) ligero y gratuito para las plataformas m\u00e1s populares, de forma que los binarios (bytecode) de las aplicaciones Java pudiesen ejecutarse en cualquier plataforma.\nEl entorno de ejecuci\u00f3n era relativamente seguro, y los principales navegadores web pronto incorporaron la posibilidad de ejecutar applets Java incrustadas en las p\u00e1ginas web.\nJava ha experimentado numerosos cambios desde la versi\u00f3n primigenia, JDK 1.0, as\u00ed como un enorme incremento en el n\u00famero de clases y paquetes que componen la biblioteca est\u00e1ndar.[6]\u200b", "subsections": [{"name": "Versiones", "text": "Desde J2SE 1.4, la evoluci\u00f3n del lenguaje ha sido regulada por el JCP (Java Community Process), que usa Java Specification Requests (JSRs) para proponer y especificar cambios en la plataforma Java. El lenguaje en s\u00ed mismo est\u00e1 especificado en la Java Language Specification (JLS), o Especificaci\u00f3n del Lenguaje Java. Los cambios en los JLS son gestionados en JSR 901.\nJDK 1.0 (23 de enero de 1996) \u2014 Primer lanzamiento: comunicado de prensa\nJDK 1.1 (19 de febrero de 1997) \u2014 Principales adiciones incluidas: comunicado de prensa\nuna reestructuraci\u00f3n intensiva del modelo de eventos AWT (Abstract Windowing Toolkit)\nclases internas (inner classes)\nJavaBeans\nJDBC (Java Database Connectivity), para la integraci\u00f3n de bases de datos\nRMI (Remote Method Invocation)\nJ2SE 1.2 (8 de diciembre de 1998) \u2014 Nombre clave Playground. Esta y las siguientes versiones fueron recogidas bajo la denominaci\u00f3n Java 2 y el nombre \"J2SE\" (Java 2 Platform, Standard Edition) reemplaz\u00f3 a JDK para distinguir la plataforma base de J2EE (Java 2 Platform, Enterprise Edition) y J2ME (Java 2 Platform, Micro Edition). Otras mejoras a\u00f1adidas inclu\u00edan: comunicado de prensa\nla palabra reservada (keyword) strictfp\nreflexi\u00f3n en la programaci\u00f3n\nla API gr\u00e1fica ( Swing) fue integrada en las clases b\u00e1sicas\nla m\u00e1quina virtual (JVM) de Sun fue equipada con un compilador JIT (Just in Time) por primera vez\nJava Plug-in\nJava IDL, una implementaci\u00f3n de IDL (Lenguaje de Descripci\u00f3n de Interfaz) para la interoperabilidad con CORBA\nColecciones (Collections)\nJ2SE 1.3 (8 de mayo de 2000) \u2014 Nombre clave Kestrel. Los cambios m\u00e1s notables fueron: comunicado de prensa lista completa de cambios\nla inclusi\u00f3n de la m\u00e1quina virtual de HotSpot JVM (la JVM de HotSpot fue lanzada inicialmente en abril de 1999, para la JVM de J2SE 1.2)\nRMI fue cambiado para que se basara en CORBA\nJavaSound\nse incluy\u00f3 el Java Naming and Directory Interface (JNDI) en el paquete de bibliotecas principales (anteriormente disponible como una extensi\u00f3n)\nJava Platform Debugger Architecture (JPDA)\nJ2SE 1.4 (6 de febrero de 2002) \u2014 Nombre clave Merlin. Este fue el primer lanzamiento de la plataforma Java desarrollado bajo el Proceso de la Comunidad Java como JSR 59. Los cambios m\u00e1s notables fueron: comunicado de prensalista completa de cambios\nPalabra reservada assert (Especificado en JSR 41.)\nExpresiones regulares modeladas al estilo de las expresiones regulares Perl\nEncadenaci\u00f3n de excepciones Permite a una excepci\u00f3n encapsular la excepci\u00f3n de bajo nivel original.\nnon-blocking NIO (New Input/Output) (Especificado en JSR 51.)\nLogging API (Specified in JSR 47.)\nAPI I/O para la lectura y escritura de im\u00e1genes en formatos como JPEG o PNG\nParser XML integrado y procesador XSLT (JAXP) (Especificado en JSR 5 y JSR 63.)\nSeguridad integrada y extensiones criptogr\u00e1ficas (JCE, JSSE, JAAS)\nJava Web Start incluido (El primer lanzamiento ocurri\u00f3 en marzo de 2001 para J2SE 1.3) (Especificado en JSR 56.)\nJ2SE 5.0 (30 de septiembre de 2004) \u2014 Nombre clave: Tiger. (Originalmente numerado 1.5, esta notaci\u00f3n a\u00fan es usada internamente.[3]) Desarrollado bajo JSR 176, Tiger a\u00f1adi\u00f3 un n\u00famero significativo de nuevas caracter\u00edsticas comunicado de prensa\nPlantillas (gen\u00e9ricos) \u2014 provee conversi\u00f3n de tipos (type safety) en tiempo de compilaci\u00f3n para colecciones y elimina la necesidad de la mayor\u00eda de conversi\u00f3n de tipos (type casting). (Especificado por JSR 14.)\nMetadatos \u2014 tambi\u00e9n llamados anotaciones, permite a estructuras del lenguaje como las clases o los m\u00e9todos, ser etiquetados con datos adicionales, que puedan ser procesados posteriormente por utilidades de proceso de metadatos. (Especificado por JSR 175.)\nAutoboxing/unboxing \u2014 Conversiones autom\u00e1ticas entre tipos primitivos (Como los int) y clases de envoltura primitivas (Como Integer). (Especificado por JSR 201.)\nEnumeraciones \u2014 la palabra reservada enum crea una typesafe, lista ordenada de valores (como Dia.LUNES, Dia.MARTES, etc.). Anteriormente, esto solo pod\u00eda ser llevado a cabo por constantes enteras o clases construidas manualmente (enum pattern). (Especificado por JSR 201.)\nVarargs (n\u00famero de argumentos variable) \u2014 El \u00faltimo par\u00e1metro de un m\u00e9todo puede ser declarado con el nombre del tipo seguido por tres puntos (e.g. void drawtext(String... lines)). En la llamada al m\u00e9todo, puede usarse cualquier n\u00famero de par\u00e1metros de ese tipo, que ser\u00e1n almacenados en un array para pasarlos al m\u00e9todo.\nBucle for mejorado \u2014 La sintaxis para el bucle for se ha extendido con una sintaxis especial para iterar sobre cada miembro de un array o sobre cualquier clase que implemente Iterable, como la clase est\u00e1ndar Collection, de la siguiente forma:\nvoid\ndisplayWidgets\n(\nIterable\n<\nWidget\n>\nwidgets\n)\n{\nfor\nw\n:\n.\ndisplay\n();\n}\nEste ejemplo itera sobre el objeto Iterable widgets, asignando, en orden, cada uno de los elementos a la variable w, y llamando al m\u00e9todo display() de cada uno de ellos. (Especificado por JSR 201.)\nJava SE 6 (11 de diciembre de 2006) \u2014 Nombre clave Mustang. Estuvo en desarrollo bajo la JSR 270. En esta versi\u00f3n, Sun cambi\u00f3 el nombre \"J2SE\" por Java SE y elimin\u00f3 el \".0\" del n\u00famero de versi\u00f3n.[4] Est\u00e1 disponible en http://java.sun.com/javase/6/. Los cambios m\u00e1s importantes introducidos en esta versi\u00f3n son:\nIncluye un nuevo marco de trabajo y API que hacen posible la combinaci\u00f3n de Java con lenguajes din\u00e1micos como PHP, Python, Ruby y JavaScript.\nIncluye el motor Rhino, de Mozilla, una implementaci\u00f3n de Javascript en Java.\nIncluye un cliente completo de Servicios Web y soporta las \u00faltimas especificaciones para Servicios Web, como JAX-WS 2.0, JAXB 2.0, STAX y JAXP.\nMejoras en la interfaz gr\u00e1fica y en el rendimiento.\nJava SE 7 \u2014 Nombre clave Dolphin. En el a\u00f1o 2006 a\u00fan se encontraba en las primeras etapas de planificaci\u00f3n. Su lanzamiento fue en julio de 2011.\nSoporte para XML dentro del propio lenguaje.\nUn nuevo concepto de superpaquete.\nSoporte para closures.\nIntroducci\u00f3n de anotaciones est\u00e1ndar para detectar fallos en el software.\nNo oficiales:\nNIO2.\nJava Module System.\nJava Kernel.\nNueva API para el manejo de D\u00edas y Fechas, la cual reemplazar\u00e1 las antiguas clases Date y Calendar.\nPosibilidad de operar con clases BigDecimal usando operandos.\nJava SE 8 \u2014 lanzada en marzo de 2014. Cabe destacar:\nIncorpora de forma completa la librer\u00eda JavaFX.\nDiferentes mejoras en seguridad.\nDiferentes mejoras en concurrencia.\nA\u00f1ade funcionalidad para programaci\u00f3n funcional mediante expresiones Lambda.\nMejora la integraci\u00f3n de JavaScript.\nNuevas API para manejo de fechas y tiempo (date - time).\nJava SE 9 \u2014 lanzada el 21 de septiembre del 2017.\nJava SE 10 \u2014 lanzada el 20 de marzo de 2018.\nJava SE 11 \u2014 lanzada el 25 de septiembre de 2018.\nJava SE 12 \u2014 lanzada el 19 de marzo de 2019.\nJava SE 15 \u2014 lanzada el 15 de septiembre de 2020.\nJava SE 16 \u2014 lanzada el 18 de marzo de 2021.[7]\u200b\nJava SE 17 \u2014 lanzada el 14 de septiembre de 2021. Como m\u00ednimo tendr\u00e1 soporte hasta septiembre de 2024 al ser una versi\u00f3n LTS (Long Term Support - Soporte a largo plazo).\nJava SE 18 \u2014 lanzada el 22 de marzo de 2022.[8]\u200b\nEn el 2005 se calculaba en 4,5 millones el n\u00famero de desarrolladores y 2500 millones de dispositivos habilitados con tecnolog\u00eda Java."}]}, {"name": "Filosof\u00eda", "text": "El lenguaje Java se cre\u00f3 con cinco objetivos principales:\nDeber\u00eda usar el paradigma de la programaci\u00f3n orientada a objetos.\nDeber\u00eda permitir la ejecuci\u00f3n de un mismo programa en m\u00faltiples sistemas operativos.\nDeber\u00eda incluir por defecto soporte para trabajo en red.\nDeber\u00eda dise\u00f1arse para ejecutar c\u00f3digo en sistemas remotos de forma segura.\nDeber\u00eda ser f\u00e1cil de usar y tomar lo mejor de otros lenguajes orientados a objetos, como C++.\nPara conseguir la ejecuci\u00f3n de c\u00f3digo remoto y el soporte de red, los programadores de Java a veces recurren a extensiones como CORBA (Common Object Request Broker Architecture), Internet Communications Engine u OSGi, respectivamente.", "subsections": [{"name": "Orientado a objetos", "text": "V\u00e9anse tambi\u00e9n:\n y \nLa primera caracter\u00edstica, orientado a objetos (\u201cOO\u201d), se refiere a un m\u00e9todo de programaci\u00f3n y al dise\u00f1o del lenguaje. Aunque hay muchas interpretaciones para OO, una primera idea es dise\u00f1ar el software de forma que los distintos tipos de datos que usen est\u00e9n unidos a sus operaciones. As\u00ed, los datos y el c\u00f3digo (funciones o m\u00e9todos) se combinan en entidades llamadas objetos. Un objeto puede verse como un paquete que contiene el \u201ccomportamiento\u201d (el c\u00f3digo) y el \u201cestado\u201d (datos). El principio es separar aquello que cambia de las cosas que permanecen inalterables. Frecuentemente, cambiar una estructura de datos implica un cambio en el c\u00f3digo que opera sobre los mismos, o viceversa. Esta separaci\u00f3n en objetos coherentes e independientes ofrece una base m\u00e1s estable para el dise\u00f1o de un sistema software. El objetivo es hacer que grandes proyectos sean f\u00e1ciles de gestionar y manejar, mejorando como consecuencia su calidad y reduciendo el n\u00famero de proyectos fallidos.\nOtra de las grandes promesas de la programaci\u00f3n orientada a objetos es la creaci\u00f3n de entidades m\u00e1s gen\u00e9ricas (objetos) que permitan la reutilizaci\u00f3n del software entre proyectos, una de las premisas fundamentales de la Ingenier\u00eda del Software. Un objeto gen\u00e9rico \u201ccliente\u201d, por ejemplo, deber\u00eda en teor\u00eda tener el mismo conjunto de comportamiento en diferentes proyectos, sobre todo cuando estos coinciden en cierta medida, algo que suele suceder en las grandes organizaciones. En este sentido, los objetos podr\u00edan verse como piezas reutilizables que pueden emplearse en m\u00faltiples proyectos distintos, posibilitando as\u00ed a la industria del software construir proyectos de envergadura empleando componentes ya existentes y de comprobada calidad, conduciendo esto finalmente a una reducci\u00f3n dr\u00e1stica del tiempo de desarrollo. Podemos usar como ejemplo de objeto el aluminio. Una vez definidos datos (densidad, maleabilidad, etc.), y su \u201ccomportamiento\u201d (soldar dos piezas, etc.), el objeto \u201caluminio\u201d puede ser reutilizado en el campo de la construcci\u00f3n, del autom\u00f3vil, de la aviaci\u00f3n, etc.\nLa reutilizaci\u00f3n del software ha experimentado resultados dispares, encontrando dos dificultades principales: el dise\u00f1o de objetos realmente gen\u00e9ricos es pobremente comprendido, y falta una metodolog\u00eda para la amplia comunicaci\u00f3n de oportunidades de reutilizaci\u00f3n. Algunas comunidades de \u201cc\u00f3digo abierto\u201d (open source) quieren ayudar en este problema dando medios a los desarrolladores para diseminar la informaci\u00f3n sobre el uso y versatilidad de objetos reutilizables y bibliotecas de objetos."}, {"name": "Independencia de la plataforma", "text": "La segunda caracter\u00edstica, la independencia de la plataforma, significa que programas escritos en el lenguaje Java pueden ejecutarse igualmente en cualquier tipo de hardware. Este es el significado de ser capaz de escribir un programa una vez y que pueda ejecutarse en cualquier dispositivo, tal como reza el axioma de Java, \"write once, run anywhere\".\nPara ello, se compila el c\u00f3digo fuente escrito en lenguaje Java, para generar un c\u00f3digo conocido como \u201cbytecode\u201d (espec\u00edficamente Java bytecode), instrucciones m\u00e1quina simplificadas espec\u00edficas de la plataforma Java. Esta pieza est\u00e1 \u201ca medio camino\u201d entre el c\u00f3digo fuente y el c\u00f3digo m\u00e1quina que entiende el dispositivo destino. El bytecode es ejecutado entonces en la m\u00e1quina virtual (JVM), un programa escrito en c\u00f3digo nativo de la plataforma destino (que es el que entiende su hardware), que interpreta y ejecuta el c\u00f3digo. Adem\u00e1s, se suministran bibliotecas adicionales para acceder a las caracter\u00edsticas de cada dispositivo (como los gr\u00e1ficos, ejecuci\u00f3n mediante hebras o threads, la interfaz de red) de forma unificada. Se debe tener presente que, aunque hay una etapa expl\u00edcita de compilaci\u00f3n, el bytecode generado es interpretado o convertido a instrucciones m\u00e1quina del c\u00f3digo nativo por el compilador JIT (Just In Time).\nHay implementaciones del compilador de Java que convierten el c\u00f3digo fuente directamente en c\u00f3digo objeto nativo, como GCJ. Esto elimina la etapa intermedia donde se genera el bytecode, pero la salida de este tipo de compiladores solamente puede ejecutarse en un tipo de arquitectura.\nLa licencia sobre Java de Sun insiste en que todas las implementaciones sean \u201ccompatibles\u201d. Esto dio lugar a una disputa legal entre Microsoft y Sun, cuando este \u00faltimo aleg\u00f3 que la implementaci\u00f3n de Microsoft no daba soporte a las interfaces RMI y JNI adem\u00e1s de haber a\u00f1adido caracter\u00edsticas \u2018\u2019dependientes\u2019\u2019 de su plataforma. Sun demand\u00f3 a Microsoft y gan\u00f3 por da\u00f1os y perjuicios (unos 20 millones de d\u00f3lares), as\u00ed como una orden judicial forzando el acatamiento de la licencia de Sun. Como respuesta, Microsoft no ofrece Java con su versi\u00f3n de sistema operativo, y en recientes versiones de Windows, su navegador Internet Explorer no admite la ejecuci\u00f3n de applets sin un conector (o plugin) aparte. Sin embargo, Sun y otras fuentes ofrecen versiones gratuitas para distintas versiones de Windows.\nLas primeras implementaciones del lenguaje usaban una m\u00e1quina virtual interpretada para conseguir la portabilidad. Sin embargo, el resultado eran programas que se ejecutaban comparativamente m\u00e1s lentos que aquellos escritos en C o C++. Esto hizo que Java se ganase una reputaci\u00f3n de lento en rendimiento. Las implementaciones recientes de la JVM dan lugar a programas que se ejecutan considerablemente m\u00e1s r\u00e1pido que las versiones antiguas, empleando diversas t\u00e9cnicas, aunque sigue siendo mucho m\u00e1s lentos que otros lenguajes.\nLa primera de estas t\u00e9cnicas es simplemente compilar directamente en c\u00f3digo nativo como hacen los compiladores tradicionales, eliminando la etapa del bytecode. Esto da lugar a un gran rendimiento en la ejecuci\u00f3n, pero tapa el camino a la portabilidad. Otra t\u00e9cnica, conocida como compilaci\u00f3n JIT (Just In Time, o \"compilaci\u00f3n al vuelo\"), convierte el bytecode a c\u00f3digo nativo cuando se ejecuta la aplicaci\u00f3n. Otras m\u00e1quinas virtuales m\u00e1s sofisticadas usan una \"recompilaci\u00f3n din\u00e1mica\" en la que la VM es capaz de analizar el comportamiento del programa en ejecuci\u00f3n y recompila y optimiza las partes cr\u00edticas. La recompilaci\u00f3n din\u00e1mica puede lograr mayor grado de optimizaci\u00f3n que la compilaci\u00f3n tradicional (o est\u00e1tica), ya que puede basar su trabajo en el conocimiento que de primera mano tiene sobre el entorno de ejecuci\u00f3n y el conjunto de clases cargadas en memoria. La compilaci\u00f3n JIT y la recompilaci\u00f3n din\u00e1mica permiten a los programas Java aprovechar la velocidad de ejecuci\u00f3n del c\u00f3digo nativo sin por ello perder la ventaja de la portabilidad en ambos.\nLa portabilidad es t\u00e9cnicamente dif\u00edcil de lograr, y el \u00e9xito de Java en ese campo ha sido dispar. Aunque es de hecho posible escribir programas para la plataforma Java que act\u00faen de forma correcta en m\u00faltiples plataformas de distinta arquitectura, el gran n\u00famero de estas con peque\u00f1os errores o inconsistencias llevan a que a veces se parodie el eslogan de Sun, \"Write once, run anywhere\" como \"Write once, debug everywhere\" (o \u201cEscr\u00edbelo una vez, ejec\u00fatalo en cualquier parte\u201d por \u201cEscr\u00edbelo una vez, dep\u00faralo en todas partes\u201d).\nEl concepto de independencia de la plataforma de Java cuenta, sin embargo, con un gran \u00e9xito en las aplicaciones en el entorno del servidor, como los Servicios Web, los Servlets, los Java Beans, as\u00ed como en sistemas empotrados basados en OSGi, usando entornos Java empotrados."}, {"name": "El recolector de basura", "text": "V\u00e9ase tambi\u00e9n:\nEn Java el problema de fugas de memoria se evita en gran medida gracias a la recolecci\u00f3n de basura (o automatic garbage collector). El programador determina cu\u00e1ndo se crean los objetos, y el entorno, en tiempo de ejecuci\u00f3n de Java (Java runtime), es el responsable de gestionar el ciclo de vida de los objetos. El programa, u otros objetos, pueden tener localizado un objeto mediante una referencia a este. Cuando no quedan referencias a un objeto, el recolector de basura de Java borra el objeto, liberando as\u00ed la memoria que ocupaba previniendo posibles fugas (ejemplo: un objeto creado y \u00fanicamente usado dentro de un m\u00e9todo solamente tiene entidad dentro de este; al salir del m\u00e9todo el objeto es eliminado). Aun as\u00ed, es posible que se produzcan fugas de memoria si el c\u00f3digo almacena referencias a objetos que ya no son necesarios; es decir, pueden a\u00fan ocurrir, pero en un nivel conceptual superior. En definitiva, el recolector de basura de Java permite una f\u00e1cil creaci\u00f3n y eliminaci\u00f3n de objetos y mayor seguridad."}]}, {"name": "Sintaxis", "text": "La sintaxis de Java se deriva en gran medida de C++. Pero a diferencia de este, que combina la sintaxis para programaci\u00f3n gen\u00e9rica, estructurada y orientada a objetos, Java fue construido desde el principio para ser completamente orientado a objetos. Todo en Java es un objeto (salvo algunas excepciones), y todo en Java reside en alguna clase (recordemos que una clase es un molde a partir del cual pueden crearse varios objetos).\nA diferencia de C++, Java no tiene sobrecarga de operadores[9]\u200b o herencia m\u00faltiple para clases, aunque la herencia m\u00faltiple est\u00e1 disponible para interfaces.", "subsections": [{"name": "Aplicaciones aut\u00f3nomas", "text": "Este ejemplo necesita una peque\u00f1a explicaci\u00f3n.\nTodo en Java est\u00e1 dentro de una clase, incluyendo programas aut\u00f3nomos.\nEl c\u00f3digo fuente se guarda en archivos con el mismo nombre que la clase que contienen y con extensi\u00f3n \u201c.java\u201d. Una clase (class) declarada p\u00fablica (public) debe seguir este convenio. Si tenemos una clase llamada Hola, su c\u00f3digo fuente deber\u00e1 guardarse en el fichero \u201cHola.java\u201d.\nEl compilador genera un archivo de clase (con extensi\u00f3n \u201c.class\u201d) por cada una de las clases definidas en el archivo fuente. Una clase an\u00f3nima se trata como si su nombre fuera la concatenaci\u00f3n del nombre de la clase que la encierra, el s\u00edmbolo \u201c$\u201d, y un n\u00famero entero.\nLos programas que se ejecutan de forma independiente y aut\u00f3noma, deben contener el m\u00e9todo \u201dmain()\u201d.\nLa palabra reservada \u201dvoid\u201d indica que el m\u00e9todo main no devuelve nada.\nEl m\u00e9todo main debe aceptar un array de objetos tipo String. Por acuerdo se referencia como \u201dargs\u201d, aunque puede emplearse cualquier otro identificador.\nLa palabra reservada \u201dstatic\u201d indica que el m\u00e9todo es un m\u00e9todo de clase, asociado a la clase en vez de a una instancia de la misma. El m\u00e9todo main debe ser est\u00e1tico o \u2019\u2019de clase\u2019\u2019.\nLa palabra reservada public significa que un m\u00e9todo puede ser llamado desde otras clases, o que la clase puede ser usada por clases fuera de la jerarqu\u00eda de la propia clase. Otros tipos de acceso son \u201dprivate\u201d o \u201dprotected\u201d.\nLa utilidad de impresi\u00f3n (en pantalla por ejemplo) forma parte de la biblioteca est\u00e1ndar de Java: la clase \u2018\u2019\u2019System\u2019\u2019\u2019 define un campo p\u00fablico est\u00e1tico llamado \u2018\u2019\u2019out\u2019\u2019\u2019. El objeto out es una instancia de \u2018\u2019\u2019PrintStream\u2019\u2019\u2019, que ofrece el m\u00e9todo \u2018\u2019\u2019println (String)\u2019\u2019\u2019 para volcar datos en la pantalla (la salida est\u00e1ndar).\nLas aplicaciones aut\u00f3nomas se ejecutan dando al entorno de ejecuci\u00f3n de Java el nombre de la clase cuyo m\u00e9todo main debe invocarse. Por ejemplo, una l\u00ednea de comando (en Unix o Windows) de la forma java \u2013cp . Hola ejecutar\u00e1 el programa del ejemplo (previamente compilado y generado \u201cHola.class\u201d). El nombre de la clase cuyo m\u00e9todo main se llama puede especificarse tambi\u00e9n en el fichero \u201cMANIFEST\u201d del archivo de empaquetamiento de Java (.jar)."}, {"name": "Applets", "text": "Las applet Java son programas incrustados en otras aplicaciones, normalmente una p\u00e1gina web que se muestra en un navegador.\n// Hello.java\nimport\njavax.swing.JApplet\n;\njava.awt.Graphics\npublic\nclass\nHello\nextends\nJApplet\npaint\nGraphics\ng\ndrawString\n\"Hola, mundo!\"\n,\n65\n95\n);\n<!-- Hola.html -->\n<\nhtml\n>\nhead\ntitle\n</\nbody\napplet\ncode\n=\n\"Hola.class\"\nwidth\n\"200\"\nheight\nActualmente HTML 5 ha eliminado el uso de la etiqueta <applet>. Pero todav\u00eda existe la forma de usarlo en HTML5. (Texto en ingl\u00e9s) Java Applets in HTML5.\nLa sentencia import indica al compilador de Java que incluya las clases java.applet. Applet y java.awt. Graphics, para poder referenciarlas por sus nombres, sin tener que anteponer la ruta completa cada vez que se quieran usar en el c\u00f3digo fuente.\nLa clase Hola extiende (extends) a la clase Applet;es decir, es una subclase de \u00e9sta. La clase Applet permite a la aplicaci\u00f3n mostrar y controlar el estado del applet. La clase Applet es un componente del AWT (Abstract Window Toolkit), que permite al applet mostrar una interfaz gr\u00e1fica de usuario o GUI (Graphical User Interface), y responder a eventos generados por el usuario.\nLa clase Hola sobrecarga el m\u00e9todo paint (Graphics) heredado de la superclase contenedora (Applet en este caso), para acceder al c\u00f3digo encargado de dibujar. El m\u00e9todo paint() recibe un objeto Graphics que contiene el contexto gr\u00e1fico para dibujar el applet. El m\u00e9todo paint() llama al m\u00e9todo drawString (String, int, int) del objeto. [5]"}, {"name": "Servlets", "text": "Art\u00edculo principal:\nLos servlets son componentes de la parte del servidor de Java EE encargados de generar respuestas a las peticiones recibidas de los clientes.\n// Hola.java\njava.io.IOException\njavax.servlet.*\nHola\nGenericServlet\nservice\nServletRequest\nrequest\nServletResponse\nresponse\nthrows\nServletException\nIOException\nsetContentType\n\"text/html\"\nPrintWriter\npw\ngetWriter\nprintln\n\"\u00a1Hola, mundo!\"\nclose\nLas sentencias import indican al compilador de Java la inclusi\u00f3n de todas las clases p\u00fablicas e interfaces de los paquetes java.io y javax.servlet en la compilaci\u00f3n.\nLa clase Hola extiende (extends) es heredera de la clase GenericServlet. Esta clase proporciona la interfaz para que el servidor le pase las peticiones al servlet y el mecanismo para controlar el ciclo de vida del servlet.\nLa clase Hola sobrecarga el m\u00e9todo service (ServletRequest, ServletResponse), definido por la interfaz servlet para acceder al manejador de la petici\u00f3n de servicio. El m\u00e9todo service() recibe un objeto de tipo ServletRequest que contiene la petici\u00f3n del cliente y un objeto de tipo ServletResponse, usado para generar la respuesta que se devuelve al cliente. El m\u00e9todo service() puede lanzar (throws) excepciones de tipo ServletException e IOException si ocurre alg\u00fan tipo de anomal\u00eda.\nEl m\u00e9todo setContentType (String) en el objeto respuesta establece el tipo de contenido MIME a \"text/html\", para indicar al cliente que la respuesta a su petici\u00f3n es una p\u00e1gina con formato HTML. El m\u00e9todo getWriter() del objeto respuesta devuelve un objeto de tipo PrintWriter, usado como una tuber\u00eda por la que viajar\u00e1n los datos al cliente. El m\u00e9todo println (String) escribe la cadena \"\u00a1Hola, mundo!\" en la respuesta y finalmente se llama al m\u00e9todo close() para cerrar la conexi\u00f3n, que hace que los datos escritos en la tuber\u00eda o stream sean devueltos al cliente."}, {"name": "Aplicaciones con interfaz", "text": "Swing es la biblioteca para la interfaz gr\u00e1fica de usuario avanzada de la plataforma Java SE.\njavax.swing.*\nJFrame\nHola\n()\nsetDefaultCloseOperation\nWindowConstants\nDISPOSE_ON_CLOSE\nadd\nnew\nJLabel\n));\npack\nstatic\nmain\nString\n[]\nargs\n().\nsetVisible\ntrue\nLas instrucciones import indican al compilador de Java que las clases e interfaces del paquete javax.swing se incluyan en la compilaci\u00f3n.\nLa clase Hola extiende (extends) la clase javax.swing.JFrame, que implementa una ventana con una barra de t\u00edtulo y un control para cerrarla.\nEl constructor Hola() inicializa el marco o frame llamando al m\u00e9todo setDefaultCloseOperation (int) heredado de JFrame para establecer las operaciones por defecto cuando el control de cierre en la barra de t\u00edtulo es seleccionado al valor WindowConstants.DISPOSE_ON_CLOSE. Esto hace que se liberen los recursos tomados por la ventana cuando es cerrada, y no simplemente ocultada, lo que permite a la m\u00e1quina virtual y al programa acabar su ejecuci\u00f3n. A continuaci\u00f3n se crea un objeto de tipo JLabel con el texto \"\u00a1Hola, mundo!\", y se a\u00f1ade al marco mediante el m\u00e9todo add (Component), heredado de la clase Container. El m\u00e9todo pack(), heredado de la clase Window, es invocado para dimensionar la ventana y distribuir su contenido.\nEl m\u00e9todo main() es llamado por la JVM al comienzo del programa. Crea una instancia de la clase Hola y hace la ventana sea mostrada invocando al m\u00e9todo setVisible (boolean) de la superclase (clase de la que hereda) con el par\u00e1metro a true. V\u00e9ase que, una vez el marco es dibujado, el programa no termina cuando se sale del m\u00e9todo main(), ya que el c\u00f3digo del que depende se encuentra en un hilo de ejecuci\u00f3n independiente ya lanzado, y que permanecer\u00e1 activo hasta que todas las ventanas hayan sido destruidas."}]}, {"name": "Entornos de funcionamiento", "text": "El dise\u00f1o de Java, su robustez, el respaldo de la industria y su f\u00e1cil portabilidad han hecho de Java uno de los lenguajes con un mayor crecimiento y amplitud de uso en distintos \u00e1mbitos de la industria de la inform\u00e1tica.", "subsections": [{"name": "En dispositivos m\u00f3viles y sistemas embebidos", "text": "Desde la creaci\u00f3n de la especificaci\u00f3n J2ME (Java 2 Platform, Micro Edition), una versi\u00f3n del entorno de ejecuci\u00f3n Java reducido y altamente optimizado, especialmente desarrollado para el mercado de dispositivos electr\u00f3nicos de consumo, se ha producido toda una revoluci\u00f3n en lo que a la extensi\u00f3n de Java se refiere.\nEs posible encontrar microprocesadores dise\u00f1ados para ejecutar bytecode Java y software Java para tarjetas inteligentes (JavaCard), tel\u00e9fonos m\u00f3viles, buscapersonas, set-top-boxes, sintonizadores de TV y otros peque\u00f1os electrodom\u00e9sticos.\nEl modelo de desarrollo de estas aplicaciones es muy semejante a las applets de los navegadores, salvo que en este caso se denominan MIDlets.\nV\u00e9ase Sun Mobile Device Tecnology"}, {"name": "En el navegador web", "text": "Desde la primera versi\u00f3n de Java existe la posibilidad de desarrollar peque\u00f1as aplicaciones (Applets) en Java que luego pueden ser incrustadas en una p\u00e1gina HTML para que sean descargadas y ejecutadas por el navegador web. Estas miniaplicaciones se ejecutan en una JVM que el navegador tiene configurada como extensi\u00f3n (plug-in) en un contexto de seguridad restringido configurable para impedir la ejecuci\u00f3n local de c\u00f3digo potencialmente malicioso.\nEl \u00e9xito de este tipo de aplicaciones (la visi\u00f3n del equipo de Gosling) no fue realmente el esperado debido a diversos factores, siendo quiz\u00e1s el m\u00e1s importante la lentitud y el reducido ancho de banda de las comunicaciones en aquel entonces que limitaba el tama\u00f1o de las applets que se incrustaban en el navegador. La aparici\u00f3n posterior de otras alternativas (aplicaciones web din\u00e1micas de servidor) dej\u00f3 un reducido \u00e1mbito de uso para esta tecnolog\u00eda, quedando hoy relegada fundamentalmente a componentes espec\u00edficos para la intermediaci\u00f3n desde una aplicaci\u00f3n web din\u00e1mica de servidor con dispositivos ubicados en la m\u00e1quina cliente donde se ejecuta el navegador.\nLas applets Java no son las \u00fanicas tecnolog\u00edas (aunque s\u00ed las primeras) de componentes complejos incrustados en el navegador. Otras tecnolog\u00edas similares pueden ser: ActiveX de Microsoft, Flash, Java Web Start, etc."}, {"name": "En sistemas de servidor", "text": "En la parte del servidor, Java es m\u00e1s popular que nunca, desde la aparici\u00f3n de la especificaci\u00f3n de Servlets y JSP (Java Server Pages).\nHasta entonces, las aplicaciones web din\u00e1micas de servidor que exist\u00edan se basaban fundamentalmente en componentes CGI y lenguajes interpretados. Ambos ten\u00edan diversos inconvenientes (fundamentalmente lentitud, elevada carga computacional o de memoria y propensi\u00f3n a errores por su interpretaci\u00f3n din\u00e1mica).\nLos servlets y las JSP supusieron un importante avance ya que:\nEl API de programaci\u00f3n es muy sencilla, flexible y extensible.\nLos servlets no son procesos independientes (como los CGI) y por tanto se ejecutan dentro del mismo proceso que la JVM mejorando notablemente el rendimiento y reduciendo la carga computacional y de memoria requeridas.\nLas JSP son p\u00e1ginas que se compilan din\u00e1micamente (o se precompilan previamente a su distribuci\u00f3n) de modo que el c\u00f3digo que se consigue supone una ventaja en rendimiento substancial frente a muchos lenguajes interpretados.\nLa especificaci\u00f3n de Servlets y JSP define un API de programaci\u00f3n y los requisitos para un contenedor (servidor) dentro del cual se puedan desplegar estos componentes para formar aplicaciones web din\u00e1micas completas. Hoy d\u00eda existen multitud de contenedores (libres y comerciales) compatibles con estas especificaciones.\nA partir de su expansi\u00f3n entre la comunidad de desarrolladores, estas tecnolog\u00edas han dado paso a modelos de desarrollo mucho m\u00e1s elaborados con frameworks (pe Struts, Webwork) que se sobreponen sobre los servlets y las JSP para conseguir un entorno de trabajo mucho m\u00e1s poderoso y segmentado en el que la especializaci\u00f3n de roles sea posible (desarrolladores, dise\u00f1adores gr\u00e1ficos,...) y se facilite la reutilizaci\u00f3n y robustez de c\u00f3digo. A pesar de todo ello, las tecnolog\u00edas que subyacen (Servlets y JSP) son substancialmente las mismas.\nEste modelo de trabajo se ha convertido en uno de los est\u00e1ndar de facto para el desarrollo de aplicaciones web din\u00e1micas de servidor."}, {"name": "En aplicaciones de escritorio", "text": "Hoy en d\u00eda existen multitud de aplicaciones gr\u00e1ficas de usuario basadas en Java. El entorno de ejecuci\u00f3n Java (JRE) se ha convertido en un componente habitual en los PC de usuario de los sistemas operativos m\u00e1s usados en el mundo. Adem\u00e1s, muchas aplicaciones Java lo incluyen dentro del propio paquete de la aplicaci\u00f3n de modo que se ejecuten en cualquier PC.\nEn las primeras versiones de la plataforma Java exist\u00edan importantes limitaciones en las API de desarrollo gr\u00e1fico (AWT). Desde la aparici\u00f3n de la biblioteca Swing la situaci\u00f3n mejor\u00f3 substancialmente y posteriormente con la aparici\u00f3n de bibliotecas como SWT hacen que el desarrollo de aplicaciones de escritorio complejas y con gran dinamismo, usabilidad, etc. sea relativamente sencillo."}, {"name": "Plataformas soportadas", "text": "Una versi\u00f3n del entorno de ejecuci\u00f3n Java JRE (Java Runtime Environment) est\u00e1 disponible en la mayor\u00eda de equipos de escritorio. Sin embargo, Microsoft no lo ha incluido por defecto en sus sistemas operativos. En el caso de Apple, este incluye una versi\u00f3n propia del JRE en su sistema operativo, el Mac OS. Tambi\u00e9n es un producto que por defecto aparece en la mayor\u00eda de las distribuciones de GNU/Linux. Debido a incompatibilidades entre distintas versiones del JRE, muchas aplicaciones prefieren instalar su propia copia del JRE antes que confiar su suerte a la aplicaci\u00f3n instalada por defecto. Los desarrolladores de applets de Java o bien deben insistir a los usuarios en la actualizaci\u00f3n del JRE, o bien desarrollar bajo una versi\u00f3n antigua de Java y verificar el correcto funcionamiento en las versiones posteriores."}]}, {"name": "Programaci\u00f3n", "text": "", "subsections": [{"name": "Expresiones", "text": "Las expresiones son un conjunto de elementos o tokens junto con literales que son evaluados para devolver un resultado.\nLos tokens son elemento m\u00e1s peque\u00f1o de un programa que es significativo, e interpretado o entendido por el compilador, en Java los tokens se dividen en cinco categor\u00edas que son:\nIdentificadores: Son las representaciones que se les da a los nombres que se asignan a las variables, clases, paquetes, m\u00e9todos y constantes en el c\u00f3digo de Java para que el compilador los identifique y el programador pueda entenderlos. En Java los identificadores pueden diferenciar entre may\u00fasculas o min\u00fasculas por ser case sensitive, por lo que la variable cuyo nombre sea \u201cMivariable\u201d, no es igual a \u201cmivariable\u201d, ya que Java identifica estas como variables diferentes por ser case sensitive, tambi\u00e9n se puede utilizar n\u00fameros, o el signo \u201c_\u201d para asignar un identificador.\nPalabras claves: Son los identificadores reservados por java para cumplir con un objetivo espec\u00edfico en el c\u00f3digo y el compilador, se usan de forma limitada y en casos espec\u00edficos. Las palabras claves que usa Java son las siguientes:\nLas palabras que se encuentran en negrilla, son palabras claves para Java aunque actualmente no se utilicen en la versi\u00f3n de Java, pero se pretenden integrar en las siguientes versiones de Java.\nLiterales y constantes: Los literales son sintaxis para asignar valores a una variable, es decir el valor que puede tomar una variable, tambi\u00e9n es un valor constante que puede ser de tipo num\u00e9rico.\nLas constantes son variables que tienen un valor fijo y no puede ser modificado en el trascurso de la ejecuci\u00f3n del c\u00f3digo, estas se declaran por medio de los modificadores final y static.\nfinal\ndouble\npi\n3.1416\nOperadores: Son los que nos indican una evaluaci\u00f3n que se aplica a un objeto o un dato, sobre un identificador o constante. Un ejemplo de operadores puede ser la suma, resta o multiplicaci\u00f3n.\nSeparadores: Se utilizan para indicarle al compilador de Java donde se ubican los elementos del c\u00f3digo, los separadores que admite Java son:\n{ },:;\nTambi\u00e9n el compilador de Java identifica y elimina los comentarios, retornos de carros espacios vac\u00edos y de tabulaci\u00f3n a la hora de compilar por lo que no son considerados parte de un token.\nLas expresiones pueden ser una combinaci\u00f3n en secuencia de variables, operadores y m\u00e9todos. Las expresiones son utilizadas para realizar c\u00e1lculos, para asignar valores a variables, o para controlar la ejecuci\u00f3n del flujo del programa."}, {"name": "Operadores", "text": "Son las expresiones de Java que tras realizar una operaci\u00f3n devuelven un resultado. Seg\u00fan el n\u00famero de operandos que maneje un operador, puede ser de dos tipos: unario o binario.\nLos operadores unarios son aquellos que solo necesitan un operando para devolver un valor.\nLos operadores binarios son aquellos que necesitan dos o m\u00e1s operandos para devolver un valor.\nOperadores a nivel de bit\nno existe\n~ Complemento a 1, este operador invierte los d\u00edgitos, cambiando los 0 por 1 y los 1 por 0, un ejemplo puede ser:\nComo se puede ver se cambian los valores de 0 a 1 y de 1 a 0.\n& AND a nivel de bit, este operador realiza una operaci\u00f3n AND o suma entre dos n\u00fameros de bit, en donde si dos bit son igual a 1 el resultado ser\u00e1 1, de lo contrario ser\u00e1 0, un ejemplo puede ser:\n| Or a nivel de bit, este operador realiza una operaci\u00f3n OR en donde si alguno de los dos n\u00fameros es 1 el resultado ser\u00e1 1, un ejemplo puede ser:\n^ XOR a nivel de bit, este operador realiza la operaci\u00f3n XOR en donde si los dos n\u00fameros son iguales el resultado ser\u00e1 0 de lo contrario ser\u00e1 1, un ejemplo puede ser:\n<< Desplazamiento a la izquierda, este operador desplaza n cantidad de espacios a la izquierda un bit, un ejemplo puede ser;\nComo se puede ver al realizar el desplazamiento se realiza una inserci\u00f3n de un d\u00edgito 0 a la derecha\nPrecedencia de operadores\nLos operadores son una parte principal en las expresiones, el tipo y forma de uso es fundamental a la hora de programar, pero para su uso se tiene que tener en cuenta una serie de normas, como lo son la precedencia de los operadores.\nLos operadores son ejecutados seg\u00fan su precedencia: si cuentan con una precedencia mayor ser\u00e1n evaluados antes que los de precedencia menor; si por casualidad se llegasen a presentar operadores con el mismo nivel de precedencia, estos se evaluar\u00e1n de derecha a izquierda; y si son operadores binarios (menos los operadores de asignaci\u00f3n) se evaluar\u00e1n de izquierda a derecha.\nA Java se le puede indicar qu\u00e9 operadores debe evaluar primero sin importar su precedencia por medio de par\u00e9ntesis \"( )\", de esta forma el compilador de Java interpreta que primero debe ejecutar las operaciones que se encuentran dentro de los par\u00e9ntesis, y luego continuar con los dem\u00e1s operadores.\nLa siguiente tabla clasifica los operadores utilizados en Java seg\u00fan su nivel de precedencia, siendo arriba el nivel m\u00e1s alto:\nUn ejemplo de la precedencia de los operadores en Java podr\u00eda ser el siguiente, en donde tenemos un c\u00f3digo que se encargar\u00e1 de realizar una serie de operaciones aritm\u00e9ticas:\nint\nnumero1\n3\nnumero2\n4\nresultado\n+\n*\nSystem\nout\n//esto imprime el valor de 15\nSeg\u00fan la precedencia de los operadores, la multiplicaci\u00f3n \"*\" tiene mayor prioridad que la suma \"+\", por lo que primero se ejecuta la multiplicaci\u00f3n y luego se realiza la suma.\n//esto imprime el valor de 21\nEn este caso el resultado cambia ya que primero se eval\u00faan los par\u00e1metros que est\u00e1n dentro del par\u00e9ntesis y luego se eval\u00faa el resto de par\u00e1metros.\nUna de las recomendaciones que da Java para el desarrollo es el uso de los par\u00e9ntesis en las operaciones con m\u00e1s de 3 operandos, as\u00ed de esta forma el c\u00f3digo se hace m\u00e1s legible y se evitan errores al momento de compilar."}, {"name": "Sentencias", "text": "Las sentencias son una representaci\u00f3n de una secuencia de acciones que se realizan en Java. La clave fundamental de las sentencias es su punto final que indica que ha finalizado la sentencia y puede continuar con la siguiente, el indicador utilizado es el signo de punto y coma (;). En Java contamos con sentencias que pueden ser de asignaci\u00f3n, de bucles, de salto y condicionales.\nLas sentencias se conforman com\u00fanmente por una instancia y un operador; un ejemplo es la sentencia de asignaci\u00f3n que se conforma por una instancia de una variable, el signo de asignaci\u00f3n y una expresi\u00f3n; un ejemplo es:\nvariable\n12\n2\nLas sentencias de asignaci\u00f3n son aquellas en las que se asigna un valor a una variable o constante.\nLas sentencias condicionales son las que expresan una condici\u00f3n para definir el flujo de ejecuci\u00f3n del programa; entre ellas tenemos if, else y switch.\nLas sentencias de bucles se encargan de realizar una acci\u00f3n cierta cantidad de tiempo dado, o hasta que se cumpla con una condici\u00f3n; entre ellas tenemos while, do-while, y for.\nLas sentencias de salto llevan al compilador a un punto espec\u00edfico del programa o hacia la siguiente sentencia de ejecuci\u00f3n; entre ellas tenemos break, continue, y return."}, {"name": "Conversi\u00f3n de tipos", "text": "En algunos casos suele ser necesario convertir un tipo de dato a otro, esto se le conoce como conversi\u00f3n de tipos, modelado, o tipado, as\u00ed de esta forma poder realizar las operaciones necesarias sobre el valor que se desea convertir.\nSe debe tener en cuenta el tipo de dato que se va a convertir, ya que si se convierte un dato que tenga una cantidad menor de bit al anterior este tendr\u00e1 perdida de informaci\u00f3n, un ejemplo de tipado puede ser un n\u00famero long que se desea convertir a int, el compilador eliminara los primeros 32bit del long para ajustarlo al int ya que el int es de 32bit y el long de 64.\nSi la conversi\u00f3n se realiza a un tipo de datos de menos bit a un tipo de datos con mayor bit, la conversi\u00f3n se realiza autom\u00e1ticamente llamada conversi\u00f3n impl\u00edcita, pero si se realiza de un tipo de datos con mayor bit a menor bit se tiene que realizar una conversi\u00f3n expl\u00edcita, la cual se realiza con un casting, al usar este m\u00e9todo se obliga a realizar la conversi\u00f3n por lo cual puede haber perdida de datos en la conversi\u00f3n.\nPara realizar una conversi\u00f3n expl\u00edcita se tiene que poner el tipo de dato que se desea realizar la conversi\u00f3n entre par\u00e9ntesis, luego el valor o la variable que se desea convertir.\nUn ejemplo de conversi\u00f3n de tipo expl\u00edcito puede ser:\n32\nbyte\nUn ejemplo de una conversi\u00f3n de tipo impl\u00edcita puede ser:\nlong\nLa siguiente tabla muestra los tipos de datos que se pueden realizar una conversi\u00f3n impl\u00edcita desde el dato origen, hasta el dato destino que es el dato en el que se va a convertir.\nLos tipos de datos booleanos no pueden ser convertidos a otro tipo de datos, por ning\u00fan m\u00e9todo mencionado anteriormente. Otro tipo de conversi\u00f3n que no se encuentre en esta tabla desde el origen al destino, tiene que realizarse por medio de una conversi\u00f3n expl\u00edcita por casting.\nCuando se desea realizar una conversi\u00f3n de un tipo string como origen a otro tipo, es necesario utilizar una funci\u00f3n que se encarga de convertir el tipo de dato, la funci\u00f3n necesaria se compone de la variable que va almacenar el resultado, y dependiendo de la variable se usa el par\u00e1metro que inicia con el tipo de dato a convertir, Integer, Byte, Short, o Long, seguida de punto \u201c. \u201c, el cual indica que se cargar\u00e1n los atributos del par\u00e1metro, en donde cargaremos el parseInt si queremos convertir a interger o parseByte si queremos convertir a byte, o dependiendo del tipo de dato, seguido de par\u00e9ntesis en donde se agregara el valor de string a convertir.\nAlgunos ejemplos puede ser:\nnumero3\ntexto\n\u201c\n2013\n\u201d\nInteger\nparseInt\nLong\nparseLong\nByte\nparseByte\nesto suele ser usado para realizar una conversi\u00f3n de texto cuando se ingresan valores num\u00e9ricos por una entrada a java, la cual los detecta como string, as\u00ed de esta forma puede convertir el texto que se ingresa a un n\u00famero para realizar operaciones, como una calculadora."}]}, {"name": "Industria relacionada", "text": "Sun Microsystem, como creador del lenguaje de programaci\u00f3n Java y de la plataforma JDK, mantiene fuertes pol\u00edticas para mantener una especificaci\u00f3n del lenguaje[10]\u200b as\u00ed como de la m\u00e1quina virtual[11]\u200b a trav\u00e9s del JCP. Es debido a este esfuerzo que se mantiene un est\u00e1ndar de facto.\nSon innumerables las compa\u00f1\u00edas que desarrollan aplicaciones para Java y/o est\u00e1n volcadas con esta tecnolog\u00eda:[12]\u200b\nLa industria de la telefon\u00eda m\u00f3vil est\u00e1 fuertemente influenciada por la tecnolog\u00eda Java.\nLos entornos de desarrollo (IDE) IntelliJ IDEA, Netbeans y Eclipse ha tomado un lugar importante entre la comunidad de desarrolladores Java.\nLa fundaci\u00f3n Apache tiene tambi\u00e9n una presencia importante en el desarrollo de bibliotecas y componentes de servidor basados en Java.\nIBM, BEA, IONA, Oracle,... son empresas con grandes intereses y productos creados en y para Java\nVideojuegos como Minecraft,Pokemon Go (aunque este \u00faltimo es una mezcla entre C++ y C#) fueron programados en Java", "subsections": []}, {"name": "Cr\u00edticas", "text": "En 1995 alguien dijo[\u00bfqui\u00e9n?] que Java fue creado para abrir una nueva v\u00eda en la gesti\u00f3n de software complejo, y es por regla general aceptado que se ha comportado bien en ese aspecto. Sin embargo no puede decirse que Java no tenga grietas ni que se adapta completamente a todos los estilos de programaci\u00f3n, todos los entornos, o todas las necesidades.", "subsections": [{"name": "General", "text": "Java no ha aportado capacidades est\u00e1ndares para aritm\u00e9tica en punto flotante. El est\u00e1ndar IEEE 754 para \u201cEst\u00e1ndar para Aritm\u00e9tica Binaria en Punto Flotante\u201d apareci\u00f3 en 1985, y desde entonces es el est\u00e1ndar para la industria. Y aunque la aritm\u00e9tica flotante de Java (cosa que cambi\u00f3 desde el 13 de noviembre de 2006, cuando se abri\u00f3 el c\u00f3digo fuente y se adopt\u00f3 la licencia GPL, aparte de la ya existente)[cita\u00a0requerida][13]\u200b se basa en gran medida en la norma del IEEE, no soporta a\u00fan algunas caracter\u00edsticas. M\u00e1s informaci\u00f3n al respecto puede encontrarse en la secci\u00f3n final de enlaces externos."}, {"name": "El lenguaje", "text": "En un sentido estricto, Java no es un lenguaje absolutamente orientado a objetos, a diferencia de, por ejemplo, Ruby o Smalltalk. Por motivos de eficiencia, Java ha relajado en cierta medida el paradigma de orientaci\u00f3n a objetos, y as\u00ed por ejemplo, no todos los valores son objetos.\nEl c\u00f3digo Java puede ser a veces redundante en comparaci\u00f3n con otros lenguajes. Esto es en parte debido a las frecuentes declaraciones de tipos y conversiones de tipo manual (casting). Tambi\u00e9n se debe a que no se dispone de operadores sobrecargados, y a una sintaxis relativamente simple. Sin embargo, J2SE 5.0 introduce elementos para tratar de reducir la redundancia, como una nueva construcci\u00f3n para los bucles \u2018\u2019\u2019foreach\u2019\u2019\u2019.\nA diferencia de C++, Java no dispone de operadores de sobrecarga definidos por el usuario. Los dise\u00f1adores de Java tomaron esta decisi\u00f3n puesto que consideraban que, bajo ciertas circunstancias, esta caracter\u00edstica pod\u00eda complicar la lectura y mantenimiento de los programas."}, {"name": "Apariencia", "text": "La apariencia externa (el \u2018\u2018\u2018look and feel\u2019\u2019\u2019) de las aplicaciones GUI (Graphical User Interface) escritas en Java usando la plataforma Swing difiere a menudo de la que muestran aplicaciones nativas. Aunque el programador puede usar el juego de herramientas AWT (Abstract Windowing Toolkit) que genera objetos gr\u00e1ficos de la plataforma nativa, el AWT no es capaz de funciones gr\u00e1ficas avanzadas sin sacrificar la portabilidad entre plataformas; ya que cada una tiene un conjunto de API distinto, especialmente para objetos gr\u00e1ficos de alto nivel.\nLas herramientas de Swing, escritas completamente en Java, evitan este problema construyendo los objetos gr\u00e1ficos a partir de los mecanismos de dibujo b\u00e1sicos que deben estar disponibles en todas las plataformas. El inconveniente es el trabajo extra requerido para conseguir la misma apariencia de la plataforma destino. Aunque esto es posible (usando GTK+ y el Look-and-Feel de Windows), la mayor\u00eda de los usuarios no saben c\u00f3mo cambiar la apariencia que se proporciona por defecto por aquella que se adapta a la de la plataforma."}, {"name": "Rendimiento", "text": "El bytecode de Java puede ser interpretado en tiempo de ejecuci\u00f3n por la m\u00e1quina virtual, o bien compilado al cargarse el programa, o durante la propia ejecuci\u00f3n, para generar c\u00f3digo nativo que se ejecuta directamente sobre el hardware. Si es interpretado, ser\u00e1 m\u00e1s lento que usando el c\u00f3digo m\u00e1quina intr\u00ednseco de la plataforma destino. Si es compilado, durante la carga inicial o la ejecuci\u00f3n, la penalizaci\u00f3n est\u00e1 en el tiempo necesario para llevar a cabo la compilaci\u00f3n.\nAlgunas caracter\u00edsticas del propio lenguaje conllevan una penalizaci\u00f3n en tiempo, aunque no son \u00fanicas de Java. Algunas de ellas son el chequeo de los l\u00edmites de arrays, chequeo en tiempo de ejecuci\u00f3n de tipos, y la indirecci\u00f3n de funciones virtuales.\nEl uso de un recolector de basura para eliminar de forma autom\u00e1tica aquellos objetos no requeridos, a\u00f1ade una sobrecarga que puede afectar al rendimiento, o ser apenas apreciable, dependiendo de la tecnolog\u00eda del recolector y de la aplicaci\u00f3n en concreto.\nLas JVM modernas usan recolectores de basura que gracias a r\u00e1pidos algoritmos de manejo de memoria, consiguen que algunas aplicaciones puedan ejecutarse m\u00e1s eficientemente.\nEl rendimiento entre un compilador JIT y los compiladores nativos puede ser parecido, aunque la distinci\u00f3n no est\u00e1 clara en este punto. La compilaci\u00f3n mediante el JIT puede consumir un tiempo apreciable, un inconveniente principalmente para aplicaciones de corta duraci\u00f3n o con gran cantidad de c\u00f3digo. Sin embargo, una vez compilado, el rendimiento del programa puede ser comparable al que consiguen compiladores nativos de la plataforma destino, inclusive en tareas num\u00e9ricas. Aunque Java no permite la expansi\u00f3n manual de llamadas a m\u00e9todos, muchos compiladores JIT realizan esta optimizaci\u00f3n durante la carga de la aplicaci\u00f3n y pueden aprovechar informaci\u00f3n del entorno en tiempo de ejecuci\u00f3n para llevar a cabo transformaciones eficientes durante la propia ejecuci\u00f3n de la aplicaci\u00f3n. Esta recompilaci\u00f3n din\u00e1mica, como la que proporciona la m\u00e1quina virtual HotSpot de Sun, puede llegar a mejorar el resultado de compiladores est\u00e1ticos tradicionales, gracias a los datos que solamente est\u00e1n disponibles durante el tiempo de ejecuci\u00f3n.\nJava fue dise\u00f1ado para ofrecer seguridad y portabilidad, y no ofrece acceso directo al hardware de la arquitectura ni al espacio de direcciones. Java no soporta expansi\u00f3n de c\u00f3digo ensamblador, aunque las aplicaciones pueden acceder a caracter\u00edsticas de bajo nivel usando bibliotecas nativas (JNI, Java Native Interfaces).\nCaracter\u00edsticas de Java:\n1. Lenguaje Simple: \u201cSe lo conoce como lenguaje simple porque viene de la misma estructura de c y c++; ya que c++ fue un referente para la creaci\u00f3n de java por eso utiliza determinadas caracter\u00edsticas de c++ y se han eliminado otras.\u201d\n2. Orientado a Objetos.\n3. Multihilos: Java tiene una facilidad de cumplir varias funciones al mismo tiempo, gracias a su funci\u00f3n de multihilos, ya que por cada hilo que el programa tenga se ejecutar\u00e1n en tiempo real muchas funciones al mismo tiempo.\nAlto Rendimiento: Java es considerado de alto rendimiento por ser tan veloz en el momento de correr los programas y por ahorrarse muchas l\u00edneas de c\u00f3digo."}]}, {"name": "Recursos", "text": "", "subsections": [{"name": "JRE", "text": "El JRE (Java Runtime Environment, o Entorno en Tiempo de Ejecuci\u00f3n de Java) es el software necesario para ejecutar cualquier aplicaci\u00f3n desarrollada para la plataforma Java. El usuario final usa el JRE como parte de paquetes software o plugins (o conectores) en un navegador Web. Sun ofrece tambi\u00e9n el SDK de Java 2, o JDK (Java Development Kit) en cuyo seno reside el JRE, e incluye herramientas como el compilador de Java, Javadoc para generar documentaci\u00f3n o el depurador. Puede tambi\u00e9n obtenerse como un paquete independiente, y puede considerarse como el entorno necesario para ejecutar una aplicaci\u00f3n Java, mientras que un desarrollador debe adem\u00e1s contar con otras facilidades que ofrece el JDK."}, {"name": "Componentes", "text": "Bibliotecas de Java, que son el resultado de compilar el c\u00f3digo fuente desarrollado por quien implementa la JRE, y que ofrecen apoyo para el desarrollo en Java. Algunos ejemplos de estas bibliotecas son:\nLas bibliotecas centrales, que incluyen:\nUna colecci\u00f3n de bibliotecas para implementar estructuras de datos como listas, arrays, \u00e1rboles y conjuntos.\nBibliotecas para an\u00e1lisis de XML.\nSeguridad.\nBibliotecas de internacionalizaci\u00f3n y localizaci\u00f3n.\nBibliotecas de integraci\u00f3n, que permiten la comunicaci\u00f3n con sistemas externos. Estas bibliotecas incluyen:\nLa API para acceso a bases de datos JDBC (Java DataBase Conectivity).\nLa interfaz JNDI (Java Naming and Directory Interface) para servicios de directorio.\nRMI (Remote Method Invocation) y CORBA para el desarrollo de aplicaciones distribuidas.\nBibliotecas para la interfaz de usuario, que incluyen:\nEl conjunto de herramientas nativas AWT (Abstract Window Toolkit), que ofrece componentes GUI (Graphical User Interface), mecanismos para usarlos y manejar sus eventos asociados.\nLas Bibliotecas de Swing, construidas sobre AWT pero ofrecen implementaciones no nativas de los componentes de AWT.\nAPI para la captura, procesamiento y reproducci\u00f3n de audio.\nUna implementaci\u00f3n dependiente de la plataforma en que se ejecuta de la m\u00e1quina virtual de Java (JVM), que es la encargada de la ejecuci\u00f3n del c\u00f3digo de las bibliotecas y las aplicaciones externas.\nPlugins o conectores que permiten ejecutar applets en los navegadores Web.\nJava Web Start, para la distribuci\u00f3n de aplicaciones Java a trav\u00e9s de Internet.\nDocumentaci\u00f3n y licencia."}, {"name": "API", "text": "Se define tres plataformas en un intento por cubrir distintos entornos de aplicaci\u00f3n. As\u00ed, ha distribuido muchas de sus API (Application Program Interface) de forma que pertenezcan a cada una de las plataformas:\nJava ME (Java Platform, Micro Edition) o J2ME \u2014 orientada a entornos de limitados recursos, como tel\u00e9fonos m\u00f3viles, PDAs (Personal Digital Assistant), etc.\nJava SE (Java Platform, Standard Edition) o J2SE \u2014 para entornos de gama media y estaciones de trabajo. Aqu\u00ed se sit\u00faa al usuario medio en un PC de escritorio.\nJava EE (Java Platform, Enterprise Edition) o J2EE \u2014 orientada a entornos distribuidos empresariales o de Internet.\nLas clases en las API de Java se organizan en grupos disjuntos llamados paquetes. Cada paquete contiene un conjunto de interfaces, clases y excepciones relacionadas. La informaci\u00f3n sobre los paquetes que ofrece cada plataforma puede encontrarse en la documentaci\u00f3n de \u00e9sta.\nEl conjunto de las API es controlado por Sun Microsystems junto con otras entidades o personas a trav\u00e9s del programa JCP (Java Community Process). Las compa\u00f1\u00edas o individuos participantes del JCP pueden influir de forma activa en el dise\u00f1o y desarrollo de las API, algo que ha sido motivo de controversia."}, {"name": "Extensiones y arquitecturas relacionadas", "text": "Las extensiones[14]\u200b de Java est\u00e1n en paquetes que cuelgan de la ra\u00edz javax: javax.*. No se incluyen en la JDK o el JRE. Algunas de las extensiones y arquitecturas ligadas estrechamente al lenguaje Java son:\nJava EE (Java Platform, Enterprise Edition; antes J2EE) \u2014para aplicaciones distribuidas orientadas al entorno empresarial"}]}, {"name": "Java en c\u00f3digo abierto", "text": "La evoluci\u00f3n basada en un comit\u00e9 en el que participen todos los implicados no es suficiente y la comunidad demandaba desde hace tiempo la liberaci\u00f3n de las API y bibliotecas b\u00e1sicas de la JDK.\nEn diciembre de 2006, Sun Microsystems comenz\u00f3 el relanzamiento de su plataforma Java[15]\u200b bajo la licencia GPL de GNU.\nEn abril de 2009 Oracle adquiri\u00f3 Sun Microsystems, lo que gener\u00f3 temor en la comunidad ante la posible mercantilizaci\u00f3n del lenguaje de programaci\u00f3n orientado a objetos m\u00e1s popular actualmente. Por ahora Oracle ha seguido manteniendo Java, estando las versiones posteriores a la 6 bajo su control.\nSe instala una versi\u00f3n homebrew de PSPKVM (0.5.5) para emular la plataforma de Java en PSP. Esto permite usar programas JAVA en esta videoconsola.", "subsections": [{"name": "Alternativas libres", "text": "Existen alternativas para el entorno de ejecuci\u00f3n y de desarrollo de Java con una gran cobertura de funcionalidades con respecto a las implementaciones comerciales de Sun, IBM, Bea, etc."}, {"name": "Cr\u00edticas referentes a Java y el software libre", "text": "Free But Shackled \u2014 The Java Trap, de Richard Stallman, 12 de abril de 2004. (respuesta de James Gosling)\nTraducci\u00f3n al espa\u00f1ol de este art\u00edculo: Libre pero encadenado. La trampa del Java. (N\u00f3tese que hay una nota en un recuadro amarillo que habla de la situaci\u00f3n actual con respecto a lo que se dice en ese art\u00edculo)\nNotar que este art\u00edculo fue escrito antes de la liberaci\u00f3n del c\u00f3digo fuente de Java. En la actualidad la postura de la Free Software Foundation y de Richard Stallman han cambiado[cita\u00a0requerida], mostr\u00e1ndose partidarios ambos de su uso en software libre."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Applet Java\nJavaOne\nJavaOS\nJavapedia\nJava Community Process\nJava User Group\nM\u00e1quina virtual Java\nOpenJDK\nPlataforma Java", "subsections": []}, {"name": "Referencias", "text": "Jon Byous, Java technology: The early years. Sun Developer Network, sin fecha[ca. 1998]. Recuperado 21 de abril de 2005.\nJames Gosling, A brief history of the Green project. Java.net, sin fecha [ca. Q1/1998]. Recuperado 22 de abril de 2005.\nJames Gosling, Bill Joy, Guy Steele, y Gilad Bracha, The Java language specification, tercera edici\u00f3n. Addison-Wesley, 2005. ISBN 0-321-24678-0.\nTim Lindholm y Frank Yellin. The Java Virtual Machine specification, segunda edici\u00f3n. Addison-Wesley, 1999. ISBN 0-201-43294-3.", "subsections": []}, {"name": "Notas", "text": "\u2191 https://www.oracle.com/java/technologies/javase/18-0-1-relnotes.html\n\u2191 \u00abProgramming Language Popularity\u00bb. 2009. Archivado desde el original el 16 de enero de 2009. Consultado el 16 de enero de 2009.\u00a0\n\u2191 \u00abTIOBE Programming Community Index\u00bb. 2009. Consultado el 6 de mayo de 2009.\u00a0\n\u2191 Sun and Oracle (Oracle.com)\n\u2191 \u00abJonathan Schwartz's Blog: Different Isn't Always Better, But Better's Always Different\u00bb. Blogs.sun.com. Archivado desde el original el 5 de septiembre de 2009. Consultado el 24 de septiembre de 2010.\u00a0\n\u2191 M. Dom\u00ednguez-Dorado,. Todo Programaci\u00f3n. N\u00ba 8. P\u00e1gs. 39-42. Editorial Iberprensa (Madrid). DL M-13679-2004. Febrero, 2005. Dibujando sobre lienzos en Java..\u00a0\n\u2191 Redacci\u00f3n Oracle, Oracle anuncia Java 16, 18 de marzo de 2021.\n\u2191 Notas de la Versi\u00f3n [1]\n\u2191 Microsoft (ed.). \u00abSobrecarga de operadores (C# y Java)\u00bb. C# para desarrolladores de Java. Consultado el 21 de junio de 2018.\u00a0\n\u2191 Especificaci\u00f3n del lenguaje Java\n\u2191 Especificaci\u00f3n de la m\u00e1quina virtual Java\n\u2191 madridiario.es. \u00abLa formaci\u00f3n en programaci\u00f3n Java sigue en cabeza en cuanto a la demanda de los estudiantes\u00bb. Consultado el 29 de enero de 2019.\u00a0\n\u2191 \u00abUn an\u00e1lisis a Java - Apuntes de Ingenier\u00eda Inf\u00f3rmatica - Docsity\u00bb. www.docsity.com. Consultado el 14 de noviembre de 2018.\u00a0\n\u2191 M. Dom\u00ednguez-Dorado, Guillermo Som. Todo Programaci\u00f3n. N\u00ba 11. P\u00e1gs. 10-20. Editorial Iberprensa (Madrid). DL M-13679-2004. Agosto, 2005. Imprimir desde Java y .NET.\u00a0\n\u2191 Sun begins releasing Java under the GPL - Free Software Foundation", "subsections": []}, {"name": "Enlaces externos", "text": " Wikilibros alberga un libro o manual sobre Programaci\u00f3n en Java.\nProgramas hechos en java con c\u00f3digo fuente\nRecopilaci\u00f3n de c\u00f3digos fuente en java\n5 Beneficios de Java", "subsections": [{"name": "Oracle - Sun", "text": "Sitio oficial de Java para desarrolladores, etc\nThe Java Language Specification, Tercera edici\u00f3n Especificaci\u00f3n oficial del lenguaje Java\nTutorial de Sun sobre el Lenguaje de programaci\u00f3n Java\nLibro blanco original de Java, 1996"}, {"name": "Tutoriales", "text": "Thinking in Java, de Bruce Eckel (en l\u00ednea)\nAn introduction to Computer Science using Java por Bradley Kjell.\nJava Course, de A.B. Downey.\nComputer-Books.us Colecci\u00f3n de libros sobre Java disponibles para descarga gratuita.\nEn castellano:\nVideoTutoriales para aprender desde cero \u00abEmpieza a Programar\u00bb\nColecci\u00f3n \u00abJava a tope\u00bb de libros electr\u00f3nicos (Universidad de M\u00e1laga. Espa\u00f1a)\nCurso de Java, de cero a hasta conexi\u00f3n a MYSQL, incluye PDF (M\u00e9xico)\nCurso de java que sigue el \u00edndice del libro de java de Kathy Sierra, contiene PDFs y ejercicios (M\u00e9xico)\nCapacitaci\u00f3n en Java sobre Grandes Proyectos\nAprender programaci\u00f3n Java desde cero (Portal web aprenderaprogramar.com, en l\u00ednea y en formato pdf)\nDescifrando Java\nCurso de Java desde cero (pildorasinformaticas.com)"}, {"name": "Cr\u00edticas", "text": "Softpanorama Java Critique Page: Java vs Scripting Languages, de Nikolai Bezroukov\n[6], de W. Kahan und Joseph D. Darcy en el ACM 1998 Workshop on Java for High\u2013Performance Network Computing"}]}]}
{"url": "https://es.wikipedia.org/wiki/Lenguaje_de_programaci%C3%B3n_interpretado", "title": "Int\u00e9rprete (inform\u00e1tica)", "summary": "En ciencias de la computaci\u00f3n, int\u00e9rprete o interpretador es un programa inform\u00e1tico capaz de analizar y ejecutar otros programas. Los int\u00e9rpretes se diferencian de los compiladores o de los ensambladores en que mientras estos traducen un programa desde su descripci\u00f3n en un lenguaje de programaci\u00f3n al c\u00f3digo de m\u00e1quina del sistema, los int\u00e9rpretes solo realizan la traducci\u00f3n a medida que sea necesaria, t\u00edpicamente, instrucci\u00f3n por instrucci\u00f3n, y normalmente no guardan el resultado de dicha traducci\u00f3n.\nUsando un int\u00e9rprete, un solo archivo fuente puede producir resultados iguales incluso en sistemas sumamente diferentes (ejemplo. una PC y una PlayStation 4). Usando un compilador, un solo archivo fuente puede producir resultados iguales solo si es compilado a distintos ejecutables espec\u00edficos a cada sistema.\nLos programas interpretados suelen ser m\u00e1s lentos que los compilados debido a la necesidad de traducir el programa mientras se ejecuta, pero a cambio son m\u00e1s flexibles como entornos de programaci\u00f3n y depuraci\u00f3n (lo que se traduce, por ejemplo, en una mayor facilidad para reemplazar partes enteras del programa o a\u00f1adir m\u00f3dulos completamente nuevos), y permiten ofrecer al programa interpretado un entorno no dependiente de la m\u00e1quina donde se ejecuta el int\u00e9rprete, sino del propio int\u00e9rprete (lo que se conoce com\u00fanmente como m\u00e1quina virtual).\nPara mejorar el desempe\u00f1o, algunas implementaciones de algunos lenguajes de programaci\u00f3n pueden interpretar o compilar el c\u00f3digo fuente original en una forma intermedia  m\u00e1s compacta, y despu\u00e9s traducir eso al c\u00f3digo de m\u00e1quina (ej. Perl, Python, MATLAB, y Ruby). Algunos aceptan los archivos fuente guardados en esta representaci\u00f3n intermedia (ej. Python, UCSD Pascal y Java).\nEn la actualidad, uno de los entornos m\u00e1s comunes de uso de los int\u00e9rpretes es en los navegadores web, debido a la posibilidad que estos tienen de ejecutarse independientemente de la plataforma.", "sections": [{"name": "\u00cdndice", "text": "1 Int\u00e9rpretes de bytecode\n2 Eficiencia\n3 Interpretadores de \u00e1rbol de sintaxis abstracta\n4 Compilaci\u00f3n justo a tiempo\n5 Ejemplos\n6 Lenguaje interpretado\n6.1 Antecedentes hist\u00f3ricos de interpretado y compilado\n6.2 Ventajas de interpretar un lenguaje\n6.3 Desventajas de los lenguajes interpretados\n6.4 Lista de lenguajes m\u00e1s usados de forma interpretada\n6.4.1 Lenguajes normalmente compilados a c\u00f3digo byte\n7 Notas y referencias\n8 V\u00e9ase tambi\u00e9n\n9 Enlaces externos", "subsections": []}, {"name": "Int\u00e9rpretes de bytecode", "text": "Art\u00edculo principal:\nHay un espectro de posibilidades entre la interpretaci\u00f3n y la compilaci\u00f3n, dependiendo de la cantidad de an\u00e1lisis realizados antes de que el programa sea ejecutado. Por ejemplo, el Emacs Lisp es compilado a bytecode, que es una representaci\u00f3n altamente comprimida y optimizada del c\u00f3digo fuente del Lisp, pero no es c\u00f3digo de m\u00e1quina (y por lo tanto no est\u00e1 atado a cualquier hardware particular). Este bytecode es entonces interpretado por un int\u00e9rprete de bytecode (que est\u00e1 escrito en C). En este caso, el c\u00f3digo compilado es el c\u00f3digo de m\u00e1quina para una m\u00e1quina virtual, que no est\u00e1 implementada en el hardware, sino en el int\u00e9rprete de bytecode. El mismo acercamiento es utilizado con el c\u00f3digo Forth usado en sistemas Open Firmware: el lenguaje fuente es compilado en \"c\u00f3digo F\" (un bytecode).", "subsections": []}, {"name": "Eficiencia", "text": "La desventaja principal de los interpretadores es que cuando se interpreta un programa, t\u00edpicamente corre m\u00e1s lentamente que si hubiera sido compilado. La diferencia en velocidades puede ser min\u00fascula o grande; a menudo un orden de magnitud y a veces m\u00e1s. Generalmente toma m\u00e1s tiempo correr un programa bajo un interpretador que correr el c\u00f3digo compilado, pero puede tomar menos tiempo para interpretarlo que el tiempo total requerido para compilarlo y ejecutarlo. Esto es especialmente importante si se est\u00e1 haciendo y probando un c\u00f3digo prototipo cuando un ciclo de editar, interpretar y depurar del interpretador, a menudo puede ser mucho m\u00e1s corto que el ciclo de editar, compilar, ejecutar y depurar del compilador.\nLa interpretaci\u00f3n de c\u00f3digo es m\u00e1s lenta que la ejecuci\u00f3n de c\u00f3digo compilado porque el interpretador debe analizar cada sentencia en el programa cada vez que es ejecutada y entonces realizar la acci\u00f3n deseada, mientras que el c\u00f3digo compilado solo realiza la acci\u00f3n dentro de un determinado contexto fijo por la compilaci\u00f3n. Este an\u00e1lisis en tiempo de ejecuci\u00f3n se conoce como \"sobrecarga interpretativa\". En un interpretador, el acceso a las variables es tambi\u00e9n m\u00e1s lento porque el mapeo de identificadores hacia las localizaciones de almacenamiento debe hacerse repetidamente en tiempo de ejecuci\u00f3n en vez de en el tiempo de compilaci\u00f3n. Hay varios compromisos entre la velocidad de desarrollo al usar un interpretador y la velocidad de ejecuci\u00f3n al usar un compilador. Algunos sistemas (ej., algunos LISPs) permiten al c\u00f3digo interpretado y al compilado llamarse el uno al otro y compartir variables. Esto significa que una vez que una rutina ha sido probada y depurada bajo el interpretador puede ser compilada y por lo tanto beneficiarse de una ejecuci\u00f3n m\u00e1s r\u00e1pida mientras que otras rutinas est\u00e1n siendo desarrolladas. Muchos interpretadores no ejecutan el c\u00f3digo fuente tal y como est\u00e1 sino que lo convierten en una forma interna m\u00e1s compacta. Por ejemplo, algunos interpretadores BASIC reemplazan palabras clave (keywords) con tokens de un simple byte que pueden ser usados para encontrar la instrucci\u00f3n en una tabla de saltos. Un interpretador puede bien usar el mismo analizador lexicogr\u00e1fico y el analizador sint\u00e1ctico (parser) que el compilador y entonces interpretar el \u00e1rbol de sintaxis abstracta resultante.", "subsections": []}, {"name": "Interpretadores de \u00e1rbol de sintaxis abstracta", "text": "En el espectro entre la interpretaci\u00f3n y la compilaci\u00f3n, otro acercamiento est\u00e1 transformando el c\u00f3digo fuente en un \u00e1rbol de sintaxis abstracta optimizado (AST), y despu\u00e9s procediendo a ejecutar el programa siguiendo esta estructura arborescente.[1]\u200b En este acercamiento cada sentencia necesita ser analizada (parsed) solo una vez. Como una ventaja sobre el bytecode, el AST mantiene la estructura y las relaciones globales del programa entre las sentencias (que se pierden en una representaci\u00f3n de bytecode), y proporciona una representaci\u00f3n m\u00e1s compacta.[2]\u200b\nAs\u00ed, el AST se ha propuesto como un mejor formato intermedio para los compiladores justo a tiempo que el bytecode. Tambi\u00e9n, permite realizar un mejor an\u00e1lisis durante tiempo de ejecuci\u00f3n. Un interpretador Java basado en AST ha demostrado ser m\u00e1s r\u00e1pido que un interpretador similar basado en bytecode,[3]\u200b gracias a las m\u00e1s poderosas optimizaciones permitidas al tener la estructura completa del programa, as\u00ed como tipos de datos de alto nivel, disponibles durante la ejecuci\u00f3n.", "subsections": []}, {"name": "Compilaci\u00f3n justo a tiempo", "text": "Para desdibujar m\u00e1s la distinci\u00f3n entre los interpretadores, los interpretadores de bytecode y la compilaci\u00f3n, est\u00e1 la compilaci\u00f3n justo a tiempo (o JIT), una t\u00e9cnica en la cual la representaci\u00f3n intermedia es compilada a c\u00f3digo de m\u00e1quina nativo en tiempo de ejecuci\u00f3n. Esto confiere la eficiencia de ejecutar el c\u00f3digo nativo, al costo de tiempo de inicio y de un uso creciente de la memoria cuando el bytecode o el AST es compilado por primera vez. La optimizaci\u00f3n adaptativa es una t\u00e9cnica complementaria en la cual el interpretador hace un an\u00e1lisis de desempe\u00f1o del programa que est\u00e1 corriendo (profiling) y compila sus partes m\u00e1s frecuentemente ejecutadas a c\u00f3digo nativo. Ambas t\u00e9cnicas tienen algunas d\u00e9cadas, apareciendo en lenguajes tales como Smalltalk en la d\u00e9cada de 1980.\nEn a\u00f1os recientes, la compilaci\u00f3n justo a tiempo ha ganado la atenci\u00f3n de la mayor\u00eda de los implementadores de lenguajes de programaci\u00f3n, con Java, Python, y el Microsoft .NET Framework todos ahora incluyendo JITs.", "subsections": []}, {"name": "Ejemplos", "text": "Algunos ejemplos de int\u00e9rpretes:\nMotor Zend\nCPython\nRuby MRI\nYARV\nen:Basic", "subsections": []}, {"name": "Lenguaje interpretado", "text": "Un lenguaje interpretado es un lenguaje de programaci\u00f3n para el que la mayor\u00eda de sus implementaciones ejecuta las instrucciones directamente, sin una previa compilaci\u00f3n del programa a instrucciones en lenguaje m\u00e1quina. El int\u00e9rprete ejecuta el programa directamente, traduciendo cada sentencia en una secuencia de una o m\u00e1s subrutinas ya compiladas en c\u00f3digo m\u00e1quina.\nLos t\u00e9rminos lenguaje interpretado y lenguaje compilado[4]\u200b no est\u00e1n bien definidos porque, en teor\u00eda, cualquier lenguaje de programaci\u00f3n puede ser interpretado o compilado. Cada vez es m\u00e1s popular, en las implementaciones m\u00e1s modernas de un lenguaje de programaci\u00f3n, ofrecer ambas opciones.\nLos lenguajes interpretados tambi\u00e9n pueden diferenciarse de los lenguajes de m\u00e1quina. Funcionalmente, tanto la ejecuci\u00f3n y la interpretaci\u00f3n significan lo mismo -obtener la siguiente instrucci\u00f3n/sentencia del programa y su ejecuci\u00f3n-. Aunque el bytecode (c\u00f3digo byte) interpretado es adem\u00e1s id\u00e9ntico a su forma en c\u00f3digo m\u00e1quina y tiene una representaci\u00f3n en ensamblador, el t\u00e9rmino \"interpretado\" se reserva en la pr\u00e1ctica para lenguajes \"procesados por software\" (como las m\u00e1quinas virtuales o emuladores) por encima del procesado nativo (por ejemplo, por hardware).\nEn principio, los programas de muchos lenguajes se pueden compilar o interpretar, emular o ejecutar nativamente, as\u00ed que esta designaci\u00f3n se aplica solamente a la implementaci\u00f3n pr\u00e1ctica m\u00e1s usual, en vez de representar una propiedad esencial del lenguaje. De forma parecida al microc\u00f3digo del procesador, muchos int\u00e9rpretes, internamente recaen en una compilaci\u00f3n en tiempo de ejecuci\u00f3n.\nEvitando la compilaci\u00f3n, los programas interpretados son m\u00e1s f\u00e1ciles de evolucionar durante el desarrollo y la ejecuci\u00f3n (transform\u00e1ndose en ocasiones de uno en la otra). De otra parte, ya que la compilaci\u00f3n implica una traducci\u00f3n a un formato m\u00e1s amigable con la m\u00e1quina, los programas interpretados corren m\u00e1s lentamente y menos eficientemente (es decir, gastan considerablemente m\u00e1s energ\u00eda). Esto es especialmente verdad para los lenguajes de guion, cuyas sentencias son m\u00e1s complejas de analizar comparadas con las instrucciones m\u00e1quina.\nMuchos lenguajes se han implementado usando tanto compiladores como int\u00e9rpretes, incluyendo  BASIC, C, Lisp, Pascal y Python. Java y C# se compilan a c\u00f3digo byte, el lenguaje interpretado espec\u00edfico para la m\u00e1quina virtual. Muchas implementaciones de Lisp pueden mezclar libremente c\u00f3digo interpretado y compilado.", "subsections": [{"name": "Antecedentes hist\u00f3ricos de interpretado y compilado", "text": "En los comienzos de la computaci\u00f3n, el dise\u00f1o de lenguajes fue fuertemente influenciado por la decisi\u00f3n de usar la compilaci\u00f3n o la interpretaci\u00f3n como modos de ejecuci\u00f3n. Por ejemplo, algunos lenguajes compilados requieren que los programas deban indicar expl\u00edcitamente el tipo de dato de una variable en el momento en que sea declarada o al ser usada por primera vez, mientras que algunos lenguajes interpretados toman ventaja de los aspectos din\u00e1micos de la interpretaci\u00f3n para hacer tales declaraciones innecesarias. Por ejemplo, Smalltalk (1980), que fue dise\u00f1ado para ser interpretado en tiempo de ejecuci\u00f3n, permite a objetos gen\u00e9ricos interactuar din\u00e1micamente entre s\u00ed.\nInicialmente, los lenguajes interpretados eran compilados l\u00ednea por l\u00ednea, es decir, cada l\u00ednea era compilada a medida que estaba a punto de ser ejecutada, y si un bucle o una subrutina hicieran que ciertas l\u00edneas se ejecutaran m\u00faltiples veces, ser\u00edan recompiladas repetidamente. Esto ha llegado a ser mucho menos com\u00fan. La mayor\u00eda de los lenguajes interpretados usan una representaci\u00f3n intermedia, que combina tanto la compilaci\u00f3n como la interpretaci\u00f3n. En este caso, un compilador puede producir el c\u00f3digo byte o el c\u00f3digo enhebrado, que entonces es ejecutado por un int\u00e9rprete de c\u00f3digo byte.\nLos ejemplos incluyen:\nJava\nPython\nRuby (de forma similar, utiliza un \u00e1rbol de sintaxis abstracta como representaci\u00f3n intermedia)\nForth\nLa representaci\u00f3n intermedia se puede compilar una sola vez (como en Java), cada vez que se vaya a ejecutar (como en Perl o Ruby), o cada vez que se detecte un cambio en el c\u00f3digo fuente antes de la ejecuci\u00f3n (como en Python)."}, {"name": "Ventajas de interpretar un lenguaje", "text": "Interpretar un lenguaje da a las implementaciones una flexibilidad adicional sobre las implementaciones compiladas. Algunas caracter\u00edsticas son m\u00e1s f\u00e1ciles de implementar en int\u00e9rpretes que en compiladores son (pero no se limitan a estas):\nIndependencia de la plataforma (por ejemplo el bytecode de Java)\nReflexi\u00f3n y uso reflexivo del evaluador (por ejemplo, una funci\u00f3n eval de primer orden)\nTipos din\u00e1micos\nUn tama\u00f1o del programa m\u00e1s peque\u00f1o (puesto que las implementaciones tienen la flexibilidad de elegir el conjunto de instrucciones)\n\u00c1mbito din\u00e1mico\nFacilidad en la depuraci\u00f3n (es m\u00e1s f\u00e1cil obtener informaci\u00f3n del c\u00f3digo fuente en lenguajes interpretados)"}, {"name": "Desventajas de los lenguajes interpretados", "text": "La principal desventaja de la interpretaci\u00f3n es una velocidad de ejecuci\u00f3n del programa mucho m\u00e1s lenta, comparada con la ejecuci\u00f3n directa del c\u00f3digo m\u00e1quina en la CPU del ordenador. Una t\u00e9cnica utilizada para mejorar las prestaciones es la compilaci\u00f3n en tiempo de ejecuci\u00f3n, que convierte las secuencias ejecutadas m\u00e1s frecuentes en c\u00f3digo m\u00e1quina del ordenador."}, {"name": "Lista de lenguajes m\u00e1s usados de forma interpretada", "text": "APL Un lenguaje orientado a vectores que usa un conjunto de caracteres inusual\nJ Una variante de en el que la definici\u00f3n t\u00e1cita ofrece algunos de los beneficios de la compilaci\u00f3n\nBASIC (aunque la versi\u00f3n original, era compilada, as\u00ed como muchos modernos)\nthinBasic\nECMAScript\nActionScript (versi\u00f3n 3.0 no es interpretado, por lo que se elimin\u00f3 la funci\u00f3n eval())\nE4X (ECMAScript for XML)\nJavaScript (primero se llam\u00f3 Mocha, y luego LiveScript)\nJScript\nManipulaci\u00f3n de ecuaciones y sistemas de resoluci\u00f3n\nGNU Octave\nIDL (Interactive Data Language)\nTK Solver\nMathematica\nMATLAB\nEUPHORIA interpretado o compilado\nForth\nGame Maker Language\nJava (lenguaje de programaci\u00f3n)\nMadness Script\nPerl\nPHP\nPostScript\nPython\nLisp\nLogo\nScheme\nMUMPS (tradicionalmente interpretado, compilado en las versiones modernas)\nREXX\nRuby\nJRuby (una implementaci\u00f3n Java de Ruby)\nSeed7 interpretado o compilado\nSmalltalk\nBistro\nDolphin Smalltalk\nF-Script\nLittle Smalltalk\nSqueak\nVisualAge\nVisualWorks\nLenguajes de scripting\nWebDNA\nHojas de c\u00e1lculo\nExcel almacena f\u00f3rmulas, y las interpreta desde un formato simb\u00f3lico\nS\nR\nTcl\nXOTcl\nVBScript\nPowerShell\nXMLmosaic Archivado el 2 de agosto de 2009 en Wayback Machine. Un lenguaje de programaci\u00f3n interpretado parecido a C# escrito en Visual Basic .NET\nLenguajes normalmente compilados a c\u00f3digo byte\nMuchos lenguajes interpretados son primero compilados a c\u00f3digo byte, que luego es normalmente interpretado por la m\u00e1quina virtual usando la compilaci\u00f3n en tiempo de ejecuci\u00f3n, del c\u00f3digo byte a c\u00f3digo nativo. Sin embargo, algunas veces, el c\u00f3digo byte tambi\u00e9n puede ser compilado a un binario nativo usando un compilador Ahead-of-time compilation (compilaci\u00f3n por adelantado), o ejecutado nativamente, por el procesador hardware.\nJava (se compila en c\u00f3digo byte Java para que sea interpretado por la JVM)\nGroovy\nJoin Java\nColdFusion\nScala\nLua\n.NET Framework (traducidos a c\u00f3digo byte, llamado CIL)\nC/C++\nC#\nVisual Basic .NET\nPike\nPython\nSqueak Smalltalk\nVisual FoxPro\nLisp\nAppleScript"}]}, {"name": "Notas y referencias", "text": "\u2191 AST intermediate representations, Lambda the Ultimate forum\n\u2191 A Tree-Based Alternative to Java Byte-Codes, Thomas Kistler, Michael Franz\n\u2191 Trees Versus Bytes, BComp Honours thesis by Kade Hansson\n\u2191 Colburn, Rafe (2003). Sams Teach Yourself CGI in 24 Hours (2003 edici\u00f3n). Estados Unidos: Sams Publishing. p.\u00a048. ISBN\u00a00672324040. Consultado el 13 de marzo de 2015.\u00a0. Consultado el 13 de marzo de 2015.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Lenguaje de programaci\u00f3n\nProceso de traducci\u00f3n de programas\nCompilador\nDepurador\nLenguaje interpretado\nLenguaje compilado", "subsections": []}, {"name": "Enlaces externos", "text": "DrPubaGump (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima). A tiny Interpreter written in Scheme, which provides to interpret PUBA-GUMP (a subset of BASIC) in Scheme\nIBM Card Interpreters page at Columbia University", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Licencia_de_software", "title": "Licencia de software", "summary": "[\n]\nUna licencia de software es un contrato entre el licenciante (autor/titular de los derechos de explotaci\u00f3n/distribuci\u00f3n) y el licenciatario[2]\u200b (usuario consumidor,  profesional o empresa) del programa inform\u00e1tico, para utilizarlo cumpliendo una serie de t\u00e9rminos y condiciones establecidas dentro de sus cl\u00e1usulas,[3]\u200b es decir, es un conjunto de permisos que un desarrollador le puede otorgar a un usuario en los que tiene la posibilidad de distribuir, usar o modificar el producto bajo una licencia determinada. Adem\u00e1s se suelen definir los plazos de duraci\u00f3n, el territorio donde se aplica la licencia (ya que la licencia se soporta en las leyes particulares de cada pa\u00eds o regi\u00f3n), entre otros.[4]\u200b\nLas licencias de software pueden establecer entre otras cosas: la cesi\u00f3n de determinados derechos del propietario al usuario final sobre una o varias copias del programa inform\u00e1tico, los l\u00edmites en la responsabilidad por fallos, el plazo de cesi\u00f3n de los derechos, el \u00e1mbito geogr\u00e1fico de validez del contrato[5]\u200b e incluso pueden establecer determinados compromisos del usuario final hacia el propietario, tales como la no cesi\u00f3n del programa a terceros o la no reinstalaci\u00f3n del programa en equipos distintos al que se instal\u00f3 originalmente.", "sections": [{"name": "\u00cdndice", "text": "1 Partes de una licencia de software\n1.1 Elementos personales de una licencia de software\n1.1.1 Licenciante\n1.1.2 Garant\u00eda de titularidad\n1.1.3 Licenciatario\n1.2 Elementos objetivos de una licencia de software\n1.2.1 Plazo\n1.2.2 Precio\n2 Clasificaci\u00f3n de las licencias de software\n2.1 Seg\u00fan los derechos que cada autor se reserva sobre su obra\n2.1.1 Licencia de software de c\u00f3digo abierto permisivas\n2.1.2 Licencia de software de c\u00f3digo abierto robustas\n2.1.2.1 Licencias de software de c\u00f3digo abierto robustas fuertes\n2.1.2.2 Licencias de software de c\u00f3digo abierto robustas d\u00e9biles\n2.1.3 Licencia de software de c\u00f3digo cerrado\n2.1.4 Software de dominio p\u00fablico (sin licencia)\n2.2 Seg\u00fan su destinatario\n2.2.1 Licencia de usuario final\n2.2.2 Licencia de distribuidores\n3 V\u00e9ase tambi\u00e9n\n4 Referencias", "subsections": []}, {"name": "Partes de una licencia de software", "text": "", "subsections": [{"name": "Elementos personales de una licencia de software", "text": "Licenciante\nEl licenciante o proveedor-licenciante es aquel que provee el software m\u00e1s la licencia al licenciatario, la cual, le permitir\u00e1 a este \u00faltimo tener ciertos derechos sobre el software.[5]\u200b El rol de licenciante lo puede ejercer cualquiera de los siguientes actores:[6]\u200b\nAutor: el o conjunto de desarrolladores que crea el software son por antonomasia quienes en una primera instancia poseen el rol de licenciante al ser los titulares originales del software.\nTitular de los derechos de explotaci\u00f3n: es la persona natural o jur\u00eddica que recibe una cesi\u00f3n de los derechos de explotaci\u00f3n de forma exclusiva del software desde un tercero, transform\u00e1ndolo en titular derivado y licenciantes del software.\nDistribuidor: es la persona jur\u00eddica a la cual se le otorga el derecho de distribuci\u00f3n y la posibilidad de generar sublicencias del software mediante la firma de un contrato de distribuci\u00f3n con el titular de los derechos de explotaci\u00f3n y producto.\nGarant\u00eda de titularidad\nEs la garant\u00eda ofrecida por el licenciante o propietario, en la cual, asegura que cuenta con suficientes derechos de explotaci\u00f3n sobre el software como para permitirle proveer una licencia al licenciatario.[6]\u200b\nLicenciatario\nEl licenciatario o usuario-licenciatario es aquella persona f\u00edsica o jur\u00eddica que se le permite ejercer el derecho de uso m\u00e1s alg\u00fan otro derecho de explotaci\u00f3n sobre un determinado software cumpliendo las condiciones establecidas por la licencia otorgada por el licenciante.[6]\u200b\nUsuario consumidor: persona natural que recibe una licencia de software otorgada por el licenciante, la cual, se encuentra en una posici\u00f3n desventajosa ante los t\u00e9rminos y condiciones establecidas en ella.[6]\u200b\nUsuario profesional o empresa: persona natural o jur\u00eddica que recibe una licencia de software otorgada por el licenciante, la cual, se encuentra en igualdad de condiciones ante el licenciante para ejercer sus derechos y deberes ante los t\u00e9rminos y condiciones establecidos en la licencia.[6]\u200b"}, {"name": "Elementos objetivos de una licencia de software", "text": "Plazo\nEl plazo determina la duraci\u00f3n en el tiempo durante la cual se mantienen vigentes los t\u00e9rminos y condiciones establecidos en licencia. Las licencias sobre la base de sus plazos se pueden clasificar en:[5]\u200b\nLicencias con plazo espec\u00edfico.\nLicencias de plazo indefinido.\nLicencias sin plazo.\nPrecio\nEl precio determina el valor el cual debe ser pagado por el licenciatario al licenciante por el concepto de la cesi\u00f3n de derechos establecidos en la licencia.[5]\u200b"}]}, {"name": "Clasificaci\u00f3n de las licencias de software", "text": "", "subsections": [{"name": "Seg\u00fan los derechos que cada autor se reserva sobre su obra", "text": "Licencia de software de c\u00f3digo abierto permisivas\nSe puede crear una obra derivada sin que esta tenga obligaci\u00f3n de protecci\u00f3n alguna. Muchas licencias pertenecen a esta clase, entre otras: \nAcademic Free License v.1.2.\nApache Software License v.1.1\nArtistic License v.2.0\nAttribution Assurance license.\nBSD License.\nMIT License.\nUniversity of Illinois/NCSA Open Source License.\nW3C Software Notice and License.\nZope Public License v.2.0\nOpen LDAP License v.2.7\nPerl License.\nAcademic Free License v.3.0\nPHP License v.3.0\nVMS License.\nLicencia de software de c\u00f3digo abierto robustas\nEstas licencias aplican algunas restricciones a las obras derivadas, haciendo que seg\u00fan el grado de aplicaci\u00f3n se puedan dividir a su vez en dos subcategor\u00edas:\nLicencias de software de c\u00f3digo abierto robustas fuertes\nLas licencias de software de c\u00f3digo abierto robustas fuertes o con copyleft fuerte, contienen una cl\u00e1usula que obliga a que las obras derivadas o modificaciones que se realicen al software original se deban licenciar bajo los mismos t\u00e9rminos y condiciones de la licencia original.\nEntre las licencias de esta categor\u00eda est\u00e1n: \nCommon Public License v.1.0.\nGNU General Public License v.2.0.\nGNU General Public License v.3.0.\nEclipse Public License.\neCos License v.2.0\nSleepycat Software Product License.\nAffero License v.1.0\nAffero License v.2.0\nOpenSSL License.\nLicencias de software de c\u00f3digo abierto robustas d\u00e9biles\nLas licencias de software de c\u00f3digo abierto robustas d\u00e9biles, con copyleft d\u00e9bil/suave o h\u00edbridas, contienen una cl\u00e1usula que obliga a que las modificaciones que se realicen al software original se deban licenciar bajo los mismos t\u00e9rminos y condiciones de la licencia original, pero que las obras derivadas que se puedan realizar de \u00e9l puedan ser licenciadas bajo otros t\u00e9rminos y condiciones distintas.\nGNU\n Lesser General Public License v.2.1.\nMozilla Public License\nOpen Source License.\nApple Source License v.2.0\nCDDL.\nEUPL.\nLicencia de software de c\u00f3digo cerrado\nEstas licencias tambi\u00e9n se conocen con el nombre de \u00absoftware propietario\u00bb o privativo. En ellas los propietarios establecen los derechos de uso, distribuci\u00f3n, redistribuci\u00f3n,ventas, copia, modificaci\u00f3n, cesi\u00f3n y en general cualquier otra consideraci\u00f3n que se estime necesaria.\nEste tipo de licencias, por lo general, no permiten que el software sea modificado, desensamblado, copiado o distribuido de formas no especificadas en la propia licencia (pirater\u00eda de software), regula el n\u00famero de copias que pueden ser instaladas e incluso los fines concretos para los cuales puede ser utilizado. La mayor\u00eda de estas licencias limitan fuertemente la responsabilidad derivada de fallos en el programa.\nLos fabricantes de programas sometidos a este tipo de licencias por lo general ofrecen servicios de soporte t\u00e9cnico y actualizaciones durante el tiempo de vida del producto.\nAlgunos ejemplos de este tipo de licencias son las llamadas  acuerdo de licencia de usuario final (ALUF), tambi\u00e9n llamado en algunos pa\u00edses contrato de licencia de usuario final (CLUF). En el mundo anglosaj\u00f3n se llama end-user license agreement (EULA), pero los contratos en espa\u00f1ol deben recoger el t\u00e9rmino en espa\u00f1ol.\nSoftware de dominio p\u00fablico (sin licencia)\nSe permite uso, copia, modificaci\u00f3n o redistribuci\u00f3n con o sin fines de lucro."}, {"name": "Seg\u00fan su destinatario", "text": "Licencia de usuario final\nEl acuerdo de licencia de usuario final (ALUF) es una licencia por la cual el uso de un producto solo est\u00e1 permitido para un \u00fanico usuario (el comprador).\nEn este tipo de contrato, el due\u00f1o de los derechos de un producto insta al usuario final de este a que reconozca tener conocimiento de las restricciones de uso, de los derechos del autor, de las patentes, etc., y que acepte de conformidad.\nEl conocimiento del contenido de los contratos es dif\u00edcil antes de la compra del producto ya que las cajas de los productos raramente contienen una copia completa del mismo, d\u00e1ndose que el comprador en la mayor parte de las ocasiones conoce su contenido despu\u00e9s de la compra.\nEn ocasiones se exige al usuario el renunciar a realizar reclamos o demandas legales por diversos motivos (tales como posibles da\u00f1os producidos por el producto o fallos en \u00e9l) o aceptar la restituci\u00f3n de la mercanc\u00eda en la forma y monto que la compa\u00f1\u00eda decida.\nEste tipo de acuerdo expresa los usos que se pueden dar y cu\u00e1les no al producto, ya que quien lo compra no es, legalmente, en ninguna forma due\u00f1o del producto, sino solo de una licencia para su uso, consider\u00e1ndose esto \u00faltimo por algunas personas como una limitaci\u00f3n a los derechos del consumidor\nEste tipo de acuerdos son unilaterales pues el usuario no tiene m\u00e1s opci\u00f3n que aceptar o rechazar el contenido del mismo (en algunos pa\u00edses existen organizaciones de protecci\u00f3n al consumidor que autorizan ciertas excepciones).\nLicencia de distribuidores\nEn este tipo de contrato, se le asigna derechos restringidos a un mayorista para que venda el producto software a terceros dando una remesa o comisi\u00f3n al fabricante. La misma puede ser por primera venta o licencia de renovaci\u00f3n de contrato. No se trata de una licencia de uso en t\u00e9rminos jur\u00eddicos, sino m\u00e1s bien en un acuerdo comercial en el que no tiene por qu\u00e9 ser cedido el derecho de distribuci\u00f3n necesariamente. Puede darse el caso de simple actividad comercial en la que el distribuidor ni siquiera tenga contacto con el software, y este como elemento y la licencia de uso en s\u00ed sea directamente suscrita y puesta a disposici\u00f3n por parte del fabricante. Encarg\u00e1ndose el distribuidor del correspondiente cobro al usuario y pago al fabricante menos su comisi\u00f3n."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Software libre\nC\u00f3digo abierto\nComparaci\u00f3n de licencias de software libre\nSoftware de c\u00f3digo cerrado\nCopyleft\nDerecho de autor", "subsections": []}, {"name": "Referencias", "text": "\u2191 Larry Troan (2005). \u00abOpen Source from a Proprietary Perspective\u00bb (pdf). RedHat Summit 2006 Nashville. redhat.com. p.\u00a010. Archivado desde el original el 6 de marzo de 2016. Consultado el 29 de diciembre de 2015.\u00a0\n\u2191 Informatica-Hoy. \u00abTipos de licencia de Software\u00bb. Consultado el 20 de abril de 2016.\u00a0\n\u2191 Ram\u00f3n M. G\u00f3mez Labrador (septiembre de 2005). TIPOS DE LICENCIAS DE SOFTWARE. 1. Consultado el 20 de abril de 2016.\u00a0\n\u2191 Alegsa. \u00abDefinici\u00f3n de Licencia de software\u00bb. http://www.alegsa.com.ar. Consultado el 21 de abril de 2016.\u00a0\n\u2191 a b c d Software Do It. \u00abQu\u00e9 es una Licencia\u00bb. Consultado el 20 de abril de 2016.\u00a0\n\u2191 a b c d e Error en la cita: Etiqueta <ref> no v\u00e1lida; no se ha definido el contenido de las referencias llamadas AGO", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lisp", "title": "Lisp", "summary": "Lisp (hist\u00f3ricamente LISP) es una familia de lenguajes de programaci\u00f3n de computadora de tipo multiparadigma con larga historia y una inconfundible y \u00fatil sintaxis homoic\u00f3nica basada en la notaci\u00f3n polaca.\nDesarrollado originalmente en 1959 por John McCarthy y sus colaboradores en el Instituto Tecnol\u00f3gico de Massachusetts, Lisp es el segundo lenguaje de programaci\u00f3n de alto nivel de mayor antig\u00fcedad; apareci\u00f3 un a\u00f1o despu\u00e9s de FORTRAN y uno antes que COBOL.\nAl igual que COBOL y FORTRAN, Lisp ha cambiado mucho desde sus comienzos, y han existido un gran n\u00famero de dialectos en su historia. Hoy, los dialectos de Lisp m\u00e1s ampliamente usados son Scheme (1975), Common Lisp (1984), Emacs Lisp (1985) y Clojure (2007).\nLisp fue creado originalmente como una notaci\u00f3n matem\u00e1tica pr\u00e1ctica para los programas de computadora, basada en el c\u00e1lculo lambda de Alonzo Church. Se convirti\u00f3 r\u00e1pidamente en el lenguaje de programaci\u00f3n favorito en la investigaci\u00f3n de la inteligencia artificial (AI). Como lenguajes de programaci\u00f3n precursor, Lisp fue pionero en muchas ideas en ciencias de la computaci\u00f3n, incluyendo las estructuras de datos de \u00e1rbol, el manejo de almacenamiento autom\u00e1tico, tipos din\u00e1micos, y el compilador auto contenido.\nEl acr\u00f3nimo LISP significa \"LISt Processor\" ('Procesamiento de listas'). Las listas encadenadas son una de las estructuras de datos importantes de Lisp, y el c\u00f3digo fuente de Lisp en s\u00ed mismo est\u00e1 compuesto de listas. Como resultado, los programas de Lisp pueden manipular c\u00f3digo fuente de Lisp como si fueran simples datos, dando lugar a sistemas de macros que permiten a los programadores crear lenguajes de dominio espec\u00edfico embebidos en Lisp.\nLa intercambiabilidad del c\u00f3digo y los datos tambi\u00e9n da a Lisp su instant\u00e1neamente reconocible sintaxis. Todo el c\u00f3digo del programa es escrito como expresiones S, o listas entre par\u00e9ntesis. Una llamada de funci\u00f3n o una forma sint\u00e1ctica es escrita como una lista, con la funci\u00f3n o el nombre del operador en primer lugar, y los argumentos a continuaci\u00f3n; por ejemplo, una funci\u00f3n f que toma tres argumentos puede ser llamada usando (f x y z).", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n1.1 Genealog\u00eda y variantes\n1.2 Relaci\u00f3n con la inteligencia artificial\n1.3 Desde el a\u00f1o 2000\n2 Dialectos importantes\n3 Innovaciones del lenguaje\n4 Listas\n5 Or\u00edgenes de \"car\" y \"cdr\"\n6 Ejemplos\n6.1 Hola mundo\n6.1.1 Trabajando con listas\n6.2 Grandes valores de la Funci\u00f3n de Ackermann\n7 Referencias\n8 V\u00e9ase tambi\u00e9n\n9 Enlaces externos\n9.1 Aplicaciones en Lisp\n9.2 Compiladores de Lisp", "subsections": []}, {"name": "Historia", "text": "Lisp fue inventado por John McCarthy en 1958 mientras estaba en el Instituto Tecnol\u00f3gico de Massachusetts (MIT). McCarthy public\u00f3 su dise\u00f1o en 1960 en un art\u00edculo de Communications of the ACM titulado \"Funciones recursivas de expresiones simb\u00f3licas y su c\u00f3mputo a m\u00e1quina, Parte I\"[1]\u200b (la \"parte II\" nunca fue publicada). All\u00ed mostr\u00f3 que con algunos operadores simples y una notaci\u00f3n para las funciones, uno puede construir un lenguaje Turing completo para procesamiento de algoritmos.\nDesde 1955 o 1956, el Information Processing Language fue el primer lenguaje de AI, y ya hab\u00eda incluido muchos de los conceptos, tales como proceso por lista y recursi\u00f3n, que vinieron a ser usados en Lisp.\nLa notaci\u00f3n original de McCarthy usaba \"expresiones M\" en corchetes que ser\u00edan traducidas a expresiones S. Como un ejemplo, la expresi\u00f3n M car[cons[A,B]] es equivalente a la expresi\u00f3n S (car (cons A B)). Una vez que Lisp fue implementado, los programadores r\u00e1pidamente eligieron usar expresiones S, y las expresiones M fueron abandonadas. las expresiones M emergieron otra vez con los intentos ef\u00edmeros del MLISP[2]\u200b de Horace Enea y el CGOL de Vaughan Pratt.\nLisp fue implementado primero por Steve Russell en un computador IBM 704. Russell hab\u00eda le\u00eddo el art\u00edculo de McCarthy, y se dio cuenta (para la sorpresa de McCarthy) que la funci\u00f3n eval de Lisp pod\u00eda ser implementada en c\u00f3digo de m\u00e1quina. El resultado fue un int\u00e9rprete de Lisp funcional que pod\u00eda ser usado para correr programas Lisp, o m\u00e1s correctamente, \"evaluar expresiones Lisp\".\nDos rutinas de lenguaje ensamblador para el IBM 704 se convirtieron en las operaciones primitivas para descomponer listas: car (contenido del registro de direcci\u00f3n) y cdr (contenido del registro del decremento). Los dialectos de Lisp todav\u00eda usan el car y cdr (pronunciado /\u02c8k\u0251r/ y /\u02c8k\u028ad\u0259r/) para las operaciones que retornan el primer elemento y el resto de la lista respectivamente.\nEl primer compilador completo de Lisp, escrito en Lisp, fue implementado en 1962 por Tim Hart y Mike Levin en el MIT.[3]\u200b Este compilador introdujo el modelo Lisp de compilaci\u00f3n incremental, en el cual las funciones compiladas e interpretadas pueden entremezclarse libremente. El lenguaje en los memos de Hart y Levin es mucho m\u00e1s cercano al estilo moderno de Lisp que el anterior c\u00f3digo de McCarthy.", "subsections": [{"name": "Genealog\u00eda y variantes", "text": "Sobre su historia de cincuenta a\u00f1os, Lisp ha producido muchas variaciones en el tema base de un lenguaje de expresi\u00f3n S. Por otra parte, cada dialecto dado puede tener varias implementaciones, por ejemplo, hay m\u00e1s de una docena de implementaciones del Common Lisp.\nLas diferencias entre los dialectos pueden ser muy visibles, por ejemplo, el Common Lisp y el Scheme usan diferentes palabras clave para definir funciones. Dentro de un dialecto que est\u00e1 estandarizado, sin embargo, las implementaciones conformadas soportan el mismo lenguaje base, pero con diferentes extensiones y bibliotecas."}, {"name": "Relaci\u00f3n con la inteligencia artificial", "text": "Desde su inicio, Lisp estaba estrechamente relacionado con la comunidad de investigaci\u00f3n de la inteligencia artificial, especialmente en sistemas PDP-10.[4]\u200b Fue usado como la implementaci\u00f3n del lenguaje de programaci\u00f3n Micro Planner que fue la fundaci\u00f3n para el famoso sistema de AI SHRDLU. En los a\u00f1os 1970, a medida que la investigaci\u00f3n del AI engendr\u00f3 descendientes comerciales, el desempe\u00f1o de los sistemas Lisp existentes se convirti\u00f3 en un problema creciente.\nLisp era un sistema dif\u00edcil de implementar con las t\u00e9cnicas de compilador y hardware com\u00fan de los a\u00f1os 1970. Las rutinas de recolecci\u00f3n de basura, desarrolladas por el entonces estudiante graduado del MIT, Daniel Edwards, hicieron pr\u00e1ctico correr Lisp en sistemas de computaci\u00f3n de prop\u00f3sito general, pero la eficacia todav\u00eda segu\u00eda siendo un problema. Esto llev\u00f3 a la creaci\u00f3n de las m\u00e1quinas Lisp: hardware dedicado para correr ambientes y programas Lisp. Avances tanto en el hardware de computadora como en la tecnolog\u00eda de compiladores pronto hicieron obsoletas a las m\u00e1quinas de Lisp, en detrimento del mercado de Lisp.\nDurante los a\u00f1os 1980 y 1990, fue hecho un gran esfuerzo para unificar los numerosos dialectos de Lisp en un solo lenguaje (m\u00e1s notablemente, InterLisp, Maclisp, ZetaLisp, MetaLisp, y Franz Lisp). El nuevo lenguaje, Common Lisp, fue esencialmente un subconjunto compatible de los dialectos que reemplaz\u00f3. En 1994, la ANSI public\u00f3 el est\u00e1ndar del Common Lisp, \"ANSI X3.226-1994 Information Technology Programming Language Common Lisp\". En aquel momento el mercado mundial para Lisp era mucho m\u00e1s peque\u00f1o de lo que es hoy.[cita\u00a0requerida]"}, {"name": "Desde el a\u00f1o 2000", "text": "Habiendo declinado algo en los a\u00f1os noventa, Lisp experiment\u00f3 un nuevo auge enfocado en las implementaciones abiertas de Common Lisp y en el desarrollo de aplicaciones y de nuevas bibliotecas port\u00e1tiles. Una muestra de este inter\u00e9s fue el que la versi\u00f3n impresa de Practical Common Lisp (Common Lisp Pr\u00e1ctico) de Peter Seibel, un tutorial para nuevos programadores publicado en 2004,[5]\u200b estuviese brevemente en Amazon.com como el segundo libro de programaci\u00f3n m\u00e1s popular. El libro es accesible en l\u00ednea sin costo.[6]\u200b\nMuchos nuevos programadores de Lisp fueron inspirados por escritores como Paul Graham y Eric S. Raymond luchando por un lenguaje que otros consideran anticuado. Los nuevos programadores de Lisp frecuentemente describen el lenguaje como una experiencia que abre los ojos y afirman que es sustancialmente m\u00e1s productivo que otros lenguajes.[7]\u200b Este aumento de conciencia puede ser contrastado con el \"invierno de la inteligencia artificial\" y el breve crecimiento de Lisp a mediados de los 1990.[8]\u200b\nEn su encuesta de las implementaciones del Common Lisp, Dan Weinreb lista once implementaciones activamente mantenidas. Scieneer Common Lisp es una nueva implementaci\u00f3n comercial que bifurc\u00f3 (fork) del CMUCL con un primer lanzamiento en 2002.\nLa comunidad del c\u00f3digo libre ha creado la nueva infraestructura de soporte: Cliki es un Wiki que recoge la informaci\u00f3n relacionada con Common Lisp, el Common Lisp directory lista recursos, el #lisp es un canal popular de IRC (con soporte por un Bot escrito en Lisp), lisppaste soporta la distribuci\u00f3n y el intercambio y comentario de retazos de c\u00f3digo (snippets), el Planet Lisp recoge el contenido de varios blogs relacionados con Lisp, en el LispForum el usuario discute asuntos referentes a Lisp, Lispjobs es un servicio para anunciar ofertas de trabajo y hay un nuevo servicio de noticias semanales (Weekly Lisp News).\nHan sido celebrados los 50 a\u00f1os del Lisp (1958-2008) en LISP50@OOPSLA. Hay varias reuniones de usuario locales regulares (Boston, Vancouver, Hamburg,\u2026), Reuniones Lisp (European Common Lisp Meeting, European Lisp Symposium) y una International Lisp Conference.\nLa comunidad Scheme mantiene activamente m\u00e1s de veinte implementaciones. Se han desarrollado en los \u00faltimos a\u00f1os varias significativas nuevas implementaciones (Chicken, Gauche, Ikarus, Larceny, Ypsilon). El est\u00e1ndar de Scheme Revised5 Report on the Algorithmic Language Scheme fue ampliamente aceptado en la comunidad del Scheme. El proceso Scheme Requests for Implementation ha creado muchas bibliotecas y extensiones casi est\u00e1ndares para el Scheme. Las comunidades de usuario de implementaciones individuales del Scheme contin\u00faan creciendo. En 2003 un nuevo proceso de estandarizaci\u00f3n del lenguaje fue comenzada y condujo al est\u00e1ndar R6RS del Scheme en 2007. El uso acad\u00e9mico del Scheme para ense\u00f1ar ciencias de la computaci\u00f3n parece haber declinado algo. Algunas universidades ya no est\u00e1n usando Scheme en sus cursos preliminares de ciencias de la computaci\u00f3n.\nHay tambi\u00e9n algunos nuevos dialectos Lisp. Notablemente: Newlisp (un lenguaje de scripting), Arc (desarrollado por Paul Graham) y recientemente Clojure (desarrollado por Rich Hickey) y NU para la programaci\u00f3n con Cocoa de Apple."}]}, {"name": "Dialectos importantes", "text": "Los dos principales dialectos de Lisp usados para la programaci\u00f3n de prop\u00f3sitos generales hoy en d\u00eda son Common Lisp y Scheme. Estos lenguajes representan opciones de dise\u00f1o significativamente diferentes.\nEl Common Lisp, descendiente principalmente de MacLisp, Interlisp, y Lisp Machine Lisp, es un superconjunto ampliado de los primeros dialectos del Lisp, con un est\u00e1ndar de lenguaje grande incluyendo muchos tipos de datos y formas sint\u00e1cticas incorporados, as\u00ed como un sistema del objeto. El Scheme es un dise\u00f1o m\u00e1s minimalista, con un mucho m\u00e1s peque\u00f1o conjunto de caracter\u00edsticas est\u00e1ndar pero con ciertas caracter\u00edsticas de implementaci\u00f3n (tales como optimizaci\u00f3n de llamada de cola y continuaci\u00f3n completa) no encontradas necesariamente en Common Lisp. El Common Lisp tambi\u00e9n tom\u00f3 prestadas ciertas caracter\u00edsticas de Scheme tales como \u00e1mbito de l\u00e9xico y clausura l\u00e9xica.\nEl Scheme, es un dialecto del lenguaje Lisp con \u00e1mbito est\u00e1tico y cola recursiva aut\u00e9ntica inventado por Guy Lewis Steele Jr. y Gerald Jay Sussman. Fue dise\u00f1ado para tener una sem\u00e1ntica excepcionalmente clara y simple y pocas maneras diferentes de formar expresiones. Una amplia variedad de paradigmas programados encuentran una expresi\u00f3n conveniente en Scheme, incluyendo los estilos imperativo, funcional, y paso de mensajes. El Scheme contin\u00faa evolucionando con una serie de los est\u00e1ndares (Revisedn Report on the Algorithmic Language Scheme) y una serie de Scheme Requests for Implementation.\nAdem\u00e1s, los dialectos de Lisp son usados como lenguajes de scripting en un n\u00famero de aplicaciones, con los m\u00e1s conocidos siendo el Emacs Lisp en el editor de Emacs, Visual Lisp en AutoCAD, Nyquist en Audacity.", "subsections": []}, {"name": "Innovaciones del lenguaje", "text": "Fue en Lisp donde nacieron muchas ideas de las ciencias de la computaci\u00f3n, incluyendo la estructura de dato de \u00e1rbol, recolecci\u00f3n autom\u00e1tica de basura, tipado din\u00e1mico, condicionales, funciones de orden superior como map y reduce, recursividad, el compilador autocontenido y el REPL.[9]\u200b[10]\u200b\nLisp fue el primer lenguaje de programaci\u00f3n homoic\u00f3nico: todo el c\u00f3digo fuente del programa es al mismo tiempo una estructura de datos del lenguaje (listas anidadas o \u00e1rboles). Como resultado la metaprogramaci\u00f3n en Lisp es relativamente sencilla. Ya que el c\u00f3digo fuente de Lisp tiene una correspondencia directa con el \u00e1rbol sint\u00e1ctico abstracto del programa, se puede crear c\u00f3digo de Lisp para manipular m\u00e1s c\u00f3digo de Lisp, o a\u00fan crearlo desde cero, sin necesidad de un extensivo an\u00e1lisis sint\u00e1ctico (parsing) o manipulaci\u00f3n de c\u00f3digo de m\u00e1quina binario. Esto generalmente es considerado una de las ventajas primarias del lenguaje con respecto a su poder expresivo, y hace al lenguaje favorable a la evaluaci\u00f3n metacircular.\nLa ubicua estructura IF THEN ELSE, ahora admitida como un elemento esencial de cualquier lenguaje de programaci\u00f3n, fue inventada por McCarthy para el uso en Lisp, donde vio su primera apariencia en una forma m\u00e1s general (la estructura cond). Fue heredada por el ALGOL, que la populariz\u00f3.\nLisp influy\u00f3 profundamente a [[del Smalltalk, y entonces a su vez Lisp fue influenciado por Smalltalk, adoptando las caracter\u00edsticas de la programaci\u00f3n orientada a objetos (clases, instancias, etc.) a finales de los a\u00f1os 1970.\nLisp introdujo el concepto de recolecci\u00f3n de basura, mediante el cual el sistema busca en el \"heap\" de memoria din\u00e1mica para eliminar objetos obsoletos sin intervenci\u00f3n expl\u00edcita del programador.[11]\u200b\nEn gran parte debido a sus requerimientos de recursos con respecto al temprano hardware computacional (incluyendo los primeros microprocesadores), Lisp no se hizo tan popular fuera de la comunidad de inteligencia artificial, como lo fueron el FORTRAN y el descendiente del lenguaje ALGOL, el lenguaje C. Lenguajes m\u00e1s nuevos como Java y Python han incorporado algunas versiones limitadas de algunas de las caracter\u00edsticas de Lisp, pero no pueden necesariamente brindar la coherencia y la sinergia de los conceptos completos encontrados en Lisp. Debido a su conveniencia para aplicaciones mal definidas, complejas, y din\u00e1micas, Lisp est\u00e1n disfrutando actualmente de un cierto resurgimiento del inter\u00e9s popular.", "subsections": []}, {"name": "Listas", "text": "El elemento fundamental en Lisp es la lista, en el sentido m\u00e1s amplio del t\u00e9rmino, pues tanto los datos como los programas son listas. De ah\u00ed viene su nombre, pues Lisp es un acr\u00f3nimo de \"ListProcessing\".\nLas listas en LISP est\u00e1n delimitadas por par\u00e9ntesis. De aqu\u00ed viene el chiste del significado de LISP: \"LostInStupidParentheses\" que aunque con buen humor es completamente ficticio.\nAlgunas de las funciones predefinidas de Lisp tienen s\u00edmbolos familiares (+ para la suma, * para el producto), pero otras son m\u00e1s ex\u00f3ticas, especialmente dos que sirven precisamente para manipular listas, descomponi\u00e9ndolas en sus componentes. Sus nombres (\"car\" y \"cdr\") son un poco extra\u00f1os, reliquias de tiempos pasados y de la estructura de los ordenadores de segunda generaci\u00f3n, \"car\" devuelve la cabeza de una lista y \"cdr\" su cola o resto.\nLisp sigue una filosof\u00eda de tratamiento no-destructivo de los par\u00e1metros, de modo que la mayor\u00eda de las funciones devuelven una lista resultado de efectuar alguna transformaci\u00f3n sobre la que recibieron, pero sin alterar esta \u00faltima.\nUno de los motivos por los que Lisp es especialmente adecuado para la IA es el hecho de que el c\u00f3digo y los datos tengan el mismo tratamiento (como listas); esto hace especialmente sencillo escribir programas capaces de escribir otros programas seg\u00fan las circunstancias.\nLisp fue uno de los primeros lenguajes de programaci\u00f3n en incluir manejo de excepciones con las primitivas catch y throw.\nDerivado de Lisp es el lenguaje de programaci\u00f3n Logo. Sin entrar en detalles, podr\u00eda decirse que Logo es Lisp sin par\u00e9ntesis y con operadores aritm\u00e9ticos infijos.", "subsections": []}, {"name": "Or\u00edgenes de \"car\" y \"cdr\"", "text": "Art\u00edculo principal:\ncar: Content of Address part of Register\ncdr: Content of Decremental part of Register\nSon operaciones del conjunto de instrucciones del IBM 704", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": [{"name": "Hola mundo", "text": "(\nformat\nt\n\"\u00a1Hola, mundo!\"\n)\nTrabajando con listas\n*******************************************************************\nDefinici\u00f3n\nde\nla\nfunci\u00f3n:\ndefun\nvacia\nl\ncond\n((\nnull\n1\n; si la lista esta vac\u00eda devuelve 1\n0\n)))\n; en otro caso (lista llena) devuelve 0\nLlamada\na\n'\n3\n4\n))\n; La lista no esta vac\u00eda, devolver\u00eda 0\n())\n; La lista esta vac\u00eda, devolver\u00eda 1\n\u00faltimo\nlista\ncdr\ncar\n)))))\n2\n5\n6\n7\n; devuelve el \u00faltimo de la lista: 7\n; Factorial(x) = 1 si x=0 caso base\n; x*factorial(x-1) si x>0 caso recursivo\n;Funci\u00f3n factorial hecha con recursividad no final\nfactorial\nn\nif\n=\n; caso base\n*\n-\n; caso recursivo\n;esto nos devolver\u00eda 24=4*3*2*1"}, {"name": "Grandes valores de la Funci\u00f3n de Ackermann", "text": ";Propuesta por Nikolai Coica\nackermann\nm\n\"The Ackermann Function\"\n+\n8\nexpt\n))))\n))))))))"}]}, {"name": "Referencias", "text": "\u2191 John McCarthy. \u00abRecursive Functions of Symbolic Expressions and Their Computation by Machine, Part I\u00bb. Consultado el 21 de enero de 2021.\u00a0\n\u2191 David Canfield Smith. \u00abMLISP Users Manual\u00bb. Archivado desde el original el 24 de septiembre de 2006. Consultado el 13 de octubre de 2006.\u00a0\n\u2191 Tim Hart and Mike Levin. \u00abAI Memo 39-The new compiler\u00bb. Consultado el 13 de octubre de 2006.\u00a0\n\u2191 The 36-bit word size of the PDP-6/PDP-10 was influenced by the usefulness of having two Lisp 18-bit pointers in a single word. Lum Johnson (18 de octubre de 1990). \u00abThe History of TOPS or Life in the Fast ACs\u00bb. alt.folklore.computers. 84950@tut.cis.ohio-state.edu. \u00abThe PDP-6 project started in early 1963, as a 24-bit machine. It grew to 36 bits for LISP, a design goal.\u00a0\u00bb\u00a0\n\u2191 \u00abPractical Common Lisp going into 3rd printing\u00bb. Archivado desde el original el 20 de junio de 2009. Consultado el 19 de septiembre de 2009.\u00a0\n\u2191 Practical Common Lisp\n\u2191 \u00abThe Road To Lisp Survey\u00bb. Archivado desde el original el 4 de octubre de 2006. Consultado el 13 de octubre de 2006.\u00a0\n\u2191 \u00abTrends for the Future\u00bb. Archivado desde el original el 3 de junio de 2013. Consultado el 19 de septiembre de 2009.\u00a0\n\u2191 Chisnall, David (12 de enero de 2011). Influential Programming Languages, Part 4: Lisp. Consultado el 22 de mayo de 2020.\u00a0\n\u2191 \u00abRevenge of the Nerds\u00bb. www.paulgraham.com. Consultado el 22 de mayo de 2020.\u00a0\n\u2191 LiebermanHenry; HewittCarl (1 de junio de 1983). \u00abA real-time garbage collector based on the lifetimes of objects\u00bb. Communications of the ACM (en ingl\u00e9s). doi:10.1145/358141.358147. Consultado el 22 de mayo de 2020.\u00a0", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Inteligencia artificial\nCommon Lisp\nScheme\nMaxima", "subsections": []}, {"name": "Enlaces externos", "text": " Wikilibros alberga un libro o manual sobre Programaci\u00f3n en LISP.\nFeatures of Common Lisp Una discusi\u00f3n de algunas de las caracter\u00edsticas m\u00e1s sobresalientes del lenguaje.\nRecursos Lisp en espa\u00f1ol Archivado el 16 de enero de 2018 en Wayback Machine. Textos en espa\u00f1ol y traducciones sobre Lisp, Common Lisp, Emacs Lisp, etc.\nPractical Common Lisp Libro introductorio de Common Lisp. Versi\u00f3n en l\u00ednea y distribuible por la propia editorial.\nThe Nature of Lisp. Una introducci\u00f3n para entender la naturaleza del lenguaje y su poder.", "subsections": [{"name": "Aplicaciones en Lisp", "text": "Entre las m\u00e1s exitosas aplicaciones escritas en Lisp se pueden mencionar:\nEmacs, el editor de texto http://www.gnu.org/software/emacs/emacs.html\nACL2, el demostrador de teoremas http://www.cs.utexas.edu/users/moore/acl2/\nMaxima, el sistema de \u00e1lgebra computacional http://maxima.sourceforge.net/"}, {"name": "Compiladores de Lisp", "text": "GNU Common Lisp, software libre\nAllegro Common Lisp, software propietario\nCMU Common Lisp, software libre\nCLISP, Una implementaci\u00f3n de Common Lisp, software libre\nOpenMCL Archivado el 5 de marzo de 2018 en Wayback Machine. Common lisp para Macintosh, software libre"}]}]}
{"url": "https://es.wikipedia.org/wiki/Log4j", "title": "Log4j", "summary": "Log4j es una biblioteca de c\u00f3digo abierto desarrollada en Java por la Apache Software Foundation que permite a los desarrolladores de software escribir mensajes de registro, cuyo prop\u00f3sito es dejar constancia de una determinada transacci\u00f3n en tiempo de ejecuci\u00f3n. Log4j permite filtrar los mensajes en funci\u00f3n de su importancia. La configuraci\u00f3n de salida y granularidad de los mensajes es realizada en tiempo de ejecuci\u00f3n mediante el uso de archivos de configuraci\u00f3n externos. Log4J ha sido implementado en otros lenguajes como C, C++, C#, Perl, Python, Ruby y Eiffel.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Conceptos\n2.1 Niveles de prioridad de los mensajes\n2.2 Anexos\n2.3 Disposiciones\n3 Configuraci\u00f3n\n4 Uso\n5 Vulnerabilidad \u00abLog4Shell\u00bb\n6 Proyectos similares\n7 Referencias\n8 V\u00e9ase tambi\u00e9n\n9 Enlaces externos\n9.1 Implementaciones", "subsections": []}, {"name": "Historia", "text": "Log4j es un proyecto de la Apache Software Foundation que fue escrito por Ceki G\u00fclc\u00fc. Log4j es uno de los varios Java Logging Frameworks existentes.\nG\u00fclc\u00fc ha comenzado los proyectos SLF4J y Logback,[1]\u200b con la intenci\u00f3n de ofrecer un sucesor a log4j.", "subsections": []}, {"name": "Conceptos", "text": "", "subsections": [{"name": "Niveles de prioridad de los mensajes", "text": "Por defecto Log4J tiene seis niveles de prioridad para los mensajes: trace, debug, info, warn, error y fatal. Adem\u00e1s existen otros dos niveles extras, all y off.\nNiveles de prioridad (de menor a mayor):\nOFF: este es el nivel de m\u00ednimo detalle, deshabilita todos los logs.\nFATAL: se utiliza para mensajes cr\u00edticos del sistema, generalmente despu\u00e9s de guardar el mensaje el programa abortar\u00e1.\nERROR: se utiliza en mensajes de error de la aplicaci\u00f3n que se desea guardar, estos eventos afectan al programa pero lo dejan seguir funcionando, como por ejemplo que alg\u00fan par\u00e1metro de configuraci\u00f3n no es correcto y se carga el par\u00e1metro por defecto.\nWARN: se utiliza para mensajes de alerta sobre eventos que se desea mantener constancia, pero que no afectan al correcto funcionamiento del programa.\nINFO: se utiliza para mensajes similares al modo \"verbose\" en otras aplicaciones.\nDEBUG: se utiliza para escribir mensajes de depuraci\u00f3n. Este nivel no debe estar activado cuando la aplicaci\u00f3n se encuentre en producci\u00f3n.\nTRACE: se utiliza para mostrar mensajes con un mayor nivel de detalle que debug.\nALL: este es el nivel de m\u00e1ximo detalle, habilita todos los logs (en general equivale a TRACE)."}, {"name": "Anexos", "text": "En Log4J los mensajes son enviados a una (o varias) salida de destino, lo que se denomina un appender.\nExisten varios appenders disponibles y configurados, aunque tambi\u00e9n podemos crear y configurar nuestros propios appenders.\nT\u00edpicamente la salida de los mensajes es redirigida a un fichero de texto .log (FileAppender, RollingFileAppender), a un servidor remoto donde almacenar registros (SocketAppender), a una direcci\u00f3n de correo electr\u00f3nico (SMTPAppender), e incluso en una base de datos (JDBCAppender).\nCasi nunca es utilizado en un entorno de producci\u00f3n la salida a la consola (ConsoleAppender) ya que perder\u00eda gran parte de la utilidad de Log4J."}, {"name": "Disposiciones", "text": "Permite presentar el mensaje con el formato necesario para almacenarlo simplemente en un archivo de texto de extensi\u00f3n \u00ab.log\u00bb (SimpleLayout y PatternLayout), en una tabla HTML (HTMLLayout), o en un archivo XML (XMLLayout).\nAdem\u00e1s se puede a\u00f1adir informaci\u00f3n extra al mensaje, como la fecha en que se gener\u00f3, la clase que lo gener\u00f3 o el nivel que posee, entre otro, por cada paso"}]}, {"name": "Configuraci\u00f3n", "text": "La API es totalmente configurable, ya que se realiza mediante un archivo en formato XML o en formato Java Properties (clave=valor), generalmente llamado log4j.properties.\nEn el siguiente ejemplo implementamos un fichero properties de configuraci\u00f3n, y configuramos dos registros.\nCONSOLE imprimir\u00e1 los mensajes en la consola por l\u00edneas (%m%n).\nLOGFILE a\u00f1adir\u00e1 los mensajes a un fichero (aplicaci\u00f3n.log), reservando los primeros 4 caracteres para los milisegundos en que se gener\u00f3 el mensaje (%-4r), entre corchetes qui\u00e9n gener\u00f3 el mensaje ( [%t]), cinco espacios para la prioridad del mensaje (%-5p), la categor\u00eda del mensaje (%c) y finalmente el propio mensaje junto con un retorno de carro (%m%n).", "subsections": []}, {"name": "Uso", "text": "Para utilizarlo debemos por supuesto importar las clases que necesitamos de Log4J en nuestro c\u00f3digo.\nA continuaci\u00f3n debemos definir una variable est\u00e1tica del tipo org.apache.log4j.Logger con el nombre de la clase que va a escribir en el registro.\nFinalmente debemos configurar el objeto Logger. \nPodemos utilizar la configuraci\u00f3n b\u00e1sica, invocamos el m\u00e9todo org.apache.log4j.BasicConfigurator.configure que configura el registro como un ConsoleAppender y un PatternLayout tambi\u00e9n predefinido.\nPodemos configurar la API del Log4J tambi\u00e9n en el mismo c\u00f3digo.\nPodemos leer la configuraci\u00f3n de nuestro fichero log4j.properties, donde definimos el nivel m\u00ednimo que debe poseer la traza para ser almacenada en el registro, el o los appenders que utilizaremos, y sus correspondientes layouts. Por defecto al instanciar un Logger Log4J busca en la ra\u00edz del classpath de la aplicaci\u00f3n un fichero llamado log4j.properties para configurarse.\nUn ejemplo para esta \u00faltima opci\u00f3n:\nLo m\u00e1s \u00fatil y flexible en los entornos empresariales reales es utilizar la \u00faltima opci\u00f3n (archivos de configuraci\u00f3n).", "subsections": []}, {"name": "Vulnerabilidad \u00abLog4Shell\u00bb", "text": "El 24 de noviembre de 2021, investigadores independientes de seguridad inform\u00e1tica informaron a Apache sobre una vulnerabilidad tipo ataque de d\u00eda cero que permit\u00eda la ejecuci\u00f3n de c\u00f3digo arbitrario en Log4j versi\u00f3n 2, denominada Log4Shell (CVE-2021-44228).[2]\u200b Fue publicada a trav\u00e9s de un tuit el 9 de diciembre de 2021.[cita\u00a0requerida] Los servicios afectados incluyeron Cloudflare, iCloud, Minecraft (Java Edition), Steam, Tencent QQ, y Twitter.[3]\u200b La Apache Software Foundation asign\u00f3 a la vulnerabilidad la severidad CVSS m\u00e1xima de 10, por la posibilidad de que millones de servidores fueran potencialmente vulnerables a ciberataques.\nLa vulnerabilidad apareci\u00f3 en las versiones de la 2.0-alpha1 hasta 2.16.0, y fue mitigada con la versi\u00f3n 2.17.0. Los usuarios y desarrolladores de los programas que usen la biblioteca deben actualizarla para obtener las actualizaciones de seguridad.[4]\u200b\nEl riesgo de esta vulnerabilidad es que es relativamente f\u00e1cil explotarla, por lo que para las organizaciones  es importante revisar si est\u00e1n expuestas a este riesgo, existen diferentes pruebas de concepto que muestran la vulnerabilidad que pueden servir de base para evaluar el riesgo. [5]\u200b", "subsections": []}, {"name": "Proyectos similares", "text": "log4c - Adaptaci\u00f3n en C de log4j\nlog4js - Adaptaci\u00f3n para JavaScript\nlog4javascript - Otra adaptaci\u00f3n para JavaScript\nlog4net - Adaptaci\u00f3n para .NET\nlog4perl Archivado el 23 de enero de 2013 en Wayback Machine. - Adaptaci\u00f3n para Perl\nlog4php - Adaptaci\u00f3n para Php\nlog4r - Adaptaci\u00f3n para Ruby\nPL-SQL-Logging-utility - Adaptaci\u00f3n de log4j en PL/SQL para Oracle.\nlog4db2 - Adaptaci\u00f3n de log4j en SQL-PL de IBM DB2.", "subsections": []}, {"name": "Referencias", "text": "\u2191 (en ingl\u00e9s) Sitio web de Logback\n\u2191 \u00abLog4j \u2013 Apache Log4j Security Vulnerabilities\u00bb. logging.apache.org. Consultado el 21 de diciembre de 2021.\u00a0\n\u2191 Nathaniel Mott (10 de deciembre, 2021). \u00abCountless Servvers Are Vulnerable to Apache Log4j Zero-Day Exploit\u00bb.\u00a0\n\u2191 \u00abLog4j \u2013 Apache Log4j Security Vulnerabilities\u00bb. logging.apache.org. Consultado el 19 de diciembre de 2021.\u00a0\n\u2191 Prueba de concepto Log4Shell", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Software libre. Contenido relacionado con Software libre.\nSLF4J\nChainsaw\nlogback, un sucesor de log4j, dise\u00f1ado por el fundador de log4j\nOtrosLogViewer, De c\u00f3digo abierto visor de registro", "subsections": []}, {"name": "Enlaces externos", "text": "P\u00e1gina oficial de Log4j\nLog4j en Javadocs\nManual completo de log4j (comercial)\nLog4J en Lyckapedia\nPresentaci\u00f3n \u00fatil de Log4j\nPrueba de concepto Log4Shell", "subsections": [{"name": "Implementaciones", "text": "Log::Log4perl m\u00f3dulo Perl en CPAN"}]}]}
{"url": "https://es.wikipedia.org/wiki/M%C3%B3dulo_(inform%C3%A1tica)", "title": "M\u00f3dulo (inform\u00e1tica)", "summary": "En programaci\u00f3n, un m\u00f3dulo es una porci\u00f3n de un programa de ordenador. De las varias tareas que debe realizar un programa para cumplir con su funci\u00f3n u objetivos, un m\u00f3dulo realizar\u00e1, com\u00fanmente, una de dichas tareas (o varias, en alg\u00fan caso).\nEn general (no necesariamente relacionado con la programaci\u00f3n), un m\u00f3dulo recibe como entrada la salida que haya proporcionado otro m\u00f3dulo o los datos de entrada al sistema (programa) si se trata del m\u00f3dulo principal de este; y proporcionar\u00e1 una salida que, a su vez, podr\u00e1 ser utilizada como entrada de otro m\u00f3dulo o bien contribuir\u00e1 directamente a la salida final del sistema (programa), si se retorna al m\u00f3dulo principal.\nParticularmente, en el caso de la programaci\u00f3n, los m\u00f3dulos suelen estar (no necesariamente) organizados jer\u00e1rquicamente en niveles, de forma que hay un m\u00f3dulo principal que realiza las llamadas oportunas a los m\u00f3dulos de nivel inferior. \nCuando un m\u00f3dulo es convocado, recibe como entrada los datos proporcionados por otro del mismo o superior nivel, el que ha hecho la llamada; luego realiza su tarea. A su vez este m\u00f3dulo convocado puede llamar a otro u otros m\u00f3dulos de nivel inferior si fuera necesario; cuando ellos finalizan sus tareas, devuelven la salida pertinente al m\u00f3dulo inmediato llamador, en secuencia inversa. Finalmente se contin\u00faa con la ejecuci\u00f3n del m\u00f3dulo principal.", "sections": [{"name": "Caracter\u00edsticas de un m\u00f3dulo", "text": "Cada uno de los m\u00f3dulos de un programa idealmente deber\u00eda cumplir las siguientes caracter\u00edsticas:\nTama\u00f1o relativamente peque\u00f1o.- Esto facilita aislar el impacto que pueda tener la realizaci\u00f3n de un cambio en el programa, bien para corregir un error, o bien por redise\u00f1o del algoritmo correspondiente.\nIndependencia modular.- Cuanto m\u00e1s independientes son los m\u00f3dulos entre s\u00ed, m\u00e1s f\u00e1cil y flexiblemente se trabajar\u00e1 con ellos. Esto implica que para desarrollar un m\u00f3dulo no es necesario conocer detalles internos de otros m\u00f3dulos. Como consecuencia de la independencia modular, un m\u00f3dulo cumplir\u00e1:\nCaracter\u00edsticas de caja negra; es decir, abstracci\u00f3n (ver abstracci\u00f3n en programaci\u00f3n orientada a objetos).\nAislamiento de los detalles mediante encapsulamiento (ver encapsulamiento en programaci\u00f3n orientada a objetos).", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Algoritmo\nPrograma\nModularidad\nDise\u00f1o estructurado\nProgramaci\u00f3n modular", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Machine_learning", "title": "Aprendizaje autom\u00e1tico", "summary": "El aprendizaje autom\u00e1tico o aprendizaje automatizado o aprendizaje de m\u00e1quinas (del ingl\u00e9s, machine learning) es el subcampo de las ciencias de la computaci\u00f3n y una rama de  la inteligencia artificial, cuyo objetivo es desarrollar t\u00e9cnicas que permitan que las computadoras aprendan. Se dice que un agente aprende cuando su desempe\u00f1o mejora con la experiencia y mediante el uso de datos; es decir, cuando la habilidad no estaba presente en su genotipo o rasgos de nacimiento.[1]\u200b \"En el aprendizaje de m\u00e1quinas un computador observa datos, construye un modelo basado en esos datos y utiliza ese modelo a la vez como una hip\u00f3tesis acerca del mundo y una pieza de software que puede resolver problemas\".[2]\u200b\nEn muchas ocasiones el campo de actuaci\u00f3n del aprendizaje autom\u00e1tico se solapa con el de la estad\u00edstica inferencial, ya que las dos disciplinas se basan en el an\u00e1lisis de datos. Sin embargo, el aprendizaje autom\u00e1tico incorpora las preocupaciones de la complejidad computacional de los problemas. Muchos problemas son de clase NP-hard, por lo que gran parte de la investigaci\u00f3n realizada en aprendizaje autom\u00e1tico est\u00e1 enfocada al dise\u00f1o de soluciones factibles a esos problemas. El aprendizaje autom\u00e1tico tambi\u00e9n est\u00e1 estrechamente relacionado con el reconocimiento de patrones. El aprendizaje autom\u00e1tico puede ser visto como un intento de automatizar algunas partes del m\u00e9todo cient\u00edfico mediante m\u00e9todos matem\u00e1ticos. Por lo tanto es un proceso de inducci\u00f3n del conocimiento.\nEl aprendizaje autom\u00e1tico tiene una amplia gama de aplicaciones, incluyendo motores de b\u00fasqueda, diagn\u00f3sticos m\u00e9dicos, detecci\u00f3n de fraude en el uso de tarjetas de cr\u00e9dito, an\u00e1lisis de mercado para los diferentes sectores de actividad, clasificaci\u00f3n de secuencias de ADN, reconocimiento del habla y del lenguaje escrito, juegos y rob\u00f3tica.", "sections": [{"name": "\u00cdndice", "text": "1 Resumen\n1.1 Modelos\n2 Tipos de algoritmos\n3 T\u00e9cnicas de clasificaci\u00f3n\n3.1 \u00c1rboles de decisiones\n3.2 Reglas de asociaci\u00f3n\n3.3 Algoritmos gen\u00e9ticos\n3.4 Redes neuronales artificiales\n3.5 M\u00e1quinas de vectores de soporte\n3.6 Algoritmos de agrupamiento\n3.7 Redes bayesianas\n4 Conocimiento\n5 Distinci\u00f3n entre Aprendizaje supervisado y no supervisado\n6 Aplicaciones\n7 Temas del aprendizaje autom\u00e1tico\n8 Historia y relaci\u00f3n con otros temas\n9 Software\n9.1 Software de c\u00f3digo abierto\n9.2 Software comercial\n10 Sesgos\n11 V\u00e9ase tambi\u00e9n\n12 Referencias\n13 Bibliograf\u00eda\n14 Enlaces externos", "subsections": []}, {"name": "Resumen", "text": "Algunos sistemas de aprendizaje autom\u00e1tico intentan eliminar toda necesidad de intuici\u00f3n o conocimiento experto de los procesos de an\u00e1lisis de datos, mientras otros tratan de establecer un marco de colaboraci\u00f3n entre el experto y la computadora. De todas formas, la intuici\u00f3n humana no puede ser reemplazada en su totalidad, ya que el dise\u00f1ador del sistema ha de especificar la forma de representaci\u00f3n de los datos y los m\u00e9todos de manipulaci\u00f3n y caracterizaci\u00f3n de los mismos.\nSin embargo, las computadoras son utilizadas por todo el mundo con fines tecnol\u00f3gicos muy buenos.", "subsections": [{"name": "Modelos", "text": "El aprendizaje autom\u00e1tico tiene como resultado un modelo para resolver una tarea dada. Entre los modelos se distinguen[3]\u200b\nLos modelos geom\u00e9tricos, construidos en el espacio de instancias y que pueden tener una, dos o m\u00faltiples dimensiones. Si hay un borde de decisi\u00f3n lineal entre las clases, se dice que los datos son linealmente separables. Un l\u00edmite de decisi\u00f3n lineal se define como w * x = t, donde w es un vector perpendicular al l\u00edmite de decisi\u00f3n, x es un punto arbitrario en el l\u00edmite de decisi\u00f3n y t es el umbral de la decisi\u00f3n.\nLos modelos probabil\u00edsticos, que intentan determinar la distribuci\u00f3n de probabilidades descriptora de la funci\u00f3n que enlaza a los valores de las caracter\u00edsticas con valores determinados. Uno de los conceptos claves para desarrollar modelos probabil\u00edsticos es la estad\u00edstica bayesiana.\nLos modelos l\u00f3gicos, que transforman y expresan las probabilidades en reglas organizadas en forma de \u00e1rboles de decisi\u00f3n.\nLos modelos pueden tambi\u00e9n clasificarse como modelos de agrupamiento y modelos de gradiente. Los primeros tratan de dividir el espacio de instancias en grupos. Los segundos, como su nombre lo indican, representan un gradiente en el que se puede diferenciar entre cada instancia. Clasificadores geom\u00e9tricos como las m\u00e1quinas de vectores de apoyo son modelos de gradientes."}]}, {"name": "Tipos de algoritmos", "text": "Los diferentes algoritmos de Aprendizaje Autom\u00e1tico se agrupan en una taxonom\u00eda en funci\u00f3n de la salida de los mismos. Algunos tipos de algoritmos son:\nArt\u00edculo principal:\nEl an\u00e1lisis computacional y de rendimiento de los algoritmos de aprendizaje autom\u00e1tico es una rama de la estad\u00edstica conocida como teor\u00eda computacional del aprendizaje.\nEl aprendizaje autom\u00e1tico las personas lo llevamos a cabo de manera autom\u00e1tica ya que es un proceso tan sencillo para nosotros que ni nos damos cuenta de c\u00f3mo se realiza y todo lo que implica. Desde que nacemos hasta que morimos los seres humanos llevamos a cabo diferentes procesos, entre ellos encontramos el de aprendizaje por medio del cual adquirimos conocimientos, desarrollamos habilidades para analizar y evaluar a trav\u00e9s de m\u00e9todos y t\u00e9cnicas as\u00ed como tambi\u00e9n por medio de la experiencia propia. Sin embargo, a las m\u00e1quinas hay que indicarles c\u00f3mo aprender, ya que si no se logra que una m\u00e1quina sea capaz de desarrollar sus habilidades, el proceso de aprendizaje no se estar\u00e1 llevando a cabo, sino que solo ser\u00e1 una secuencia repetitiva.", "subsections": []}, {"name": "T\u00e9cnicas de clasificaci\u00f3n", "text": "", "subsections": [{"name": "\u00c1rboles de decisiones", "text": "Este tipo de aprendizaje usa un \u00e1rbol de decisiones como modelo predictivo. Se mapean observaciones sobre un objeto con conclusiones sobre el valor final de dicho objeto.\nLos \u00e1rboles son estructuras b\u00e1sicas en la inform\u00e1tica. Los \u00e1rboles de atributos son la base de las decisiones.\nUna de las dos formas principales de \u00e1rboles de decisiones es la desarrollada por Quinlan de medir la impureza de la entrop\u00eda en cada rama, algo que primero desarroll\u00f3 en el algoritmo ID3 y luego en el C4.5. Otra de las estrategias se basa en el \u00edndice GINI y fue desarrollada por Breiman, Friedman et alia. El algoritmo de CART es una implementaci\u00f3n de esta estrategia.[5]\u200b"}, {"name": "Reglas de asociaci\u00f3n", "text": "Los algoritmos de reglas de asociaci\u00f3n procuran descubrir relaciones interesantes entre variables. Entre los m\u00e9todos m\u00e1s conocidos se hallan el algoritmo a priori, el algoritmo Eclat y el algoritmo de Patr\u00f3n Frecuente."}, {"name": "Algoritmos gen\u00e9ticos", "text": "Los algoritmos gen\u00e9ticos son procesos de b\u00fasqueda heur\u00edstica que simulan la selecci\u00f3n natural. Usan m\u00e9todos tales como la mutaci\u00f3n y el cruzamiento para generar nuevas clases que puedan ofrecer una buena soluci\u00f3n a un problema dado."}, {"name": "Redes neuronales artificiales", "text": "Las redes de neuronas artificiales (RNA) son un paradigma de aprendizaje autom\u00e1tico inspirado en las neuronas de los sistemas nerviosos de los animales. Se trata de un sistema de enlaces de neuronas que colaboran entre s\u00ed para producir un est\u00edmulo de salida.\nLas conexiones tienen pesos num\u00e9ricos que se adaptan seg\u00fan la experiencia. De esta manera, las redes neurales se adaptan a un impulso y son capaces de aprender. La importancia de las redes neurales cay\u00f3 durante un tiempo con el desarrollo de los vectores de soporte y clasificadores lineales, pero volvi\u00f3 a surgir a finales de la d\u00e9cada de 2000 con la llegada del aprendizaje profundo."}, {"name": "M\u00e1quinas de vectores de soporte", "text": "Las MVS son una serie de m\u00e9todos de aprendizaje supervisado usados para clasificaci\u00f3n y regresi\u00f3n. Los algoritmos de MVS usan un conjunto de ejemplos de entrenamiento clasificado en dos categor\u00edas para construir un modelo que prediga si un nuevo ejemplo pertenece a una u otra de dichas categor\u00edas."}, {"name": "Algoritmos de agrupamiento", "text": "El an\u00e1lisis por agrupamiento (clustering en ingl\u00e9s) es la clasificaci\u00f3n de observaciones en subgrupos \u2014clusters\u2014 para que las observaciones en cada grupo se asemejen entre s\u00ed seg\u00fan ciertos criterios. \nLas t\u00e9cnicas de agrupamiento hacen inferencias diferentes sobre la estructura de los datos; se gu\u00edan usualmente por una medida de similitud espec\u00edfica y por un nivel de compactamiento interno (similitud entre los miembros de un grupo) y la separaci\u00f3n entre los diferentes grupos. \nEl agrupamiento es un m\u00e9todo de aprendizaje no supervisado y es una t\u00e9cnica muy popular de an\u00e1lisis estad\u00edstico de datos."}, {"name": "Redes bayesianas", "text": "Una red bayesiana, red de creencia o modelo ac\u00edclico dirigido es un modelo probabil\u00edstico que representa una serie de variables de azar y sus independencias condicionales a trav\u00e9s de un grafo ac\u00edclico dirigido. Una red bayesiana puede representar, por ejemplo, las relaciones probabil\u00edsticas entre enfermedades y s\u00edntomas. Dados ciertos s\u00edntomas, la red puede usarse para calcular las probabilidades de que ciertas enfermedades est\u00e9n presentes en un organismo. Hay algoritmos eficientes que infieren y aprenden usando este tipo de representaci\u00f3n."}]}, {"name": "Conocimiento", "text": "En el aprendizaje autom\u00e1tico podemos obtener 3 tipos de conocimiento, que son:\nLos tres tipos se efect\u00faan durante un proceso de aprendizaje autom\u00e1tico pero la importancia de cada tipo de conocimiento depende de las caracter\u00edsticas de lo que se est\u00e1 tratando de aprender.\nEl aprendizaje es m\u00e1s que una necesidad, es un factor primordial para satisfacer las necesidades de la inteligencia artificial.", "subsections": []}, {"name": "Distinci\u00f3n entre Aprendizaje supervisado y no supervisado", "text": "El aprendizaje supervisado se caracteriza por contar con informaci\u00f3n que especifica qu\u00e9 conjuntos de datos son satisfactorios para el objetivo del aprendizaje. Un ejemplo podr\u00eda ser un software que reconoce si una imagen dada es o no la imagen de un rostro: para el aprendizaje del programa tendr\u00edamos que proporcionarle diferentes im\u00e1genes, especificando en el proceso si se trata o no de rostros.\nEn el aprendizaje no supervisado, en cambio, el programa no cuenta con datos que definan qu\u00e9 informaci\u00f3n es satisfactoria o no. El objetivo principal de estos programas suele ser encontrar patrones que permitan separar y clasificar los datos en diferentes grupos, en funci\u00f3n de sus atributos. Siguiendo el ejemplo anterior un software de aprendizaje no supervisado no ser\u00eda capaz de decirnos si una imagen dada es un rostro o no pero s\u00ed podr\u00eda, por ejemplo, clasificar las im\u00e1genes entre aquellas que contienen rostros humanos, de animales, o las que no contienen. La informaci\u00f3n obtenida por un algoritmo de aprendizaje no supervisado debe ser posteriormente interpretada por una persona para darle utilidad.", "subsections": []}, {"name": "Aplicaciones", "text": "Motores de b\u00fasqueda\nDiagn\u00f3stico m\u00e9dico\nDetecci\u00f3n de fraudes con el uso de tarjetas de cr\u00e9dito\nAn\u00e1lisis del mercado de valores\nClasificaci\u00f3n de secuencias de ADN\nReconocimiento del habla\nRob\u00f3tica\nMiner\u00eda de datos\nBig Data\nPrevisiones de series temporales", "subsections": []}, {"name": "Temas del aprendizaje autom\u00e1tico", "text": "A continuaci\u00f3n se muestran una serie de temas que podr\u00edan formar parte del temario de un curso sobre aprendizaje autom\u00e1tico.\nModelado de funciones de densidad de probabilidad condicionadas: clasificaci\u00f3n y regresi\u00f3n\nRedes neuronales artificiales\n\u00c1rboles de decisi\u00f3n: El aprendizaje por \u00e1rboles de decisi\u00f3n usa un \u00e1rbol de decisi\u00f3n como modelo predictivo que mapea observaciones a conclusiones sobre el valor de un objeto dado.\nModelos de regresi\u00f3n m\u00faltiple no postulados\nRegresi\u00f3n en procesos Gaussianos\nAn\u00e1lisis de discriminantes lineales\nk-vecinos m\u00e1s pr\u00f3ximos\nPerceptr\u00f3n\nFunciones de base radial\nM\u00e1quinas de soporte vectorial\nModelado de funciones de densidad de probabilidad mediante modelos generativos\nAlgoritmo EM\nModelos gr\u00e1ficos, como las redes bayesianas y los campos aleatorios de Markov\nMapeado topogr\u00e1fico generativo\nT\u00e9cnicas de inferencia aproximada\nCadenas de Markov y M\u00e9todo de Montecarlo\nM\u00e9todos variacionales\nOptimizaci\u00f3n: La mayor\u00eda de los m\u00e9todos descritos arriba usan algoritmos de optimizaci\u00f3n o son por s\u00ed mismos instancias de problemas de optimizaci\u00f3n.", "subsections": []}, {"name": "Historia y relaci\u00f3n con otros temas", "text": "El aprendizaje autom\u00e1tico naci\u00f3 de la b\u00fasqueda de inteligencia artificial. Ya en los primeros d\u00edas de la IA como disciplina acad\u00e9mica, algunos investigadores se interesaron en hacer que las m\u00e1quinas aprendiesen. Trataron de resolver el problema con diversos m\u00e9todos simb\u00f3licos, as\u00ed como lo que ellos llamaron 'redes neurales' que eran en general perceptrones y otros modelos b\u00e1sicamente basados en modelos lineares generalizados como se conocen en las estad\u00edsticas.", "subsections": []}, {"name": "Software", "text": "Muchos lenguajes de programaci\u00f3n pueden usarse para implementar algoritmos de aprendizaje autom\u00e1tico. Los m\u00e1s populares para 2015 eran R y Python.[6]\u200b R es muy usado ante todo en el campo acad\u00e9mico, mientras que Python es m\u00e1s popular en la empresa privada. \nEntre los paquetes de software que incluyen algoritmos de aprendizaje automatizado, se hallan los siguientes:", "subsections": [{"name": "Software de c\u00f3digo abierto", "text": "TensorFlow: plataforma multilenguaje y multiplataforma desarrollada por Google y licenciada como Apache 2.\nApache Mahout: plataforma de Java de algoritmos escalables de aprendizaje autom\u00e1tico, en especial en las \u00e1reas de filtro colaborativo, clustering y clasificaci\u00f3n\ndlib: una biblioteca bajo licencia Boost para desarrollar en C++\nELKI: una plataforma para Java con licencia AGPLv3\nEncog\nH2O\nKNIME\nmlpy\nMLPACK\nMOA\nOpenCV\nTortilla JS\nOpenNN\nR: lenguaje de programaci\u00f3n estad\u00edstico con numerosas bibliotecas relacionadas al aprendizaje autom\u00e1tico (e1071, rpart, nnet, randomForest, entre otras)\nRapidMiner\nscikit-learn: biblioteca en Python que interact\u00faa con NumPy y SciPy\nSpark MLlib: una librer\u00eda que forma parte de Apache Spark, una plataforma para computaci\u00f3n de grupos\n Weka: una biblioteca en Java"}, {"name": "Software comercial", "text": "SPSS Modeler\nMathematica\nMATLAB\nMicrosoft Azure Machine Learning\nNeural Designer\nOracle Data Mining\nRCASE\nSTATISTICA\nSAS"}]}, {"name": "Sesgos", "text": "Los algoritmos de aprendizaje autom\u00e1tico a menudo pueden verse afectados por el sesgo que puedan tener los datos (Ver sesgo algoritmico). Por ejemplo, no se podr\u00e1n clasificar todos aquellas entradas de las que no se haya recibido ninguna informaci\u00f3n en la fase de entrenamiento. De hecho, cuando el entrenamiento se realiza con datos clasificados por el ser humano el aprendizaje autom\u00e1tico tiende a crear los mismos sesgos que hay en la sociedad. Algunos ejemplos de esto son cuando en 2015 el algoritmo de Google photos identificaba algunas personas negras con gorilas, o en 2016 cuando el bot de Twitter de Microsoft desarrollo comportamientos racistas y machistas a base de observar el tr\u00e1fico de datos en dicha red social. Por este motivo en los \u00faltimos a\u00f1os ha habido una tendencia a desarrollar m\u00e9todos para aumentar la equidad, es decir, para reducir el sesgo en este tipo algoritmos por parte de los expertos en IA. Citando a Fei-fei Li \"La IA no tiene nada de especial. Se inspira en personas, es creada por personas, y lo m\u00e1s importante impacta en las personas. Es una herramienta muy poderosa que tan solo hemos comenzado a entender, y esa es una gran responsabilidad\" [7]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Aprendizaje profundo\nDin\u00e1mica de sistemas\nInteligencia artificial\nInteligencia computacional\nInternet de las cosas\nSistema din\u00e1mico\nReconocimiento de patrones\nReglas de asociaci\u00f3n\nRobot aut\u00f3nomo\nEquidad (aprendizaje autom\u00e1tico)", "subsections": []}, {"name": "Referencias", "text": "\u2191 Russell, Stuart; Norvig, Peter (2009). Inteligencia Artificial: Un Enfoque Moderno (3rd edici\u00f3n). p.\u00a0229.\u00a0\n\u2191 Russell and Norvig (2021). Artificial Intelligence: A Modern Approach (en ingl\u00e9s). Pearson. p.\u00a0651. ISBN\u00a09780134610993.\u00a0\n\u2191 Flach 2012 P\u00e1gs. 20-21\n\u2191 Sutton, Richard S., Barto, Andrew G. Reinforcement Learning: An Introduction. The MIT Press.\u00a0\n\u2191 Flach 2012 P\u00e1gs. 155-156\n\u2191 Four main languages for analytics and data mining science (KD Nuggets)\n\u2191 \u00abFei-Fei Li's Quest to Make Machines Better for Humanity\u00bb. Wired (en ingl\u00e9s). ISSN\u00a01059-1028. Consultado el 17 de diciembre de 2019.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Bishop, Christopher (2008) Pattern Recognition and Machine Learning. Springer Verlag. ISBN=978-0-3873-1073-2.\nFlach, Peter (2012) Machine Learning: The Art and Science of Algorithms that Make Sense of Data. Cambridge University Press. ISBN 978-1-107-42222-3.\nGollapudi, Sunila (2016) Practical Machine Learning. Packt Publishing. ISBN=978-1-78439-968-4.\nIan H. Witten and Eibe Frank (2011). Data Mining: Practical machine learning tools and techniques Morgan Kaufmann, 664 p\u00e1g., ISBN 978-0-12-374856-0.\nMitchell, T. (1997). Machine Learning, McGraw Hill. ISBN 0-07-042807-7\nRaschka, Sebastian (2015). Python Machine Learning, Packt Open Source. ISBN 978-1-78355-513-0", "subsections": []}, {"name": "Enlaces externos", "text": "Ejemplos pr\u00e1cticos de Machine Learning en Espa\u00f1ol\nBlog sobre Aprendizaje Autom\u00e1tico - La biblia del Machine Learning\nEl Machine Learning cambiar\u00e1 el mundo\nMachine Learning Development with Perl (en ingl\u00e9s)\nEstudio y aplicaci\u00f3n de t\u00e9cnicas de aprendizaje autom\u00e1tico orientadas al \u00e1mbito m\u00e9dico: estimaci\u00f3n y explicaci\u00f3n de predicciones individuales. Universidad Aut\u00f3noma de Madrid\nAlphaGo Archivado el 4 de febrero de 2018 en Wayback Machine.\nMachine Learning explicado (podcast)\nMachine Learning: Selecci\u00f3n de m\u00e9tricas de clasificaci\u00f3n (en espa\u00f1ol)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Manejo_de_excepciones", "title": "Manejo de excepciones", "summary": "El manejo de excepciones es una t\u00e9cnica de programaci\u00f3n que permite al programador controlar los errores ocasionados durante la ejecuci\u00f3n de un programa inform\u00e1tico. Cuando ocurre cierto tipo de error, el sistema reacciona ejecutando un fragmento de c\u00f3digo que resuelve la situaci\u00f3n, por ejemplo retornando un mensaje de error o devolviendo un valor por defecto.", "sections": [{"name": "\u00cdndice", "text": "1 Introducci\u00f3n\n1.1 Uso del manejo de excepciones\n1.2 Limpieza de pila\n1.3 Aserciones\n1.4 Conclusi\u00f3n\n2 Ejemplos de c\u00f3digo\n2.1 Java\n2.2 Delphi\n2.3 Pascal\n2.4 Python\n2.5 Ada\n3 Referencias\n4 Enlaces externos", "subsections": []}, {"name": "Introducci\u00f3n", "text": "Una excepci\u00f3n en t\u00e9rminos de lenguaje de programaci\u00f3n es la indicaci\u00f3n de un problema que ocurre durante la ejecuci\u00f3n de un programa. Sin embargo, la palabra excepci\u00f3n se refiere a que este problema ocurre con poca frecuencia generalmente cuando existe alg\u00fan dato o instrucci\u00f3n que no se apega al funcionamiento del programa por lo que se produce un error. El manejo de excepciones permite al usuario crear aplicaciones tolerantes a fallas y robustas (resistentes a errores) para controlar estas excepciones y que pueda seguir ejecut\u00e1ndose el programa sin verse afectado por el problema. En lenguaje Java estas excepciones pueden manejarse con las clases que extienden el paquete Throwable de manera directa o indirecta,[1]\u200b pero existen diversos tipos de excepciones y formas para manejarlas.", "subsections": [{"name": "Uso del manejo de excepciones", "text": "El manejo de excepciones ayuda al programador a trasladar el c\u00f3digo para manejo de errores de la l\u00ednea principal de ejecuci\u00f3n, adem\u00e1s se puede elegir entre manejar todas las excepciones, las de cierto tipo o de las de grupos relacionados, esto hace que la probabilidad de pasar por alto los errores se reduzca y a la vez hace los programas m\u00e1s robustos. Pero es importante utilizar un lenguaje de programaci\u00f3n que soporte este manejo, de lo contrario el procesamiento de errores no estar\u00e1 incluido y har\u00e1 el programa m\u00e1s vulnerable.\nEste manejo est\u00e1 dise\u00f1ado para procesar errores que ocurren cuando se ejecuta una instrucci\u00f3n, algunos ejemplos son: desbordamiento aritm\u00e9tico, divisi\u00f3n entre cero, par\u00e1metros inv\u00e1lidos de m\u00e9todo y asignaci\u00f3n fallida en la memoria. Sin embargo, no est\u00e1 dise\u00f1ado para procesar problemas con eventos independientes al programa como son pulsar una tecla o clic al mouse.\nLas excepciones se dividen en verificadas y no verificadas. Es importante esta divisi\u00f3n porque el compilador implementa requerimientos de atrapar o declarar para las verificadas lo que har\u00e1 que se detecten las excepciones autom\u00e1ticamente y de acuerdo al lenguaje de programaci\u00f3n utilizado se utilizar\u00e1 un m\u00e9todo para corregirlas. Sin embargo para las que no verificadas se producir\u00e1 un error indicando que deben atraparse y declararse. Por eso el programador debe pensar en los problemas que pueden ocurrir cuando se llama a un m\u00e9todo y definir excepciones para verificarse cuando sean importantes. Las clases de excepciones pueden derivarse de una superclase com\u00fan, por lo que con un manejador para atrapar objetos de la superclase, tambi\u00e9n se pueden atrapar todos los objetos de las subclases de esa clase. Pero tambi\u00e9n, se pueden atrapar a cada uno de los tipos de las subclases de manera individual si estas requieren ser procesadas diferente.\nA cada c\u00e9lula se le conoce como compiladora de distintos."}, {"name": "Limpieza de pila", "text": "En ocasiones cuando se lanza una excepci\u00f3n, pero no se atrapa en un enlace espec\u00edfico, la pila de llamadas se limpia y el programa intenta volverlo a atrapar en el siguiente bloque, esto se conoce como limpieza de pila. Este proceso hace que el m\u00e9todo en el que no se atrap\u00f3 la excepci\u00f3n termine, todas sus variables quedan fuera del enlace y el control regresa a la instrucci\u00f3n que originalmente la invoc\u00f3. La limpieza de pila se repetir\u00e1 hasta que la excepci\u00f3n pueda ser atrapada porque de lo contrario se producir\u00e1 un error a la hora de compilar."}, {"name": "Aserciones", "text": "Las aserciones ayudan a asegurar la validez del programa al atrapar los errores potenciales e identificar los posibles errores l\u00f3gicos del desarrollo. Estas pueden escribirse como comentarios para apoyar a la persona que desarrolla el programa. Algunos ejemplos son:\nPrecondiciones y pos condiciones\nEstas caracter\u00edsticas son utilizadas por los programadores para hacer un an\u00e1lisis de lo esperado del programa antes y despu\u00e9s de su ejecuci\u00f3n. Son importantes porque gracias a ellas se pueden detectar posibles fallas en el programa y corregirlas.\nLas precondiciones son verdaderas cuando se invoca a un m\u00e9todo, estas describen las caracter\u00edsticas del m\u00e9todo y las expectativas que se tienen en el estado actual del programa. Si no se cumplen las precondiciones el comportamiento del m\u00e9todo es indefinido por lo que se lanza una excepci\u00f3n que est\u00e9 preparada o continuar con el programa esperando el error.\nLas pos condiciones describen las restricciones en el entorno y cualquier efecto secundario del m\u00e9todo. Es recomendable escribirlas para saber que esperar en un futuro si es que se hacen modificaciones."}, {"name": "Conclusi\u00f3n", "text": "El manejo de excepciones ayuda a lidiar con los errores de una aplicaci\u00f3n por medio de la manipulaci\u00f3n del c\u00f3digo para hacer programas m\u00e1s robustos. Adem\u00e1s existen herramientas que ayudan a manejarlas tal es el caso de los bloques try (intentar) que encierran el c\u00f3digo que puede lanzar una excepci\u00f3n y los bloques el catch (atrapar) que lidian con las excepciones que surjan.\nTambi\u00e9n existen t\u00e9cnicas que el programador utiliza para conocer el posible funcionamiento del programa y detectar los errores que pueda contener."}]}, {"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": [{"name": "Java", "text": "public\nclass\nExcDemo\n{\nstatic\nvoid\nmain\n(\nString\n[]\nargs\n)\nint\nnums\n[]=\nnew\n[\n4\n]\n;\ntry\nSystem\n.\nout\nprintln\n\"Antes de que se genere la excepci\u00f3n.\"\n);\n//generar una excepci\u00f3n de \u00edndice fuera de l\u00edmites\n7\n]=\n10\n}\ncatch\nArrayIndexOutOfBoundsException\nexc\n){\n//Capturando la excepci\u00f3n\n\"\u00cdndice fuera de los l\u00edmites!\"\nfinally\n\"Despu\u00e9s de que se genere la excepci\u00f3n.\""}, {"name": "Delphi", "text": "procedure\nTForm1\n.\nButton1Click\nSender\n:\nTObject\n;\nbegin\na\n:=\nb\n/\nc\n// Este c\u00f3digo siempre se ejecuta, independientemente de si ocurre o no una excepci\u00f3n.\nend\nexcept\non\ne\nEZeroDivide\ndo\n// Manejo de la excepci\u00f3n Divisi\u00f3n por cero.\nException\n// Manejo de una excepci\u00f3n \"gen\u00e9rica\"."}, {"name": "Pascal", "text": "Var\nEntero\n' Declaramos las variables a utilizar\nAdmErr\n' Administrar Error\nControlar\n' Controlar si existe (i obtiene el valor de la excepci\u00f3n)\nSeleccionar\nCaso\n' Si i es igual a Divisi\u00f3n a cero.\nCaso Otro\n       Salir AdmErr\nFinSeleccionar\nFinAdmErr\n' Fin Administrar Error"}, {"name": "Python", "text": ":\nresult\n=\nx\ny\nZeroDivisionError\nprint\n\"division by zero!\"\nelse\n\"result is\"\n,\n\"executing finally clause\""}, {"name": "Ada", "text": "type\nT_Matriz\nis\narray\nPositive\nrange\n<>,\n<>)\nof\nInteger\nprocedure\nRellenar_Matriz\nMatriz\n: \nin\nT_Matriz\nK\nInteger\nQ\nbegin\nMatriz\nK\nQ\n:=\n3\nexception\nwhen\nConstraint_Error\n=>\nPut_Line\n\"Las posiciones se salen del rango de la matriz\"\nend"}]}, {"name": "Referencias", "text": "\u2191  \u00abClass Throwable\u00bb (html). Oracle Corporation (en ingl\u00e9s). Archivado desde el original el 25 de noviembre de 2011. Consultado el 29 de febrero de 2020. \u00abThe Throwable class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java throw statement.\u00a0\u00bb\u00a0 ", "subsections": []}, {"name": "Enlaces externos", "text": "Introducci\u00f3n al manejo de excepciones en C.\nexceptions4c: Una biblioteca de manejo de excepciones para C.\nTratamiento de excepciones en Java.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Metaclase", "title": "Metaclase", "summary": "En programaci\u00f3n orientada a objetos, una metaclase es una clase cuyas instancias son clases. En otras palabras, como los objetos son instancias de una clase, las clases son instancias de una metaclase.\nNo todos los lenguajes orientados a objetos soportan metaclases. Adem\u00e1s, los lenguajes que lo soportan tienen sus propias reglas que definen como los objetos, clases y metaclases interact\u00faan.", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "Metaprogramaci\u00f3n\nReflexi\u00f3n", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Monty_Python", "title": "Monty Python", "summary": "Graham Chapman (\u2020)John CleeseTerry GilliamEric IdleTerry Jones (\u2020)Michael Palin\nMonty Python's Flying Circus (1969-1974)Se arm\u00f3 la gorda (1971)Los caballeros de la mesa cuadrada (1975)La vida de Brian (1979)Monty Python Live at the Hollywood Bowl (1982)El sentido de la vida (1983)Monty Python Live (Mostly) (2014)\nMonty Python (a veces conocidos como Los Pythons)[1]\u200b[2]\u200b fue un grupo brit\u00e1nico de seis humoristas que sintetiz\u00f3 en clave de humor la idiosincrasia brit\u00e1nica de los a\u00f1os 1960 y 1970, compuesto por Graham Chapman, John Cleese, Terry Gilliam, Eric Idle, Terry Jones y Michael Palin. Del grupo \u00fanicamente Terry Gilliam no era brit\u00e1nico sino estadounidense.\nLograron la fama gracias a su programa de televisi\u00f3n Monty Python's Flying Circus (El Circo Ambulante de Monty Python), estrenado el 5 de octubre de 1969 en la BBC y formada por 45 episodios repartidos en cuatro temporadas. El fen\u00f3meno Python se desarroll\u00f3 m\u00e1s all\u00e1 del programa de televisi\u00f3n adquiriendo un gran impacto: obras de teatros, pel\u00edculas, discos, libros, un musical e incluso lenguajes de programaci\u00f3n.[3]\u200b La influencia del grupo en la comedia se ha comparado con la de los Beatles en la m\u00fasica.[4]\u200b[5]\u200b\nEmitido en la BBC entre 1969 y 1974, Flying Circus fue creado, escrito e interpretado por los seis miembros del grupo. Estaba estructurado como un programa de sketches, pero con una t\u00e9cnica narrativa innovadora (ayudada por las animaciones de Gilliam) que iba m\u00e1s all\u00e1 de lo aceptable en estilo y contenido.[6]\u200b[7]\u200b Al ser los responsables tanto de los guiones y la interpretaci\u00f3n, los Python ten\u00edan un control creativo que les permit\u00eda experimentar formas y contenidos, deshaci\u00e9ndose de las reglas de la comedia televisiva. La influencia del grupo en la comedia brit\u00e1nica ha sido notoria durante a\u00f1os, y en Norteam\u00e9rica ha influido desde los int\u00e9rpretes de las primeras ediciones de Saturday Night Live hasta las m\u00e1s recientes tendencias de humor absurdo en la comedia televisiva. La palabra \"Pythonesque\" ha entrado en el l\u00e9xico ingl\u00e9s como sin\u00f3nimo de \"absurdo\" o \"surrealista\".\nEn una encuesta realizada en 2005 en el Reino Unido para encontrar al C\u00f3mico de c\u00f3micos, tres de los seis miembros de Monty Python fueron votados por otros c\u00f3micos y aficionados como tres de los 50 mayores c\u00f3micos de la historia: Cleese en el puesto 2, Idle en el 21, y Palin en el 30.[8]\u200b\nEn 2009 el grupo recibi\u00f3 el premio BAFTA honor\u00edfico por su contribuci\u00f3n al mundo de la comedia. El premio se lo entregaron en el preestreno del documental dedicado al fallecido Graham Chapman, Monty Python: casi la verdad.[9]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Los or\u00edgenes\n2 Monty Python's Flying Circus\n2.1 Desarrollo del programa\n3 Largometrajes\n4 Teatro\n5 Documentales\n6 Integrantes\n7 Influencia\n8 Referencias\n8.1 Bibliograf\u00eda\n9 Enlaces externos", "subsections": []}, {"name": "Los or\u00edgenes", "text": "Michael Palin y Terry Jones se conocieron en la Universidad de Oxford, donde ambos actuaban en el grupo de teatro estudiantil The Oxford Revue. John Cleese y Graham Chapman se conocieron en la Universidad de Cambridge. Eric Idle tambi\u00e9n estaba en Cambridge pero empez\u00f3 un a\u00f1o despu\u00e9s. Cleese conoci\u00f3 a Terry Gilliam en Nueva York mientras estaban de gira con su grupo de teatro estudiantil, Cambridge University Footlights. Chapman, Cleese e Idle eran miembros de los Footlights, que en ese tiempo inclu\u00eda tambi\u00e9n a Tim Brooke-Taylor, Bill Oddie y Graeme Garden (quienes m\u00e1s tarde formar\u00edan el grupo Goodies), y al actor y director Jonathan Lynn, coguionista de la serie S\u00ed, Ministro y su secuela S\u00ed, Primer Ministro. Mientras Idle fue presidente de los Footlights fueron tambi\u00e9n miembros del grupo la escritora feminista Germaine Greer y el periodista Clive James. Todav\u00eda se conservan grabaciones de algunas actuaciones de este grupo de teatro en el Pembroke College de Cambridge. \nAntes de Monty Python's Flying Circus, los Python escribieron o actuaron en diversas obras y espect\u00e1culos:\nI'm Sorry, I'll Read That Again (radio) (1964\u20131973), Cleese como actor y guionista e Idle y Chapman como guionistas\nThe Frost Report (1966\u20131967; fue el primer trabajo en el que coincidieron la mayor parte de los miembros, 5 de 6), Cleese como actor y guionista, Idle como guionista de los mon\u00f3logos de David Frost, y Chapman, Palin y Jones como guionistas\nAt Last the 1948 Show (1967) Chapman y Cleese como actores y guionistas e Idle como guionista\nTwice a Fortnight (1967) Palin y Jones como actores y guionistas\nDo Not Adjust Your Set (1967\u20131969) Palin, Jones e Idle como actores y guionistas y Gilliam como animador\nWe Have Ways of Making You Laugh (1968) Idle como actor y guionista y Gilliam como animador\nHow to Irritate People (1968) Cleese y Chapman como actores y guionistas y Palin como actor\nThe Complete and Utter History of Britain (1969) Palin y Jones como actores y guionistas\nDoctor in the House (1969) Cleese y Chapman como guionistas\nEn muchas de estas actuaciones coincidieron con otros importantes c\u00f3micos y guionistas brit\u00e1nicos del futuro: Marty Feldman, Jonathan Lynn, David Jason y David Frost, as\u00ed como miembros de otros grupos de c\u00f3micos: Ronnie Corbett y Ronnie Barker (The Two Ronnies), y Tim Brooke-Taylor, Graeme Garden y Bill Oddie (The Goodies).\nEl \u00e9xito de Do Not Adjust Your Set hizo que la ITV ofreciera a Palin, Jones, Idle y Gilliam su propio programa juntos. Al mismo tiempo a Cleese y Chapman la BBC, impresionados por su trabajo en The Frost Report y en At Last The 1948 Show les ofreci\u00f3 un show propio. Cleese era reacio a un d\u00fao c\u00f3mico por varias razones, incluyendo la supuesta personalidad dif\u00edcil de Chapman. Cleese ten\u00eda buenos recuerdos de su trabajo con Palin y le invit\u00f3 a unirse al equipo. Con la serie de la ITV todav\u00eda en preproducci\u00f3n, Palin acept\u00f3, y sugiri\u00f3 que se unieran al grupo Idle y Jones; quienes propusieron que Gilliam se encargara de proveer de animaciones a la serie. El grupo Monty Python es en buena parte resultado del deseo de Cleese de trabajar con Palin y las circunstancias que a\u00f1adieron a los otros cuatro miembros al grupo.[10]\u200b", "subsections": []}, {"name": "Monty Python's Flying Circus", "text": "Art\u00edculo principal:", "subsections": [{"name": "Desarrollo del programa", "text": "Los Python ten\u00edan claro qu\u00e9 quer\u00edan hacer con el programa. Eran admiradores del trabajo de Peter Cook, Alan Bennett, Jonathan Miller y Dudley Moore en el show teatral sat\u00edrico Beyond the Fringe, y hab\u00edan trabajado en The Frost Report, de estilo similar.[11]\u200b Tambi\u00e9n eran fanes del programa de Cook y Moore Not Only... But Also. Un problema que los Python observaban en estos programas era que a pesar de que el sketch era potente, los guionistas intentaban a menudo encontrar una frase lo bastante divertida para terminarlo y esto disminu\u00eda la calidad del sketch. Decidieron entonces que no se molestar\u00edan en rematar sus sketches de la manera tradicional, y algunos de los primeros episodios del Flying Circus hac\u00edan gala de este abandono de la frase final. En Cleese se dirige a Idle y dice: \"Este es el sketch m\u00e1s absurdo que hemos hecho\", y los personajes terminan el sketch simplemente saliendo de escena.[12]\u200b Sin embargo, cuando empezaron a reunir material para el programa, los Python vieron a uno de sus \u00eddolos, Spike Milligan, grabar su innovador programa Q5 (1969). No solo era el programa m\u00e1s irreverente y an\u00e1rquico que cualquier otro, sino que a menudo Milligan abandonaba el sketch a la mitad y sal\u00eda de escena (a menudo murmurando \"\u00bfHe escrito yo esto?\"). Quedaba claro que su programa ahora ser\u00eda menos original, y Jones particularmente decidi\u00f3 que los Python deb\u00edan innovar.\nTras mucho debate, Jones record\u00f3 una animaci\u00f3n creada por Gilliam en Do Not Adjust Your Set llamada \"Beware of the Elephants\", que le hab\u00eda intrigado por su peculiar estilo. Jones pens\u00f3 que era un buen concepto para aplicar al programa: permitir que los sketches se combinaran unos con otros. A Palin tambi\u00e9n le hab\u00eda llamado la atenci\u00f3n otro de los trabajos de Gilliam, titulado \"Christmas Cards\", y estaba de acuerdo que representaba \"una forma diferente de hacer las cosas\". Como Cleese, Chapman e Idle estaban menos concienciados con el desarrollo general del programa, fueron, Jones, Palin y Gilliam los responsables principales del estilo de presentaci\u00f3n del Flying Circus, en el que los distintos sketches estaban unidos para dar a cada episodio un estilo particular (usando a menudo una animaci\u00f3n de Gilliam para pasar de la imagen final de un sketch a la de apertura del siguiente).\nLa escritura de los guiones comenzaba a las nueve de la ma\u00f1ana y finalizaba a las cinco de la tarde. Normalmente, Cleese y Chapman formaban una pareja aislada del resto, al igual que Jones y Palin, mientras que Idle escrib\u00eda solo. Unos d\u00edas despu\u00e9s, se reun\u00edan con Gilliam, criticaban los guiones e intercambiaban ideas y opiniones. La forma de escribir era democr\u00e1tica. Si la mayor\u00eda encontraba graciosa una idea, se inclu\u00eda en el show. Tambi\u00e9n era democr\u00e1tico el casting para los sketches, ya que cada miembro se ve\u00eda principalmente como escritor m\u00e1s que como un actor deseoso de aparecer en pantalla. Cuando se eleg\u00edan los temas de los sketches, Gilliam ten\u00eda libertad para unirlos con sus animaciones, usando una c\u00e1mara, tijeras y aer\u00f3grafo.\nAl ser el programa un proceso colaborativo, las diferentes facciones dentro del grupo eran responsables de los elementos del humor del grupo. En general, el trabajo de los alumnos de Oxford (Jones y Palin) era m\u00e1s visual e imaginativo conceptualmente, como la llegada de la Inquisici\u00f3n espa\u00f1ola a la casa de un barrio suburbano (Ver v\u00eddeo) mientras que los sketches de los alumnos de Cambridge eran m\u00e1s verbales y agresivos (como los sketches de \"confrontaci\u00f3n\" de Cleese y Chapman, donde un personaje intimida o abusa verbalmente de otro, o los personajes de Idle con extra\u00f1as peculiaridades verbales, como el hombre que habla en anagramas).[13]\u200b Cleese confirm\u00f3 que \"la mayor\u00eda de sketches agresivos eran de Graham y m\u00edos, cualquier cosa que empezaba con una panor\u00e1mica del campo y m\u00fasica impactante era de Mike y Terry, y cualquier cosa relacionada totalmente con palabras era de Eric\".[14]\u200b Mientras, las animaciones de Gilliam iban de lo extravagante a lo salvaje, ya que el formato animado le permit\u00eda crear escenas incre\u00edblemente violentas sin miedo a la censura.\nSe pensaron varios nombres para el programa antes de que se optara por Monty Python's Flying Circus. Algunos fueron Owl Stretching Time; The Toad Elevating Moment; A Horse, a Spoon and a Bucket; Vaseline Review; and Bun, Wackett, Buzzard, Stubble and Boot. Flying Circus apareci\u00f3 cuando la BBC dijo que hab\u00eda impreso ese nombre en su programaci\u00f3n y no estaba preparada para modificarlo. Se empezaron entonces a sugerir variaciones en torno a este nombre (se dice que la BBC consideraba Monty Python's Flying Circus un nombre rid\u00edculo, y el grupo decidi\u00f3 cambiar de nombre cada semana hasta que la cadena se rindiera). El nombre Gwen Dibley's Flying Circus surgi\u00f3 por una mujer sobre la que Palin hab\u00eda le\u00eddo en el peri\u00f3dico, pensando que ser\u00eda gracioso que ella descubriera que ten\u00eda su propio programa de televisi\u00f3n. Baron Von Took's Flying Circus fue considerado como un afectuoso homenaje a Barry Took, el hombre que los hab\u00eda unido. Despu\u00e9s se sugiri\u00f3 Arthur Megapode's Flying Circus y m\u00e1s tarde se desech\u00f3. Baron Von Took's Flying Circus recordaba al Circo volador Jasta 11 del Bar\u00f3n Manfred von Richthofen, que cobr\u00f3 fama en la Primera Guerra Mundial, y el grupo se form\u00f3 en una \u00e9poca en la que la canci\u00f3n Snoopy vs. the Red Baron estaba de moda. El t\u00e9rmino flying circus era otro nombre de un espect\u00e1culo popular en la d\u00e9cada de 1920 llamado barnstorming, en el que diversos pilotos hac\u00edan acrobacias dando lugar a un espect\u00e1culo.\nExisten diferentes y algo confusos or\u00edgenes del nombre Python, aunque los miembros del grupo est\u00e1n de acuerdo en que su \u00fanico \"significado\" era que consideraban que sonaba gracioso. En el documental de 1998 Live At Aspen, en el que el grupo recibi\u00f3 el galard\u00f3n del American Film Institute, explicaron que \"Monty\" fue elegido a propuesta de Eric Idle como un gui\u00f1o humor\u00edstico al Mariscal de Campo Montgomery, un legendario general brit\u00e1nico de la Segunda Guerra Mundial; y a\u00f1adiendo despu\u00e9s una palabra de pronunciaci\u00f3n suave, optaron por \"Python\". En otras ocasiones, Idle ha afirmado que el nombre \"Monty\" era un cliente habitual de su pub local; y la gente entraba a menudo preguntando al camarero: \"\u00bfYa ha llegado Monty?\", haciendo que el nombre quedara marcado en su cabeza. El nombre \"Monty Python\" fue descrito por la BBC como \"concebido por el grupo como el nombre perfecto para un agente de talentos corrupto\".[15]\u200b"}]}, {"name": "Largometrajes", "text": "El fen\u00f3meno de los Monty Python transcendi\u00f3 el mundo televisivo siendo sus protagonistas tambi\u00e9n responsables de la producci\u00f3n de varios largometrajes:\nSe arm\u00f3 la gorda (1971), 84 minutos[16]\u200b\nLos caballeros de la mesa cuadrada y sus locos seguidores (Monty Python and the Holy Grail) (1975)\nLa vida de Brian (Monty Python's Life of Brian) (1979)\nEl sentido de la vida (Monty Python's The Meaning of Life) (1983)\nPel\u00edculas concierto:\nMonty Python en Hollywood Bowl (Monty Python Live at the Hollywood Bowl) (1982), 77 minutos[17]\u200b\nConcert for George (2002)\nNot the Messiah (2010)\nOtras pel\u00edculas donde coincidieron parte de los miembros del grupo, sin ser producciones propiamente dichas del mismo (aunque heredan buena parte del humor y el surrealismo que les caracteriz\u00f3), fueron:\nLa Bestia del Reino (1977) con Terry Gilliam: director y guionista y Michael Palin y Terry Jones: actores.\nThe Rutles (1977) con Eric Idle: actor y guionista y Michael Palin: actor.\nLos H\u00e9roes del Tiempo (1981) con Terry Gilliam: director y guionista, Michael Palin: actor y guionista y John Cleese: actor.\nLos desmadrados piratas de Barba Amarilla (1983) con Graham Chapman: actor y guionista y Eric Idle y John Cleese: actores.\nBrazil (1985) con Terry Gilliam: director y guionista y Michael Palin: actor.\nLas aventuras del Bar\u00f3n Munchausen (1988) con Terry Gilliam: director y guionista y Eric idle: actor.\nUn pez llamado Wanda (1988) con John Cleese: actor y guionista y Michael Palin: actor.\nErik el vikingo (1989) con Terry Jones: director, guionista y actor y John Cleese: actor.\nReci\u00e9n nacido y ya coronado (1993) con Eric Idle: actor y guionista y John Cleese: actor.\nEl viento en los sauces (1996) con Terry Jones: director, guionista y actor y Eric Idle, Michael Palin y John Cleese: actores.\nCriaturas feroces (1997) con John Cleese: actor y guionista y Michael Palin: actor.\nShrek tercero (2007) con John Cleese y Eric Idle: actores de doblaje.\nA Liar's Autobiography (2013) con Graham Chapman: guionista y actor y John Cleese, Terry Gilliam, Terry Jones y Michael Palin: actores.\nAbsolutely Anything (2015) con Terry Gilliam, John Cleese, Terry Jones, Eric Idle y Michael Palin: voces de extraterrestres.", "subsections": []}, {"name": "Teatro", "text": "Monty Python's Spamalot, escrito por Eric Idle y dirigida por Mike Nichols, con m\u00fasica y letras de John Du Prez e Idle, con un reparto encabezado por Hank Azaria, Tim Curry y David Hyde Pierce. Spamalot es la adaptaci\u00f3n musical de la pel\u00edcula Monty Python and the Holy Grail. Se represent\u00f3 en Chicago del 21 de diciembre de 2004 al 23 de enero de 2005, y posteriormente se estren\u00f3 en Broadway el 17 de marzo de 2005. Gan\u00f3 tres Tonys.\nEn el cuarenta aniversario de los Monty Python (2009) se present\u00f3 en el Royal Albert Hall de Londres el oratorio c\u00f3mico \"Not the Messiah (He's a Very Naughty Boy)\" escrito por Eric Idle y John du Prez, con una \u00fanica funci\u00f3n. En dicha premier brit\u00e1nica y como celebraci\u00f3n del aniversario hicieron acto de presencia en diversos papeles secundarios, Michael Palin, Terry Jones y Terry Gilliam. Eric Idle actu\u00f3 como bar\u00edtono acompa\u00f1ado por una cuarteto vocal y la orquesta sinf\u00f3nica y coro de la BBC. Dicha actuaci\u00f3n se recopil\u00f3 en un blu-ray y DVD y sali\u00f3 a la venta en 2010. Esta obra es una adaptaci\u00f3n musical de su pel\u00edcula La vida de Brian y tiene un estilo m\u00e1s \"oper\u00edstico\" que Spamalot.", "subsections": []}, {"name": "Documentales", "text": "En 2009, con motivo del 40 aniversario de los Monty Phyton, se puso a la venta el documental Monty Python, Almost the truth (The lawyer's cut) o en su traducci\u00f3n al espa\u00f1ol, Monty Python, casi la verdad (La versi\u00f3n de los abogados). Esta serie documental est\u00e1 compuesta por 6 episodios, sketches, entrevistas extendidas a los cinco Monty Python vivos ese a\u00f1o (todos menos Graham Chapman) y material in\u00e9dito no emitido en televisi\u00f3n, con una duraci\u00f3n de casi ocho horas.", "subsections": []}, {"name": "Integrantes", "text": "Naci\u00f3 en South Shields, en el condado de Durham. Su padre falleci\u00f3 en un accidente cuando \u00e9l era peque\u00f1o, por lo que su madre le llev\u00f3 a la Royal Wolverhampton School para ser educado en dicho centro. Realiz\u00f3 sus estudios de literatura inglesa en la Universidad de Cambridge.\nIdle, el m\u00fasico del grupo, no es el autor de la canci\u00f3n de la serie de televisi\u00f3n Monty Python's Flying Circus, la cual es una marcha popular llamada \u00abLa campana de la Libertad\u00bb as\u00ed como de la mayor\u00eda de las canciones de las pel\u00edculas del grupo. En La vida de Brian canta la canci\u00f3n m\u00e1s reconocida de los Python, \u00abAlways Look On The Bright Side Of Life\u00bb. Idle es conocido por el uso de pelucas rid\u00edculas (una de las raras ocasiones en que no usa peluca es en la escena final de La vida de Brian), y por sus exasperantes papeles, como el hombre invisible, el hombre de las fotos, el hombre que quer\u00eda una hormiga, y otros. Idle tambi\u00e9n interpret\u00f3 al \"valiente\" Sir Robin en Los caballeros de la mesa cuadrada.\nEl \"Python agradable\", es, siguiendo a John Cleese y Eric Idle, el Python m\u00e1s conocido por su trabajo como actor y el m\u00e1s popular del grupo entre las fan\u00e1ticas femeninas. Particip\u00f3 con John Cleese en muchos de los mejores sketches de Monty Python's Flying Circus: los franceses de la oveja volante, o Centro de discusi\u00f3n. Realiz\u00f3 los papeles de Bevis, el barbero medio psic\u00f3pata travestido que quer\u00eda ser le\u00f1ador en el sketch \u00abLa Canci\u00f3n del Le\u00f1ador\u00bb y de Sir Galahad en Los caballeros de la mesa cuadrada. Aparec\u00eda al principio de cada episodio de \"Monty Python's Flying Circus\" como el n\u00e1ufrago que dec\u00eda \"It's...\"\nSu padre, un vendedor de seguros, cambi\u00f3 el apellido de la familia de \u00abCheese\u00bb a \u00abCleese\u00bb debido al significado de la palabra cheese, que en ingl\u00e9s es \"queso\". Cleese estudi\u00f3 derecho en la universidad de Cambridge. Lleg\u00f3 a ser famoso como el presentador de la BBC que aparec\u00eda sentado frente a un escritorio en lugares tan extra\u00f1os como una calle, una playa o un cami\u00f3n, y que dec\u00eda la frase \u00abAnd now for something completely different\u00bb (\u00aby ahora algo totalmente diferente\u00bb), que convirti\u00f3 en eslogan de los Monty Python. Fue, junto con Graham Chapman uno de los g\u00e9rmenes del grupo. Desde el fin de los Python se ha acostumbrado a trabajar en comedias de \u00e9xito de Hollywood\nGilliam naci\u00f3 en Medicine Lake, Minesota, en los Estados Unidos, y estudi\u00f3 Ciencias Pol\u00edticas en el Colegio Occidental de California. Siempre le llam\u00f3 m\u00e1s la atenci\u00f3n la direcci\u00f3n que la actuaci\u00f3n, por lo que sus papeles en la serie fueron muy espor\u00e1dicos y secundarios. Es conocido por las animaciones , en las que cortaba fotograf\u00edas y las volv\u00eda surrealistas. Despu\u00e9s de la disoluci\u00f3n del grupo, ha ganado fama como director de cintas serias y fant\u00e1sticas siendo, junto con John Cleese, el Python que m\u00e1s reconocimiento ha logrado.\nNaci\u00f3 el 1 de febrero de 1942 en la Bah\u00eda de Colwyn, en el norte del Gales. Junto con Gilliam, Jones es el otro Python no ingl\u00e9s. Recordado principalmente por sus papeles de mujer acompa\u00f1ado de la voz chillona que hac\u00eda. Fue la divertid\u00edsima madre de Brian en La vida de Brian, filme que dirigi\u00f3 \u00e9l mismo. Llev\u00f3 a cabo tambi\u00e9n Los caballeros de la mesa cuadrada, este \u00faltimo trabajando en cooperaci\u00f3n con Terry Gilliam y la \u00faltima pel\u00edcula con todos los Python, El sentido de la vida. Despu\u00e9s de la disoluci\u00f3n del grupo se dedic\u00f3, principalmente, a la televisi\u00f3n, como guionista y presentador. Dirigi\u00f3 tambi\u00e9n Erik el vikingo, y escribi\u00f3 el guion de Labyrinth. Tras varios a\u00f1os padeciendo una afasia progresiva primaria, muri\u00f3 el 21 de enero de 2020.\nConocido por protagonizar a personajes autoritarios, como el coronel famoso que interrump\u00eda los sketches. Tambi\u00e9n realiz\u00f3, varias veces, los papeles de doctor, para el que su formaci\u00f3n habr\u00e1 contribuido mucho, entre otros tantos otros papeles. Realiz\u00f3 los papeles principales en La vida de Brian, protagonizando el papel de Brian Cohen, y en Los caballeros de la mesa cuadrada, como el Rey Arturo. Con el tiempo, el alcoholismo perturb\u00f3 su desempe\u00f1o como actor. Mantuvo su homosexualidad en secreto hasta que lo confes\u00f3 en un programa de entrevistas presentado por el m\u00fasico de jazz George Melly. Tras la separaci\u00f3n del grupo, tendr\u00eda alguna que otra aparici\u00f3n en cine y televisi\u00f3n.\nUna de sus \u00faltimas apariciones fue en un videoclip de la banda inglesa de heavy metal Iron Maiden, concretamente el v\u00eddeo de la canci\u00f3n \u00abCan I Play with Madness\u00bb, de su disco Seventh Son of a Seventh Son, publicado en 1988. A mediados de ese mismo a\u00f1o, es diagnosticado con c\u00e1ncer de es\u00f3fago. \nGraham Chapman muri\u00f3 el 4 de octubre de 1989. Como parte de la eleg\u00eda de su funeral, Eric Idle cant\u00f3 un fragmento de \"Always Look On The Bright Side Of Life\", canci\u00f3n compuesta por \u00e9l mismo, con la que termina La vida de Brian y John Cleese realiz\u00f3 un mon\u00f3logo en donde tendr\u00eda que decir \"mierda\" a petici\u00f3n del propio Chapman.", "subsections": []}, {"name": "Influencia", "text": "Los Monty Python han ejercido una gran influencia en el humor contempor\u00e1neo. Su sentido del humor absurdo y pol\u00edticamente incorrecto fue algo totalmente novedoso en su momento y el impacto de este es comparado al de los Beatles en la m\u00fasica.\nLos Monty Python dieron nombre, al parecer sin su conocimiento, al lenguaje de programaci\u00f3n Python. Muchos de los ejemplos de uso de Python y nombres de sus componentes se basan en obras de este grupo. \nSu influencia en el mundo de la inform\u00e1tica tambi\u00e9n puede encontrarse en la palabra spam, derivada de uno de sus sketchs.\nEl lem\u00farido Avahi cleesei, de Madagascar, es una especie de primate apodada as\u00ed en honor a John Cleese, quien posee una gran afici\u00f3n por los l\u00e9mures, y colabora en organizaciones para salvar las especies en peligro de estos.\nEntre los artistas m\u00e1s influenciados por los Python est\u00e1n Mike Myers, Trey Parker, Matt Stone, Eddie Izzard, Seth MacFarlane, Matt Groening, Douglas Adams y el conjunto c\u00f3mico-musical argentino Les Luthiers, entre otros.\nTambi\u00e9n en Argentina, el actor y humorista Diego Capusotto, junto con el escritor Pedro Saborido, han realizado 12 temporadas de sketches con distintos personajes en un ciclo sin precedentes llamado Peter Capusotto y sus videos. Capusotto ha manifestado en varias ocasiones que una de sus grandes influencias fue Monty Python.", "subsections": []}, {"name": "Referencias", "text": "\u2191 Wilmut (1980), p.250.\n\u2191 The Pythons by 'The Pythons' ISBN 0-7528-5293-0\n\u2191 1. Whetting Your Appetite\n\u2191 Todd Leopold (11 de diciembre de 2003). How Monty Python changed the world. CNN. Consultado el 30 de marzo de 2007. \u00abPython has been called \"the Beatles of comedy,\"\u00a0\u00bb.\u00a0\n\u2191 Mark Lewisohn. \u00abMonty Python's Flying Circus\u00bb. The bbc.uk.co Guide to Comedy. BBC. Consultado el 31 de marzo de 2007. \u00abIn essence, the Monty Python team are the comedy equivalent of the Beatles.\u00a0\u00bb\u00a0\n\u2191 'Holy' Monty Python History Lesson. Entertainment Tonight. Consultado el 24 de abril de 2012 \n\u2191 'Monty Python' Reunion Planned for New Movie. Christian Post. Consultado el 24 de abril de 2012\n\u2191 BBC News, ed. (2 de enero de 2005). \u00abCook voted 'comedians' comedian'\u00bb. Consultado el 21 de septiembre de 2008.\u00a0\n\u2191 Agencia EFE (18 de agosto de 2009). \u00abPremio para los caballeros de humor absurdo\u00bb. El Pa\u00eds. Consultado el 19 de agosto de 2009.\u00a0\n\u2191 The Pythons Autobiography By The Pythons\u2014Graham Chapman, John Cleese, Terry Gilliam, Eric Idle, Terry Jones, Michael Palin, John Chapman, David Sherlock, Bob McCabe\u2014Thomas Dunne Books; Orion, 2003\n\u2191 \"The Roots of Monty Python\". BFI Screenonline. Consultado el 23 de enero de 2013\n\u2191 \"The Silliest Interview We've Ever Had / The Silliest Sketch We've Ever Done\". MontyPython.net. Consultado el 23 de enero de 2013\n\u2191 Monty Python - The Man Who Talks in Anagrams, archivado desde el original el 9 de enero de 2022, consultado el 12 de junio de 2019\u00a0.\n\u2191 Wilmut (1980), p.211\n\u2191 \u00abBBC \u2013 Comedy \u2013 Monty Python\u00bb.\u00a0\n\u2191 And Now for Something Completely Different (en ingl\u00e9s)\n\u2191 Monty Python Live at the Hollywood Bowl (en ingl\u00e9s)", "subsections": [{"name": "Bibliograf\u00eda", "text": "Chapman, Graham (1997). Graham Crackers: Fuzzy Memories, Silly Bits, and Outright Lies, Career Pr Inc. ISBN 1-56414-334-1\nLandy, Marcia (2005). Monty Python's Flying Circus. Wayne State University Press. ISBN\u00a00-8143-3103-3.\u00a0\nMorgan, David (junio de 1999). Monty Python Speaks, a Spike imprint, Avon Books Inc., New York, New York. ISBN 0-380-80479-4\nWilmut, Roger (1980). From Fringe to Flying Circus, Eyre Methuen Ltd, Londres. ISBN 0-413-50770-X"}]}, {"name": "Enlaces externos", "text": "Sitio web oficial de Monty Python (en ingl\u00e9s)\nArt\u00edculo sobre los Monty Python con enlaces a algunos de sus mejores sketchs.\nM\u00e1s informaci\u00f3n sobre los Monty Python.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Multiplataforma", "title": "Multiplataforma", "summary": "Por favor, ed\u00edtalo para mejorarlo:\nCarece de fuentes o referencias que aparezcan en una fuente acreditada.\nSi quieres colaborar con Wikipedia, busca el art\u00edculo original y mejora esta traducci\u00f3n.\nEn inform\u00e1tica, se denomina multiplataforma a un atributo conferido a programas inform\u00e1ticos o m\u00e9todos y conceptos de c\u00f3mputacion que son implementados, y operan internamente en m\u00faltiples plataformas inform\u00e1ticas. El software multiplataforma puede dividirse en dos grandes tipos o clases: uno requiere una compilaci\u00f3n individual para cada plataforma que le da soporte, y el otro se puede ejecutar directamente en cualquier plataforma, sin preparaci\u00f3n especial, por ejemplo, el software escrito en un lenguaje interpretado o bytecode precompilado portable, para los cuales los int\u00e9rpretes o paquetes en tiempo de ejecuci\u00f3n son componentes comunes o est\u00e1ndar de todas las plataformas.\nPor ejemplo, una aplicaci\u00f3n multiplataforma puede ejecutarse sin problema alguno, tanto en Microsoft Windows en la arquitectura x86, como en Linux en la arquitectura x86 y Mac OS X, ya sea en el PowerPC o sistemas Apple Macintosh basados en x86. En general, una aplicaci\u00f3n multiplataforma se puede ejecutar tanto en todas las plataformas existentes o como m\u00ednimo dos plataformas.[1]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Plataformas\n1.1 Plataformas de hardware\n1.2 Plataformas de software\n1.2.1 Plataforma Java\n1.3 Software multiplataforma\n1.4 Aplicaciones Web\n1.5 Aplicaciones b\u00e1sicas\n1.6 Aplicaciones avanzadas\n2 Multiplataforma en los videojuegos\n2.1 Juego multiplataforma\n3 Estrategias de dise\u00f1o\n3.1 Degradaci\u00f3n correcta\n3.2 Separaci\u00f3n de funciones\n3.3 C\u00f3digo base m\u00faltiple\n3.4 Bibliotecas de terceros\n4 Estrategias de prueba\n5 Aplicaciones tradicionales\n6 Software binario\n7 Scripts y lenguajes interpretados\n8 Videojuegos\n9 Software plataforma-independiente\n10 Programaci\u00f3n multiplataforma\n10.1 M\u00e9todos de programaci\u00f3n multiplataforma\n10.2 Herramientas de programaci\u00f3n y entornos multiplataforma\n10.3 Desaf\u00edos para el desarrollo multiplataforma\n11 Referencias", "subsections": []}, {"name": "Plataformas", "text": "Una plataforma es una combinaci\u00f3n de hardware y software utilizado para ejecutar aplicaciones de software. Una plataforma puede ser descrita simplemente como un sistema operativo o arquitectura de ordenador, o podr\u00eda ser la combinaci\u00f3n de ambos (un ejemplo de una plataforma com\u00fan es Microsoft Windows que se ejecuta en la arquitectura x86). Otras conocidas plataformas de computadoras de escritorio incluyen Linux/Unix y Mac OS X (ambos de los cuales son a su vez multiplataforma). Hay, sin embargo, muchos dispositivos, como los tel\u00e9fonos m\u00f3viles que tambi\u00e9n son efectivamente plataformas inform\u00e1ticas, aunque com\u00fanmente sean menos considerados de esa manera. Una aplicaci\u00f3n se puede escribir en dependencia de las caracter\u00edsticas de una determinada Plataforma, ya sea el hardware, sistema operativo, o m\u00e1quina virtual en que se ejecuta. La plataforma Java es una m\u00e1quina virtual de la plataforma que se ejecuta en sistemas operativos y tipos de hardware, y es una plataforma de software com\u00fan para escribir (programar).", "subsections": [{"name": "Plataformas de hardware", "text": "Una plataforma de hardware puede referirse a la arquitectura del ordenador o la arquitectura del procesador. Por ejemplo, los CPUs x86 y x86-64 constituyen una de las m\u00e1s comunes arquitecturas de computadoras en uso en los ordenadores de prop\u00f3sito general. Estas m\u00e1quinas suelen ejecutar una versi\u00f3n de Microsoft Windows, aunque tambi\u00e9n se puede ejecutar otro sistemas operativos, tales como Linux, OpenBSD, NetBSD, Mac OS X yFreeBSD.\nUna arquitectura ARM es com\u00fan en los tel\u00e9fonos inteligentes y Tablet PC, que corren Windows, Android, iOS y otros sistemas operativos m\u00f3viles."}, {"name": "Plataformas de software", "text": "Las plataformas de software puede ser un sistema operativo o entorno de programaci\u00f3n, aunque m\u00e1s com\u00fanmente se trata de una combinaci\u00f3n de ambos. Una notable excepci\u00f3n a esto es Java, que utiliza un sistema operativo independiente de la m\u00e1quina virtual para cada c\u00f3digo compilado, conocido en el mundo de Java como bytecode. Ejemplos de plataformas de software incluyen:\nAndroid (sistema operativo) para tel\u00e9fonos inteligentes y Tablet PC\nAmigaOS (m68k), AmigaOS 4 (PowerPC), AROS (x86, PowerPC, m68k), MorphOS (PowerPC)\nBSD, muy multiplataforma (ver NetBSD, por ejemplo)\nJava\nLinux (x86, x86-64, PowerPC, y otras arquitecturas)\niOS (ARM)\nMac OS X (x86, x86-64)\nMicrosoft Windows (x86, x86-64, ARM)\nDOS sistemas de tipo en el x86: MS-DOS, IBM PC-DOS, DR-DOS, FreeDOS, etc.\nOS/2, eComStation\nSolaris (SPARC, x86, x86-64)\nLa CLI, tambi\u00e9n conocido por los nombres de aplicaci\u00f3n .NET Framework (de Microsoft) y Mono (de Novell)\nPlataforma Java\nComo ya se ha se\u00f1alado, la plataforma Java es una excepci\u00f3n a la regla general de que un sistema operativo es una plataforma de software. El lenguaje Java requiere de una m\u00e1quina virtual, o un \"CPU virtual\" en el que se ejecuta todo el c\u00f3digo que se escribe en el lenguaje. Esto permite que el mismo ejecutable binario pueda ejecutarse en todos los sistemas, apoyado por el software Java, a trav\u00e9s del uso de una m\u00e1quina virtual Java (JVM). Ejecutables de Java no se ejecutan de forma nativa en el sistema operativo, es decir, ni de Windows, ni Linux ejecutan programas Java directamente.\nAunque el c\u00f3digo Java no se ejecuta de forma nativa, la JVM es plenamente capaz de proporcionar servicios relacionados con el sistema operativo, como el disco I/O y el acceso a la red, si los privilegios adecuados se conceden. La JVM permite a los usuarios decidir el nivel de protecci\u00f3n adecuado, seg\u00fan una ACL. Por ejemplo, el acceso a disco y de red est\u00e1 habilitado normalmente para aplicaciones de escritorio, pero no para applets basados en el navegador.\nJNI tambi\u00e9n se puede utilizar para permitir el acceso a funciones espec\u00edficas de los sistemas operativos. En la actualidad, los programas Java pueden ejecutarse en Microsoft Windows, Mac OS X, Linux y sistemas operativos Solaris. Para aplicaciones m\u00f3viles, los plugins de los navegadores se utilizan en dispositivos basados en Windows y Mac, Android tiene soporte incorporado para Java."}, {"name": "Software multiplataforma", "text": "Para que el software pueda ser considerado multiplataforma, debe ser capaz de funcionar en m\u00e1s de una arquitectura de ordenador o sistema operativo. Esto puede ser una tarea que consume tiempo, ya que los diferentes sistemas operativos tienen diferentes interfaces de programaci\u00f3n de aplicaciones o API (por ejemplo, Linux utiliza una API diferente de Windows).\nEl hecho de que un determinado sistema operativo se pueda ejecutar en diferentes arquitecturas de computadora no quiere decir que el software escrito para ese sistema operativo autom\u00e1ticamente funcione en todas las arquitecturas que soporta el sistema operativo. Por ejemplo, a partir de agosto de 2006 OpenOffice.org no se ejecutaba de forma nativa en los AMD64 o Intel 64 l\u00edneas de procesadores los est\u00e1ndares para computadores de x86-64 64 bit. Sin embargo, desde entonces la situaci\u00f3n ha cambiado, y la suite OpenOffice.org de software ha sido portada a los sistemas de 64-bit. Esto tambi\u00e9n significa que solo porque un programa se escriba en un popular lenguaje de programaci\u00f3n como C o C++, no tiene por qu\u00e9 funcionar en todos los sistemas operativos que soporten la programaci\u00f3n de dicho lenguaje o incluso en el mismo sistema operativo en una arquitectura diferente."}, {"name": "Aplicaciones Web", "text": "Las aplicaciones Web suelen ser descritas como multiplataforma, ya que, idealmente, se puede acceder desde cualquiera de los diversos navegadores web en diferentes sistemas operativos. Tales aplicaciones generalmente emplean una arquitectura de sistema cliente-servidor, y pueden variar ampliamente en complejidad y funcionalidad. Esta amplia variabilidad complica considerablemente la meta de capacidad multiplataforma, que es rutinariamente en contradicci\u00f3n con el objetivo de funcionalidad avanzada."}, {"name": "Aplicaciones b\u00e1sicas", "text": "Aplicaciones web b\u00e1sicas lleva cabo la totalidad o la mayor parte del procesamiento de un servidor web \"Stateless\", y pasar el resultado al navegador web del cliente. Toda la interacci\u00f3n del usuario con la aplicaci\u00f3n consta de simples intercambios de solicitudes de datos y las respuestas del servidor. Este tipo de aplicaciones son la norma en las fases iniciales de la World Wide Web de desarrollo de aplicaciones. Tales aplicaciones siguen un simple transacci\u00f3n modelo, id\u00e9ntica a la de servir p\u00e1ginas web est\u00e1ticas. Hoy en d\u00eda, siguen siendo relativamente com\u00fan, especialmente cuando la compatibilidad entre plataformas y la simplicidad se considera m\u00e1s importante que las funcionalidades avanzadas. "}, {"name": "Aplicaciones avanzadas", "text": "Ejemplos destacados de las aplicaciones web avanzadas incluyen la interfaz web a Gmail, A9.com, y la p\u00e1gina web maps.live.com, parte del Live Search servicio de Microsoft. Tales aplicaciones avanzadas habitualmente dependen de las funciones adicionales que se encuentran solo en las versiones m\u00e1s recientes de los navegadores web m\u00e1s populares. Estas dependencias incluyen Ajax, JavaScript, HTML \"Din\u00e1mico\", SVG, y otros componentes de las aplicaciones ricas de Internet. Las versiones antiguas de los navegadores web m\u00e1s populares tienden a carecer de apoyo a ciertas caracter\u00edsticas."}]}, {"name": "Multiplataforma en los videojuegos", "text": "Tambi\u00e9n puede aplicarse a los videojuegos lanzados en una gama de consolas de videojuegos, computadoras especializadas dedicadas a la tarea de jugar juegos. Entre los ejemplos de videojuegos multiplataforma se incluyen: Miner 2049er, Tomb Raider: Legend, FIFA (serie de videojuegos), NHL Series y Minecraft.\nCada uno de ellos ha sido lanzado en una variedad de plataformas de juego, como la Wii, PlayStation 3, Xbox 360, computadoras personales (PC) y dispositivos m\u00f3viles.\nLas caracter\u00edsticas de un sistema particular pueden alargar el tiempo necesario para implementar un videojuego en m\u00faltiples plataformas. As\u00ed, un videojuego puede ser lanzado inicialmente en unas pocas plataformas y posteriormente en las restantes. Normalmente, esta situaci\u00f3n se produce cuando se lanza un nuevo sistema de juego, porque los desarrolladores de videojuegos necesitan familiarizarse con el hardware y el software asociados a la nueva consola.\nEs posible que algunos juegos no se conviertan en multiplataforma debido a los acuerdos de licencia entre los desarrolladores y los fabricantes de consolas de videojuegos que limitan el desarrollo de un juego a una consola en particular. Por ejemplo, Disney podr\u00eda crear un juego con la intenci\u00f3n de lanzarlo en las \u00faltimas consolas de Nintendo y Sony. En caso de que Disney conceda la licencia del juego a Sony en primer lugar, se le podr\u00eda exigir a cambio que lanzara el juego \u00fanicamente en la consola de Sony por un per\u00edodo corto o indefinido, prohibiendo efectivamente el lanzamiento multiplataforma durante ese per\u00edodo.", "subsections": [{"name": "Juego multiplataforma", "text": "Varios desarrolladores han implementado medios para jugar en l\u00ednea mientras utilizan diferentes plataformas. Psyonix, Epic Games, Microsoft y Valve poseen tecnolog\u00eda que permite a los jugadores de Xbox 360 y PlayStation 3 jugar con jugadores de PC, dejando la decisi\u00f3n de qu\u00e9 plataforma usar a los consumidores. El primer juego que permiti\u00f3 este nivel de interactividad entre los juegos de PC y consola fue Quake 3.\nLos juegos que incluyen juego en l\u00ednea multiplataforma incluyen Fortnite: Battle Royale, Rocket League, Final Fantasy XIV, Street Fighter V, Killer Instinct, Paragon y Fable Fortune, y Minecraft con su actualizaci\u00f3n Better Together para Windows 10, ediciones VR, Pocket Edition y Xbox One."}]}, {"name": "Estrategias de dise\u00f1o", "text": "A causa de los intereses en conflicto de compatibilidad entre plataformas y funcionalidades avanzadas, han surgido numerosas alternativas de dise\u00f1o de aplicaciones web.\nTales estrategias incluyen:", "subsections": [{"name": "Degradaci\u00f3n correcta", "text": "Degradaci\u00f3n correcta intenta proporcionar la misma funcionalidad o similar para todos los usuarios y plataformas, mientras que la disminuci\u00f3n de la funcionalidad de un \"m\u00ednimo com\u00fan denominator\" para obtener m\u00e1s exploradores cliente limitados. Por ejemplo, un usuario que intenta usar una caracter\u00edstica limitada de un navegador para acceder a Gmail puede notar que Gmail cambia al \"modo b\u00e1sico\", con funcionalidad reducida. Algunos ven esta estrategia como una forma menor de la capacidad multiplataforma."}, {"name": "Separaci\u00f3n de funciones", "text": "La separaci\u00f3n de las funcionalidades para simplificar la omici\u00f3n de los subconjuntos de funciones que no soportan los exploradores de los clientes dentro de ciertos sistemas operativos, sin dejar de ofrecer una \"completa\" aplicaci\u00f3n para el usuario."}, {"name": "C\u00f3digo base m\u00faltiple", "text": "M\u00faltiples aplicaciones codebase presentar diferentes versiones de una aplicaci\u00f3n en funci\u00f3n del cliente espec\u00edfico en uso. Esta estrategia es sin duda la forma m\u00e1s complicada y costosa de cumplir la capacidad multiplataforma, ya que incluso las diferentes versiones del navegador del cliente mismo (dentro del mismo sistema operativo) puede diferir considerablemente entre s\u00ed. Esto se complica a\u00fan m\u00e1s por el apoyo a plugins que puede o no estar presente para cualquier instalaci\u00f3n dada de un navegador web particular."}, {"name": "Bibliotecas de terceros", "text": "Bibliotecas de terceros intentan simplificar la capacidad multiplataforma de \"esconder\" las complejidades de las diferencias de los clientes detr\u00e1s de un API unificada."}]}, {"name": "Estrategias de prueba", "text": "Un aspecto complicado del dise\u00f1o de las aplicaciones web multiplataforma es la necesidad de pruebas de software. Adem\u00e1s de las complicaciones mencionadas anteriormente, existe la restricci\u00f3n adicional de que algunos navegadores web proh\u00edben la instalaci\u00f3n de diferentes versiones del mismo navegador en el mismo sistema operativo. T\u00e9cnicas tales como la virtualizaci\u00f3n completa se utilizan a veces como una soluci\u00f3n para este problema.", "subsections": []}, {"name": "Aplicaciones tradicionales", "text": "Aunque las aplicaciones web se est\u00e1n convirtiendo cada vez m\u00e1s popular, muchos usuarios todav\u00eda utilizan la aplicaci\u00f3n de software tradicional que no se basa en una arquitectura cliente/servidor web. La distinci\u00f3n entre las \"tradicionales\" y las aplicaciones \"web\" no es siempre inequ\u00edvoca, sin embargo, ya que las aplicaciones tienen muchas caracter\u00edsticas diferentes, los m\u00e9todos de instalaci\u00f3n y arquitecturas, y algunas de ellas pueden superponerse y ocurrir de maneras que difuminan la distinci\u00f3n. Sin embargo, esta distinci\u00f3n simplificada es una generalizaci\u00f3n com\u00fan y \u00fatil. ", "subsections": []}, {"name": "Software binario", "text": "Tradicionalmente en la inform\u00e1tica moderna, la aplicaci\u00f3n de software se ha distribuido a los usuarios finales como im\u00e1genes binarias, que se almacenan en archivos ejecutables, un tipo espec\u00edfico de archivo binario. Estos ejecutables solo admiten el sistema operativo y arquitectura de computadores que fueron construidas, lo que significa que haciendo un \"ejecutable multiplataforma\" ser\u00eda algo as\u00ed como una enorme tarea, y por lo general no se hace.\nPara el software que se distribuye como un archivo ejecutable binario, como el software escrito en C o C++, el programador debe crear el software para cada sistema operativo diferente y arquitectura de computadoras. Por ejemplo, Mozilla Firefox, un navegador web de c\u00f3digo abierto, est\u00e1 disponible en Microsoft Windows, Mac OS X (tanto PowerPC y x86 a trav\u00e9s de algo que Apple llama un binario universal), y Linux en arquitecturas de varios equipos. Las tres plataformas (en este caso, de Windows, Mac OS X y Linux) son distribuciones ejecutables independientes, si bien proceden del mismo c\u00f3digo fuente.\nEn el contexto del software binario, los programas multiplataforma est\u00e1n escritos en el c\u00f3digo fuente y luego, \"traducido\" a cada sistema que se ejecuta a trav\u00e9s de la compilaci\u00f3n en plataformas diferentes. Adem\u00e1s, el software puede ser portado a una arquitectura de computadora nueva o sistema operativo para que el programa se hace m\u00e1s multiplataforma de lo que ya es. Por ejemplo, un programa como Firefox, que ya se ejecuta en Windows en la familia x86, se puede modificar y re-programar para ejecutarse en Linux en x86 (y potencialmente otras arquitecturas) tambi\u00e9n.\nComo alternativa a la portabilidad, la virtualizaci\u00f3n de multiplaforma permite que las aplicaciones compiladas para una CPU y el sistema operativo se ejecute en un sistema con una CPU y/o sistema operativo, sin modificar el c\u00f3digo fuente o binarios. Por ejemplo, Apple Rosetta software, que est\u00e1 integrado en Intel basados en ordenadores Apple Macintosh, ejecuta las aplicaciones compiladas para la anterior generaci\u00f3n de Mac que utilizan PowerPC CPU. Otro ejemplo es IBM PowerVM Lx86, que permite Linux/x86 aplicaciones para ejecutarse sin modificaciones en el Linux/Sistema operativo de encendido.", "subsections": []}, {"name": "Scripts y lenguajes interpretados", "text": "Un script puede ser considerado como multiplataforma si su int\u00e9rprete est\u00e1 disponible en m\u00faltiples plataformas y la secuencia de comandos solo utiliza los servicios proporcionados por el lenguaje. Es decir, un script escrito en Python para un sistema como Unix probablemente se ejecutar\u00e1 con poca o ninguna modificaci\u00f3n en el de Windows, ya que tambi\u00e9n se ejecuta en Python de Windows, tambi\u00e9n hay m\u00e1s de una implementaci\u00f3n de Python que se ejecutan los mismos scripts (por ejemplo, IronPython para .NET). Lo mismo ocurre con muchos de los lenguajes de programaci\u00f3n de c\u00f3digo abierto que est\u00e1n disponibles y son lenguajes de scripting.\nA diferencia de los binarios ejecutables, el script puede utilizar el mismo en todos los equipos que tienen el software para interpretar la secuencia de comandos. Esto se debe a que las secuencias de comandos se almacenan generalmente en un texto sin formato en un archivo de texto. Puede haber algunos problemas, sin embargo, como el tipo de car\u00e1cter de l\u00ednea nueva que se encuentra entre las l\u00edneas. Generalmente, sin embargo, el trabajo poco o nada tiene que hacer para que un script escrito para un sistema, ejecute en otro.\nAlgunos muy populares entre plataformas scripting o lenguajes interpretados son:\nUn shell de Unix en el que com\u00fanmente se ejecutan en Linux y otros modernos sistemas Unix, as\u00ed como en Windows a trav\u00e9s de Cygwin POSIX (capa de compatibilidad).\nPerl - Un lenguaje de scripting creado en 1987. Se utiliza para programaci\u00f3n CGI WWW, peque\u00f1os sistemas de administraci\u00f3n de tareas y m\u00e1s.\nPHP - El lenguaje de scripting m\u00e1s popular en uso de las aplicaciones web.\nRuby - Un lenguaje de scripting cuyo prop\u00f3sito es ser orientado a objetos y f\u00e1cil de leer. Tambi\u00e9n se puede utilizar en la web a trav\u00e9s de Ruby on Rails.\n- Un lenguaje de programaci\u00f3n din\u00e1mico, adecuado para una amplia gama de aplicaciones, incluyendo aplicaciones web y de escritorio, redes, administraci\u00f3n de pruebas y muchos m\u00e1s.", "subsections": []}, {"name": "Videojuegos", "text": "Multiplataforma es un t\u00e9rmino que tambi\u00e9n puede aplicarse a los videojuegos liberados en una serie de consolas de videojuegos, especializados ordenadores dedicados a la tarea de jugar. Ejemplos de juegos de video multiplataforma son:\nMinero 2049er\nPhantasy Star Online\nTomb Raid\nCada uno ha sido puesto en libertad a trav\u00e9s de una variedad de plataformas de juego, como la Wii, PlayStation 3, Xbox 360, ordenadores personales (PCs), y dispositivos m\u00f3viles.\nLas caracter\u00edsticas de un sistema particular puede prolongar el tiempo necesario para implementar un juego de v\u00eddeo en m\u00faltiples plataformas. As\u00ed, un videojuego puede inicialmente ser puesto en algunas plataformas y posteriormente puesto en libertad el resto de plataformas. Por lo general, esta situaci\u00f3n se produce cuando un nuevo sistema de juego es liberado, porque los desarrolladores de videojuegos que se familiaricen con el hardware y el software asociado con la nueva consola.\nAlgunos juegos no pueden ser multiplataforma debido a los acuerdos de licencia entre los desarrolladores y fabricantes de videojuegos de consola que limitan el desarrollo de un juego para una consola en particular. Como ejemplo, Disney podr\u00eda crear un juego con la intenci\u00f3n de la liberaci\u00f3n en la \u00faltima Nintendo y Sony consolas de juegos. En caso de licencia de Disney del juego de Sony primero, Disney puede en cambio ser necesaria para liberar el juego \u00fanicamente en Sony de la consola por un corto tiempo o indefinidamente.\nVarios desarrolladores han puesto en marcha los medios para jugar juegos en l\u00ednea durante el uso de diferentes plataformas. Epic Games, Microsoft y Valve Software todos poseemos la tecnolog\u00eda que permite a Xbox 360 y PlayStation 3 a los jugadores jugar con los jugadores de PC, dejando la decisi\u00f3n de qu\u00e9 plataforma utilizar para los consumidores. El primer juego para permitir que este nivel de interactividad entre el PC y consola de juegos era Quake 3.\nLos juegos que ofrecen multiplataforma juego en l\u00ednea incluyen:\nKane & Lynch: Dead Men\nLost Planet: Colonies\nPhantasy Star Online\nShadowrun\nBlazBlue: Calamity Trigger\nUno\nFinal Fantasy XI Online\nEl Universo en Guerra: Asalto a la Tierra\nCuarto de juegos\nTeam Fortress 2\nPortal 2\nDust 514 con Eve Online\nMinecraft", "subsections": []}, {"name": "Software plataforma-independiente", "text": "El software que es independiente de la plataforma no se basa en las caracter\u00edsticas especiales de cualquier plataforma \u00fanica, o, si lo hace, se ocupa de las caracter\u00edsticas especiales que la hacen frente a m\u00faltiples plataformas.", "subsections": []}, {"name": "Programaci\u00f3n multiplataforma", "text": "La programaci\u00f3n multiplataforma es la pr\u00e1ctica de la forma activa de la escritura de software que funciona en m\u00e1s de una plataforma.", "subsections": [{"name": "M\u00e9todos de programaci\u00f3n multiplataforma", "text": "Hay diferentes maneras de abordar el problema de escribir una aplicaci\u00f3n multiplataforma. Una de ellos es simplemente crear varias versiones del mismo programa en diferentes \u00e1rboles de c\u00f3digo fuente, es decir, la versi\u00f3n de Windows de un programa puede tener un conjunto de archivos de c\u00f3digo fuente y la versi\u00f3n de Macintosh podr\u00eda tener otro, mientras que un software libre con sistema Unix podr\u00eda tener otro. Si bien este es un enfoque simple para el problema, tiene el potencial de ser mucho m\u00e1s caro en costos de desarrollo, tiempo de desarrollo, o ambos, sobre todo para las entidades corporativas. La idea detr\u00e1s de esto es crear m\u00e1s de dos programas diferentes que tienen la capacidad de comportarse de manera similar a la otra. Tambi\u00e9n es posible que este medio de desarrollo de una aplicaci\u00f3n multiplataforma dar\u00e1 lugar a m\u00e1s problemas de seguimiento de errores y corregir, porque los dos \u00e1rboles diferentes fuentes tendr\u00eda programadores diferentes, y por lo tanto los defectos diferentes en cada versi\u00f3n. Cuanto menor sea el equipo de programaci\u00f3n, m\u00e1s r\u00e1pido las correcciones de errores tienden a ser.\nOtro enfoque que se utiliza es depender de un software preexistente que oculta las diferencias entre la platform, llamado abstracci\u00f3n de la Platform, de tal manera que el programa en s\u00ed mismo no es consciente de la plataforma que se est\u00e1 ejecutando. Se podr\u00eda decir que este tipo de programas son independientes de la plataforma. Los programas que se ejecutan en la m\u00e1quina virtual de Java (JVM) se construyen de esta manera.\nAlgunas aplicaciones mezclan diversos m\u00e9todos de programaci\u00f3n multiplataforma para crear la aplicaci\u00f3n final. Un ejemplo de esto es el navegador web Firefox, que utiliza la abstracci\u00f3n para construir algunos de los componentes de nivel inferior, subestructuras separadas de c\u00f3digo para implementar las caracter\u00edsticas espec\u00edficas de la plataforma (como la interfaz gr\u00e1fica de usuario), y la aplicaci\u00f3n de m\u00e1s de un lenguaje de scripting para ayudar a facilitar facilidad de portabilidad. Firefox implementa XUL, CSS y JavaScript para la extensi\u00f3n del navegador, adem\u00e1s de plugins al estilo del cl\u00e1sico navegador Netscape. Gran parte del mismo navegador en s\u00ed est\u00e1 escrito en XUL, CSS y JavaScript, tambi\u00e9n."}, {"name": "Herramientas de programaci\u00f3n y entornos multiplataforma", "text": "Hay una serie de herramientas que est\u00e1n disponibles para ayudar a facilitar el proceso de programaci\u00f3n multiplataforma:\nEl Cairo: Un software libre, biblioteca que se utiliza para proporcionar un vector basado en gr\u00e1ficos, independiente del API del dispositivo. Est\u00e1 dise\u00f1ado para proporcionar primitivas para dibujos bidimensionales a trav\u00e9s de un n\u00famero de diferentes sistemas de apoyo. El Cairo est\u00e1 escrito en C y tiene enlaces para muchos lenguajes de programaci\u00f3n.\nEclipse: Entorno de desarrollo multiplataforma, c\u00f3digo abierto. Implementado en Java con una arquitectura configurable que soporta muchas herramientas para desarrollo de software. Complementos disponibles para varios lenguajes, como Java y C++.\nFLTK: Otro c\u00f3digo abierto multiplataforma. Kit de herramientas, pero m\u00e1s ligero, ya que se limita a la GUI. Un conjunto de herramientas de fuente abierta widget de que est\u00e1 completamente implementado en Object Pascal. Actualmente es compatible con Linux, Windows y un poco de Windows CE.\nGeneXus: En Windows es una soluci\u00f3n r\u00e1pida de desarrollo de software para la creaci\u00f3n de aplicaciones multiplataforma y de despliegue basado en la representaci\u00f3n del conocimiento y el apoyo a C#, Cobol, Java incluyendo Android y BlackBerry dispositivos inteligentes, Objective-C para el de Apple dispositivos m\u00f3viles, RPG, Ruby, Visual Basic y Visual FoxPro.Un conjunto de herramientas de c\u00f3digo abierto para el widget de sistemas tipo Unix con X11 y Microsoft Windows.Un lenguaje multiplataforma de c\u00f3digo abierto Un framework de aplicaciones escritas en C++, que se utiliza para escribir software nativo en numerosos sistemas (Microsoft Windows, POSIX, Mac OS X), sin cambios en el c\u00f3digo.\nQt (toolkit): Una estructura de aplicaciones y Widget Toolkit para sistemas Unix con X11, Microsoft Windows, Mac OS X, disponible tanto en virtud de c\u00f3digo abierto y licencias propietarias.\nReal Studio: un IDE RAD desarrollado por Real Software, utiliza un dialecto orientado a objetos del lenguaje de programaci\u00f3n BASIC, y produce binarios compilados para Mac OS X, Windows y Linux, como tambi\u00e9n, ser capaz de producir cgi aplicaciones basadas en web. El soporte iOS est\u00e1 actualmente en desarrollo.\nSimple DirectMedia Layer: Una librer\u00eda de multimedia multiplataforma de c\u00f3digo abierto, escrita en C que proporciona acceso de nivel bajo y alto a los gr\u00e1ficos, de entrada, audio, etc.\nPlataforma Smartface: Una herramienta multiplataforma para Windows que se usa para crear aplicaciones m\u00f3viles para J2ME, Symbian S60, Blackberry y Android, usando herramientas de arrastrar y soltar y edici\u00f3n de acciones.\nTcl/Tk\nUltimate++: es un marco de desarrollo r\u00e1pido de aplicaciones multiplataforma de C++ centrado en la productividad de los programadores. Incluye un conjunto de bibliotecas de usuario (GUI, SQL, etc.), Y un entorno de desarrollo integrado. Es compatible con Windows y Unix OS-s. El U++ compite con lenguajes de scripting populares preservando caracter\u00edsticas de C/C++ de tiempo de ejecuci\u00f3n. Tiene su propio entorno de desarrollo integrado, TheIDE, que cuenta con BLITZ-construir tecnolog\u00eda para aceleraci\u00f3n de C++ reconstruyendo hasta 4 veces el compilado.\nwxWidgets: un juego de herramientas widget de fuente abierta que es tambi\u00e9n un marco de aplicaci\u00f3n. Se ejecuta en sistemas Unix con X11, Microsoft Windows y Mac OS X. Se permite que las aplicaciones escritas para usarlo para funcionar en todos los sistemas que lo soporta, si la aplicaci\u00f3n no utiliza ning\u00fan sistema operativo espec\u00edfico de programaci\u00f3n, adem\u00e1s de a la misma.\nXPower++: es un IDE multiplataforma para Windows, Linux, Mac OS X y sistemas operativos m\u00f3viles."}, {"name": "Desaf\u00edos para el desarrollo multiplataforma", "text": "Hay algunos temas relacionados con el desarrollo de multiplataforma. Algunos de estos incluyen:\nPruebas de aplicaciones multiplataforma puede ser mucho m\u00e1s complicado, ya que las diferentes plataformas pueden exhibir comportamientos ligeramente diferentes o errores sutiles. Este problema ha llevado a algunos desarrolladores a ridiculizar el desarrollo multiplataforma como \u00abescribir una vez, depurar en todas partes\u00bb, eslogan de marketing.\nLos desarrolladores a menudo se limitan a utilizar el m\u00ednimo com\u00fan denominador subconjunto de caracter\u00edsticas que est\u00e1n disponibles en todas las plataformas. Esto puede afectar al rendimiento de la aplicaci\u00f3n o prohibir el uso de los desarrolladores caracter\u00edsticas m\u00e1s avanzadas de la plataforma.\nLas diferentes plataformas a menudo tienen diferentes convenciones de interfaz de usuario, que aplicaciones multiplataforma no siempre acomodar. Por ejemplo, las aplicaciones desarrolladas para Mac OS X y GNOME se supone que coloque el bot\u00f3n m\u00e1s importante en la parte derecha de la ventana o cuadro de di\u00e1logo, mientras que Microsoft Windows y KDE tienen la convenci\u00f3n opuesta. Aunque muchas de estas diferencias son sutiles, una aplicaci\u00f3n multiplataforma que no se ajusta adecuadamente a estos convenios puede sentirse torpe o ajeno al usuario. Cuando se trabaja con rapidez, a esas convenciones se oponen incluso puede resultar en la p\u00e9rdida de datos , como en un cuadro de di\u00e1logo para confirmar si el usuario desea guardar o descartar los cambios realizados en un archivo.\nLenguajes de secuencias de comandos y las m\u00e1quinas virtuales deben ser traducidos a c\u00f3digo ejecutable nativo cada vez que se ejecuta la aplicaci\u00f3n, imponiendo una penalizaci\u00f3n en el rendimiento. Esta pena puede ser aliviado mediante t\u00e9cnicas avanzadas como la compilaci\u00f3n just-in-time, pero incluso con estas t\u00e9cnicas, algo de sobrecarga computacional puede ser inevitable.\nLas diferentes plataformas requieren el uso de formatos de paquetes nativos tales como RPM y MSI. Multiplataforma instaladores como InstallAnywhere, JExpress, InstallBuilder o IzPack satisfacer esta necesidad.\nEntornos de ejecuci\u00f3n multiplataforma pueden sufrir fallos de seguridad multiplataforma, creando un ambiente f\u00e9rtil para el malware multiplataforma."}]}, {"name": "Referencias", "text": "\u2191 \u00abDefinici\u00f3n de Multiplataforma\u00bb. Consultado el 21 de marzo de 2014.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Netflix", "title": "Netflix", "summary": "[\n]\n37\u00b015\u203242\u2033N 121\u00b057\u203243\u2033O\ufeff / \ufeff37.2618, -121.962\nwww.netflix.com\nNetflix, Inc. es una empresa de entretenimiento y una plataforma de streaming estadounidense. Ubicada en Los Gatos (California), la compa\u00f1\u00eda fue fundada el 29 de agosto de 1997 y un a\u00f1o despu\u00e9s comenz\u00f3 su actividad, ofreciendo un servicio de alquiler de DVD a trav\u00e9s del correo postal.[3]\u200b Actualmente, Netflix participa en la producci\u00f3n de obras audiovisuales, desde la creaci\u00f3n o adquisici\u00f3n del producto hasta su difusi\u00f3n mundial.\nEn el 2000, a\u00fan con el alquiler de DVD como \u00fanico servicio, Netflix introduce un sistema de recomendaci\u00f3n personalizado, basado en la calificaci\u00f3n de una a cinco estrellas que sus clientes hac\u00edan de los materiales que alquilaban a trav\u00e9s de su sitio por Internet. La mejora continua de este sistema \u2014que en 2017 ser\u00eda cambiado por uno de \u00abpulgar arriba/abajo\u00bb\u2014, as\u00ed como el uso de otros datos que la plataforma obtiene de sus clientes conocido como miner\u00eda de datos, es considerado como la causa principal del \u00e9xito de la compa\u00f1\u00eda.[4]\u200b[5]\u200b[6]\u200b[7]\u200b\nEn 2007, Netflix inicia su servicio de v\u00eddeo bajo demanda en los Estados Unidos, exclusivamente para ser usado a trav\u00e9s de computadoras personales; a partir de 2008 se agregan diferentes opciones para acceder al cat\u00e1logo por streaming: consolas de videojuegos, televisores inteligentes, tabletas, etc. El 25 de febrero de 2007 entraba su DVD n\u00famero mil millones.[8]\u200b En 2009 su cat\u00e1logo f\u00edsico ofrece 100.000 t\u00edtulos y su clientela supera los 10 millones de suscriptores.[9]\u200b\nEn 2011, la empresa inicia operaciones por primera vez fuera de los Estados Unidos y Canad\u00e1, ofreciendo su cat\u00e1logo por streaming en la regi\u00f3n de Am\u00e9rica Latina y el Caribe. En 2012 ofrece sus servicios en algunos pa\u00edses de Europa, y a partir de 2016 ofrece sus contenidos a todo el mundo con excepci\u00f3n de la regi\u00f3n de Crimea, y los territorios de Corea del Norte, China Continental, Ir\u00e1n, Irak y Siria.[3]\u200b\nEl 16 de enero de 2014, la nominaci\u00f3n del documental The Square a un Premio de la Academia se convirti\u00f3 en la primera en la historia para una producci\u00f3n original de Netflix.[10]\u200b[11]\u200b Los productos en espa\u00f1ol m\u00e1s exitosos mundialmente son las series de La casa de papel y \u00c9lite, ambos situados en el top 10 mundial de las series m\u00e1s vistas en el mundo en 2019.[12]\u200b\nAl final del primer trimestre de 2020, la plataforma contaba con unos 183 millones de clientes en todo el mundo, la mayor\u00eda fuera de Estados Unidos.[3]\u200b Aunque las estimaciones hechas por Wall Street para ese periodo eran de 7.6 millones de nuevos clientes, la cuarentena puesta en marcha en distintos pa\u00edses del mundo a causa de la pandemia de COVID-19 contribuy\u00f3 a que la cifra real fuera de m\u00e1s del doble (15.8 millones);[13]\u200b durante los primeros meses de 2022, por primera vez desde 2011, la plataforma reporta una p\u00e9rdida de 200.000 clientes y proyecta 2 millones menos para el segundo trimestre del a\u00f1o.[14]\u200b\nEn 2022, los ejecutivos de Netflix informaron que la plataforma tendr\u00eda anuncios publicitarios a trav\u00e9s del \"Plan B\u00e1sico con Anuncios\" desde el primero de noviembre.[15]\u200bNetflix con m\u00e1s de 20,000,000 de suscriptores mundiales", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n1.1 Introducci\u00f3n de servicio de VOD\n1.2 Actualidad\n1.2.1 Salas de cine \"Netflix\"\n2 Infraestructura\n3 Funcionamiento\n3.1 Miner\u00eda de datos\n4 Programaci\u00f3n\n4.1 Producci\u00f3n original\n4.2 Producci\u00f3n local\n5 Soporte de dispositivos\n5.1 Netflix VR\n6 Cr\u00edticas y controversias\n6.1 Invasi\u00f3n de mercados locales e imperialismo cultural\n6.2 Efectos sociales y en la salud\n6.3 Participaci\u00f3n en el cambio clim\u00e1tico\n6.4 Efectos en la cultura cinematogr\u00e1fica y televisiva\n6.5 Mismo paradigma\n6.6 Tratamiento de datos personales\n6.7 Opci\u00f3n de alterar la velocidad de reproducci\u00f3n\n6.8 Compra del Egyptian Theater de L.A.\n6.9 Cr\u00edticas y controversias a productos originales en particular\n6.9.1 Goop Lab\n6.10 Censura\n6.11 Perdida de suscriptores\n6.12 Fin de las cuentas compartidas y reducci\u00f3n de precios.\n7 Expansi\u00f3n internacional\n7.1 Cierre de Netflix en Rusia\n8 Competencia\n8.1 Situaci\u00f3n en Estados Unidos\n8.2 Otros pa\u00edses y regiones\n8.3 Principales plataformas competidoras\n9 V\u00e9ase tambi\u00e9n\n10 Referencias\n11 Bibliograf\u00eda\n11.1 En ingl\u00e9s\n11.2 En franc\u00e9s\n11.3 En ingl\u00e9s\n12 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "Netflix surge en 1997 en California (Estados Unidos) como una compa\u00f1\u00eda de alquiler de DVD entregados por v\u00eda postal. A lo largo de su historia la empresa ha sufrido diversas transformaciones hasta que, para 2019, se trata de una empresa medi\u00e1tica que participa en la producci\u00f3n audiovisual desde la concepci\u00f3n o adquisici\u00f3n del producto hasta su difusi\u00f3n, en este caso a trav\u00e9s de una plataforma por internet.[3]\u200b[16]\u200b El nombre de Netflix procede de Net abreviatura de \u00abinternet\u00bb y flix de flicks forma coloquial en ingl\u00e9s de \u00abpel\u00edculas\u00bb.\nEl mito creado por la propia compa\u00f1\u00eda indica que todo empez\u00f3 cuando Reed Hastings alquil\u00f3 la pel\u00edcula Apolo 13, en la cadena de videoclubes Blockbuster, y al devolverla con unos d\u00edas de retraso tuvo que pagar una multa de 40 d\u00f3lares. Resignado, Hastings decidi\u00f3 crear una cadena de videoclubes sin multas ni compromisos. Sin embargo, en el libro Netflixed: the Epic Battle for America's Eyeballs, el cofundador de la empresa, Marc Randolph, relata que la idea surgi\u00f3 con base en el deseo de iniciar un negocio de comercio electr\u00f3nico que, finalmente, elegir\u00eda al DVD como su producto.\nDurante meses, Randolph y Hastings fueron depurando su idea en los recorridos que hac\u00edan camino a su trabajo en la empresa de software Pure Atria, donde el primero era director de mercadotecnia y el segundo director general. En un principio, Netflix era un videoclub virtual cuyos clientes eleg\u00edan pel\u00edculas a trav\u00e9s de una plataforma en l\u00ednea y \u00e9stas eran entregadas mediante correo postal.\nLos suscriptores hac\u00edan una selecci\u00f3n de varios t\u00edtulos del cat\u00e1logo de la empresa, la cual les enviaba el primero en un sobre con el porte pagado para su regreso. Una vez que Netflix recib\u00eda de regreso la primera pel\u00edcula, enviaba la segunda y as\u00ed sucesivamente.[17]\u200b \nDurante esos primeros a\u00f1os y hasta aproximadamente 2002, la empresa se presentaba a s\u00ed misma como \"el servicio de alquiler de DVD en l\u00ednea m\u00e1s grande del mundo\".[16]\u200b", "subsections": [{"name": "Introducci\u00f3n de servicio de VOD", "text": "La primera gran transformaci\u00f3n que sufri\u00f3 Netflix fue al introducir su servicio de visualizaci\u00f3n v\u00eda streaming en 2007. Aunque el servicio de env\u00edo de DVD por correspondencia continu\u00f3 en Estados Unidos, este no fue incluido en sus planes de expansi\u00f3n internacional en 2007, cuando comenzaron operaciones en Am\u00e9rica Latina y el Caribe.[3]\u200b[18]\u200b[19]\u200b[20]\u200b\nLos primeros meses, la visualizaci\u00f3n del cat\u00e1logo electr\u00f3nico era accesible solo a trav\u00e9s de computadoras. En 2008 la compa\u00f1\u00eda busc\u00f3 alianzas con diferentes empresas y productos para incluir una aplicaci\u00f3n en consolas de videojuegos como Xbox de Microsoft o en diversas marcas de reproductores de Blu-ray, para que, a trav\u00e9s de estos dispositivos, tambi\u00e9n se pudieran ver las series y pel\u00edculas del cat\u00e1logo. Un a\u00f1o m\u00e1s tarde, la aplicaci\u00f3n se incluy\u00f3 en algunas televisiones inteligentes, y para 2010 en otros aparatos que se conectaban a internet como el Nintendo Wii, la iPad, iPhone y iPod touch de Apple.[3]\u200b\nPara sacar adelante esta plataforma digital, Netflix requer\u00eda ofrecer una plataforma funcional en todo momento, que permitiera el visionado de una gran cantidad de personas al mismo tiempo, sin poner en riesgo la calidad de la imagen. Es as\u00ed que la empresa se al\u00eda con los servicios inform\u00e1ticos de Amazon.[20]\u200b\nEl nuevo servicio de streaming pronto gan\u00f3 popularidad por el acceso ilimitado, personalizado y sin publicidad que ofrec\u00eda, adem\u00e1s de por la posibilidad de crear distintos perfiles entre las personas que compart\u00edan la contrase\u00f1a de una sola cuenta, situaci\u00f3n que Netflix no detuvo, sino que aprovech\u00f3 pues significaba la obtenci\u00f3n de m\u00e1s datos de distintas personas que sirvieron para \"alimentar\" su algoritmo y conocer mejor los gustos del p\u00fablico.[20]\u200b"}, {"name": "Actualidad", "text": "Luego de que en 2011 iniciara con la producci\u00f3n de contenido propio -que lanzar\u00eda en 2013 con House of Cards- y tras la puesta en marcha de su estudio en 2016,[20]\u200b[21]\u200b Netflix se defin\u00eda para 2018 ya como una \"global internet TV network\" o una cadena global de televisi\u00f3n por internet.[16]\u200b\nEn el libro de 2019 Netflix Nations. The Geography of Digital Distribution, el investigador Ram\u00f3n Lobato refiere que las formas de pensar y estudiar a Netflix son muy diversas, y que no es posible concebir a esta compa\u00f1\u00eda solo como una productora o distribuidor de contenidos audiovisuales (paradigma de los estudios sobre la televisi\u00f3n) o exclusivamente como una plataforma digital (paradigma de los nuevos medios). As\u00ed, seg\u00fan Lobato, algunas de las categor\u00edas o roles que cumple Netflix son: plataforma de video, distribuidor audiovisual, cadena de televisi\u00f3n, corporaci\u00f3n medi\u00e1tica global, compa\u00f1\u00eda de tecnolog\u00eda, sistema de software, negocio de big-data, industria cultural, estilo de vida, modo de consumo medi\u00e1tico y, un ritual.[16]\u200b\nSalas de cine \"Netflix\"\nA finales de noviembre de 2019, Netflix anuncia el alquiler por 10 a\u00f1os de \"The Paris\", una m\u00edtica sala de cine ubicada en Manhattan, inaugurada en 1948 y que hab\u00eda dejado de operar en agosto de 2019. El objetivo de esta operaci\u00f3n, como lo anunci\u00f3 la propia compa\u00f1\u00eda a trav\u00e9s de un comunicado de prensa digital, ser\u00eda el de presentar ah\u00ed eventos especiales, y premieres y proyecciones de sus pel\u00edculas. Meses antes, diversos reportes de prensa indicaron la intenci\u00f3n de Netflix de llegar a un acuerdo por 10 millones de d\u00f3lares con la American Cinematheque, que opera el Egyptian Theater, sala de cine ic\u00f3nica de Los \u00c1ngeles; el trato ser\u00eda que la cinemateca continuara usando las instalaciones los fines de semana para sus proyecciones y charlas habituales, mientras que la empresa de Los Gatos usar\u00eda el local entre semana para sus propios proyectos. En mayo de 2020, Netflix anunci\u00f3 que la operaci\u00f3n hab\u00eda sido concluida y que el equipo y objetivo de la cinemateca seguir\u00edan intactos; por su parte, la cinemateca asegur\u00f3 que con este trato lograba salir de una crisis financiera de varios a\u00f1os que se acercaba a un punto sin retorno.[22]\u200b[23]\u200b\nDebido a que la restauraci\u00f3n del Egyptian Theater fue posible, en parte, a dinero p\u00fablico (alcald\u00eda de Los \u00c1ngeles, gobierno federal y el National Endowment for the Arts), la comunidad art\u00edstica y cultural de la ciudad ha expresado sus dudas por esta venta,[23]\u200b y para finales de julio de 2020, m\u00e1s de 3 mil personas hab\u00edan firmado una petici\u00f3n subida al sitio Change.org exigiendo a la cinemateca que transparente la operaci\u00f3n financiera, comenzando por revelar la cantidad pagada por Netflix.[24]\u200b\nEn el caso de estas 2 operaciones, el plan de Netflix ser\u00eda el de evitar el trato con los exhibidores para proyectar sus pel\u00edculas bajo los t\u00e9rminos que estos exigen y en los cuales toda pel\u00edcula debe permanecer en salas durante 90 d\u00edas antes de distribuirlas por otros medios como los formatos caseros o las plataformas de streaming. Al tener salas de exhibici\u00f3n y proyectar sus pel\u00edculas en ellas, la empresa tambi\u00e9n abonar\u00eda a su objetivo de cumplir con el requisito de proyectar una cinta durante al menos 7 d\u00edas consecutivos que la Academia exige para competir en los Premios Oscar.[25]\u200b[26]\u200b[27]\u200b"}]}, {"name": "Infraestructura", "text": "El \u00edndice de velocidad de proveedor de servicios de Internet para Netflix se basa en datos de m\u00e1s de 117 millones de miembros de Netflix en todo el mundo que vieron m\u00e1s de 1000 millones de horas de series y pel\u00edculas de Netflix por mes. Las velocidades indicadas reflejan el rendimiento promedio de todas las transmisiones de Netflix en la red de cada ISP y son un indicador del rendimiento que experimentan normalmente todos los usuarios de red de un ISP. Por lo general, una red m\u00e1s r\u00e1pida implica una mejor calidad de imagen, tiempos de inicio m\u00e1s veloces y menos interrupciones.\nEl rendimiento promedio est\u00e1 por debajo del rendimiento m\u00e1ximo. Esto se debe a muchos factores, por ejemplo, la variedad de codificaciones que usa Netflix para transmitir series y pel\u00edculas, adem\u00e1s de la variedad de dispositivos que usan los miembros y el estado de las redes dom\u00e9sticas. Estos factores se anulan en la comparaci\u00f3n entre ISP.\nA partir de febrero de 2016, Netflix utiliza exclusivamente servidores en la nube, culmin\u00e1ndose un proceso de migraci\u00f3n iniciado en 2008. Sus servidores est\u00e1n situados en la red AWS de Amazon.com. Esto permite ofrecer a sus clientes una tasa de disponibilidad de 99,99%. Las aplicaciones han evolucionado de una arquitectura monol\u00edtica a una arquitectura basada en microservicios y un modelo de bases de datos no normalizado sobre manejadores de tipo NoSQL.[28]\u200b", "subsections": []}, {"name": "Funcionamiento", "text": "Netflix en sus inicios funcionaba con un reproductor basado en Microsoft Silverlight para evitar que se descargue el contenido audiovisual (actualmente ofrece un servicio de descarga de algunas pel\u00edculas o cap\u00edtulos de serie que solo pueden ser reproducidos en la aplicaci\u00f3n). Desde 2014, emite contenidos por HTML5. Bajo Linux se puede ver Netflix usando el navegador Google Chrome, versi\u00f3n 38 o m\u00e1s reciente.[29]\u200b\nCuando se entra a una pel\u00edcula, Netflix precarga una peque\u00f1a parte de esta antes, para evitar los cortes por almacenamiento en b\u00fafer.\nEl servicio que opera Netflix en realidad est\u00e1 basado en m\u00e1s de 700 microservicios que corren independientemente y que se comunican entre s\u00ed a trav\u00e9s de interfases de programaci\u00f3n de aplicaciones o APIs, por sus siglas en ingl\u00e9s. Cada microservicio est\u00e1 programado para hacer una tarea espec\u00edfica, como por ejemplo cargar las vi\u00f1etas de presentaci\u00f3n de una serie o pel\u00edcula recomendada o hacer el cargo mensual de la membres\u00eda de cada cuenta. En este sentido, Netflix es un ecosistema de peque\u00f1os sistemas con objetivos espec\u00edficos y no una arquitectura inform\u00e1tica monol\u00edtica.[16]\u200b", "subsections": [{"name": "Miner\u00eda de datos", "text": "En el 2000, Netflix comenz\u00f3 a utilizar un sistema de calificaci\u00f3n de las pel\u00edculas en DVD que alquilaba. A trav\u00e9s de la plataforma en l\u00ednea, los suscriptores ten\u00edan la posibilidad de calificar las pel\u00edculas vistas, otorg\u00e1ndoles de 1 a 5 estrellas. A partir de esta informaci\u00f3n, el sistema hac\u00eda recomendaciones al usuario. Este primer sistema recib\u00eda el nombre de Cinematch.[4]\u200b\nEn octubre de 2006, la compa\u00f1\u00eda lanz\u00f3 la convocatoria del Netflix Prize o Premio Netflix, que buscaba mejorar este sistema. Dotado con un premio en efectivo de 1 mill\u00f3n de d\u00f3lares, el objetivo del concurso era generar un algoritmo que mejorara las predicciones de Cinematch en un 10%; el individuo o equipo ganador ser\u00eda aquel que alcanzara primero la meta, por lo cual no hab\u00eda fecha final prevista. Casi 3 a\u00f1os despu\u00e9s, el 26 de julio de 2009, el equipo llamado BellKor's Pragmatic Chaos, integrado por investigadores de AT&T logr\u00f3 superar a Cinematch en un 10.6%, ganando as\u00ed la contienda y superando por tan solo 20 minutos al segundo lugar, The Ensemble, quienes lograron el mismo 10.6% de mejora.[30]\u200b[31]\u200b[32]\u200b\nHasta antes de la puesta en marcha de su sistema de VOD por streaming los datos con los que contaba la compa\u00f1\u00eda de cada uno de sus clientes eran, entre otros, nombre, c\u00f3digo postal, g\u00e9nero y la calificaci\u00f3n otorgada a ciertas pel\u00edculas. Sin embargo, a partir del visionado de series y pel\u00edculas a trav\u00e9s de la plataforma de streaming, el algoritmo tiene un conocimiento m\u00e1s puntual de los gustos del p\u00fablico gracias a datos como desde qu\u00e9 dispositivos se ve el cat\u00e1logo, la hora del d\u00eda en que se usa el servicio, durante cu\u00e1nto tiempo se ve un determinado producto, qu\u00e9 g\u00e9neros, directores, actores/actrices o a\u00f1o de estreno es que el que prefiere. Con esta informaci\u00f3n, adem\u00e1s de personalizar la experiencia de cada consumidor (qu\u00e9 productos le recomienda, qu\u00e9 foto miniatura o tr\u00e1iler muestra para presentar una serie o pel\u00edcula), Netflix ha desarrollado proyectos originales que responden a estos gustos o que saben que encontrar\u00e1n una audiencia.[4]\u200b[5]\u200b[6]\u200b[7]\u200b[30]\u200b[33]\u200b\nIncluso antes de empezar con la plataforma de streaming, la gran cantidad de informaci\u00f3n que acumula la empresa ya suscitaba temores entre los analistas de temas tecnol\u00f3gicos y privacidad. De igual forma, la manera de tratar estos datos ha sido motivo de demandas legales en Estados Unidos, particularmente ligadas a la liberaci\u00f3n de informaci\u00f3n usada por los equipos participantes en el Netflix Prize.[30]\u200b[34]\u200b"}]}, {"name": "Programaci\u00f3n", "text": "El uso de un algoritmo como la base en la toma de decisiones de Netflix para producir o adquirir un determinado producto es un elemento mencionado de forma constante entre especialistas, analistas y p\u00fablico en general.\nDicha herramienta se trata de un complejo sistema que, entre otras cosas, ordena el cat\u00e1logo de productos de la plataforma basado en lo que el usuario ha visto previamente y en la forma en que ha calificado ciertas pel\u00edculas o series, generando adem\u00e1s una gran cantidad de etiquetas o categor\u00edas que ayudan a los clientes a seleccionar qu\u00e9 ver y a la propia plataforma le permite hacer sugerencias. Otros datos de los que se sirve este sistema son los gustos y preferencias de otros usuarios que han sido clasificados como similares, as\u00ed como los g\u00e9neros, actores y a\u00f1o de lanzamiento de las producciones que acostumbra la persona, la hora del d\u00eda en que son vistos, los dispositivos que usa (tableta, computadora, consola de video, etc.), y durante cu\u00e1nto tiempo usa la plataforma.[35]\u200b[36]\u200b\nLos t\u00edtulos de las etiquetas son generados por seres humanos, empleados por la empresa, quienes revisan todo el contenido del cat\u00e1logo con el objetivo de otorgar a las series y pel\u00edculas alguna de las m\u00e1s de 200 clasificaciones o etiquetas, bas\u00e1ndose en ciertos criterios espec\u00edficos; en ingl\u00e9s son conocidos como Netflix taggers (etiquetadores de Netflix). Algunas de estas etiquetas se relacionan con un cierto nivel que posee la producci\u00f3n (nivel de comedia/acci\u00f3n/escenas de persecuci\u00f3n), otras son conceptos o frases que describen el material, como \"cerebral\" o \"rebelde\", mientras que otras hacen referencia a la tem\u00e1tica, g\u00e9nero o reconocimientos del producto, como \"gastronom\u00eda\", \"comedia negra\" o \"Premios Emmy\" / \"Globos de Oro\".[35]\u200b[37]\u200b\nDe acuerdo con lo que ha revelado la propia compa\u00f1\u00eda, la combinaci\u00f3n de todos estos elementos ha ayudado a prever de manera acertada los gustos del p\u00fablico, lo cual les ha servido para decidir sobre los temas, actores o actrices, o directores en los que debe invertir, o si es pertinente invertir en un proyecto que le proponen. Dos ejemplos a este respecto son la primera serie original del servicio, House of Cards, y la pel\u00edcula Roma del cineasta mexicano Alfonso Cuar\u00f3n. En ambos casos, la informaci\u00f3n con la que contaba la plataforma en su momento habr\u00eda permitido saber que, efectivamente, exist\u00eda p\u00fablico para cada producci\u00f3n.[21]\u200b[20]\u200b", "subsections": [{"name": "Producci\u00f3n original", "text": "Art\u00edculo principal:\nArt\u00edculos principales:\n, \n y \nEn marzo de 2011, Netflix comenz\u00f3 a adquirir contenido original para su servicio de suscripci\u00f3n de streaming, comenzando con el drama pol\u00edtico de una hora House of Cards, que se estren\u00f3 en febrero de 2013. La serie fue producida por David Fincher y protagonizada por Kevin Spacey.[38]\u200b A finales de 2011, Netflix recogi\u00f3 dos temporadas de ocho episodios de Lilyhammer y una cuarta temporada de la antigua Arrested Development, serie de Fox.[39]\u200b Netflix anunci\u00f3 que estrenar\u00eda la serie de drama sobrenatural Hemlock Grove a principios de 2013.[40]\u200b En febrero de 2013, DreamWorks Animation y Netflix acordaron producir una nueva serie de dibujos animados llamada Turbo FAST, basada en la pel\u00edcula Turbo, que se estren\u00f3 en julio de ese a\u00f1o.[41]\u200b[42]\u200b En marzo de 2013, Netflix anunci\u00f3 que se firm\u00f3 con las Wachowski y Michael Straczynski para escribir y producir su nueva serie de ciencia ficci\u00f3n, Sense8\u2009,[43]\u200b que se estren\u00f3 el 5 de junio de 2015.\nSi bien algunas de estas series son concebidas como productos de nicho, otras alcanzan audiencias y \u00e9xitos globales como Stranger Things y Narcos.[16]\u200b\nAdem\u00e1s, Netflix produce diversos documentales tanto en formato de largometraje y mediometraje como series documentales, que abarcan diversas tem\u00e1ticas. Entre las series documentales podemos encontrar varias con tem\u00e1ticas asociadas al arte y la gastronom\u00eda, como 'Tales by light (fotograf\u00eda), Abstract (dise\u00f1o) o Cooked (gastronom\u00eda) entre otras.\nDe acuerdo a lo reportado por la empresa, en 2018 invirti\u00f3 8000 millones de d\u00f3lares en producciones originales, 2000 m\u00e1s que en el a\u00f1o anterior. Dicha inversi\u00f3n servir\u00eda para producir m\u00e1s de 100 obras, de las cuales cerca de 80 ser\u00edan pel\u00edculas provenientes de 16 pa\u00edses de Europa, Medio Oriente y \u00c1frica, realizadas en 16 idiomas distintos.[44]\u200b[45]\u200b[46]\u200b"}, {"name": "Producci\u00f3n local", "text": "Desde el inicio de operaciones en la regi\u00f3n de Am\u00e9rica Latina y el Caribe, Netflix volte\u00f3 hacia las producciones locales, primero con las ya creadas y posicionadas entre el p\u00fablico, y luego para generar sus productos bajo el sello propio. En el primer caso, las negociaciones con Telemundo, Televisa, Univision, Telefe, TVN, TV Per\u00fa, Am\u00e9rica Televisi\u00f3n, Caracol Televisi\u00f3n y RCN Televisi\u00f3n, entre otras compa\u00f1\u00edas, le permitieron ofrecer en cierto momento hasta un 20% de telenovelas a sus suscriptores, contra cerca de 80% de pel\u00edculas y series estadounidenses. Posteriormente, el criterio fue desarrollar productos propios en el idioma y con figuras conocidas de cada pa\u00eds, con el objetivo de crear lazos con las audiencias locales y captar la atenci\u00f3n de los medios.[20]\u200b[47]\u200b\nSiguiendo esta f\u00f3rmula, la plataforma ha producido o adquirido para su difusi\u00f3n exclusiva, series de gran \u00e9xito como La casa de papel (Espa\u00f1a), Marsella (Francia), Club de Cuervos (M\u00e9xico), Narcos (Colombia),Dhamer (Estados Unidos) o Dark (Alemania).[47]\u200b"}]}, {"name": "Soporte de dispositivos", "text": "Los dispositivos que son compatibles con los servicios de transmisi\u00f3n de Netflix incluyen reproductores de discos Blu-ray, tabletas, tel\u00e9fonos inteligentes, Smart TVs, navegadores, Computadoras, reproductores de medios digitales y consolas de videojuegos (incluidos Xbox One, PlayStation 4, Wii U, Xbox 360, PlayStation 3 y PlayStation Vita).\nLa transmisi\u00f3n 4K requiere un dispositivo y una pantalla compatibles con 4K, ambos compatibles con HDCP 2.2. La transmisi\u00f3n 4K en computadoras personales requiere soporte de hardware y software de la soluci\u00f3n de gesti\u00f3n de derechos digitales Microsoft PlayReady 3.0, que requiere una CPU, tarjeta gr\u00e1fica y entorno de software compatibles. Actualmente, esta funci\u00f3n est\u00e1 limitada a las CPUs Intel Core o posteriores de 7.\u00aa generaci\u00f3n, Windows 10, las series Nvidia Geforce 10 y AMD Radeon 400 o posteriores, y se ejecutan a trav\u00e9s del navegador web Microsoft Edge o la aplicaci\u00f3n universal de Netflix disponible en Microsoft Store.[48]\u200b[49]\u200b[50]\u200b[51]\u200b", "subsections": [{"name": "Netflix VR", "text": "Netflix VR es una aplicaci\u00f3n adicional de Netflix que permite ver las producciones del cat\u00e1logo como si fuera una experiencia de Realidad Virtual (de all\u00ed su nombre 'VR', virtual reality). Para ello, adem\u00e1s de descargar dicha aplicaci\u00f3n, es necesario contar con alg\u00fan dispositivo de VR (gafas o casco).[52]\u200b[53]\u200b"}]}, {"name": "Cr\u00edticas y controversias", "text": "", "subsections": [{"name": "Invasi\u00f3n de mercados locales e imperialismo cultural", "text": "Como sucedi\u00f3 en su momento con la televisi\u00f3n satelital y por cable, Netflix ha sido acusado de invadir y perturbar los mercados locales. De igual forma, ha sido considerado un veh\u00edculo para el imperialismo cultural estadounidense.[16]\u200b\nEl inicio de sus servicios en ciertos pa\u00edses ha estado rodeado de acusaciones de saltarse regulaciones impuestas a otros actores medi\u00e1ticos, lo cual ha logrado al presentarse, seg\u00fan sea el caso particular, como un servicio de internet o cualquier otro estatus distinto al de empresa medi\u00e1tica o de entretenimiento.\nEn marzo de 2015, con el anuncio del inicio de servicios en Australia, cadenas locales expresaron su descontento porque Netflix no cumplir\u00eda con las regulaciones que \u00e9stas ten\u00edan que seguir. Por su parte, en enero de 2016, cuando Netflix inici\u00f3 operaciones en m\u00e1s de 130 pa\u00edses, Kenia emiti\u00f3 un comunicado a trav\u00e9s de su Consejo de Clasificaci\u00f3n Cinematogr\u00e1fica (Kenya Film Classification Board en ingl\u00e9s), donde dijo que la entrada de la empresa significaba una violaci\u00f3n a las leyes de distribuci\u00f3n de televisi\u00f3n y cine, adem\u00e1s de considerar que, como pa\u00eds progresista, no pod\u00eda permitir ser un receptor pasivo de contenidos extranjeros que pueden corromper los valores morales de la ni\u00f1ez y comprometer la seguridad nacional.[16]\u200b[54]\u200b \n\"The pornography, child prostitution and masive violence themes in some of the movies [availaible in Netflix's catalogue] threaten our moral values (Los temas de pornograf\u00eda, prostituci\u00f3n infantil y violencia masiva en algunas de las pel\u00edculas [disponibles en el cat\u00e1logo de Netflix] amenazan nuestros valores morales)\"[16]\u200b[55]\u200b\nEn el mismo a\u00f1o y contexto, el vice-ministerio de Comunicaciones ruso, Alexei Volin, lament\u00f3 que Netflix no hubiera consultado con las autoridades del pa\u00eds, incluidas las agencias reguladoras de medios, mientras que el ministro de Cultura, Vladimir Medinsky, equipar\u00f3 a la plataforma a un caballo de Troya con el que el gobierno estadounidense piensa infiltrarse en los hogares de todo el mundo.[16]\u200b\nA pesar de las acusaciones de imperialismo cultural estadounidense, Netflix ha realizado esfuerzos para ofrecer contenido con diversidad cultural de diversas partes del mundo para que su cat\u00e1logo sea de inter\u00e9s en diversas fronteras y alcanzar as\u00ed a m\u00e1s clientes. Por ejemplo, cuando inici\u00f3 operaciones en Asia, invirti\u00f3 en m\u00e1s de 180 producciones originales en toda la regi\u00f3n, contratando personal local y generando m\u00e1s de 8 mil puestos de trabajo en productores, elenco y equipo, adem\u00e1s de rodar en lugares como Bali, Bangkok, Chiang Mai y Penang.[56]\u200b"}, {"name": "Efectos sociales y en la salud", "text": "El modelo de video bajo demanda del que es parte Netflix junto con otras compa\u00f1\u00edas como Hulu o Amazon Prime Video, ha recibido diversas cr\u00edticas relacionadas con los efectos sociales y de salud que produce el visionado de m\u00e1s de una pel\u00edcula o cap\u00edtulos de serie en una sola sesi\u00f3n, pr\u00e1ctica conocida como maratones o binge-watching. Especialmente se critica su sistema que favorece estas pr\u00e1cticas como la existencia de series con episodios con finales inconclusos o impactantes, la reproducci\u00f3n autom\u00e1tica de episodios siguientes activada de forma predeterminada, y su presentaci\u00f3n en forma de listas de tareas.[57]\u200b[58]\u200b[59]\u200b"}, {"name": "Participaci\u00f3n en el cambio clim\u00e1tico", "text": "Netflix representa m\u00e1s de un tercio del tr\u00e1fico de Internet en los Estados Unidos.[60]\u200b Esto conduce a un consumo de energ\u00eda significativo y, asociado con eso, a emisiones significativas de gases de efecto invernadero.[60]\u200b La transmisi\u00f3n y visualizaci\u00f3n de servicios de video a pedido, como Netflix, libera alrededor de 100 millones de toneladas de di\u00f3xido de carbono cada a\u00f1o. Esto corresponde a aproximadamente el 0.3% de las emisiones globales. El uso de tales servicios de video libera aproximadamente tanto CO2 por a\u00f1o como el estado de B\u00e9lgica.[61]\u200b Netflix tiene una participaci\u00f3n sustancial en esto. A diferencia de otras plataformas importantes de streaming de video, Netflix no proporciona informes regulares sobre el uso de energ\u00eda, las emisiones de gases de efecto invernadero o la combinaci\u00f3n energ\u00e9tica real de sus actividades globales.[62]\u200b Hasta ahora, Netflix no se ha comprometido p\u00fablicamente a utilizar energ\u00edas renovables.[62]\u200b"}, {"name": "Efectos en la cultura cinematogr\u00e1fica y televisiva", "text": "Una de las mayores cr\u00edticas o posiciones contrarias que se han construido en torno a las plataformas de streaming en general, y de Netflix en particular, gira en torno a la forma en que \u00e9stas han cambiando la cultura audiovisual de su p\u00fablico. Estas voces cr\u00edticas afirman que, al priorizar sus propias producciones (Netflix cada vez produce series de mayor calidad y presupuesto)[63]\u200b[64]\u200b y borrar de su cat\u00e1logo regularmente cada vez m\u00e1s pel\u00edculas y producciones de otras compa\u00f1\u00edas,[65]\u200b as\u00ed como el tener un cat\u00e1logo limitado de pel\u00edculas antiguas, la compa\u00f1\u00eda genera cambios en los h\u00e1bitos de consumo, particularmente, entre sus miembros m\u00e1s j\u00f3venes.[66]\u200b[67]\u200b Uno de los casos m\u00e1s sonados a este respecto es el retiro del cat\u00e1logo de pel\u00edculas y series hechas o bajo control de Disney, esto debido a la gran cantidad de productos que esto significa y al apego del p\u00fablico a muchas de estas producciones.[68]\u200b\nEsta posici\u00f3n de la industria y de algunos especialistas en medios contrasta con la percepci\u00f3n altamente positiva que tiene Netflix entre sus usuarios, principalmente entre los m\u00e1s j\u00f3venes.[69]\u200b Ante estas cr\u00edticas, Netflix se defiende argumentando los altos costos de renovaci\u00f3n de las licencias de los productos externos, por lo que cuando su licencia expira y no puede ser renovada, avisa a sus suscriptores con anticipaci\u00f3n para que vean el contenido afectado antes de su desaparici\u00f3n.[70]\u200b\nDe manera espec\u00edfica, la empresa ubicada en California ha sido abiertamente criticada por la industria cinematogr\u00e1fica, que considera que el rechazo de Netflix a estrenar sus pel\u00edculas originales en las salas de cine provocar\u00e1 la muerte del modelo como se conoce hasta ahora. Situaci\u00f3n que ya se ve\u00eda desde la aparici\u00f3n de la televisi\u00f3n, el VHS y el DVD.[71]\u200b[72]\u200b\nEn su editorial de diciembre de 2014, el Film Journal International consider\u00f3 como desleal dicha estrategia de no exhibir sus producciones originales de la manera tradicional en salas antes de ponerlas a disposici\u00f3n de sus socios en el cat\u00e1logo digital. En el texto, escrito a manera de carta dirigida a Ted Sarandos, el encargado de programaci\u00f3n de la compa\u00f1\u00eda, la revista dec\u00eda: \n\"Ir al cine es un pasatiempo americano. \u00bfQuieres ser conocido Ted, como, un traidor?\" - An Open Letter to Netflix's Ted Sarandos[73]\u200b\nReed Hastings, presidente y fundador de la compa\u00f1\u00eda, declar\u00f3 en 2015 que la televisi\u00f3n quedar\u00e1 obsoleta en 30 a\u00f1os. Esto provoc\u00f3 varias cr\u00edticas, pues uno de los problemas que Netflix y otras plataformas similares enfrentan es la fragmentaci\u00f3n de los contenidos debido a los problemas de licencias.[74]\u200b Otra cr\u00edtica es un presunto sesgo ideol\u00f3gico hacia la izquierda pol\u00edtica de las producciones de la plataforma, lo cual causar\u00eda que algunos sectores conservadores la miren con desconfianza.[75]\u200b\nOtro aspecto que genera debates sobre Netflix, es la recolecci\u00f3n de datos que utiliza de sus usuarios para la producci\u00f3n de nuevos contenidos. Seg\u00fan el periodista Alejandro Eloy Rodr\u00edguez, en su libro \u2018El planeta Netflix\u2019, indica c\u00f3mo Netflix estudia el comportamiento de los suscriptores para medir la creaci\u00f3n de nuevos contenidos, reduciendo los riesgos econ\u00f3micos de la producci\u00f3n:\n\"Las producciones de Netflix estar\u00e1n cada vez m\u00e1s medidas, basadas en la informaci\u00f3n que los usuarios ofrecen a la plataforma desde hace a\u00f1os. Lo cual abre nuevos interrogantes en el plano cultural: \u00bfcu\u00e1nto lugar habr\u00e1 para la expresi\u00f3n art\u00edstica, para lo impredecible, lo instant\u00e1neo, aquella sinceridad del esp\u00edritu humano que no se explica en algoritmos? Quiz\u00e1s lo preocupante no sea lo que Netflix est\u00e1 haciendo en el mundo televisivo, sino cinematogr\u00e1fico\"[76]\u200b"}, {"name": "Mismo paradigma", "text": "Aunque una gran cantidad de acad\u00e9micos y especialistas de medios consideran a los servicios digitales que distribuyen contenidos audiovisuales por internet como la revoluci\u00f3n dentro de la industria del entretenimiento,[77]\u200b autores como Michael Wolff tienen una opini\u00f3n contraria. Para este periodista, la esencia de Netflix es m\u00e1s cercana a la de la televisi\u00f3n que a la de internet.\nDe acuerdo a lo que plantea en su libro Television is the New Television (La televisi\u00f3n es la nueva televisi\u00f3n, 2015), en lugar de potenciar las caracter\u00edsticas interactivas propias de internet, Netflix decidi\u00f3 favorecer estructuras, narrativas y est\u00e9ticas ya establecidas por la industria televisiva. De la misma forma, argumenta que al transformarse de una compa\u00f1\u00eda de alquiler de DVD en un estudio digital, la plataforma de streaming traslad\u00f3 a las pantallas de computadora comportamientos, valores, esquemas y experiencias de la industria televisiva -como la visualizaci\u00f3n pasiva de contenidos-, haciendo que lo que hasta ese momento se consideraba herramientas interactivas y de flujo bidireccional de informaci\u00f3n, en algo m\u00e1s parecido a la vieja televisi\u00f3n.[16]\u200b[78]\u200b\nEn este sentido, el periodista franc\u00e9s Thibault Henneton de Le Monde diplomatique considera que Netflix no deja de ser una \"m\u00e1quina traga talentos\", que se alimenta de lo que las cadenas y estudios tradicionales de todo el mundo rechazan. Es as\u00ed, por ejemplo, que termin\u00f3 apoyando el proyecto de Roma de Cuar\u00f3n, no por haber sido parte del desarrollo desde el inicio, sino porque todos los estudios a los que se acerc\u00f3 el cineasta mexicano lo rechazaron. La virtud de Netflix estar\u00eda en tener los datos el \"valor\" de revender productos de nicho, y no solamente historias de superh\u00e9roes, como los estudios de Hollywood.[20]\u200b\nPor su parte, autores como Toby Miller recuerdan que el poder institucional de la televisi\u00f3n permanece, aunque muchos lo consideren cosa del pasado. Para Miller, la continuidad de la industria televisiva se percibe en la producci\u00f3n de programas y en la publicidad: destacan que mucha de la producci\u00f3n de contenidos distribuidos por internet sigue siendo b\u00e1sicamente televisi\u00f3n, que las cadenas de TV tradicionales (se\u00f1al abierta o cable) siguen siendo fundamentales para el mercado del streaming. En resumen, apunta en su libro Television Studies: The Basics (Los fundamentos de los estudios sobre la televisi\u00f3n, 2011), la gente sigue viendo televisi\u00f3n e incluso en cantidades m\u00e1s importantes que en otras d\u00e9cadas, lo \u00fanico que ha cambiado es c\u00f3mo se distribuyen los contenidos.[16]\u200b"}, {"name": "Tratamiento de datos personales", "text": "Debido a la gran cantidad de datos personales que administra Netflix, especialistas en el tema han expresado temor a la forma en que estos son tratados por la compa\u00f1\u00eda, incluso antes de la puesta en marcha de su servicio de VOD por streaming.[34]\u200b La demanda legal conocida como \"Doe Vs. Netflix\" es un ejemplo de dichos temores.\nEn diciembre de 2009, una clienta del servicio de alquiler de DVD por correspondencia en los Estados Unidos interpuso una demanda en una corte federal por violaci\u00f3n a la protecci\u00f3n de la privacidad cometido por Netflix. La demandante, conocida bajo el seud\u00f3nimo de \"Jane Doe\", era una madre de familia lesbiana residente del estado de Ohio quien culpaba a la empresa de invadir su privacidad al liberar los datos de su registro de rentas -junto con el de casi medio mill\u00f3n de clientes- para que los participantes del Premio Netflix o Netflix Prize pudieran mejorar el sistema de predicci\u00f3n de la plataforma. Aunque dichos datos no inclu\u00edan el nombre de los clientes sino que los identificaba \u00fanicamente con un c\u00f3digo num\u00e9rico, dos semanas despu\u00e9s de lanzada la convocatoria del concurso, dos investigadores de la Universidad de Texas, Arvind Narayanan y Vitaly Shmatikov, fueron capaces de identificar por nombre a algunos de los clientes cuyos datos fueron liberados.\nPublicado en l\u00ednea, el borrador del art\u00edculo acad\u00e9mico de Narayanan y Shmatikov afirmaba que, al cruzar los datos de Netflix con rese\u00f1as del sitio Internet Movie Database (IMDb) se pod\u00edan determinar no solo el nombre de la persona sino incluso rasgos de su personalidad como preferencias pol\u00edticas, afiliaci\u00f3n religiosa, sexualidad e incluso complexi\u00f3n f\u00edsica. Aunque la identidad de la mujer nunca fue descubierta por ning\u00fan equipo del concurso ni por nadie m\u00e1s, el argumento en la demanda era el temor de que su homosexualidad fuera descubierta a trav\u00e9s de su consumo de pel\u00edculas (el cual inclu\u00eda un alto n\u00famero de t\u00edtulos con tem\u00e1tica homosexual) y que esta revelaci\u00f3n afectara su vida familiar y profesional.\nEn marzo de 2010, Netflix y \"Jane Doe\" llegaron a un acuerdo que nunca se hizo p\u00fablico. Como resultado de la demanda, la segunda edici\u00f3n del Premio Netflix nunca se realiz\u00f3 aunque se hab\u00eda anunciado.[30]\u200b[31]\u200b"}, {"name": "Opci\u00f3n de alterar la velocidad de reproducci\u00f3n", "text": "A finales de octubre de 2019, Netflix puso a prueba para sus usuarios con el sistema operativo Android la opci\u00f3n para alterar la velocidad de reproducci\u00f3n de sus videos - desacelerarlo 0.5x o 0.75x; o acelerarla 1.25x o 1.5x. Lo anterior gener\u00f3 cr\u00edticas en redes sociales de parte de realizadores como Judd Apatow y Peyton Read, y el actor Aaron Paul quienes consideraron que era una idea terrible y que era la decisi\u00f3n de los creadores de contenido y no de los distribuidores, c\u00f3mo eran presentadas las obras. Netflix contest\u00f3 que era tan solo una prueba y que era probable que no pasara de esta fase.[79]\u200b[80]\u200b[81]\u200b\nLa edici\u00f3n francesa de 20 Minutes consider\u00f3 la pol\u00e9mica como \"una tormenta en un vaso de agua\" y record\u00f3 que la posibilidad de ver materiales audiovisuales a otra velocidad existe desde antes de que Netflix pusiera a disposici\u00f3n esta prueba en Android y mencion\u00f3 que el speed-watching - ver videos a alta velocidad - es una pr\u00e1ctica com\u00fan disponible desde hac\u00eda tiempo en dispositivos como el reproductor VLC y en la plataforma YouTube.[81]\u200b"}, {"name": "Compra del Egyptian Theater de L.A.", "text": "En 2019 diversos reportes de prensa indicaron la intenci\u00f3n de Netflix de llegar a un acuerdo por 10 millones de d\u00f3lares con la American Cinematheque, que opera el Egyptian Theater, sala de cine ic\u00f3nica de Los \u00c1ngeles. En mayo del siguiente a\u00f1o, el servicio de streaming anunci\u00f3 que la operaci\u00f3n se hab\u00eda concretado pero ni \u00e9ste ni la cinemateca revelaron la cantidad final del trato. La comunidad art\u00edstica de Los \u00c1ngeles se opuso al trato desde un inicio debido a que la restauraci\u00f3n del lugar involucr\u00f3 inversi\u00f3n p\u00fablica de orden municipal y federal, esto a pesar de que Netflix asegur\u00f3 que el equipo y operaciones de la cinemateca continuar\u00edan como hasta ese momento, mientras que la empresa de Los Gatos usar\u00eda el local solo entre semana para sus propios proyectos.[22]\u200b[23]\u200b\nPara finales de julio de 2020, m\u00e1s de 3000 personas hab\u00edan firmado una petici\u00f3n subida al sitio Change.org exigiendo a la cinemateca que transparentara la operaci\u00f3n financiera, comenzando por revelar la cantidad pagada por Netflix.[24]\u200b"}, {"name": "Cr\u00edticas y controversias a productos originales en particular", "text": "Entre las producciones originales que desde 2013 ha creado la compa\u00f1\u00eda, existen varios casos que han causado cr\u00edticas y controversias por el tratamiento de un tema o su contenido, como la serie de ficci\u00f3n 13 Reasons Why[82]\u200b[83]\u200b o la serie documental protagonizada por Gwyneth Paltrow, Goop Lab.\nGoop Lab\nEstrenada en el cat\u00e1logo el 24 de enero de 2020, la serie documental Goop Lab, protagonizada por Gwyneth Paltrow, caus\u00f3 controversia por las posibles repercusiones de su contenido para la salud p\u00fablica y para la forma en que el p\u00fablico percibe la ciencia.\nEl proyecto naci\u00f3 cuando en febrero de 2019, la marca de estilo de vida Goop, propiedad de Paltrow, firm\u00f3 un acuerdo para producir una serie promocional con formato de documental con temas de bienestar y \"salud natural\" para Netflix. Desde un inicio, dicho acuerdo le gener\u00f3 cr\u00edticas al servicio de streaming por considerar que le daba a Paltrow una plataforma para promocionar su marca, la cual ha sido criticada por hacer declaraciones sin fundamento sobre la efectividad de los tratamientos y productos de salud que promueve.\nM\u00faltiples cr\u00edticos argumentaron que la firma del acuerdo fue \"una victoria para la pseudociencia\".[84]\u200b[85]\u200b[86]\u200b[87]\u200b Una vez que Goop Lab estuvo disponible en el cat\u00e1logo de series, numerosos medios de comunicaci\u00f3n publicaron duras cr\u00edticas a la decisi\u00f3n de Netflix de promover Goop:\nEl peri\u00f3dico espa\u00f1ol El Pa\u00eds public\u00f3 una fuerte cr\u00edtica titulada \"Gwyneth Paltrow en Netflix, un problema de salud p\u00fablica\" en la cual se afirma que el programa es un manual de argucias y falacias para defender falsos remedios y le hace \"un terrible da\u00f1o a la confianza popular en la ciencia\". Y que finalmente el resultado de la serie parece ser el enaltecimiento de la charlataner\u00eda y el abultamiento de la cuenta bancaria de Paltrow.[88]\u200b\nEl sitio sobre religi\u00f3n y espiritualidad Patheos public\u00f3 un art\u00edculo titulado \"Goop lab de Gwyneth Paltrow es basura anticient\u00edfica. Despu\u00e9s empeora.\" En dicho texto se afirma que es una verg\u00fcenza que Netflix promueva este \"sinsentido da\u00f1ino\", y que el programa puede causar un gran da\u00f1o a la salud p\u00fablica si los espectadores lo toman en serio.[89]\u200b\nLa revista Wired, en su versi\u00f3n brit\u00e1nica, escribi\u00f3 varias cr\u00edticas centradas en la serie en particular[90]\u200b[91]\u200b y en Netflix en general, diciendo \"\u00bfCrees que Goop es malo? Es solo la punta del iceberg de la pseudociencia en Netflix\".[92]\u200b"}, {"name": "Censura", "text": "Netflix censura partes de los v\u00eddeos que creen que pueden infringir la clasificaci\u00f3n por edad.[93]\u200b"}, {"name": "Perdida de suscriptores", "text": "En abril de 2022, se report\u00f3 que Netflix perdi\u00f3 alrededor de 200 mil\u00a0suscriptores, provocando una ca\u00edda de acciones del 25% y perdiendo alrededor de 30 mil\u00a0millones de d\u00f3lares. Algunas de las razones de esta situaci\u00f3n podr\u00edan ser el anuncio de establecer un m\u00e9todo para evitar el uso de cuentas compartidas, el costo elevado de la mensualidad, y el que los usuarios, luego de 2 a\u00f1os de pandemia, han visto gran parte del cat\u00e1logo y decidieron migrar a otras plataformas en busca de nuevos contenidos.[94]\u200b\nLa Invasi\u00f3n rusa de Ucrania de 2022 tambi\u00e9n provoc\u00f3 una p\u00e9rdida de alrededor de 700 mil\u00a0suscriptores entre febrero y marzo de 2022: en represalia por la invasi\u00f3n, Netflix suspendi\u00f3 su servicio en Rusia perdiendo as\u00ed a los suscriptores de ese pa\u00eds.[95]\u200b"}, {"name": "Fin de las cuentas compartidas y reducci\u00f3n de precios.", "text": "En febrero de 2023 empez\u00f3 la implementaci\u00f3n de la prohibici\u00f3n de cuentas en distintos hogares, una medida que se volvi\u00f3 impopular a nivel mundial; en respuesta, la plataforma inici\u00f3 una reducci\u00f3n de precios, empezando en 30 pa\u00edses tales como Croacia, Eslovenia, Bulgaria, Yemen, Jordania, Libia, Ir\u00e1n, Kenia, Malasia, Indonesia, Tailandia y Filipinas.[96]\u200b"}]}, {"name": "Expansi\u00f3n internacional", "text": "\u00a0\u00a0\u00a0\u00a0\u00a0Disponible\n\u00a0\u00a0\u00a0\u00a0\u00a0No disponible\nDesde 2016, el servicio de VOD de Netflix est\u00e1 disponible en todo el mundo a excepci\u00f3n de la regi\u00f3n de Crimea y los territorios nacionales de China, Corea del Norte y Siria. En el caso de China, todav\u00eda en julio de 2019 la empresa estudiaba la forma de ofrecer sus servicios, si bien mucha gente accede a ellos a trav\u00e9s de alguna red privada virtual o VPN; mientras que las restricciones establecidas por el gobierno estadounidense impiden que cualquier compa\u00f1\u00eda haga negocios en Rusia, Corea del Norte, Siria y Crimea.[97]\u200b\nSi bien la presencia de Netflix en el mercado internacional lo hace un \"\u00edcono indiscutible de las transformaciones de la televisi\u00f3n\",[98]\u200b el papel que juega en cada pa\u00eds o regi\u00f3n es muy diferente, yendo de actor disruptivo en los mercados de habla inglesa como Estados Unidos, Canad\u00e1 o Australia, pasando por servicio de nicho en Europa y Am\u00e9rica Latina, hasta llegar a un actor sin importancia en \u00c1frica y Medio Oriente.[16]\u200b En Polonia, por ejemplo, durante su primer mes (septiembre de 2016), alcanz\u00f3 cerca de un mill\u00f3n de suscriptores gracias al servicio de prueba gratuito de 30 d\u00edas. Sin embargo, para finales de 2018 la cifra hab\u00eda descendido a alrededor de 750000 clientes, la mayor\u00eda de los cuales son j\u00f3venes de grandes ciudades y de clase acomoda.[98]\u200b\nEn general, al hablar del impacto de Netflix a nivel mundial se debe tomar en cuenta que el servicio es un hecho en la teor\u00eda mas no en la pr\u00e1ctica. Esto se debe, muchas veces, a factores ajenos a la empresa, como el ancho de banda y condiciones generales de conectividad a internet o los altos costos de los paquetes de datos de alta velocidad necesarios para soportar el visionado de videos en la plataforma. En otros casos se trata de las condiciones establecidas por la propia empresa, las cuales no pueden ser cumplidas por los clientes, como la restricci\u00f3n de pagar \u00fanicamente con tarjeta de d\u00e9bito o cr\u00e9dito.[16]\u200b[99]\u200b\nEl ejemplo de Cuba sirve para ilustrar lo anterior. En febrero de 2015, Netflix anunci\u00f3 su entrada al pa\u00eds caribe\u00f1o luego de que la administraci\u00f3n del presidente Barack Obama retirara las sanciones impuestas a la isla desde la \u00e9poca de la Guerra Fr\u00eda. Sin embargo, aunque el servicio est\u00e9 disponible, solo el 5% de la gente tiene acceso a internet y este tiene muy baja velocidad; los ciudadanos cubanos no tienen permitidas las tarjetas de cr\u00e9dito y Netflix no acepta pago en efectivo en el pa\u00eds; y finalmente el costo de servicio de 7.99 por mes es muy alto si se considera que el salario promedio en la isla es de 17 d\u00f3lares mensuales.[16]\u200b[100]\u200b[101]\u200b\nEn opini\u00f3n de algunos medios y voces expertas, la entrada a ciertos mercados como el cubano tiene una justificaci\u00f3n simb\u00f3lica, como el poder afirmar que Netflix es un servicio global y que fue una de las empresas estadounidenses que llev\u00f3 sus servicios a un determinado mercado.[100]\u200b[101]\u200b\nPara el 18 de septiembre ya se hab\u00eda ampliado a Dinamarca, Finlandia, Noruega y Suecia.[105]\u200b", "subsections": [{"name": "Cierre de Netflix en Rusia", "text": "Netflix ya no atiende a clientes en Rusia en medio de la invasi\u00f3n de Ucrania ordenada por Vlad\u00edmir Putin.\nConfirmaron que la plataforma de transmisi\u00f3n cerr\u00f3 por completo en Rusia, el domingo 6 de marzo de 2022.\nNetflix anunci\u00f3 previamente que cancelar\u00eda todos los proyectos y adquisiciones futuros de Rusia, uni\u00e9ndose a muchos pa\u00edses que han cortado lazos con el pa\u00eds de manera similar debido a la invasi\u00f3n rusa de Ucrania.[117]\u200b"}]}, {"name": "Competencia", "text": "", "subsections": [{"name": "Situaci\u00f3n en Estados Unidos", "text": "El \u00e9xito de Netflix fue seguido por el establecimiento de otras muchas empresas de alquiler de DVD, tanto en Estados Unidos como en el extranjero, Walmart inici\u00f3 un servicio de alquiler en l\u00ednea en octubre de 2002, pero abandon\u00f3 el mercado en mayo de 2005. Sin embargo, adquiri\u00f3 m\u00e1s tarde el servicio de alquiler de Vud\u00fa, en 2010.[118]\u200b\nActualmente su mayor competidor es Hulu, pues ofrece en Estados Unidos y Jap\u00f3n un modo gratuito que incluye anuncios, acceso limitado a su videoteca y solo un PC, y otro de pago con acceso completo, sin publicidad y menos restricciones. Esto lo hizo popular y le gan\u00f3 el apodo de \"El Spotify de la televisi\u00f3n.\"\nBlockbuster Video entr\u00f3 en el mercado en l\u00ednea de Estados Unidos en agosto de 2004, con un servicio de suscripci\u00f3n mensual de $19.95. Esto provoc\u00f3 una guerra de precios; Netflix hab\u00eda planteado su popular plan de tres discos de $19.95 a $21.99 justo antes de la puesta en marcha de Blockbuster, pero en octubre, Netflix reduce esta tasa a $17,99. Blockbuster respondi\u00f3 con tasas tan bajas como $14.99 por un tiempo, pero, en agosto de 2005, ambas empresas se establecieron a tasas id\u00e9nticas.[119]\u200b El 22 de julio de 2007, Netflix dej\u00f3 caer los precios de sus dos planes m\u00e1s populares en $1,00 en un esfuerzo por competir mejor con Blockbuster en l\u00ednea.[120]\u200b El 4 de octubre de 2012, Dish Network desech\u00f3 planes de convertir a Blockbuster en un competidor de Netflix.[121]\u200b (Dish adquiri\u00f3 el decadente Blockbuster, LLC en 2011 y continu\u00f3 licenciando la marca de franquicias, adem\u00e1s, mantendr\u00e1 su servicio de streaming de v\u00eddeo \"Blockbuster on Demand\" abierta).\u2009[122]\u200b\nEn 2005, Netflix citaba como un potencial competidor a Amazon.com,[123]\u200b que hasta el a\u00f1o 2008, ofreci\u00f3 alquiler de videos en l\u00ednea en el Reino Unido y Alemania. Esta divisi\u00f3n de la empresa fue vendida a LoveFilm; sin embargo, Amazon la compr\u00f3 en 2011.[124]\u200b Adem\u00e1s, ahora transmite pel\u00edculas y programas de televisi\u00f3n a trav\u00e9s de Amazon Video (antes Amazon Video On Demand y LOVEFiLM Instant).[125]\u200b\nRedbox es otro competidor que utiliza un enfoque kiosco: En lugar de enviar los DVD, los clientes recogen y devuelven los DVD en los quioscos de autoservicio ubicados en \u00e1reas metropolitanas. En septiembre de 2012, Coinstar, los propietarios de Redbox, anunciaron planes de asociarse con Verizon para poner en marcha Redbox Instant by Verizon a finales de 2012.[126]\u200b A principios de 2013, Redbox Instant by Verizon comenz\u00f3 una versi\u00f3n beta limitada de su servicio,[127]\u200b que fue descrita por los cr\u00edticos como \"No asesino Netflix\",[128]\u200b debido a \"problemas t\u00e9cnicos y la b\u00fasqueda mediocre.\"\u2009[129]\u200b\nCuriosityStream, un servicio basado en suscripci\u00f3n pr\u00e9mium libre de publicidad, similar a Netflix, fue lanzado en marzo de 2015, ofreciendo un contenido estrictamente de no ficci\u00f3n, enfocado en las \u00e1reas de la ciencia, la tecnolog\u00eda, la civilizaci\u00f3n y el esp\u00edritu humano, se ha denominado el \"nuevo Netflix de no ficci\u00f3n\".[130]\u200b\nHulu Plus, como Netflix y Amazon Prime Instant Video, \"tiene sus propias ofertas de contenido exclusivo y original\", como Netflix \"para no solo continuar atrayendo nuevos suscriptores, sino tambi\u00e9n mantener los ya existentes\".[131]\u200b\nOtra compa\u00f1\u00eda que tom\u00f3 el modelo fue DAZN, que lo aplic\u00f3 a los deportes, ofreciendo deportes en directo y grabados con una tarifa plana. Gan\u00f3 notoriedad recientemente despu\u00e9s de que HBO abandonara la transmisi\u00f3n de peleas de boxeo para ser tomadas posteriormente por esta compa\u00f1\u00eda.\nNetflix y Blockbuster evitan en gran medida ofrecer pornograf\u00eda, pero varios servicios de suscripci\u00f3n de v\u00eddeos \"para adultos\" se inspiraron en Netflix, tales como SugarDVD y WantedList.[132]\u200b[133]\u200b\nEn octubre de 2019, los medios estadounidenses reportaron e informaron que Disney dejar\u00eda de transmitir publicidad de Netflix en sus diferentes cadenas, tanto en las de televisi\u00f3n abierta estadounidense, especialmente ABC, como en las de cable. La \u00fanica excepci\u00f3n en ese momento ser\u00eda ESPN, cadena por cable especializada en deportes, tema en donde no compite con Netflix. De acuerdo a los reportes especiales, esta acci\u00f3n ser\u00eda parte de los preparativos de Disney antes del lanzamiento de su servicio de streaming Disney+, anunciado para noviembre del mismo a\u00f1o en los Estados Unidos y Canad\u00e1.[134]\u200b[135]\u200b[136]\u200b[137]\u200b\nEn marzo de 2020, WarnerMedia Direct retir\u00f3 todo su cat\u00e1logo de Cartoon Network, Adult Swim, TNT y la biblioteca de Warner Bros. de Netflix en los Estados Unidos para migrar a HBO Max y competir con Netflix.[138]\u200b"}, {"name": "Otros pa\u00edses y regiones", "text": "En Australia, Netflix compite con varias empresas locales de streaming, incluyendo Foxtel/Seven West Media empresa de Presto, Nine Entertainment Co./Fairfax Media empresa de Stan y Quickflix. En Escandinavia, Netflix compite con Viaplay, HBO Nordic y CMore Play. En el sudeste asi\u00e1tico, Netflix compite con Astro On the Go, Sky on Demand, Singtel TV, HomeCable OnDemand, e iflix.[139]\u200b En Nueva Zelanda, Netflix compite con empresas locales de streaming, incluyendo Televisi\u00f3n New Zealand (TVNZ), Mediaworks New Zealand, Sky Network Television, Lightbox, Neon y Quickflix. En Italia, Netflix solo compite con Infinity (Mediaset), Sky Online y TIMvision. En Sud\u00e1frica, Netflix compite con ShowMax.[140]\u200b\nEn Iberoam\u00e9rica, Netflix compite en M\u00e9xico con Blim[141]\u200b de Grupo Televisa,[142]\u200b Cin\u00e9polis Klic y Totalplay.[143]\u200b En otros pa\u00edses de la regi\u00f3n compite con HBO GO (ahora HBO Max),[144]\u200b[145]\u200b QubitTV,[146]\u200b Disney+, Star+ (Anteriormente FOX Play) y Claro video.[147]\u200b[148]\u200b\nEn Argentina se compite con Cablevisi\u00f3n Flow de Telecom, TeleCentro Play de Grupo Pierri, Cont.ar y CINE.AR Play, propiedad de Contenidos P\u00fablicos S.E.[149]\u200b\nEn Espa\u00f1a inicialmente se especulaba que Netflix no entrar\u00eda a operar sus servicios por los altos precios de derecho de autor comparados con otros pa\u00edses de Europa[150]\u200b como Francia o Alemania[151]\u200b y por la alta tasa de sitios web de streaming ilegales[152]\u200b y pirater\u00eda.[153]\u200b En octubre de 2015[154]\u200b Netflix lleg\u00f3 al pa\u00eds europeo[155]\u200b de forma independiente, y con Vodafone TV[156]\u200b en donde estuvo integrado en los decodificadores[157]\u200b de la compa\u00f1\u00eda Vodafone TV para contrarrestar a Movistar+ y Yomvi.[156]\u200b Actualmente, Netflix compite con los servicios de streaming de Movistar+,[158]\u200b[159]\u200b HBO, Amazon Prime, Apple TV, RakutenTV, Filmin, y, en menor medida puesto que son plataformas gratuitas, con Atresplayer y Flooxer (propiedad de Atresmedia), Mitele y Mtmad (propiedad de Mediaset Espa\u00f1a),\u00a0iTunes y Google Play.[160]\u200b\nEn 2019, Canal+, competidor de Netflix en Francia se convirti\u00f3 en su aliado cuando las empresas presentaron un paquete conjunto que entr\u00f3 en vigor a partir del 15 de octubre de ese a\u00f1o. La oferta, ofrecida a trav\u00e9s de Canal+, consiste en que al pagar su paquete CINE/SERIES se obtiene acceso a los m\u00e1s de 20 canales de la empresa francesa, as\u00ed como al servicio est\u00e1ndar de 2 pantallas y calidad HD de Netflix.[114]\u200b[115]\u200b[161]\u200b 2016).[162]\u200b[163]\u200b"}, {"name": "Principales plataformas competidoras", "text": "Plataformas\nApple TV+\nDisney+\nESPN+ (servicio de streaming)\nHBO Max\nMubi (streaming)\nDish Network\nViki\nHulu\nbeIN Connect\nAMC+\nAcorn TV\nFunimation\nPeacock (servicio de streaming)\nAT&T Now\nTubi\nGloboplay\nLionsgate+\nBaidu\nDiscovery+\nSony Crackle\nSkyShowtime-Paramount+-Paramount Streaming\nCBS All Access\nAmazon Prime Video\nCrunchyroll"}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Internet. Contenido relacionado con Internet.\nCategor\u00eda principal:  Servicios de v\u00eddeo bajo demanda\nAnexo:Premios y nominaciones al \u00d3scar de Netflix", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abWhere is Netflix available?\u00bb [\u00bfD\u00f3nde est\u00e1 disponible Netflix?]. Netflix.\u00a0\n\u2191 a b c d e f Hastings, Reed; Wells, David (29 de enero de 2015). \u00abNetflix, Inc. \u2013 Annual Report [2014]\u00bb. ir.netflix.com. Netflix. Archivado desde el original el 8 de marzo de 2014. Consultado el 21 de abril de 2015.\u00a0\n\u2191 a b c d e f \u00abAbout Netflix\u00bb [Sobre Netflix]. Netflix.\u00a0\n\u2191 a b c Mininger, Dylan (17 de febrero de 2019). \u00abThe Netflix algorithm and the success of streaming\u00bb. Driftwood (en ingl\u00e9s) (Nueva Orleans, Estados Unidos: The University of New Orleans). Consultado el 24 de junio de 2019. \u00abAs the years went on, Netflix only grew stronger and stronger, moving its streaming service to various countries and various streaming platforms. It was starting to seem like this was all too good to be true. Yes, they had a tough time getting a large and eclectic collection of films and tv shows, but Netflix was growing larger and larger by the day.\nSomewhere during this developmental stage, they developed the algorithm. Essentially, the algorithm is a complex system that arranges the large catalog of films they have on their service based on what will interest you, the viewer.\u00a0\u00bb\u00a0\n\u2191 a b Heisler, Yoni (10 de febrero de 2016). \u00abWhat Netflix ratings really mean, and how they work\u00bb. BGR (en ingl\u00e9s). Consultado el 24 de junio de 2019.\u00a0\n\u2191 a b Heisler, Yoni (20 de marzo de 2017). \u00abThe secret behind Netflix\u2019s mysterious ratings system\u00bb. BGR (en ingl\u00e9s). Consultado el 24 de junio de 2019.\u00a0\n\u2191 a b Caviaro, Juan Luis (23 de abril de 2017). \u00abNetflix cambi\u00f3 al sistema de pulgares porque no entend\u00edamos c\u00f3mo funcionaban las estrellas\u00bb. Espinof. Consultado el 24 de junio de 2019.\u00a0\n\u2191 \u00abNetflix Q1 Earnings Up 88%, Adds 3.M Subscribers\u00bb. SeekingAlpha. 25 de abril de 2011.\u00a0\n\u2191 TechCrunch. \u201cNetflix.\u201d Recuperado el 5 de agosto de 2014.\n\u2191 \u00abNetflix original documentary gets Oscar nomination\u00bb. The Technology Chronicles (en ingl\u00e9s estadounidense). Consultado el 1 de abril de 2016.\u00a0\n\u2191 Kung, Michelle (16 de enero de 2014). \u00abEgypt Documentary 'The Square' Could Put Netflix in Winner's Circle at Oscars\u00bb. The Wall Street Journal Speakeasy Blog (New York City, New York: News Corp). ISSN\u00a00099-9660. OCLC\u00a0781541372. Archivado desde el original el 8 de marzo de 2014. Consultado el 8 de marzo de 2014.\u00a0\n\u2191 Olivares, Edgar. \u00ab\u00c9lite y La Casa de Papel entre las 10 series m\u00e1s vistas de todo el mundo\u00bb. C\u00f3digo Espagueti. Consultado el 25 de julio de 2022.\u00a0\n\u2191 Lee, Wendy (21 de abril de 2020). \u00abRecord high Netflix subscriptions in coronavirus crisis\u00bb. L.A. Times (en ingl\u00e9s) (Los Angeles, Estados Unidos). Consultado el 4 de mayo de 2020.\u00a0\n\u2191 \u00abNetflix sufre en Bolsa tras anunciar que perdi\u00f3 200.000 clientes en el primer trimestre de 2022\u00bb. El Pa\u00eds (Los Angeles, EUA). Bloomberg. 19 de abril de 2022. Consultado el 21 de abril de 2022.\u00a0\n\u2191 \u00ab\u00bfPublicidad en Netflix?\u00bb.\u00a0\n\u2191 a b c d e f g h i j k l m n \u00f1 Lobato, Ramon (2019). Netflix Nations. The Geography of Digital Distribution (en ingl\u00e9s). Nueva York: New York University Press. ISBN\u00a09781479841516.\u00a0\n\u2191 Keating, Gina (2012). Netflixed: the epic battle for America's eyeballs (en ingl\u00e9s). Penguin. ISBN\u00a0978-1-101-60143-3.\u00a0\n\u2191 Garc\u00eda, Juan Manuel (29 de diciembre de 2010). \u00abEl servicio de alquiler de pel\u00edculas por internet Netflix podr\u00eda dar el salto a Europa en 2011\u00bb. La Vanguardia. Consultado el 31 de julio de 2011.\u00a0\n\u2191 Schroeder, Stan (24 de octubre de 2011). \u00abNetflix Coming to UK and Ireland in 2012\u00bb. Mashable (en ingl\u00e9s). Consultado el 25 de octubre de 2011.\u00a0\n\u2191 a b c d e f g Henneton, Thibault (febrero de 2019). \u00abLes recettes de Netflix\u00bb. Le Monde diplomatique (en franc\u00e9s) (779) (Francia). p.\u00a027.\u00a0\n\u2191 a b Smith, Michael D.; Telang, Rahul (2016). \u00ab1: House of Cards\u00bb. Streaming, Sharing, Stealing. Big Data and the Future of Entertainment (en ingl\u00e9s). Cambridge, MA: MIT Press. ISBN\u00a09780262034791.\u00a0\n\u2191 a b D'Alessandro, Anthony (29 de mayo de 2020). \u00abNetflix Closes Acquisition Of Egyptian Theatre; Joins Forces With American Cinematheque\u00bb. Deadline (Estados Unidos). Consultado el 29 de julio de 2020.\u00a0\n\u2191 a b c Lindahl, Chris (29 de mayo de 2020). \u00abNetflix Finally Sealed the Deal on Hollywood\u2019s Egyptian Theatre, but Not Everyone Is Happy\u00bb. IndieWire (Estados Unidos). Consultado el 29 de julio de 2020.\u00a0\n\u2191 a b Friends of the American Cinematheque at the Egyptian Theatre (29 de mayo de 2020). \u00abActualizaci\u00f3n de la petici\u00f3n In a pandemic, as rioters fill the streets, Netflix quietly purchases the Egyptian Theatre\u00bb. Consultado el 29 de julio de 2020.\u00a0\n\u2191 Handley, Lucy (26 de noviembre de 2019). \u00abNetflix takes over New York\u2019s iconic Paris theater for movie screenings\u00bb. CNBC (en ingl\u00e9s) (Estados Unidos). Consultado el 26 de noviembre de 2019.\u00a0\n\u2191 Lee, Chris (9 de abril de 2019). \u00abWait, Why Does Netflix Want to Buy a Movie Theater?\u00bb. Vulture (en ingl\u00e9s) (Estados Unidos). Consultado el 26 de noviembre de 2019.\u00a0\n\u2191 Beck, Michel (26 de noviembre de 2019). \u00abNetflix accentue la pression sur le cin\u00e9ma en s'offrant une salle \u00e0 New York\u00bb. Les Num\u00e9riques (en franc\u00e9s) (Par\u00eds, Francia). Consultado el 26 de noviembre de 2019.\u00a0\n\u2191 \n\u00abNetflix se muda a la nube\u00bb. 11 de febrero de 2016. Consultado el 4 de marzo de 2016.\u00a0\n\u2191 Michael Tunnell (10 de septiembre de 2015). \u00abHow to Watch Netflix Natively on Linux \u2013 the Easy Way\u00bb. Consultado el 4 de marzo de 2016.\u00a0\n\u2191 a b c d Singel, Ryan (17 de diciembre de 2009). \u00abNetflix Spilled Your Brokeback Mountain Secret, Lawsuit Claims\u00bb. Wired (en ingl\u00e9s). Consultado el 1 de julio de 2019.\u00a0\n\u2191 a b Hallinan, Blake; Striphas, Ted (2016). \u00abRecommended for you: The Netflix Prize and the production of algorithmic culture\u00bb. New Media Society (en ingl\u00e9s) 18 (1): 117-137. doi:10.1177/1461444814538646. Consultado el 1 de julio de 2019.\u00a0\n\u2191 \u00abLeaderboard\u00bb. Netflix Prize (en ingl\u00e9s). Consultado el 1 de julio de 2019.\u00a0\n\u2191 \u00abC\u00f3mo funciona el sistema de recomendaciones de Netflix\u00bb. Consultado el 1 de julio de 2019.\u00a0\n\u2191 a b Demerjian, Dave (15 de marzo de 2007). \u00abRise of the Netflix Hackers\u00bb. Wired (en ingl\u00e9s). Consultado el 1 de julio de 2019.\u00a0\n\u2191 a b Mininger, Dylan (17 de febrero de 2019). \u00abThe Netflix algorithm and the success of streaming\u00bb. Driftwood (en ingl\u00e9s) (Nueva Orleans, EUA: The University of New Orleans). Consultado el 25 de junio de 2019. \u00abYou have seen this every time you open the app: various oddly titled movie and TV show categories such as \u201cLGBTQ Psychological Movies\u201d and \u201cScary Cult Movies From the 1980s.\u201d These categories are created by a group of human employees from Netflix to assist the algorithm. Alongside the strange and oddly specific categories, they take note of the movies you scroll by. They keep multiple thumbnail pictures for lots of the films, and they will change the picture to something that seems like more of the movie thumbnails you have clicked and watched in the past.\u00a0\u00bb\u00a0\n\u2191 \u00abC\u00f3mo funciona el sistema de recomendaciones de Netflix\u00bb. Netflix.\u00a0\n\u2191 Stampler, Laura (14 de julio de 2014). \u00abA Professional Binge Watcher Explains What It's Like to Get Paid to Watch Netflix\u00bb. Time (en ingl\u00e9s).\u00a0 |fechaacceso= requiere |url= (ayuda)\n\u2191 Andreeva, Nellie. \u00abIt's Official: Netflix Picks Up David Fincher- Kevin Spacey Series 'House Of Cards'\u00bb. Deadline (en ingl\u00e9s estadounidense). Consultado el 4 de marzo de 2016.\u00a0\n\u2191 Andreeva, Nellie. \u00abNetflix Picks Up New Episodes Of 'Arrested Development'\u00bb. Deadline (en ingl\u00e9s estadounidense). Consultado el 4 de marzo de 2016.\u00a0\n\u2191 Finke, Nikki. \u00ablasse_hallstrom.jpg\u00bb. Deadline (en ingl\u00e9s estadounidense). Consultado el 4 de marzo de 2016.\u00a0\n\u2191 Lieberman, David. \u00abDreamWorks Animation To Produce First Netflix Original Series For Kids\u00bb. Deadline (en ingl\u00e9s estadounidense). Consultado el 4 de marzo de 2016.\u00a0\n\u2191 Lieberman, David. \u00abDreamWorks Animation To Produce TV Shows Based On Its Characters For Netflix\u00bb. Deadline (en ingl\u00e9s estadounidense). Consultado el 4 de marzo de 2016.\u00a0\n\u2191 Inc., Netflix,. \u00abOnly On Netflix: Sci-Fi Giants The Wachowskis And J. Michael Straczynski Team-Up To Create \"Sense8\"\u00bb. www.prnewswire.com. Consultado el 4 de marzo de 2016.\u00a0\n\u2191 Lynch, John (27 de septiembre de 2018). \u00abHere are all the confirmed original shows coming to Netflix in 2018\u00bb. Business Insider (en ingl\u00e9s). Consultado el 31 de diciembre de 2018.\u00a0\n\u2191 Spangler, Todd (17 de octubre de 2017). \u00abNetflix plans to release 80 original films in 2018 \u2014 and some huge names are on board\u00bb. Business Insider (en ingl\u00e9s). Variety. Consultado el 31 de diciembre de 2018.\u00a0\n\u2191 \u00abNetflix continue le d\u00e9ploiement de son offre d\u2019histoires in\u00e9dites et diverses venant d\u2019Europe, du Moyen-Orient et d\u2019Afrique\u00bb (en franc\u00e9s). Netflix (Sitio de prensa). 18 de abril de 2018.\u00a0\n\u2191 a b Cousin, Capucine (2018). Netflix & Cie. Le coulisses d\u2019une (r)\u00e9volution (en franc\u00e9s). Francia: Armand Collin. ISBN\u00a0978-2-200-62301-2.\u00a0\n\u2191 \u00abAll about PlayReady 3.0, Microsoft's secret plan to lock down 4K movies to your PC\u00bb. PCWorld (en ingl\u00e9s). 24 de abril de 2015. Consultado el 6 de abril de 2019.\u00a0\n\u2191 To, Nick Pino How. \u00abHow to watch Netflix in UHD\u00bb. TechRadar (en ingl\u00e9s). Consultado el 6 de abril de 2019.\u00a0\n\u2191 Walton, Mark (22 de noviembre de 2016). \u00abNetflix 4K streaming comes to the PC\u2014but it needs Kaby Lake CPU\u00bb. Ars Technica (en ingl\u00e9s estadounidense). Consultado el 6 de abril de 2019.\u00a0\n\u2191 Oh, Nate. \u00abAMD 18.4.1 Driver Brings Beta PlayReady 3.0 Support for Polaris; Support for Vega GPUs & APUs Still to Come\u00bb. www.anandtech.com. Consultado el 6 de abril de 2019.\u00a0\n\u2191 Heredia, Sara (22 de mayo de 2021). \u00ab7 cosas que (quiz\u00e1) no sabes que puedes hacer con Netflix\u00bb. Sensacine (Espa\u00f1a). Consultado el 2 de junio de 2021.\u00a0\n\u2191 Linder, Courtney (24 de abril de 2021). \u00abC\u00f3mo ver Netflix en realidad virtual\u00bb. Esquire. Consultado el 2 de junio de 2021.\u00a0\n\u2191 Davidson, Darren (3 de marzo de 2015). \u00abNetflix announces Australian launch date\u00bb. The Australian (en ingl\u00e9s) (Australia: The Australian). Consultado el 19 de julio de 2019.\u00a0\n\u2191 \u00abKENYA FILM CLASSIFICATION BOARD SAYS NETFLIX CONTENT IMMORAL\u00bb. Kenya Forums (Kenia). 21 de enero de 2016. Consultado el 16 de julio de 2019.\u00a0\n\u2191 Hastings, Reed. \u00abNetflix CEO: \u2018Asia\u2019s creative and engineering talent is second to none\u2019\u00bb. ABS-CBN News (en ingl\u00e9s). Consultado el 14 de abril de 2021.\u00a0\n\u2191 CJ (julio de 2016). \u00abA preliminary psychology of binge TV watching\u00bb. Psychologist (British Psychological Society) 29 (7).\u00a0\n\u2191 DSouza, Deborah (19 de diciembre de 2017). \u00abNetflix Is Obsessed With Binge Watching and It's a Problem\u00bb. Consultado el 28 de mayo de 2018.\u00a0\n\u2191 Conlin, Lindsey; Billings, Andrew C.; Averset, Lauren. \u00abTime-shifting vs. appointment viewing: the role of fear of missing out within TV consumption behaviors\u00bb. Communication & Society (en ingl\u00e9s) (Servicio de Publicaciones de la Universidad de Navarra, S.A.) 29 (4): 151-164. ISSN\u00a02386-7876.\u00a0\n\u2191 a b Jones, N. (2018). How to stop data centres from gobbling up the world's electricity. Nature, 561(7722), 163.\n\u2191 https://www.newscientist.com/article/2209569-streaming-online-pornography-produces-as-much-co2-as-belgium/\n\u2191 a b Cook, G. et al. (2017) Clicking Clean: Who is Winning the Reace to Build a Green Internet? Greenpeace. https://storage.googleapis.com/planet4-denmark-stateless/2018/10/dfb710aa-dfb710aa-clickclean2016-hires.pdf\n\u2191 \u00abForbes hace lista TOP NETFLIX\u00bb. Forbes.com.mx. Consultado el 7 de agosto de 2020.\u00a0\n\u2191 \u00abLista TOP series NETFLIX con refer\u00e9ncia imDB/Filmaffinity\u00bb. Consultado el 27 de marzo de 2021.\u00a0\n\u2191 \u00abCopia archivada\u00bb. Archivado desde el original el 19 de noviembre de 2018. Consultado el 19 de noviembre de 2018.\u00a0\n\u2191 Gilchrist, Duncan; Luca, Michael (31 de agosto de 2017). \u00abHow Netflix\u2019s Content Strategy Is Reshaping Movie Culture\u00bb. Harvard Business Review (en ingl\u00e9s): 3. \u00abAs Netflix and other streaming platforms continue to grow and emphasize exclusive content, we risk losing pieces of our cultural memory \u2014 forgetting about some of the classic films that define a generation.\u00a0\u00bb\u00a0\n\u2191 \u00abNetflix no hace series, hace pel\u00edculas de 7 horas.\u00bb (en fr-FR). Consultado el 2 de mayo de 2020.\u00a0\n\u2191 Cedillo Novoa, Julio. \u00abDisney deja Netflix: salen pel\u00edculas y series en 2019\u00bb. D\u00f3nde ir. Consultado el 23 de junio de 2019.\u00a0\n\u2191 \u00abNetflix retains position as most positively talked about brand among millennials\u00bb. YouGov. 27 de septiembre de 2018. Consultado el 23 de junio de 2019.\u00a0\n\u2191 https://help.netflix.com/es/node/60541\n\u2191 Izquierdo, Adriana (23 de junio de 2017). \u00abNetflix y Amazon no est\u00e1n matando el cine, est\u00e1n revitalizando un Hollywood cobarde entregado a las franquicias\u00bb. Xataca. Consultado el 3 de noviembre de 2017.\u00a0\n\u2191 Zorrilla, Mikel (15 de mayo de 2016). \u00abLa otra competici\u00f3n en Cannes: \u00bfPor qu\u00e9 parte de la industria ama Amazon y odia Netflix?\u00bb. Espinof. Consultado el 4 de noviembre de 2017.\u00a0\n\u2191 \u00abAn Open Letter to Netflix's Ted Sarandos\u00bb. Film Journal International (en ingl\u00e9s) 117 (2): 3. diciembre de 2014. \u00abSure, digital has changed things and windows have gotten shorter, but a release in movie theatres before delivery to other ancillary media outlets has proven time and again that the theatrical run enhances a picture's value in these other markets. So why are you championing the bypassing of exhibition in favor of VOD, streaming to iPads and mobile devices? Have you run your plan by Christopher Nolan, and asked his reaction to his film Interstellar playing first on computer screens, mobile devices and televisions? You must know that what you are doing, Ted, as you are a smart man, but you continue to incur the wrath of the exhibition community and the Hollywood studios. Or do you? You know, Ted, in just a few short years you have earned the reputation of being an enemy of theatrical exhibition.\nHow does your plan expand the movie business for everyone, Ted? People want to see films on large screens with great sound and in the company of other patrons. Is this outdated, Ted?\nThere certainly is room for Netflix in the motion picture industry--especially now that you are investing in production. But going about it your way is going to cost you in the end.\nDo you really believe, Ted, that \"many movies are just as good if not better at home\"? Because if you do, then you are beginning to truly believe your own hype. Going to the movies is an American pastime. Do you want to be known, Ted, as un-American?\u00a0\u00bb\u00a0\n\u2191 https://www.fayerwayer.com/2015/12/fundador-de-netflix-en-30-anos-la-tv-tradicional-se-habra-acabado/\n\u2191 https://variety.com/2018/digital/news/netflix-political-republican-approval-perception-decline-data-1202828735/\n\u2191 \u00abEl planeta Netflix: La programaci\u00f3n televisiva en la televisi\u00f3n on demand- Alejandro Eloy Rodriguez: Amazon.es: Tienda Kindle\u00bb. www.amazon.es.\u00a0 Falta la |url= (ayuda); |fechaacceso= requiere |url= (ayuda)\n\u2191 \u00ab\u00bfC\u00f3mo ha afectado Internet al entretenimiento?: url=https://www.contextotucuman.com/nota/203258/%C2%BFC%C3%B3mo%20ha%20afectado%20Internet%20al%20entretenimiento?.html\u00bb. Contexto Tucuman.\u00a0 |fechaacceso= requiere |url= (ayuda)\n\u2191 Wolff, Michael (2015). Television is the New Television. The Unexpected Triumph of Old Media in the Digital Age (en ingl\u00e9s). Nueva York: Penguin. ISBN\u00a0978-0-698-40552-3.\u00a0\n\u2191 Garc\u00eca, \u00c9rika (29 de octubre de 2019). \u00abNetflix experimenta cambiar la velocidad de reproducci\u00f3n de series y pel\u00edculas\u00bb. CNET en espa\u00f1ol. Consultado el 31 de octubre de 2019.\u00a0\n\u2191 Bell, Breanna (28 de octubre de 2019). \u00abJudd Apatow, Brad Bird, Aaron Paul Slam Netflix\u2019s Testing of Variable Playback Speed\u00bb. Variety (en ingl\u00e9s) (Estados Unidos). Consultado el 31 de octubre de 2019.\u00a0\n\u2191 a b Randanne, Fabien (29 de octubre de 2019). \u00abNetflix\u00a0: Pourquoi la pol\u00e9mique sur l\u2019acc\u00e9l\u00e9ration des vid\u00e9os est une temp\u00eate dans un verre d\u2019eau\u00bb. 20 Minutes France (en franc\u00e9s) (Francia). Consultado el 31 de octubre de 2019.\u00a0\n\u2191 Kimble, Lindsay (26 de abril de 2017). \u00abWhy Schools Are Warning Parents About Netflix's Series 13 Reasons Why\u00bb. People (en ingl\u00e9s) (Estados Unidos). Consultado el 6 de febrero de 2020.\u00a0\n\u2191 Bernstein, Arielle (30 de agosto de 2019). \u00ab13 Reasons Why: what the controversial drama gets wrong\u00bb. The Guardian (en ingl\u00e9s) (Inglaterra). Consultado el 6 de febrero de 2020.\u00a0\n\u2191 Mole, Beth (5 de febrero de 2019). \u00abNetflix buys into Goop hooey with deal to make a wellness docuseries\u00bb. Ars Technica. Consultado el 3 de abril de 2019.\u00a0\n\u2191 Basu, Tanya (5 de febrero de 2019). \u00abDocs Are Pissed Netflix Is Giving Gwyneth's Goop a Megaphone\u00bb. Consultado el 3 de abril de 2019.\u00a0\n\u2191 Mahdawi, Arwa (8 de febrero de 2019). \u00abGoop has a Netflix deal \u2013 this is a dangerous win for pseudoscience\u00bb. ISSN\u00a00261-3077. Consultado el 3 de abril de 2019.\u00a0\n\u2191 Bundel, Ani (10 de febrero de 2019). \u00abNetflix's new partnership with Gwyneth Paltrow's Goop brand is a win for pseudoscience\u00bb. NBC News. Archivado desde el original el 20 de febrero de 2019. Consultado el 20 de febrero de 2019.\u00a0\n\u2191 Salas, Javier (24 de enero de 2020). \u00abOpini\u00f3n | Gwyneth Paltrow en Netflix, un problema de salud p\u00fablica\u00bb. El Pa\u00eds. ISSN\u00a01134-6582. Consultado el 31 de enero de 2020.\u00a0\n\u2191 WILDE, VAL (20 de enero de 2020). \u00abGwyneth Paltrow\u2019s \u201cThe Goop Lab\u201d Is Unscientific Garbage. Then It Gets Worse.\u00bb. Patheos.com. Patheos. Archivado desde el original el 20 de enero de 2020. Consultado el 20 de enero de 2020. \u00abNetflix and Gwyneth Paltrow have entered into an unholy alliance and spawned The Goop Lab, a (purported) health and wellness docu-series set for release on January 24.\u00a0\u00bb\u00a0\n\u2191 Turk, Victoria (28 de enero de 2020). \u00abGoop on psychedelics isn\u2019t bad, it\u2019s just boring\u00bb. Wired.co.uk. Wired (UK). Archivado desde el original el 28 de enero de 2020. Consultado el 28 de enero de 2020. \u00abBetween the different interviews about different studies involving different drugs and different disorders, everything gets rather muddled up, and the only real takeaway is that there is some evidence psychedelics may have therapeutic benefits to some people in some situations.\u00a0\u00bb\u00a0\n\u2191 Charara, Sophie (25 de enero de 2020). \u00abWhat The Goop Lab gets right (and wrong) about sex\u00bb. Wired.co.uk. Wired (UK). Archivado desde el original el 28 de enero de 2020. Consultado el 28 de enero de 2020. \u00ab\"I think the claims made by Gwyneth Paltrow and Goop are not evidence-based and potentially damaging to women,\u201d says Cynthia Graham, professor of sexual and reproductive health at the University of Southampton.\u00a0\u00bb\u00a0\n\u2191 Reynolds, Matt (24 de enero de 2020). \u00abThink Goop is bad? It's only the tip of Netflix's pseudoscience iceberg\u00bb. Wired.co.uk. Wired UK. Archivado desde el original el 28 de enero de 2020. Consultado el 28 de enero de 2020. \u00abIn The Goop Lab, Gwyneth Paltrow and her colleagues try out energy healing, psychedelics and cold therapy. But plenty of Netflix's documentaries take an equally dubious approach to science.\u00a0\u00bb\u00a0\n\u2191 Netflix censura una escena de Regreso al futuro 2 e indigna a los fans de la saga\n\u2191 Antonio (19 de mayo de 2022). \u00ab3 Reasons Why Netflix Is Going Down | Layoffs Included\u00bb. www.thestreambible.com (en ingl\u00e9s estadounidense). Consultado el 20 de mayo de 2022.\u00a0\n\u2191 https://www.lavanguardia.com/vida/junior-report/20220504/8240653/netflix-pierde-suscriptores-plataformas-streaming.html\n\u2191 \u00abTras el fin de cuentas compartidas, Netflix bajar\u00e1 sus precios en estos pa\u00edses\u00bb. www.proceso.com.mx (en spanish). Consultado el 25 de febrero de 2023.\u00a0\n\u2191 \u00ab\u00bfD\u00f3nde est\u00e1 disponible Netflix?\u00bb. Netflix. Consultado el 18 de julio de 2019.\u00a0\n\u2191 a b Filiciak, Miros\u0142aw (2018). \u00abWill You Awaken When Your Netflix No Longer Works? American Films, Television Productions and Social Transformations in Poland\u00bb [\u00bfDespertar\u00e1s cuando Netflix ya no funcione? Cine estadounidense, producciones televisivas y transformaciones en Polonia]. European journal of American studies (en ingl\u00e9s) 13 (3). ISSN\u00a01991-9336. doi:10.4000/ejas.13568. Consultado el 20 de diciembre de 2019.\u00a0\n\u2191 Kazeem, Yomi (14 de enero de 2016). \u00abNo matter where Netflix goes in Africa it will run into these two problems\u00bb. Quartz Africa (en ingl\u00e9s) (Uzabase). Consultado el 18 de julio de 2019.\u00a0\n\u2191 a b Epstein, Brian (9 de febrero de 2015). \u00abWhy Netflix is entering Cuba even though the internet barely works there\u00bb. Quartz (en ingl\u00e9s) (Uzabase). Consultado el 18 de julio de 2019.\u00a0\n\u2191 a b Glenza, Jessica (9 de febrero de 2015). \u00abNetflix launches $7.99 service for Cuba despite average wage of $17 a month\u00bb. The Guardian (en ingl\u00e9s) (Nueva York, EUA: Guardian News & Media Limited). Consultado el 18 de julio de 2019.\u00a0\n\u2191 Press, Star Staff and Canadian (22 de septiembre de 2010). \u00abVideo-streaming service Netflix launches in Canada, and uses actors to pose as excited consumers.\u00bb. The Toronto Star. ISSN\u00a00319-0781. Consultado el 12 de abril de 2016.\u00a0\n\u2191 Pepitone, Julianne. \u00abNetflix expands to 43 new countries\u00bb. CNNMoney. Consultado el 12 de abril de 2016.\u00a0\n\u2191 \u00abNetflix launches UK film and TV streaming service\u00bb. BBC News. Consultado el 12 de abril de 2016.\u00a0\n\u2191 Inc., Netflix,. \u00abNetflix Launches In Sweden, Denmark, Norway And Finland\u00bb. www.prnewswire.com. Consultado el 12 de abril de 2016.\u00a0\n\u2191 Wallenstein, Andrew. \u00abNetflix 2014 European Expansion: A Look Ahead\u00bb. Variety (en ingl\u00e9s estadounidense). Consultado el 12 de abril de 2016.\u00a0\n\u2191 \u00abCentro de Prensa de Netflix\u00bb. [es] Netflix Media Center. Archivado desde el original el 19 de septiembre de 2014. Consultado el 12 de abril de 2016.\u00a0\n\u2191 \u00abCentro de Prensa de Netflix\u00bb. [es] Netflix Media Center. Archivado desde el original el 29 de noviembre de 2014. Consultado el 12 de abril de 2016.\u00a0\n\u2191 \u00abHow the Australian Netflix differs from the US service\u00bb. The Sydney Morning Herald. Consultado el 12 de abril de 2016.\u00a0\n\u2191 \u00abCentro de Prensa de Netflix\u00bb. [es] Netflix Media Center. Archivado desde el original el 5 de febrero de 2015. Consultado el 12 de abril de 2016.\u00a0\n\u2191 \u00abImpresa Digital Reader\u00bb. leitor.expresso.pt. Consultado el 12 de abril de 2016.\u00a0\n\u2191 \u00abCentro de Prensa de Netflix\u00bb. [es] Netflix Media Center. Consultado el 12 de abril de 2016.\u00a0\n\u2191 \u00abThe television will be revolutionised (Briefing \"Netflixonomics\").\u00bb. The Economist (en ingl\u00e9s) (9098) (Amsterdam, Hollywood y Los Gatos). 30 de junio de 2018. pp.\u00a018-20.\u00a0\n\u2191 a b \u00abCOMMUNIQU\u00c9\u00a0: le Groupe CANAL+ et Netflix s'associent pour offrir le meilleur du cin\u00e9ma et des s\u00e9ries\u00bb. Canal+ (en frnac\u00e9s). 16 de septiembre de 2019. Consultado el 17 de octubre de 2019.\u00a0\n\u2191 a b \u00abComment Canal+ a mis en sc\u00e8ne son rapprochement avec Netflix\u00bb. Le Huffington Post (Francia). 15 de octubre de 2019. Consultado el 17 de octubre de 2019.\u00a0\n\u2191 Brent Lang (6 de marzo de 2022). \u00abNetflix Suspends Service in Russia Amid Invasion of Ukraine\u00bb. Variety. Consultado el 26 de noviembre de 2022.\u00a0\n\u2191 https://www.infobae.com/america/tecno/2022/03/06/netflix-tambien-paraliza-todas-sus-producciones-en-rusia-tras-la-invasion-a-ucrania/\n\u2191 Merrill, Scott. \u00abWalmart buys VUDU\u00bb. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abUSATODAY.com - Netflix, Blockbuster in all-out DVD rental price war\u00bb. usatoday30.usatoday.com. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abForbes.com File Not Found\u00bb. 15 de octubre de 2007. Archivado desde el original el 15 de octubre de 2007. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abBlockbuster Abandons Plans for Netflix-Like Streaming Service\u00bb. PCMAG. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 Cheng, Andria. \u00abRoll credits: Dish shuttering its remaining 300 Blockbuster stores\u00bb. Marketwatch. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abNetflix sees a bright future, sans Amazon competition\u00bb. Ars Technica. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abAmazon Buys Lovefilm, The Netflix Of Europe\u00bb. Business Insider. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abAmazon Prime Instant Video vs. Netflix vs. Hulu\u00bb. Digital Trends (en ingl\u00e9s estadounidense). Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abBloomberg Business\u00bb. Bloomberg.com. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abRedbox Instant beta invites slowly start rolling out, iOS and Android apps appear\u00bb. Engadget. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abRedbox Instant is no Netflix killer\u00bb. CNET. Archivado desde el original el 19 de abril de 2013. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abRedbox Instant Beta Launches with Glitches, Lackluster Selection\u00bb. NASDAQ.com. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 UTC, Jason Abbruzzese2015-03-19 11:18:43. \u00abCuriosityStream: the new 'Netflix for nonfiction'\u00bb. Mashable. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abNetflix Finally Realizes How People Really Watch Movies On It\u00bb. The Huffington Post. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abNetflix Imitators Are Everywhere\u00bb. WIRED (en ingl\u00e9s estadounidense). Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abSkin City\u00bb. WIRED (en ingl\u00e9s estadounidense). Consultado el 11 de marzo de 2016.\u00a0\n\u2191 Valinsky, Jordan (4 de octubre de 2019). \u00abDisney bans Netflix from advertising on its entertainment networks\u00bb. CNN (en ingl\u00e9s) (Nueva York, EUA). Consultado el 17 de octubre de 2019.\u00a0\n\u2191 Barnes, Brooks. \u00abDisney Bars Netflix TV Ads in Battle for Streaming Supremacy\u00bb. The New York Times (en ingl\u00e9s) (Los Angeles, EUA). Consultado el 17 de octubre de 2019.\u00a0\n\u2191 \u00abDisney+ Set to Launch in the Netherlands and Canada on November 12th and Australia and New Zealand\u00bb. Walt Disney Direct-to-Consumer & International Media Center (en ingl\u00e9s) (Estados Unidos). 19 de agosto de 2019. Consultado el 10 de octubre de 2010.\u00a0\n\u2191 Zorrilla, Mikel (12 de abril de 2019). \u00abDisney anuncia la fecha de lanzamiento y el precio de Disney+, la plataforma de streaming con la que quiere hacer frente a Netflix\u00bb. Espinof. Consultado el 10 de octubre de 2019.\u00a0\n\u2191 \u00abWarner retirar\u00e1 algunas series de Netflix para llevarlas a su servicio\u00bb. La Casa de EL - Art\u00edculos y noticias sobre c\u00f3mics, cine, series, juegos de mesa y videojuegos. Consultado el 10 de diciembre de 2020.\u00a0\n\u2191 \u00abThe Challenges of Video on Demand in Southeast Asia\u00bb. PCMag Asia (en ingl\u00e9s estadounidense). Consultado el 11 de marzo de 2016.\u00a0\n\u2191 Mohammed, Omar. \u00abAfrica\u2019s biggest media company will fight Netflix for control of the global streaming market\u00bb. Quartz (en ingl\u00e9s estadounidense). Consultado el 11 de marzo de 2016.\u00a0\n\u2191 News, Blasting. \u00abBlim, la nueva competencia de Netflix\u00bb. Blasting News. Archivado desde el original el 6 de marzo de 2018. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abPepe Bast\u00f3n presenta Blim, la competencia directa de Netflix en M\u00e9xico\u00bb. www.quien.com. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abBlim no es una amenaza, pero Netflix s\u00ed tendr\u00e1 competencia | Stuff\u00bb. www.stuff.tv. Archivado desde el original el 12 de marzo de 2016. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abHBO GO estar\u00e1 disponible en Latinoam\u00e9rica sin tener que contratar cable\u00bb. SDPnoticias.com. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abHBO GO llega a Latinoam\u00e9rica para hacerle la competencia a Netflix | Entretenimiento\u00bb. radioexitosa.pe. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abQubit, la competencia de Netflix, traer\u00e1 bajos costos y nuevo modelo pago\u00bb. 128619453816698. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abClarovideo le da guerra a Netflix\u00bb. www.cnnexpansion.com. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 Dairox (30 de mayo de 2015). \u00abNetflix vs. Clarovideo \u00bfcu\u00e1l es el mejor servicio de streaming?\u00bb. www.xataka.com.mx. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 \u00abCont.ar y Cine.ar, las \"Netflix\" argentinas para ver pel\u00edculas gratis\u00bb. https://www.iprofesional.com/actualidad/319508-cont-ar-y-cine-ar-las-netflix-locales-para-ver-peliculas-gratis. Consultado el 10 de diciembre de 2020.\u00a0\n\u2191 \u00abNetflix estar\u00eda cuestion\u00e1ndose desembarcar en Espa\u00f1a por los abusivos derechos de autor\u00bb. Hipertextual. Consultado el 1 de abril de 2016.\u00a0\n\u2191 Juli\u00e1n, Miguel. \u00abNetflix y Amazon miran con recelo el mercado audiovisual espa\u00f1ol\u00bb. www.genbeta.com. Consultado el 1 de abril de 2016.\u00a0\n\u2191 \u00abALSD - SeriesYonkis podr\u00eda ser el Netflix espa\u00f1ol\u00bb. www.expansion.com. Consultado el 1 de abril de 2016.\u00a0\n\u2191 Press, Europa. \u00abNetflix, duda en Espa\u00f1a: \u00bfculpa de la pirater\u00eda o de los \"abusivos\" derechos?\u00bb. europapress.es. Consultado el 1 de abril de 2016.\u00a0\n\u2191 20Minutos. \u00abNetflix llega a Espa\u00f1a: las siete claves de este popular servicio de televisi\u00f3n por Internet - 20minutos.es\u00bb. 20minutos.es - \u00daltimas Noticias. Consultado el 1 de abril de 2016.\u00a0\n\u2191 \u00abNetflix llega a Espa\u00f1a en 2015 y no va a ser lo que te esperas\u00bb. magazine.previsorabilbaina.com. Consultado el 1 de abril de 2016.\u00a0\n\u2191 a b Gonz\u00e1lez, Mar\u00eda (1 de septiembre de 2015). \u00abNetflix es la pieza maestra en el plan de Vodafone para contrarrestar a Movistar Fusi\u00f3n\u00bb. www.xataka.com. Consultado el 1 de abril de 2016.\u00a0\n\u2191 Gonz\u00e1lez, Mar\u00eda (20 de octubre de 2015). \u00abNetflix ya est\u00e1 disponible en Espa\u00f1a: esto es lo que debes saber\u00bb. www.xataka.com. Consultado el 1 de abril de 2016.\u00a0\n\u2191 20Minutos. \u00abLa dura competencia de Netflix en Espa\u00f1a: comienza la pelea por el pastel del 'streaming' - 20minutos.es\u00bb. 20minutos.es - \u00daltimas Noticias. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 Rebato, Carlos. \u00abAlternativas a Netflix en Espa\u00f1a: cat\u00e1logo y precios de su competencia\u00bb. Gizmodo en Espa\u00f1ol. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 Press, Europa. \u00abEsta es la competencia (y sus precios) de Netflix en Espa\u00f1a\u00bb. europapress.es. Consultado el 11 de marzo de 2016.\u00a0\n\u2191 Smith, Michael D.; Telang, Rahul (2016). Streaming, Sharing, Stealing. Big Data and the Future of Entertainment (en ingl\u00e9s). Cambridge, MA: MIT Press. ISBN\u00a09780262034791.\u00a0\n\u2191 James, Clive (2016). \u00abDisplay of Secrecy\u00bb. Play All. A bingwatcher's notebook (en ingl\u00e9s). New Haven, MA: Yale University Press. pp.\u00a0135-150. ISBN\u00a0978-0-300-21809-1.\u00a0\n\u2191 Lotz, Amanda D. (2018). \u00ab25. Game of Thrones Introduces the Global Blockbuster\u00bb. We Now Disrupt This Broadcast. How Cable Transformed Television and the Internet Revolutionized It All (en ingl\u00e9s). Cambridge, MA: MIT Press. ISBN\u00a09780262037679.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Libros o art\u00edculos en los que Netflix es el objeto de estudio principal o uno de los principales:", "subsections": [{"name": "En ingl\u00e9s", "text": "Netflixed: The Epic Battle for America's Eyeballs de Gina Keating (Penguin, 2012).\nStreaming, Sharing, Stealing. Big Data and the Future of Entertainment de Michael D. Smith y Rahul Telang (MIT Press\nNetflix Nations. The Geography of Digital Distribution de Ram\u00f3n Lobato (New York University Press, 2019)."}, {"name": "En franc\u00e9s", "text": "Netflix & Cie. Le coulisses d\u2019une (r)\u00e9volution de Capucine Cousin (Armand Collin, 2018).\nLibros o art\u00edculos donde Netflix y/ o alguna de sus producciones originales (series o pel\u00edculas) son mencionadas como ejemplo de diversos temas como la transformaci\u00f3n en los consumos audiovisuales, las plataformas de streaming, la industria del entretenimiento en el siglo\u00a0XXI, etc.:"}, {"name": "En ingl\u00e9s", "text": "Play All. A bingewatcher\u2019s notebook de Clive James (Yale University Press, 2016).\nWe Now Disrupt This Broadcast. How Cable Transformed Television and the Internet Revolutionized It All de Amanda D. Lotz (MIT Press, 2018)."}]}, {"name": "Enlaces externos", "text": "Sitio web oficial\n Wikimedia Commons alberga una categor\u00eda multimedia sobre Netflix.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/NumPy", "title": "NumPy", "summary": "[\n]\nPythonCFortran\nNumPy (pronunciado  /\u02c8n\u028cmpa\u026a/ (numpai) o, a veces  /\u02c8n\u028cmpi/ [3]\u200b [4]\u200b (numpi)) es una biblioteca para el lenguaje de programaci\u00f3n Python que da soporte para crear vectores y matrices grandes multidimensionales, junto con una gran colecci\u00f3n de funciones matem\u00e1ticas de alto nivel para operar con ellas. El precursor de NumPy, Numeric, fue creado originalmente por Jim Hugunin con contribuciones de varios otros desarrolladores. En 2005, Travis Oliphant cre\u00f3 NumPy incorporando caracter\u00edsticas de la competencia Numarray en Numeric, con amplias modificaciones. NumPy es un software de c\u00f3digo abierto y cuenta con muchos colaboradores. ", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n2 Caracter\u00edsticas\n2.1 La estructura de datos ndarray\n2.2 Limitaciones\n3 Ejemplos\n4 V\u00e9ase tambi\u00e9n\n5 Referencias\n6 Otras lecturas\n7 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "El lenguaje de programaci\u00f3n Python no fue dise\u00f1ado originalmente para computaci\u00f3n num\u00e9rica, pero atrajo la atenci\u00f3n de la comunidad cient\u00edfica y de ingenier\u00eda desde el principio. En 1995 se fund\u00f3 el grupo de inter\u00e9s especial (SIG) matrix-sig con el objetivo de definir un paquete de computaci\u00f3n de vectores; entre sus miembros se encontraba el dise\u00f1ador y mantenedor de Python Guido van Rossum, quien extendi\u00f3 la sintaxis de Python (en particular la sintaxis de indexaci\u00f3n) para facilitar la computaci\u00f3n de vectores.[5]\u200b \nJim Fulton complet\u00f3 una implementaci\u00f3n de un paquete para matrices, luego generalizado por Jim Hugunin y llamado Numeric (tambi\u00e9n conocido como las \"extensiones num\u00e9ricas de Python\" o \"NumPy\"). Hugunin, estudiante de posgrado en el Instituto de Tecnolog\u00eda de Massachusetts (MIT), :\u200a10\u200ase uni\u00f3 a la Corporaci\u00f3n para Iniciativas de Investigaci\u00f3n Nacional (CNRI) en 1997 para trabajar en JPython, dejando a Paul Dubois del Laboratorio Nacional Lawrence Livermore (LLNL) para asumir el cargo de mantenedor. :\u200a10\u200aOtros colaboradores tempranos incluyen a David Ascher, Konrad Hinsen y Travis Oliphant. :\u200a10\u200a\nSe escribi\u00f3 un nuevo paquete llamado Numarray como reemplazo m\u00e1s flexible de Numeric.[6]\u200b Al igual que Numeric, actualmente tambi\u00e9n est\u00e1 obsoleto.[7]\u200b[8]\u200b Numarray ten\u00eda operaciones m\u00e1s r\u00e1pidas para matrices grandes, pero era m\u00e1s lento que Numeric para las peque\u00f1as,[9]\u200b por lo que durante un tiempo ambos paquetes se usaron en paralelo para diferentes casos de uso. La \u00faltima versi\u00f3n de Numeric (v24.2) se public\u00f3 el 11 de noviembre de 2005, mientras que la \u00faltima versi\u00f3n de Numarray (v1.5.2) se public\u00f3 el 24 de agosto de 2006. [10]\u200b \nHab\u00eda un deseo de incluir Numeric en la biblioteca est\u00e1ndar de Python, pero Guido van Rossum decidi\u00f3 que el c\u00f3digo no se pod\u00eda mantener en su estado en ese momento. [\u00bfcu\u00e1ndo?][11]\u200b A principios de 2005, el desarrollador de NumPy, Travis Oliphant, quer\u00eda unificar la comunidad en torno a un solo paquete de arreglo y port\u00f3 las caracter\u00edsticas de Numarray a Numeric, lanzando el resultado como NumPy 1.0 en 2006.[6]\u200b Este nuevo proyecto formaba parte de SciPy. Para evitar instalar el gran paquete SciPy solo para obtener un objeto de matriz, este nuevo paquete se separ\u00f3 y se llam\u00f3 NumPy. El soporte para Python 3 se a\u00f1adi\u00f3 en 2011 con la versi\u00f3n 1.5.0 de NumPy.[12]\u200b \nEn 2011, PyPy comenz\u00f3 a desarrollar una implementaci\u00f3n de la API NumPy para PyPy.[13]\u200b Todav\u00eda no es totalmente compatible con NumPy.[14]\u200b ", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "NumPy apunta a la implementaci\u00f3n de Python de referencia CPython, un int\u00e9rprete de c\u00f3digo de bytes no optimizador. Los algoritmos matem\u00e1ticos escritos para esta versi\u00f3n de Python a menudo se ejecutan mucho m\u00e1s lento que los equivalentes compilados. NumPy aborda el problema de la lentitud en parte al proporcionar matrices multidimensionales y funciones y operadores que operan de manera eficiente en matrices, lo que requiere reescribir algo de c\u00f3digo, principalmente bucles internos, usando NumPy. \nEl uso de NumPy en Python brinda una funcionalidad comparable a MATLAB, ya que ambos se interpretan,[15]\u200b y ambos permiten al usuario escribir programas r\u00e1pidos siempre que la mayor\u00eda de las operaciones funcionen en vectores o matrices en lugar de escalares. En comparaci\u00f3n, MATLAB cuenta con una gran cantidad de cajas de herramientas adicionales, en particular Simulink, mientras que NumPy est\u00e1 intr\u00ednsecamente integrado con Python, un lenguaje de programaci\u00f3n m\u00e1s moderno y completo. Adem\u00e1s, se encuentran disponibles paquetes complementarios de Python; SciPy es una biblioteca que agrega m\u00e1s funcionalidad similar a MATLAB y Matplotlib es un paquete de trazado que proporciona una funcionalidad de trazado similar a MATLAB. Internamente, tanto MATLAB como NumPy se basan en BLAS y LAPACK para c\u00e1lculos de \u00e1lgebra lineal eficientes. \nLos bindings de Python de la ampliamente utilizada biblioteca de visi\u00f3n por computadora OpenCV utilizan matrices NumPy para almacenar y operar con datos. Dado que las im\u00e1genes con m\u00faltiples canales se representan simplemente como matrices tridimensionales, indexar, cortar o enmascarar con otras matrices son formas muy eficientes de acceder a p\u00edxeles espec\u00edficos de una imagen. La matriz NumPy como estructura de datos universal en OpenCV para im\u00e1genes, puntos de caracter\u00edsticas extra\u00eddos, n\u00facleos de filtrado y muchos m\u00e1s simplifica enormemente el flujo de trabajo de programaci\u00f3n y la depuraci\u00f3n . ", "subsections": [{"name": "La estructura de datos ndarray", "text": "La funcionalidad principal de NumPy es su estructura de datos \"ndarray\", para una matriz de n dimensiones. Estas matrices son vistas escalonadas de la memoria.[6]\u200b A diferencia de la estructura de datos de lista incorporada de Python, estas matrices se escriben de forma homog\u00e9nea: todos los elementos de una \u00fanica matriz deben ser del mismo tipo. \nDichas matrices tambi\u00e9n pueden ser vistas en b\u00faferes de memoria asignados por extensiones de C o C++, Cython y Fortran al int\u00e9rprete CPython sin la necesidad de copiar datos, lo que brinda un mayor grado de compatibilidad con las bibliotecas num\u00e9ricas existentes. Esta funcionalidad es explotada por el paquete SciPy, que incluye varias de estas bibliotecas (en particular BLAS y LAPACK). NumPy tiene soporte incorporado para ndarrays mapeados en memoria. [6]\u200b "}, {"name": "Limitaciones", "text": "Insertar o agregar entradas a una matriz no es tan trivialmente posible como lo es con las listas de Python. La rutina np.pad(...) para extender matrices crea nuevas matrices con la forma deseada y los valores de relleno, copia la matriz dada en la nueva y la devuelve. La operaci\u00f3n np.concatenate([a1, a2])de NumPy no vincula realmente las dos matrices, sino que devuelve una nueva, llena con las entradas de ambas matrices dadas en secuencia. La remodelaci\u00f3n de las dimensiones de una matriz con np.reshape(...) solo es posible siempre que el n\u00famero de elementos de la matriz no cambie. Estas circunstancias se originan en el hecho de que las matrices de NumPy deben ser vistas en b\u00faferes de memoria contiguos. Un paquete de reemplazo llamado Blaze intenta superar esta limitaci\u00f3n. [16]\u200b \nLos algoritmos que no se pueden expresar como una operaci\u00f3n vectorizada normalmente se ejecutar\u00e1n lentamente porque deben implementarse en \"Python puro\", mientras que la vectorizaci\u00f3n puede aumentar la complejidad de la memoria de algunas operaciones de constante a lineal, porque se deben crear matrices temporales que sean tan grandes como las entradas. Varios grupos han implementado la compilaci\u00f3n en tiempo de ejecuci\u00f3n de c\u00f3digo num\u00e9rico para evitar estos problemas. Las soluciones de c\u00f3digo abierto que interact\u00faan con NumPy incluyen scipy.weave, numexpr [17]\u200b y Numba.[18]\u200b Cython y Pythran son otras alternativas de compilaci\u00f3n est\u00e1tica."}]}, {"name": "Ejemplos", "text": ">>>\nimport\nnumpy\nas\nnp\nx\n=\nnp\n.\narray\n([\n1\n,\n2\n3\n])\ny\narange\n(\n10\n)\n# como en Python list(range(10)), pero devuelve una matriz de numpy\n0\n4\n5\n6\n7\n8\n9\na\nb\nlinspace\n# crea un vector con cuatro puntos equiespaciados, desde 0 hasta 2.\nc\n-\n1.\n1.33333333\n1.66666667\n4.\n**\n36\npi\n100\nsin\ncos\nfrom\nnumpy.random\nrand\nnumpy.linalg\nsolve\ninv\n([[\n],\n[\n6.7\n9.0\n]])\ntranspose\n()\n3.\n5.\n2.\n9.\n2.27683616\n0.96045198\n0.07909605\n1.04519774\n0.56497175\n0.1299435\n0.39548023\n0.05649718\n0.11299435\n# resuelve la ecuaci\u00f3n ax = b\n4.83050847\n2.13559322\n1.18644068\n*\n20\n# crea una matriz de 3x3 con valores aleatorios en el intervalo [0,1] escalados por 20\n3.98732789\n2.47702609\n4.71167924\n9.24410671\n5.5240412\n10.6468792\n10.38136661\n8.44968437\n15.17639591\ndot\n# multiplicaci\u00f3n de matrices\n53.61964114\n38.8741616\n71.53462537\n118.4935668\n86.14012835\n158.40440712\n155.04043289\n104.3499231\n195.26228855\n@\n# notaci\u00f3n alternativa desde Python 3.5 y NumPy 1.10\nM\nzeros\nshape\n11\n))\nT\ncv2\nr\nreshape\n256\n%\n,(\n# matriz de p\u00edxeles 256x256 con un gradiente horizontal de 0 a 255, para el canal del color rojo\ng\nzeros_like\n# matriz del mismo tama\u00f1o que r pero rellena de ceros, para el canal del color verde\n# matriz r traspuesta que genera un gradiente vertical, para el canal del color azul\ncv2\nimwrite\n'gradients.png'\ndstack\n]))\n# las im\u00e1genes OpenCV se interpretan como BGR, la matriz agrupada se escribir\u00e1 en un archivo PNG de 8 bit llamado 'gradients.png'\nTrue\n# # # Python iterativo puro # # #\npoints\n[[\n],[\n]]\nqPoint\n]\nminIdx\nminDist\nfor\nidx\npoint\nin\nenumerate\n):\n# itera sobre todos los puntos\ndist\nsum\n([(\ndp\ndq\nzip\n)])\n0.5\n# calcula la distancia eucl\u00eddea desde cada punto a q\nif\n<\nor\n:\n# si se requiere, actualiza la distancia m\u00ednima y el \u00edndice del punto correspondiente\nprint\n'Punto m\u00e1s cercano a q: \n{0}\n'\nformat\nPunto\nm\u00e1s\ncercano\nq\n# # # Vectorizaci\u00f3n equivalente en NumPy # # #\nargmin\nlinalg\nnorm\naxis\n# calcula todas las distancias eucl\u00eddeas de una vez y devuelve el \u00edndice de la menor de ellas", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "SciPy\nMatplotlib\nProgramaci\u00f3n con matrices", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abReleases \u2013 numpy/numpy\u00bb. Consultado el 10 de septiembre de 2020  \u2013 via GitHub.\u00a0\n\u2191 \u00abNumPy \u2014 NumPy\u00bb. numpy.org. NumPy developers.\u00a0\n\u2191 Pine, David (2014). \u00abPython resources\u00bb. Rutgers University. Consultado el 7 de abril de 2017.\u00a0\n\u2191 \u00abHow do you say numpy?\u00bb. Reddit. 2015. Consultado el 7 de abril de 2017.\u00a0\n\u2191 Millman, K. Jarrod; Aivazis, Michael (2011). \u00abPython for Scientists and Engineers\u00bb. Computing in Science and Engineering 13 (2): 9-12.\u00a0\n\u2191 a b c d van der Walt, St\u00e9fan; Colbert, S. Chris; Varoquaux, Ga\u00ebl (2011). \u00abThe NumPy array: a structure for efficient numerical computation\u00bb. Computing in Science and Engineering (IEEE). Bibcode:2011arXiv1102.1523V. arXiv:1102.1523.\u00a0\n\u2191 \u00abNumarray Homepage\u00bb. Consultado el 24 de junio de 2006.\u00a0\n\u2191 Travis E. Oliphant (7 de diciembre de 2006). Guide to NumPy. Consultado el 2 de febrero de 2017.\u00a0\n\u2191 Travis Oliphant and other SciPy developers. \u00ab[Numpy-discussion] Status of Numeric\u00bb. Archivado desde el original el 3 de febrero de 2017. Consultado el 2 de febrero de 2017.\u00a0\n\u2191 \u00abNumPy Sourceforge Files\u00bb. Consultado el 24 de marzo de 2008.\u00a0\n\u2191 \u00abHistory_of_SciPy - SciPy wiki dump\u00bb. scipy.github.io.\u00a0\n\u2191 \u00abNumPy 1.5.0 Release Notes\u00bb. Consultado el 29 de abril de 2011.\u00a0\n\u2191 \u00abPyPy Status Blog: NumPy funding and status update\u00bb. Consultado el 22 de diciembre de 2011.\u00a0\n\u2191 \u00abNumPyPy Status\u00bb. Consultado el 14 de octubre de 2013.\u00a0\n\u2191 The SciPy Community. \u00abNumPy for Matlab users\u00bb. Consultado el 2 de febrero de 2017.\u00a0\n\u2191 \u00abBlaze Ecosystem Docs\u00bb. Read the Docs. Consultado el 17 de julio de 2016.\u00a0\n\u2191 Francesc Alted. \u00abnumexpr\u00bb. Consultado el 8 de marzo de 2014.\u00a0\n\u2191 \u00abNumba\u00bb. Consultado el 8 de marzo de 2014.\u00a0", "subsections": []}, {"name": "Otras lecturas", "text": "Bressert, Eli (2012). Scipy and Numpy: An Overview for Developers. O'Reilly. ISBN\u00a0978-1-4493-0546-8.\u00a0\nMcKinney, Wes (2017). Python for Data Analysis\u00a0: Data Wrangling with Pandas, NumPy, and IPython (2nd edici\u00f3n). Sebastopol: O'Reilly. ISBN\u00a0978-1-4919-5766-0.\u00a0\nVanderPlas, Jake (2016). \u00abIntroduction to NumPy\u00bb. Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly. pp.\u00a033\u201396. ISBN\u00a0978-1-4919-1205-8.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio oficial de NumPy (en ingl\u00e9s)\nHistoria de NumPy (en ingl\u00e9s)\nIntroducci\u00f3n a las matrices en NumPy Archivado el 12 de junio de 2010 en Wayback Machine. (en ingl\u00e9s)\nNumPy para usuarios de Matlab (en ingl\u00e9s)\nMatplotlib, paquete para graficar con NumPy (en ingl\u00e9s)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Objeto_(programaci%C3%B3n)", "title": "Objeto (programaci\u00f3n)", "summary": "En el paradigma de programaci\u00f3n orientada a objetos (POO, o bien OOP en ingl\u00e9s), un objeto es un ente orientado a objetos (programa de computadoras) que consta de un estado y de un comportamiento, que a su vez constan respectivamente de datos almacenados y de tareas realizables durante el tiempo de ejecuci\u00f3n. Un objeto puede ser creado instanciando una clase, como ocurre en la programaci\u00f3n orientada a objetos, o mediante escritura directa de c\u00f3digo y la replicaci\u00f3n de otros objetos, como ocurre en la programaci\u00f3n basada en prototipos.\nEstos objetos interact\u00faan unos con otros, en contraposici\u00f3n a la visi\u00f3n tradicional en la cual un programa es una colecci\u00f3n de subrutinas (funciones o procedimientos), o simplemente una lista de instrucciones para el computador. Cada objeto es capaz de recibir mensajes, procesar datos y enviar mensajes a otros objetos de manera similar a un servicio.\nEn el mundo de la programaci\u00f3n orientada a objetos (POO), un objeto es el resultado de la instanciaci\u00f3n de una clase.[1]\u200b Una clase es el anteproyecto que ofrece la funcionalidad en ella definida, pero \u00e9sta queda implementada solo al crear una instancia de la clase, en la forma de un objeto. Por ejemplo: dado un plano para construir sillas (una clase de nombre clase_silla), entonces una silla concreta, en la que podemos sentarnos, construida a partir de este plano, ser\u00eda un objeto de clase_silla. Es posible crear (construir) m\u00faltiples objetos (sillas) utilizando la definici\u00f3n de la clase (plano) anterior. Los conceptos de clase y objetos son an\u00e1logos a los de tipo de datos y variable; es decir, definida una clase podemos crear objetos de esa clase, igual que disponiendo de un determinado tipo de dato (por ejemplo el tipo entero), podemos definir variables de dicho tipo:\n( 'int' es un tipo de dato y 'a' y 'b' son variables de tipo entero con las que podemos operar)\nPara utilizar la funcionalidad definida en una clase en particular (salvo en las clases abstractas), primeramente es necesario crear un objeto de esa clase. De la misma manera, para una persona que desea sentarse, las especificaciones para construir una silla ser\u00e1n de poca utilidad; lo que se necesita es una silla real construida a partir de esas especificaciones. Siguiendo con la analog\u00eda anterior, tambi\u00e9n se puede decir que para hacer operaciones aritm\u00e9ticas, de nada sirve por s\u00ed solo el tipo entero (int); para ello necesitamos variables (o constantes) con las que operar.", "sections": [{"name": "\u00cdndice", "text": "1 Definici\u00f3n de objeto\n1.1 Identidad\n1.2 Comportamiento\n1.3 Estado\n2 Representaci\u00f3n en las computadoras\n3 Objetos en la programaci\u00f3n orientada a objetos\n3.1 Declaraci\u00f3n de una clase\n3.2 Instanciaci\u00f3n de una clase en un objeto\n3.3 Operando con un objeto\n3.3.1 Atributos din\u00e1micos en objetos\n4 Relaciones entre objetos\n4.1 Composici\u00f3n\n4.2 Uso\n4.3 Delegaci\u00f3n\n5 Objetos especializados\n6 V\u00e9ase tambi\u00e9n\n7 Referencias", "subsections": []}, {"name": "Definici\u00f3n de objeto", "text": "Un objeto en POO representa alguna entidad de la vida real, es decir, alguno de los objetos que pertenecen al negocio con que estamos trabajando o al problema con el que nos estamos enfrentando, y con los que podemos interactuar. A trav\u00e9s del estudio de ellos se adquiere el conocimiento necesario para, mediante la abstracci\u00f3n y la generalizaci\u00f3n, agruparlos seg\u00fan sus caracter\u00edsticas en conjuntos. Estos conjuntos determinan las clases de objetos con las que estamos trabajando. Primero existen los objetos; luego aparecen las clases en funci\u00f3n de la soluci\u00f3n que estemos buscando. \u00c9sta es la forma m\u00e1s com\u00fan de adquirir conocimiento aunque no es la \u00fanica. En ocasiones, cuando el observador es un experto del negocio (o del problema), el proceso puede ser a la inversa y comenzar el an\u00e1lisis en una base te\u00f3rica abstracta, sustentada por el conocimiento previo que da lugar primeramente a clases de objetos que satisfagan las necesidades de la soluci\u00f3n.\nEstos conceptos son parte de la base te\u00f3rica de la idea de objeto y clase utilizados en la POO. Los objetos tienen caracter\u00edsticas fundamentales que nos permiten conocerlos mediante la observaci\u00f3n, identificaci\u00f3n y el estudio posterior de su comportamiento; estas caracter\u00edsticas son:\nIdentidad\nComportamiento\nEstado\nEn las ramas de las ciencias de la computaci\u00f3n m\u00e1s estrictamente matem\u00e1ticas, el t\u00e9rmino objeto es usado en sentido puramente matem\u00e1tico para referirse a cualquier \"cosa\". Esta interpretaci\u00f3n resulta \u00fatil para discutir sobre teor\u00edas abstractas, pero no es suficientemente concreta para servir como definici\u00f3n de un tipo primitivo en discusiones de ramas m\u00e1s espec\u00edficas, como en la programaci\u00f3n, que est\u00e1 m\u00e1s cerca de c\u00e1lculos reales y el procesamiento de informaci\u00f3n.", "subsections": [{"name": "Identidad", "text": "La identificaci\u00f3n  es la propiedad que permite diferenciar a un objeto y distinguirse de otros. Generalmente esta propiedad es tal, que da nombre al objeto. Tomemos por ejemplo el \"verde\" como un objeto concreto de una clase color; la propiedad que da identidad \u00fanica a este objeto es precisamente su \"color\" verde. Tanto es as\u00ed que para nosotros no tiene sentido usar otro nombre para el objeto que no sea el valor de la propiedad que lo identifica.\nEn programaci\u00f3n la identidad de todos los objetos sirve para comparar si dos objetos son iguales o no. No es raro encontrar que en muchos lenguajes de programaci\u00f3n la identidad de un objeto est\u00e9 determinada por la direcci\u00f3n de memoria de la computadora en la que se encuentra el objeto, pero este comportamiento puede ser variado redefiniendo la identidad del objeto a otra propiedad."}, {"name": "Comportamiento", "text": "El comportamiento de un objeto est\u00e1 directamente relacionado con su funcionalidad y determina las operaciones que \u00e9ste puede realizar o a las que puede responder ante mensajes enviados por otros objetos. La funcionalidad de un objeto est\u00e1 determinada, primariamente, por su responsabilidad. Una de las ventajas fundamentales de la POO es la reusabilidad del c\u00f3digo; un objeto es m\u00e1s f\u00e1cil de reutilizarse en tanto su responsabilidad sea mejor definida y m\u00e1s concreta.\nUna tarea fundamental a la hora de dise\u00f1ar una aplicaci\u00f3n inform\u00e1tica es definir el comportamiento que tendr\u00e1n los objetos de las clases involucradas en la aplicaci\u00f3n, asociando la funcionalidad requerida por la aplicaci\u00f3n a las clases adecuadas."}, {"name": "Estado", "text": "El estado de un objeto se refiere al conjunto de atributos y sus valores en un instante de tiempo dado. El comportamiento de un objeto puede modificar el estado de \u00e9ste. Cuando una operaci\u00f3n de un objeto modifica su estado se dice que esta tiene \"efecto colateral\".\nEsto tiene especial importancia en aplicaciones que crean varios hilos de ejecuci\u00f3n. Si un objeto es compartido por varios hilos y en el transcurso de sus operaciones estas modifican el estado del objeto, es posible que se deriven errores del hecho de que alguno de los hilos asuma que el estado del objeto no cambiar\u00e1 (V\u00e9ase Condici\u00f3n de carrera"}]}, {"name": "Representaci\u00f3n en las computadoras", "text": "Los objetos, aunque son entidades conceptuales, dado el dise\u00f1o de las computadoras, se corresponde directamente con bloques de memoria de tama\u00f1o y localizaci\u00f3n espec\u00edficos. Esto ocurre porque los c\u00e1lculos y el procesamiento de la informaci\u00f3n en \u00faltima instancia requieren de una representaci\u00f3n en la memoria de la computadora. En este sentido, los objetos son primitivas fundamentales necesarias para definir de forma precisa conceptos como referencias, variables y vinculaci\u00f3n de nombres. En ciencias de la computaci\u00f3n se utiliza cotidianamente la interpretaci\u00f3n m\u00e1s concreta de objeto en lugar de las m\u00e1s abstractas sin que esto sea considerado un error.\nEs preciso hacer notar que aunque un bloque de memoria puede aparecer contiguo en un nivel de abstracci\u00f3n y no contiguo en otro, lo importante es que este aparece contiguo para el programa, quien lo trata como un objeto. Por este motivo, los detalles de implementaci\u00f3n privados de un modelo de objetos no deben ser expuestos al cliente del objeto, y estos pueden ser cambiados sin que se requieran cambios al c\u00f3digo cliente.\nLos objetos en la computadora existen entonces, solo dentro de contextos capaces de reconocerlos; un espacio de memoria solo contiene un objeto si un programa lo trata como tal (por ejemplo, reserv\u00e1ndolo para uso exclusivo de un procedimiento espec\u00edfico y/o asoci\u00e1ndole un tipo de dato). As\u00ed, el tiempo de vida de un objeto es el tiempo durante el cual este es tratado como un objeto. Es por esto que los objetos son entidades conceptuales, a pesar de su presencia f\u00edsica en la memoria de la computadora.\nEn otras palabras, los conceptos abstractos que no ocupen espacio de memoria en tiempo de ejecuci\u00f3n, no son, de acuerdo con esta definici\u00f3n, objetos. Ejemplos de estos conceptos son: patrones de dise\u00f1o exhibidos por un conjunto de clases y tipos de datos en lenguajes de programaci\u00f3n que utilizan tipos est\u00e1ticos.\nSe llama objeto fantasma a un objeto que no es referenciado en un programa, y que por tanto no sirve a ning\u00fan prop\u00f3sito. En un lenguaje que posea un recolector de basura, este marcar\u00e1 la memoria ocupada por el objeto como libre, aunque \u00e9sta todav\u00eda contendr\u00e1 los datos del objeto hasta el momento en que sea reescrita.", "subsections": []}, {"name": "Objetos en la programaci\u00f3n orientada a objetos", "text": "En programaci\u00f3n orientada a objetos (POO), una instancia de programa (por ejemplo un programa ejecut\u00e1ndose en una computadora) es tratada como un conjunto din\u00e1mico de objetos interactuando entre s\u00ed. Los objetos en la POO extienden la noci\u00f3n m\u00e1s general descrita en secciones anteriores para modelar un tipo muy espec\u00edfico que est\u00e1 definido fundamentalmente por:\natributos, que representan los datos asociados al objeto, o, lo que es lo mismo, sus propiedades o caracter\u00edsticas. Los atributos y sus valores en un momento dado, determinan el estado de un objeto.\nm\u00e9todos, que acceden a los atributos de una manera predefinida e implementan el comportamiento del objeto.\nLos atributos y m\u00e9todos de un objeto est\u00e1n definidos por su clase, aunque (en un lenguaje din\u00e1mico como Python o Ruby) una instancia puede poseer atributos que no fueron definidos en su clase. Algo similar ocurre con los m\u00e9todos: una instancia puede contener m\u00e9todos que no est\u00e9n definidos en su clase de la misma manera que una clase puede declarar ciertos m\u00e9todos como \"m\u00e9todos de clase\", y estos (en dependencia del lenguaje) podr\u00e1n estar o no presentes en la instancia.\nEn el caso de la mayor\u00eda de los objetos, los atributos solo pueden ser accedidos a trav\u00e9s de los m\u00e9todos; de esta manera es m\u00e1s f\u00e1cil garantizar que los datos permanecer\u00e1n siempre en un estado bien definido (invariante de clase).\nEn un lenguaje en el que cada objeto es creado a partir de una clase, un objeto es llamado una instancia de esa clase. Cada objeto pertenece a un tipo y dos objetos que pertenezcan a la misma clase tendr\u00e1n el mismo tipo de dato. Crear una instancia de una clase es entonces referido como instanciar la clase.\nEn casi todos los lenguajes de programaci\u00f3n orientados a objeto, el operador \"punto\" (.) es usado para referirse o \"llamar\" a un m\u00e9todo particular de un objeto. Un ejemplo de lenguaje que no siempre usa este operador es C++, ya que para referirse a los m\u00e9todos de un objeto a trav\u00e9s de un puntero al objeto se utiliza el operador (->). \nConsid\u00e9rese como ejemplo una clase aritm\u00e9tica llamada Aritm\u00e9tica. Esta clase contiene m\u00e9todos como \"sumar\", \"restar\", \"multiplicar\", \"dividir\", etc. que calculan el resultado de realizar estas operaciones sobre dos n\u00fameros.\nUn objeto de esta clase puede ser utilizado para calcular el producto de dos n\u00fameros, pero primeramente ser\u00eda necesario definir dicha clase y crear un objeto. En las secciones a continuaci\u00f3n se muestra c\u00f3mo hacer esto utilizando dos lenguajes de programaci\u00f3n: C++ y Python.", "subsections": [{"name": "Declaraci\u00f3n de una clase", "text": "Esta clase podr\u00eda ser definida de la siguiente manera en C++:\nclass\n \nAritmetica\n{\n    \npublic\n:\n        \ninline\nint\nsumar\n(\na\n,\nb\n)\nconst\n            \nreturn\n+\n;\n}\nrestar\n-\nfloat\nmultiplicar\n*\ndividir\n/\n};\no como sigue en Python:\n:\ndef\nsumar\nself\n):\nrestar\nmultiplicar\ndividir"}, {"name": "Instanciaci\u00f3n de una clase en un objeto", "text": "Para crear un objeto de tipo 'Aritmetica' (instanciar Aritmetica) en C++ se har\u00eda de la siguiente forma:\nAritmetica\ncalculador\n=\n();\n#Otra manera usando punteros\ncalculador1\nnew\nla misma operaci\u00f3n usando python ser\u00eda as\u00ed:\n()"}, {"name": "Operando con un objeto", "text": "Una vez que tenemos un objeto de 'Aritmetica', podemos usarlo para realizar c\u00e1lculos sobre dos n\u00fameros. En C++ contamos con dos objetos de ejemplo: \"calculador\" y \"calculador1\"; en esta \u00faltima variable en realidad hemos almacenado la direcci\u00f3n de memoria del objeto creado. En este lenguaje esto sienta diferencias a la hora de utilizar el objeto.\nPara calcular la suma entre 78 y 69 usando un objeto \"calculador\" necesitar\u00edamos un c\u00f3digo como el siguiente en C++:\nresultado\n0\n.\n78\n69\n);\n->\nahora usando Python para sumar dos n\u00fameros con el objeto calculador:\n.\nOtro ejemplo del mundo real de un objeto podr\u00eda ser \"mi perro\", el cual es una instancia de un tipo (una clase) llamada \"perro\", la que es una subclase de la clase \"animal\". En el caso de un objeto polim\u00f3rfico, algunos detalles de su tipo pueden ser ignorados; por ejemplo, el objeto \"mi perro\" puede ser usado en un m\u00e9todo que espera recibir un \"animal\". Tambi\u00e9n podr\u00eda usarse un objeto \"gato\", puesto que esta tambi\u00e9n pertenece a la clase \"animal\". Pero mientras es accedido como un \"animal\", algunos atributos de un \"perro\" o un \"gato\" permanecer\u00e1n no disponibles, como la \"cola\", porque no todos los animales tienen cola.\nAtributos din\u00e1micos en objetos\nPython y C++ son lenguajes con caracter\u00edsticas muy diferentes. Python utiliza un sistema de tipos din\u00e1mico y C++ en cambio, uno est\u00e1tico o estricto. El sistema de tipos usado en Python permite al programador agregar atributos a una instancia que no han sido definidos en la clase que le dio origen, cosa que no es posible hacer en un lenguaje como C++. Por ejemplo: \nLa clase siguiente en Python no define ning\u00fan atributo:\nPrueba\nobject\npass\npero es posible hacer lo siguiente:\n1\np\nPrueba\n2\nunNumero\n3\nprint\n\"Atributo unNumero de p = \n%s\n\"\n%\n4\nAtributo\nde\nA la instancia de p creada en la l\u00ednea 1, le es asignado en la l\u00ednea 2 el valor \"3\", lo cual crea un atributo de nombre unNumero en p de tipo \"int\" para almacenar el n\u00famero 3."}]}, {"name": "Relaciones entre objetos", "text": "Como ya se ha dicho antes, un sistema orientado a objetos est\u00e1 caracterizado por objetos que interact\u00faan entre s\u00ed. Estas interacciones suponen ciertos tipos de relaciones entre los objetos del sistema. La sem\u00e1ntica que expresa un objeto en el sistema est\u00e1 determinada, en primer lugar, por las relaciones que \u00e9ste establece con otros objetos o conjuntos de objetos. Tomemos como ejemplo un objeto fecha, del que sin establecer ning\u00fan tipo de relaci\u00f3n, podr\u00eda decirse que significa un d\u00eda del a\u00f1o particular. Pero si relacionamos ese objeto fecha con un objeto Persona de manera que represente la fecha en que esa persona naci\u00f3, en ese contexto dado, el mismo objeto fecha adoptar\u00eda un significado diferente, el de un cumplea\u00f1os; aunque sigue siendo una fecha, ahora tiene otra idea asociada.\nLas relaciones entre objetos no solo est\u00e1n definidas por los objetos que participan y la circunstancia que los relaciona, sino tambi\u00e9n por la cantidad de objetos (cardinalidad de la relaci\u00f3n) y la direcci\u00f3n de la misma. Una relaci\u00f3n puede tener cardinalidad:\nuno a uno, ejemplo: un auto tiene un motor.\nuno a muchos, ejemplo: un auto tiene muchas ruedas.\nmuchos a muchos, ejemplo: un auto se puede servir en muchas gasolineras y una gasolinera puede servir a muchos autos.\ny direccionalidad:\nunidireccional, ejemplo: un auto tiene cuatro ruedas.\nbidireccional\nLas relaciones entre objetos m\u00e1s generales son las siguientes:", "subsections": [{"name": "Composici\u00f3n", "text": "La composici\u00f3n (tambi\u00e9n conocida como relaci\u00f3n asociativa) es un tipo de relaci\u00f3n que se establece entre dos objetos que tienen comunicaci\u00f3n persistente. Se utiliza para expresar que un par de objetos tienen una relaci\u00f3n de dependencia para llevar a cabo su funci\u00f3n, de modo que uno de los objetos involucrados est\u00e1 compuesto por el otro.\nDe manera pr\u00e1ctica, es posible reconocer asociatividad entre dos objetos A y B si la proposici\u00f3n \"A tiene un B\" (o viceversa) es verdadera.\nPor ejemplo: \"una computador tiene un disco duro\" es verdadero; por tanto, un objeto computador tiene una relaci\u00f3n de composici\u00f3n con al menos un objeto disco duro."}, {"name": "Uso", "text": "Un objeto usa (conoce) a otro cuando puede enviarle mensajes, por ejemplo, para requerir de este alg\u00fan servicio. La composici\u00f3n puede verse como un caso particular de esta relaci\u00f3n."}, {"name": "Delegaci\u00f3n", "text": "En ocasiones, para lograr flexibilidad de dise\u00f1o, un objeto es implementado de forma tal que este delegue parte de su funcionalidad en otro objeto. Esto es muy com\u00fan en aplicaciones que hacen uso de interfaces gr\u00e1ficas de usuario, en las que los controles gr\u00e1ficos generales delegan la acci\u00f3n que se ejecutar\u00e1 ante determinado est\u00edmulo en otro objeto."}]}, {"name": "Objetos especializados", "text": "Algunos t\u00e9rminos para tipos especializados de objetos son:\nSingleton: un objeto del que solo puede existir una \u00fanica instancia de su clase durante el tiempo de vida del programa.\nFunctor: un objeto que puede ser utilizado como una funci\u00f3n.\nObjeto inmutable: un objeto creado con un estado fijo y que no puede variar en el tiempo de vida del mismo.\nObjeto de primera clase: un objeto que puede ser utilizado sin restricciones.\nContenedor: un objeto que contiene a otros objetos.\nF\u00e1brica de objetos: un objeto cuyo prop\u00f3sito es crear otros objetos.\nMetaobjeto: un objeto a partir del cual se pueden crear otros objetos (comparable con una clase, la que no necesariamente es un objeto).\nPrototipo: un metaobjeto especializado a partir del cual se pueden crear otros objetos copi\u00e1ndolo.\nObjeto todopoderoso: un objeto que sabe mucho o hace mucho. Este es un ejemplo de antipatr\u00f3n de dise\u00f1o.\nAntiobjeto: una met\u00e1fora computacional \u00fatil para conceptualizar y solucionar problemas complejos, usualmente con aproximaciones paralelas.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Patr\u00f3n de dise\u00f1o\nProgramaci\u00f3n orientada a objetos\nClase (inform\u00e1tica)", "subsections": []}, {"name": "Referencias", "text": "\u2191 Schildt, Helbert (2007). Java, Manual de referencia (7 edici\u00f3n). Mc Graw Hill. pp.\u00a0105. ISBN\u00a00-07-226385-7. Consultado el 21 de enero de 2016.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pa%C3%ADses_Bajos", "title": "Pa\u00edses Bajos", "summary": "Nederland\nReino de los Pa\u00edses Bajos\n52\u00b019\u203200\u2033N 5\u00b033\u203200\u2033E\ufeff / \ufeff52.316666666667, 5.55\n[\n]\n52\u00b023\u203200\u2033N 4\u00b054\u203200\u2033E\ufeff / \ufeff52.38333, 4.90000\n\u00a0\n&&&&&&&&&0966742.&&&&&0\n&&&&&&&&&&056435.&&&&&0\nMuy alto\n\u2191 La Haya es la sede del gobierno.\n\u2191 El fris\u00f3n es una lengua regional hablada por m\u00e1s de &&&&&&&&&0450000.&&&&&0450\u00a0000 personas en la provincia de Frisia, donde es cooficial con el neerland\u00e9s.\n\u2191 Antes de 2002, el flor\u00edn neerland\u00e9s (\u0192, NLG).\nPa\u00edses Bajos[6]\u200b (PP. BB.; en neerland\u00e9s: Nederland, pronunciado\u00a0/\u02c8ne\u02d0d\u0259r\u02ccl\u0251nt/\u00a0( escuchar)) es un pa\u00eds soberano ubicado al noroeste de la Europa continental y el pa\u00eds constituyente m\u00e1s grande de los cuatro que, junto con las islas de Aruba, Curazao y San Mart\u00edn, forman el Reino de los Pa\u00edses Bajos. Pa\u00edses Bajos es miembro de la Uni\u00f3n Europea. Su capital es \u00c1msterdam;[7]\u200b sin embargo, la organizaci\u00f3n y administraci\u00f3n del Reino se ubica en La Haya, siendo la sede oficial de la monarqu\u00eda, as\u00ed como de sus autoridades ejecutivas, legislativas y judiciales. Aruba, Curazao y San Mart\u00edn son territorios de ultramar que no forman parte de la Uni\u00f3n Europea.\nEl pa\u00eds es m\u00e1s conocido como Holanda, por el nombre de su regi\u00f3n hist\u00f3rica m\u00e1s influyente o relevante, situada en la parte occidental del pa\u00eds. El diccionario panhisp\u00e1nico de dudas, publicado por la Real Academia Espa\u00f1ola, admite su uso como sin\u00f3nimo.[8]\u200b[9]\u200b[nota 1]\u200b Su idioma tambi\u00e9n es conocido tradicionalmente y por la misma raz\u00f3n como holand\u00e9s, aun cuando su nombre oficial es neerland\u00e9s; en realidad, el holand\u00e9s en sentido estricto es un dialecto del neerland\u00e9s; admisible por la RAE en el habla corriente, pero nunca en textos oficiales en donde debe ser referido como neerland\u00e9s. Lo mismo sucede con el gentilicio holand\u00e9s. La RAE lo admite en el habla corriente, pero no para los textos oficiales. En ese caso, el adjetivo a usar es \"neerland\u00e9s\".\nLas provincias que conforman los Pa\u00edses Bajos est\u00e1n situadas en el noroeste de Europa y limitan al norte y oeste con el mar del Norte, al sur con B\u00e9lgica y al este con Alemania. Completan el territorio neerland\u00e9s las municipalidades especiales de Bonaire, San Eustaquio y Saba, situadas en el Caribe. El pa\u00eds constituye una de las zonas m\u00e1s densamente pobladas del mundo.\nComo su nombre indica, el territorio del pa\u00eds est\u00e1 formado por tierras (land) bajas (neder) de las que, aproximadamente, una cuarta parte est\u00e1n situadas al nivel del mar o por debajo de este.[10]\u200b \nA menudo, se confunden tambi\u00e9n los Pa\u00edses Bajos con la uni\u00f3n aduanera conocida como Benelux formada por B\u00e9lgica, los Pa\u00edses Bajos y Luxemburgo; la denominaci\u00f3n tiene su base en el acuerdo de cooperaci\u00f3n intergubernamental que se hizo efectivo en 1944.[11]\u200b\nEl pa\u00eds est\u00e1 clasificado como \u00abde ingresos altos\u00bb seg\u00fan el Banco Mundial[12]\u200b y es uno de los estados m\u00e1s desarrollados: en 2018 est\u00e1 situado en el d\u00e9cimo lugar en cuanto a desarrollo humano seg\u00fan el \u00cdndice de Desarrollo Humano publicado por Naciones Unidas.[13]\u200b Es adem\u00e1s uno de los pa\u00edses con uno de los niveles m\u00e1s bajos de percepci\u00f3n de corrupci\u00f3n,[14]\u200b y es una de las democracias m\u00e1s consolidadas del mundo.[15]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n1.1 Prehistoria\n1.2 Roma\n1.3 Despu\u00e9s de Roma\n1.4 Borgo\u00f1a\n1.5 Pa\u00edses Bajos de los Habsburgo\n1.6 Rep\u00fablica Neerlandesa (1581-1795)\n1.7 Reino Unido de los Pa\u00edses Bajos\n1.8 Guerras mundiales\n1.9 Desde 1945\n2 Gobierno y pol\u00edtica\n3 Organizaci\u00f3n pol\u00edtico-administrativa\n4 Relaciones exteriores\n5 Geograf\u00eda\n5.1 Plan Delta\n5.2 Clima\n6 Econom\u00eda\n6.1 Turismo\n7 Demograf\u00eda\n7.1 Urbanizaci\u00f3n\n7.2 Randstad\n7.3 \u00c1reas metropolitanas\n8 Cultura\n8.1 Pintura\n8.2 Literatura\n8.3 Gastronom\u00eda\n8.4 Idioma\n8.5 Religi\u00f3n\n8.6 Tecnolog\u00eda\n8.7 Educaci\u00f3n\n8.8 Deportes\n9 V\u00e9ase tambi\u00e9n\n10 Notas\n11 Referencias\n12 Bibliograf\u00eda\n13 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "Art\u00edculo principal:", "subsections": [{"name": "Prehistoria", "text": "Los Pa\u00edses Bajos han sido habitados desde la \u00faltima glaciaci\u00f3n; los vestigios m\u00e1s antiguos hallados tienen una antig\u00fcedad de 100\u00a0000 a\u00f1os, cuando el pa\u00eds pose\u00eda un clima de tundra con muy escasa vegetaci\u00f3n. Sus primeros pobladores fueron cazadores-recolectores.[16]\u200b Al finalizar la Edad de hielo, el \u00e1rea fue habitada por varios grupos paleol\u00edticos. Uno de ellos fabricaba incluso canoas (Pesse, hacia 6500\u00a0a.\u00a0C.)[17]\u200b y antes de eso, alrededor de 8000\u00a0a.\u00a0C., una tribu mesol\u00edtica residi\u00f3 cerca de Bergumermeer (Frisia).\nLa agricultura lleg\u00f3 hacia el a\u00f1o 5000\u00a0a.\u00a0C., a trav\u00e9s de la cultura de alfarer\u00eda lineal (probablemente proveniente de la Europa central), pero solo fue practicada en las llanuras del extremo sur del pa\u00eds (Limburgo del Sur). Los recolectores-cazadores de la cultura Swifterbant est\u00e1n atestiguados a partir del 5600\u00a0a.\u00a0C.[18]\u200b y desarrollaron una sociedad agr\u00edcola hacia el 4300\u00a0a.\u00a0C.-4000\u00a0a.\u00a0C.[18]\u200b[19]\u200b en la que destac\u00f3 la introducci\u00f3n de peque\u00f1as proporciones de granos en una econom\u00eda tradicional.[20]\u200b\nLos primeros restos notables de la prehistoria fueron los d\u00f3lmenes, que han sido encontrados en la provincia de Drente, y fueron probablemente construidos por gente de la cultura granjera de Funnelbeaker entre 4100 y 3200\u00a0a.\u00a0C.[21]\u200b La primera evidencia del uso de ruedas est\u00e1 datada en torno al 2400\u00a0a.\u00a0C., y probablemente est\u00e1 relacionada con la cultura Bellbeaker (Klokbeker cultuur).[22]\u200b Esta cultura tambi\u00e9n experiment\u00f3 con cobre, de lo que se ha encontrado alguna evidencia (yunques de piedra, cuchillos de cobre, diademas de cobre) en el parque de Veluwe. Los hallazgos de cobre demuestran el comercio con otras regiones, porque el mineral de cobre no se encuentra en el pa\u00eds.\nLa Edad del Bronce probablemente comenz\u00f3 alrededor del 2000\u00a0a.\u00a0C., como en la tumba de \"El herrero de Wageningen\".[23]\u200b Despu\u00e9s de este descubrimiento, m\u00e1s objetos de la Edad del bronce aparecieron, como en Epe, en Drouwen y sobre todo en Drente, que, debido a la cantidad de objetos encontrados como cuentas de esta\u00f1o en un collar, nos indican que era centro de comercio de la \u00e9poca. La riqueza de los Pa\u00edses Bajos en la Edad del Hierro puede ser vista en la \"Tumba del rey en Oss\" (sobre el 500\u00a0a.\u00a0C.), all\u00ed un verdadero rey fue enterrado con algunos objetos como una espada de hierro con un grabado de oro y coral en el mayor t\u00famulo funerario de la Europa Occidental, que ten\u00eda 52\u00a0m de ancho.[24]\u200b\nEn la \u00e9poca de la llegada de los romanos, los Pa\u00edses Bajos se hallaban habitados por varias tribus germ\u00e1nicas, quienes se hab\u00edan asentado aqu\u00ed alrededor del 600\u00a0a.\u00a0C., como los tubanti, los canninefates o los frisios.[16]\u200b Tribus celtas se instalaron en el sur, entre ellas los eburones, menapios y texuandri. Diversos germanos se asentaron en el delta del Rin al comienzo de la ocupaci\u00f3n romana, y formaron la tribu de los b\u00e1tavos.[25]\u200b"}, {"name": "Roma", "text": "En el siglo\u00a0I\u00a0a.\u00a0C., los romanos conquistaron la parte sur del pa\u00eds, donde crearon la provincia romana de Germania Inferior.[16]\u200b Los romanos fueron los primeros en construir ciudades en el pa\u00eds, como Utrecht, Nimega y Maastricht.[26]\u200b La parte norte, que estaba fuera del Imperio romano y que era el lugar donde viv\u00edan los frisios, fue fuertemente influenciada por su poderoso vecino del sur.[16]\u200b\nLa relaci\u00f3n con los habitantes del pa\u00eds fue buena en general; muchos b\u00e1tavos sirvieron en la caballer\u00eda romana.[27]\u200b La cultura b\u00e1tava fue influenciada por la romana, resultando, entre otras cosas, en templos de tipo romano como el de Elst, dedicado a los dioses locales. Sin embargo, esto no impidi\u00f3 la rebeli\u00f3n de los b\u00e1tavos en el 69\u00a0d.\u00a0C., acaudillados por el b\u00e1tavo Julio Civilis, un oficial de las tropas auxiliares. Durante la revuelta, que aprovech\u00f3 la inestabilidad que se produjo en el imperio durante el a\u00f1o de los cuatro emperadores, los b\u00e1tavos consiguieron aniquilar dos legiones romanas e infligir humillantes derrotas al ej\u00e9rcito romano.[28]\u200b Otros soldados romanos se sumaron a la revuelta, que incluso dividi\u00f3 la parte norte del ej\u00e9rcito romano y en abril del 70\u00a0d.\u00a0C., Vespasiano envi\u00f3 unas cuantas legiones para frenar la revuelta. Su comandante, Quinto Petilio Cerial, fue derrotado por los b\u00e1tavos y entabl\u00f3 negociaciones con Julio Civilis, en alg\u00fan lugar entre el Waal y el Mosa cerca de Noviomagus (Nimega) o, como los b\u00e1tavos probablemente lo llamaban, Batavodurum.[29]\u200b"}, {"name": "Despu\u00e9s de Roma", "text": "Los reci\u00e9n llegados se unieron a los habitantes originales para crear tres pueblos: los frisios a lo largo de la costa, los sajones en el este y los francos en el sur.[16]\u200b Los francos se convirtieron al cristianismo despu\u00e9s de que su rey Clodoveo I lo hiciera en el a\u00f1o 496, y as\u00ed el cristianismo fue introducido en el norte gracias a la conquista de Frisia por los francos. Los Pa\u00edses Bajos pertenec\u00edan al imperio franco de Carlomagno, cuyo n\u00facleo se encontraba en lo que hoy es B\u00e9lgica y el norte de Francia, y que se extend\u00eda adem\u00e1s por el resto de Francia, Alemania, norte de Italia y otros territorios de la Europa occidental. En 843, con el Tratado de Verd\u00fan, el Imperio qued\u00f3 dividido en tres partes: Francia Occidental, Francia Oriental y Lotaringia. Posteriormente, este imperio central se dividi\u00f3; la mayor parte de los territorios de habla neerlandesa se integraron en Alemania, y Francia intent\u00f3 incorporar a Flandes sin \u00e9xito.[16]\u200b\nEntre los a\u00f1os 800 y 1000, los Pa\u00edses Bajos padecieron los saqueos de los vikingos, cuyos ataques eran muy violentos, como en la destrucci\u00f3n de la ciudad de Dorestad. Pero la supremac\u00eda vikinga termin\u00f3 en 920, cuando el rey Enrique I de Alemania liber\u00f3 Utrecht. Los reyes y emperadores alemanes dominaron los Pa\u00edses Bajos durante los siglos X y XI. Alemania recibi\u00f3 la denominaci\u00f3n de Sacro Imperio Romano Germ\u00e1nico tras la coronaci\u00f3n de Ot\u00f3n I el Grande como emperador.[30]\u200b Nimega fue un lugar significativo para los emperadores germanos, varios de ellos nacieron y murieron all\u00ed.\nLas Cruzadas fueron populares en los Pa\u00edses Bajos y muchos se unieron para ir a luchar en Tierra Santa. El Sacro Imperio Romano Germ\u00e1nico se mostr\u00f3 incapaz de mantener la unidad pol\u00edtica debido a la creciente independencia de las ciudades. Los gobernantes locales transformaron sus ducados y condados en reinos privados y se sent\u00edan poco obligados a obedecer al emperador. Una gran parte de lo que actualmente son los Pa\u00edses Bajos estaba gobernada por el conde de la regi\u00f3n de Holanda, el duque de G\u00fceldres, el duque de Brabante Flamenco y el obispo de Utrecht. En el norte, Frisia y Groninga mantuvieron su independencia y eran gobernadas por la peque\u00f1a nobleza.\nG\u00fceldres y la regi\u00f3n de Holanda luchaban por el control de Utrecht. Por su parte, Utrecht se vio marginada a causa de las continuas dificultades que experimentaba para elegir nuevos obispos, mientras que las dinast\u00edas de los Estados vecinos eran m\u00e1s estables. Groninga, Drente y la mayor parte de G\u00fceldres, que hab\u00eda formado parte de Utrecht, se independizaron. Brabante trat\u00f3 de someter a sus vecinos, aunque sus intentos fracasaron. Los Pa\u00edses Bajos tambi\u00e9n intentaron asegurar su supremac\u00eda en Zelanda y Frisia, pero tampoco lo lograron. En el norte, Frisia conserv\u00f3 su independencia durante este per\u00edodo. Pose\u00eda sus propias instituciones y se opon\u00eda a la imposici\u00f3n del sistema feudal que se pod\u00eda encontrar en otras localidades europeas. A pesar de ello, los frisios perdieron su independencia cuando fueron derrotados en 1498 por los mercenarios lansquenetes alemanes del duque Alberto III de Sajonia-Meissen."}, {"name": "Borgo\u00f1a", "text": "Los Pa\u00edses Bajos Borgo\u00f1ones es un t\u00e9rmino que describe a la entidad geopol\u00edtica que abarcaba a los territorios de la regi\u00f3n de los Pa\u00edses Bajos (Nederlanden; Lage Landen), que fueron incorpor\u00e1ndose al dominio de los duques de Borgo\u00f1a durante el per\u00edodo comprendido entre 1384 y 1477.\nLos territorios borgo\u00f1ones se vieron expandidos con el Condado de Namur en 1421, los ducados de Brabante y Limburgo en 1439, los condados de Henao, Holanda y Zelanda en 1432, el Ducado de Luxemburgo en 1441 y el ducado de G\u00fceldres en 1437.\nEn 1433 buena parte del territorio de los Pa\u00edses Bajos y B\u00e9lgica fue unificado por el duque Felipe III de Borgo\u00f1a.[31]\u200b Antes de la uni\u00f3n borgo\u00f1ona, los neerlandeses se identificaban con su ciudad, su condado o ducado local o como s\u00fabditos del Sacro Imperio Romano Germ\u00e1nico. Fue durante esta etapa borgo\u00f1ona cuando comenz\u00f3 a surgir entre los neerlandeses una conciencia de naci\u00f3n. Los principales nobles de los Pa\u00edses Bajos invitaron al duque a conquistar este pa\u00eds, a pesar de que \u00e9l no ten\u00eda ninguna pretensi\u00f3n hist\u00f3rica sobre los Pa\u00edses Bajos. \u00c1msterdam creci\u00f3 y en el siglo\u00a0XV se convirti\u00f3 en el principal puerto comercial europeo para el grano procedente de la regi\u00f3n b\u00e1ltica.\nG\u00fceldres se opon\u00eda al dominio borgo\u00f1\u00f3n y trat\u00f3 de crear su propio Estado en el noreste de los Pa\u00edses Bajos y noroeste de Alemania. Debido a la falta de dinero, G\u00fceldres hizo que sus soldados se proveyeran de lo que necesitaran mediante el saqueo de los territorios enemigos. Estos soldados supusieron una gran amenaza para los Pa\u00edses Bajos borgo\u00f1ones. G\u00fceldres estaba aliada con Francia, Inglaterra y Dinamarca, los cuales quer\u00edan poner fin a la prosperidad de Flandes y al dominio borgo\u00f1\u00f3n sobre los Pa\u00edses Bajos.\nCuando Carlos el Temerario, duque de Borgo\u00f1a, muri\u00f3 en enero de 1477 en la batalla de Nancy sin descendencia masculina, el rey Luis XI de Francia se apoder\u00f3 del ducado de Borgo\u00f1a y lo anexion\u00f3 al dominio real, sobre la base de que los infantazgos se hab\u00edan reglamentado de forma que, al extinguirse la descendencia masculina, deb\u00edan incorporarse a la Corona. Pero Mar\u00eda de Borgo\u00f1a, la hija del duque de Borgo\u00f1a, se cas\u00f3 con el futuro emperador Maximiliano I de Habsburgo para defender su herencia y no acept\u00f3 la p\u00e9rdida del ducado, manteniendo as\u00ed la titulaci\u00f3n de duque de Borgo\u00f1a por el prestigio que otorgaba a su titular el ser Gran Maestre y Jefe Soberano de la Orden del Tois\u00f3n de Oro.\nEn febrero de 1477, Mar\u00eda de Borgo\u00f1a concede el llamado Gran Privilegio a sus s\u00fabditos de Flandes (B\u00e9lgica, Pa\u00edses Bajos, Luxemburgo y norte de Francia), que fue firmado en Gante, devolvi\u00e9ndoles los privilegios arrebatados por los duques anteriores, Felipe el Bueno y Carlos el Temerario. Era un Estatuto que garantizaba el autogobierno de los Pa\u00edses Bajos, seg\u00fan el cual se creaba un Gran Consejo para asesorar a Mar\u00eda de Borgo\u00f1a, que se compromet\u00eda a no declarar la guerra o subir los impuestos sin el consentimiento de los Estados Generales de los Pa\u00edses Bajos.\nAl firmarse el tratado de Senlis en 1493, los franceses conservaron el territorio del Ducado de Borgo\u00f1a, pero devolvieron el Franco Condado y el Artois a los borgo\u00f1ones. En 1493, Felipe el Hermoso ya era mayor de edad y su intitulaci\u00f3n en 1495 muestra sus posesiones territoriales en los Pa\u00edses Bajos:\nEl matrimonio de Felipe el Hermoso con la hija de los Reyes Cat\u00f3licos y futura reina Juana I posibilit\u00f3 la vinculaci\u00f3n de los territorios de Borgo\u00f1a y los Pa\u00edses Bajos con los futuros monarcas espa\u00f1oles.\nEn el tratado de Nimega (1678), se cedi\u00f3 definitivamente el territorio de Borgo\u00f1a a Francia, con lo que una vez adquiridos todos los territorios de Borgo\u00f1a (Franco Condado y Ducado de Borgo\u00f1a), Luis XIV de Francia invisti\u00f3 a su nieto Luis de Francia (1682-1712), como duque de Borgo\u00f1a. Por otra parte, Carlos II de Espa\u00f1a y sus sucesores conservaron los t\u00edtulos borgo\u00f1ones de forma nominal en su intitulaci\u00f3n."}, {"name": "Pa\u00edses Bajos de los Habsburgo", "text": "Por herencia y conquista el pa\u00eds lleg\u00f3 a estar en posesi\u00f3n de la dinast\u00eda de los Habsburgo bajo Carlos V en el siglo\u00a0XVI, quien los unific\u00f3 en un solo Estado.[33]\u200b El este de los Pa\u00edses Bajos solo fue ocupado unas d\u00e9cadas antes de la lucha de los neerlandeses por su independencia. Sin embargo, en 1548, ocho a\u00f1os antes de que abdicara del trono, el Emperador Carlos V garantiz\u00f3 el estatus de las Diecisiete Provincias de los Pa\u00edses Bajos como una entidad separada tanto del Imperio como de Francia.[34]\u200b Esta Pragm\u00e1tica Sanci\u00f3n de 1549 no fue de independencia plena, pero permiti\u00f3 una autonom\u00eda significativa.\nAl emperador Carlos le sucedi\u00f3 su hijo Felipe II de Espa\u00f1a.[35]\u200b A diferencia de su padre, que hab\u00eda crecido en Gante (B\u00e9lgica), Felipe tuvo poco apego personal con los Pa\u00edses Bajos, y as\u00ed la nobleza local le consider\u00f3 indiferente hacia su Estado. Como cat\u00f3lico devoto, Felipe estaba consternado por el \u00e9xito de la Reforma protestante, que llev\u00f3 a un aumento del n\u00famero de calvinistas. Sus intentos por reforzar la persecuci\u00f3n religiosa de los protestantes y sus esfuerzos por centralizar el gobierno, la justicia y los impuestos le hicieron impopular y condujeron a una revuelta. Los neerlandeses lucharon por su independencia de Espa\u00f1a, lo que origin\u00f3 la guerra de los Ochenta A\u00f1os (1568-1648). Siete provincias rebeldes se unieron en la Uni\u00f3n de Utrecht en 1579 y formaron la Rep\u00fablica de los Siete Pa\u00edses Bajos Unidos.[36]\u200b\nLos tratados de paz con Francia (1598) y con Inglaterra (1604) y el agotamiento por la guerra llevaron al establecimiento de la tregua de los doce a\u00f1os.\nEn la pr\u00e1ctica los territorios del norte formaban las Provincias Unidas: Holanda, Zelanda, Utrecht, G\u00fceldres (con Zutphen), Overijssel (con Drente), Frisia y Groniga, adem\u00e1s de los territorios de la Generalidad (partes de Brabante, Flandes y Limburgo). Los territorios del sur, bajo la soberan\u00eda de los Habsburgo, formaron los Pa\u00edses Bajos espa\u00f1oles: Flandes, Artois, Henao, Namur, Luxemburgo, Brabante, Amberes, Malinas, Limburgo. Esto se reflej\u00f3 en los Estados Generales de los Pa\u00edses Bajos, ya que en la parte septentrional se establecieron en La Haya y en la parte meridional en Bruselas.\nDe esta manera, por el Acta de Abjuraci\u00f3n de 1581 y la Tregua de los doce a\u00f1os de 1609 se formaron dos entidades pol\u00edticas: al norte, las Provincias Unidas, y al sur los Pa\u00edses Bajos espa\u00f1oles.\nMediante la Tregua con las provincias del Norte, los archiduques Alberto e Isabel Clara Eugenia emprendieron una pol\u00edtica de reparaci\u00f3n y reorganizaci\u00f3n interna, protegiendo las artes, las ciencias, as\u00ed como el comercio y la agricultura. Adem\u00e1s su Edicto Perpetuo de 12 de julio de 1611[37]\u200b conforma el primer c\u00f3digo legal belga. No obstante, aunque independientes los Pa\u00edses Bajos permanecieron dentro de la esfera de influencia espa\u00f1ola.\nEn 1714, con el Tratado de Rastatt el emperador Carlos VI obtuvo el control de los Pa\u00edses Bajos espa\u00f1oles, pasando a ser conocidos como los Pa\u00edses Bajos austr\u00edacos.\nLa pol\u00edtica centralizadora del emperador Jos\u00e9 II de Habsburgo en contra de los antiguos privilegios provoc\u00f3 la rebeli\u00f3n general en 1788, la Revoluci\u00f3n brabanzona, que se declararon independientes y formaron los Estados Unidos de B\u00e9lgica (11 de enero de 1790), en una declaraci\u00f3n firmada por Brabante Flamenco, G\u00fceldres, Flandes, Flandes Occidental, Henao, Namur, Tournai, Tournaisis y Malinas, pero no Luxemburgo.[38]\u200b\nA fines de 1790, el poder imperial lo restaur\u00f3 el emperador Leopoldo II de Austria.\nDurante las guerras revolucionarias francesas, el ej\u00e9rcito revolucionario franc\u00e9s venci\u00f3 en 1792 al austriaco en la batalla de Jemappes y conquist\u00f3 los territorios de los Pa\u00edses Bajos meridionales, pero la victoria austriaca en Neerwinden en 1793 puso en retirada al ej\u00e9rcito franc\u00e9s.\nFinalmente, los franceses obtuvieron en 1794 la victoria en la batalla de Fleurus y los austriacos se retiraron de nuevo de los Pa\u00edses Bajos.\nEl 1 de octubre de 1795, la Convenci\u00f3n Nacional anexion\u00f3 los Pa\u00edses Bajos y el Obispado de Lieja.[39]\u200b La p\u00e9rdida de territorios fue reconocida por Austria en el Tratado de Campo Formio, el 17 de octubre de 1797."}, {"name": "Rep\u00fablica Neerlandesa (1581-1795)", "text": "Guillermo I de Orange, el fundador de la familia real neerlandesa, lider\u00f3 a los neerlandeses durante la primera parte de la guerra. Los primeros a\u00f1os fueron un \u00e9xito para las tropas espa\u00f1olas. Sin embargo, los asedios siguientes en los Pa\u00edses Bajos fueron contrarrestados. El rey de Espa\u00f1a perdi\u00f3 el dominio de los Pa\u00edses Bajos despu\u00e9s de que las tropas de Felipe II amotinadas saqueasen Amberes y matasen a un n\u00famero considerable de sus habitantes. Los cat\u00f3licos conservadores del sur y el este apoyaron a los espa\u00f1oles, que reconquistaron Amberes y otras ciudades flamencas y neerlandesas. Si bien la mayor parte del territorio en los Pa\u00edses Bajos se sustraer\u00eda finalmente al dominio de la rama espa\u00f1ola de los Habsburgo, no sucedi\u00f3 lo mismo en Flandes, teniendo como resultado la separaci\u00f3n hist\u00f3rica entre los Pa\u00edses Bajos y Flandes). Muchos flamencos huyeron a los Pa\u00edses Bajos, entre ellos, la mitad de la poblaci\u00f3n de Amberes, tres cuartos de la de Brujas y Gante y toda la poblaci\u00f3n de Nieuwpoort, Dunkerque y el campo.\nLa guerra continu\u00f3 ininterrumpidamente durante sesenta a\u00f1os m\u00e1s, pero el enfrentamiento principal hab\u00eda terminado. La Paz de Westfalia, firmada el 30 de enero de 1648, confirm\u00f3 la independencia de las Provincias Unidas respecto a Espa\u00f1a y Alemania. Los neerlandeses ya no se consideraban a s\u00ed mismos como alemanes desde el siglo\u00a0XV, pero permanecieron oficialmente como parte del Sacro Imperio Romano Germ\u00e1nico hasta 1648. La identidad nacional se form\u00f3 principalmente por la provincia de la que proced\u00eda la mayor\u00eda de la poblaci\u00f3n. Puesto que los Pa\u00edses Bajos eran con diferencia, la provincia m\u00e1s importante, la Rep\u00fablica de las Siete Provincias lleg\u00f3 a ser conocida como Pa\u00edses Bajos en el extranjero.\nLos pescadores neerlandeses cazaban ballenas en la costa de Svalbard, comerciaban con especias en la India e Indonesia y fundaron colonias en Nueva \u00c1msterdam (hoy Nueva York), Sud\u00e1frica y las Indias Orientales Neerlandesas. El mayor asentamiento neerland\u00e9s en el extranjero fue la Colonia del Cabo, fundada por Jan van Riebeeck en nombre de la Compa\u00f1\u00eda Neerlandesa de las Indias Orientales, en Ciudad del Cabo en 1652. El pr\u00edncipe de Orange adquiri\u00f3 el control de la Colonia del Cabo en 1788.\nAdem\u00e1s, algunas antiguas colonias portuguesas fueron conquistadas por los neerlandeses, principalmente en el nordeste de Brasil, Angola, Indonesia y Ceil\u00e1n. Debido a estos acontecimientos, el siglo\u00a0XVII lleva el sobrenombre de la Edad de Oro de los Pa\u00edses Bajos. Como eran una rep\u00fablica, estaban gobernados m\u00e1s por una aristocracia de comerciantes urbanos, llamados los regentes. Los Estados Generales, con representantes de todas las provincias, decid\u00edan aquellas cuestiones importantes para toda la Rep\u00fablica. Sin embargo, a la cabeza de cada provincia estaba el estat\u00fader de esa provincia, un puesto ocupado por un descendiente de la Casa de Orange.\nEn 1650 el estat\u00fader Guillermo II de Orange-Nassau muri\u00f3 repentinamente de viruela. Su hijo, el \u00faltimo estat\u00fader y rey de Inglaterra, Guillermo III, naci\u00f3 ocho d\u00edas despu\u00e9s, por tanto, dej\u00f3 a la naci\u00f3n sin un sucesor obvio. Los pr\u00edncipes de Orange se convirtieron en estat\u00fader y en gobernantes casi hereditarios en 1672 y 1748. La Rep\u00fablica Neerlandesa de las Provincias Unidas fue una aut\u00e9ntica rep\u00fablica solamente desde 1650 hasta 1672 y de 1702 a 1748. A estos per\u00edodos se les llama la Primera y Segunda Era sin estat\u00fader."}, {"name": "Reino Unido de los Pa\u00edses Bajos", "text": "El territorio de los Pa\u00edses Bajos fue incorporado al Primer Imperio franc\u00e9s bajo el reinado de Napole\u00f3n I desde 1810 hasta 1814. Despu\u00e9s se form\u00f3 el Reino Unido de los Pa\u00edses Bajos que inclu\u00eda a las actuales B\u00e9lgica y Luxemburgo. El Congreso de Viena aport\u00f3 dos importantes cambios: se perdi\u00f3 el dominio colonial sobre Indonesia y se unificaron el norte y sur de los Pa\u00edses Bajos.\nLas tensiones entre el norte y el sur, entre otras causas por la diferencia religiosa, provocaron que en 1830 los belgas se declararan independientes (Revoluci\u00f3n belga), y aunque el rey Guillermo I envi\u00f3 un a\u00f1o m\u00e1s tarde tropas, la movilizaci\u00f3n del ej\u00e9rcito franc\u00e9s en favor de la causa belga le hizo desistir de cualquier enfrentamiento. Solo ocho a\u00f1os m\u00e1s tarde, en 1839, se reconoci\u00f3 oficialmente la independencia de B\u00e9lgica.\nLa ascensi\u00f3n de la reina Guillermina al trono en 1890 signific\u00f3 la separaci\u00f3n de los Pa\u00edses Bajos de Luxemburgo, debido a que el t\u00edtulo de Gran Duque no pod\u00eda ser heredado por una mujer.[40]\u200b Durante el siglo\u00a0XIX el pa\u00eds tard\u00f3 en industrializarse en comparaci\u00f3n con Alemania o Francia.[41]\u200b"}, {"name": "Guerras mundiales", "text": "A pesar de que los Pa\u00edses Bajos movilizaron sus tropas en agosto de 1914, permanecieron neutrales durante la Primera Guerra Mundial.[42]\u200b La invasi\u00f3n alemana de B\u00e9lgica aquel mismo a\u00f1o indujo a muchos refugiados belgas (en torno a un mill\u00f3n) a buscar cobijo en el pa\u00eds. Dado que los neerlandeses se encontraban rodeados por pa\u00edses en guerra y el mar del Norte no era seguro para la navegaci\u00f3n civil, los alimentos escasearon y se hizo necesario recurrir al racionamiento. Al finalizar el conflicto en 1918, la situaci\u00f3n regres\u00f3 a la normalidad.\nLa Gran Depresi\u00f3n de 1929 tuvo efectos muy negativos para la econom\u00eda neerlandesa. Como el gobierno de Henrik Colijn se neg\u00f3 a cambiar su pol\u00edtica econ\u00f3mica y a salir del patr\u00f3n oro, los Pa\u00edses Bajos tardaron m\u00e1s tiempo en recuperarse de la crisis que otros pa\u00edses europeos. La depresi\u00f3n provoc\u00f3 mucho desempleo y pobreza, adem\u00e1s de un creciente descontento social. El auge del nacionalsocialismo en Alemania no pas\u00f3 inadvertido en los Pa\u00edses Bajos, en los que surgi\u00f3 el temor a un nuevo conflicto armado. A pesar de ello, la opini\u00f3n mayoritaria entre los neerlandeses era que Alemania respetar\u00eda la neutralidad de los Pa\u00edses Bajos.\nAl estallar la Segunda Guerra Mundial en 1939, declararon su neutralidad una vez m\u00e1s. No obstante, el 10 de mayo de 1940 los alemanes lanzaron un ataque contra los Pa\u00edses Bajos y B\u00e9lgica y conquistaron la mayor parte del pa\u00eds en poco tiempo. Las mal equipadas tropas neerlandesas pudieron hacer muy poco; el 14 de mayo ya solo quedaban unas pocas bolsas de resistencia. Sin embargo, aquel d\u00eda la Luftwaffe (fuerza a\u00e9rea alemana) bombarde\u00f3 R\u00f3terdam, la segunda ciudad m\u00e1s importante del pa\u00eds, matando a 800 personas y destruyendo buena parte de la ciudad, lo que dej\u00f3 sin hogar a 78\u00a0000 personas. Tras este bombardeo y las amenazas alemanas de realizar uno similar en Utrecht, los Pa\u00edses Bajos capitularon el 15 de mayo (excepto la provincia de Zelanda). La familia real y algunas tropas huyeron al Reino Unido. Algunos miembros de la familia real vivieron en Ottawa (Canad\u00e1) hasta la liberaci\u00f3n aliada.\nFuerzas japonesas invadieron las Indias Orientales Neerlandesas el 11 de enero de 1942; all\u00ed, los neerlandeses se rindieron el 8 de marzo, despu\u00e9s de que los japoneses desembarcaran en Java. Sin embargo, muchos nav\u00edos y militares neerlandeses lograron alcanzar Australia, desde donde lucharon contra los japoneses. El invierno 1944-1945 fue especialmente duro, provocando hambruna y pasando a la historia neerlandesa con el nombre de Hongerwinter (\"invierno del hambre\").[43]\u200b El 6 de mayo de 1945, la Alemania nazi claudic\u00f3 y firm\u00f3 su rendici\u00f3n ante los neerlandeses en Wageningen."}, {"name": "Desde 1945", "text": "Despu\u00e9s de la guerra, la econom\u00eda neerlandesa prosper\u00f3 y el pa\u00eds fue miembro fundador de la Comunidad Europea del Carb\u00f3n y del Acero (CECA) en 1951, la cual desemboc\u00f3 finalmente en 1957 en la fundaci\u00f3n de la Comunidad Econ\u00f3mica Europea. Ya en 1944 B\u00e9lgica, los Pa\u00edses Bajos y Luxemburgo comenzaron una cooperaci\u00f3n aduanera bajo el nombre de Benelux, (BElgi\u00eb-NEderland-LUXembourg), que aboc\u00f3 en 1958 en una uni\u00f3n econ\u00f3mica.[44]\u200b El Tratado de la Uni\u00f3n Europea o Tratado de Maastricht es conocido as\u00ed porque se firm\u00f3 en la ciudad neerlandesa de Maastricht.[45]\u200b\nEn 1953 el pa\u00eds sufri\u00f3 una de las cat\u00e1strofes naturales m\u00e1s grandes de su historia. En la noche del 31 de enero al 1 de febrero se rompieron m\u00faltiples diques en el suroeste del pa\u00eds, inundando grandes zonas de las provincias de Zelanda y Holanda Meridional causando la muerte a cerca de 1800 personas y p\u00e9rdidas millonarias.[46]\u200b A partir de entonces, se inici\u00f3 el Plan Delta que proyect\u00f3 la construcci\u00f3n de grandes diques y obras civiles para la retenci\u00f3n de los embates de las aguas del mar del Norte. Pero las obras que deber\u00edan proteger la provincia de Zelanda no se terminaron hasta casi el final del siglo\u00a0XX.\nLa creaci\u00f3n del Benelux, uni\u00f3n econ\u00f3mica junto con B\u00e9lgica y Luxemburgo, y su posterior adhesi\u00f3n a otros organismos paneuropeos dio paso a la creaci\u00f3n de la Comunidad Econ\u00f3mica Europea tras la firma de los tratados de Roma en 1957, por lo que los Pa\u00edses Bajos son considerados como uno de los pa\u00edses fundadores de dicha organizaci\u00f3n. Durante los a\u00f1os 1970 la crisis del petr\u00f3leo hizo que los diferentes gobiernos creasen un frente con cambios en la pol\u00edtica econ\u00f3mica, creando un ejemplo de crecimiento, lo que algunos denominaron polder-economie o econom\u00eda de p\u00f3lder. En 1980 la reina Juliana abdic\u00f3 en su hija Beatriz, el sexto monarca desde la creaci\u00f3n del Reino de los Pa\u00edses Bajos y tercera mujer, tras su madre y su abuela, que reina el territorio de forma consecutiva.\nLos gabinetes de Ruud Lubbers (1982-1994) comenzaron con una pol\u00edtica de economizar y privatizar. En 1992 se firm\u00f3 en la ciudad de Maastricht el Tratado de la Uni\u00f3n Europea. El gabinete de Wim Kok (1994-2002) estaba compuesto por liberales y socialdem\u00f3cratas y fue el primer gabinete sin partidos cristianos. En 2001 se introdujeron las reformas liberales pioneras en el mundo, como el matrimonio entre personas del mismo sexo y la legalizaci\u00f3n de la eutanasia.\nEl 28 de enero de 2013, la reina Beatriz anunci\u00f3 por televisi\u00f3n su abdicaci\u00f3n a favor de su hijo el pr\u00edncipe Guillermo Alejandro, que reina con el mismo nombre a partir del 30 de abril de dicho a\u00f1o.[47]\u200b"}]}, {"name": "Gobierno y pol\u00edtica", "text": "Los Pa\u00edses Bajos forman una monarqu\u00eda constitucional. El pa\u00eds se describe como un estado de consolidaci\u00f3n pol\u00edtico-social, llegando incluso a proyectarse como un statu quo de los pa\u00edses del mundo. Las pol\u00edticas de su gobierno se caracterizan por un esfuerzo en alcanzar amplio consenso en decisiones importantes, dentro de la comunidad pol\u00edtica y de la sociedad en su totalidad. El Estado adem\u00e1s se caracteriza pol\u00edtica y socialmente por reformar instituciones como la familia y permitir con ello la entrada de nuevas maneras de convivencia social tales como el matrimonio del mismo sexo, la transexualidad,[48]\u200b la eutanasia y el uso de drogas recreativas.\nDentro de su conformaci\u00f3n pol\u00edtica, el rey desempe\u00f1a el poder ejecutivo y ratifica la libre elecci\u00f3n del primer ministro por el pueblo. El poder legislativo est\u00e1 representado por lo que hasta hoy d\u00eda se denominan Estados Generales (Parlamento), las cuales consisten en dos c\u00e1maras de representaci\u00f3n legislativa. El poder judicial es representado por las Asambleas Provisionales, las cuales tambi\u00e9n son elegidas por sufragio directo.[cita\u00a0requerida] En los Pa\u00edses Bajos, el estado neerland\u00e9s financia, adem\u00e1s del salario, todos los costos de la Casa Real, lo que incluye palacios, viajes en avi\u00f3n, personal, entre otros, con costos que ascienden 4,5 millones de euros al a\u00f1o.[cita\u00a0requerida]\nSe rige de acuerdo al Estatuto del Reino de 1954 y a la Constituci\u00f3n de 1815, los cuales han sido reformados en innumerable cantidad de ocasiones. El sufragio masculino se implant\u00f3 en 1917 y el universal en 1919.", "subsections": []}, {"name": "Organizaci\u00f3n pol\u00edtico-administrativa", "text": "Los Pa\u00edses Bajos, como pa\u00eds constituyente del reino, est\u00e1n formados por doce provincias:\nBrabante Septentrional\nDrente\nFlevoland\nFrisia\nG\u00fceldres\nGroninga\nHolanda Meridional\nHolanda Septentrional\nLimburgo\nOverijssel\nUtrecht\nZelanda\nCada provincia est\u00e1 gobernada por un comisionado o gobernador designado por el rey, y una c\u00e1mara legislativa elegida mediante sufragio universal. Las provincias tienen varias municipalidades, cada una de ellas gobernada por una junta elegida popularmente y un burgomaestre o alcalde nombrado por el monarca.\nAsimismo, las municipalidades especiales de Bonaire, San Eustaquio y Saba, localizadas en el llamado Caribe Neerland\u00e9s, forman parte del territorio de los Pa\u00edses Bajos desde el 10 de octubre de 2010, pero no forman parte de ninguna provincia. Antes de la disoluci\u00f3n de las Antillas Neerlandesas, las tres municipalidades, junto con Curazao y Sint Maarten, formaban parte de los Pa\u00edses Bajos, completando el territorio del Reino de los Pa\u00edses Bajos el pa\u00eds constituyente de Aruba, con el mismo estatus en el reino que los Pa\u00edses Bajos desde 1986. Tras dicha fecha, Curazao y Sint Maarten pasaron a obtener la misma autonom\u00eda que Aruba.", "subsections": []}, {"name": "Relaciones exteriores", "text": "V\u00e9ase tambi\u00e9n:\nLa pol\u00edtica exterior de Pa\u00edses Bajos se centra en la defensa de los intereses del reino y est\u00e1 presidida por el deseo de fomentar la paz, la libertad, el bienestar y el orden jur\u00eddico internacional. Se desarrolla en gran medida en las decisiones de las Naciones Unidas (ONU), la Uni\u00f3n Europea (UE) y la Organizaci\u00f3n del Tratado del Atl\u00e1ntico Norte (OTAN). Fue uno de los fundadores de la ONU, la OTAN, la Comunidad Europea, el FMI (Fondo Monetario Internacional), el BIRD (Banco Mundial) y la UEO (Uni\u00f3n Europea Occidental).[49]\u200b", "subsections": []}, {"name": "Geograf\u00eda", "text": "El nombre del pa\u00eds, Nederlanden (\u00abTierras bajas\u00bb), se debe a que una parte del norte y oeste del territorio del pa\u00eds se encuentra por debajo del nivel del mar. Al sureste del pa\u00eds se extienden los llamados Pa\u00edses altos superiores, que se elevan un poco por encima del nivel del mar.\nUn complejo sistema de drenaje de agua, cuya construcci\u00f3n se inici\u00f3 en la \u00e9poca medieval, ha permitido incrementar la superficie del pa\u00eds en m\u00e1s de un 20\u00a0%. Sin un drenaje constante la mitad de los Pa\u00edses Bajos ser\u00eda inundado por el mar y por los numerosos r\u00edos que cruzan su territorio, como es el caso del Rin que desemboca en R\u00f3terdam, lo que ha hecho de esta ciudad el puerto de mayor tr\u00e1fico de Europa. Junto con el Rin hay otros dos r\u00edos m\u00e1s que dividen al pa\u00eds en dos partes, estos son el r\u00edo Mosa y el Waal. El punto m\u00e1s alto del pa\u00eds se encuentra en Vaalserberg, en la provincia de Limburgo y tiene una altitud de 321 metros sobre el nivel del mar.[50]\u200b", "subsections": [{"name": "Plan Delta", "text": "Durante la inundaci\u00f3n del mar del Norte de 1953, la brecha en un dique caus\u00f3 la muerte a 1835 personas, forzando la evacuaci\u00f3n de otras 70\u00a0000, adem\u00e1s de ser destruidas 4500 edificaciones. Para evitar que una cat\u00e1strofe as\u00ed se repitiera, un ambicioso proyecto fue puesto en marcha, el Plan Delta (Idioma neerland\u00e9s: Deltawerken) que uni\u00f3 las desembocaduras del Rin y el Mosa.\nLa obra m\u00e1s destacada del complejo es la Oosterscheldekering que est\u00e1 considerada una de la siete maravillas del mundo moderno seg\u00fan la Sociedad Americana de Ingenieros Civiles.\nAdem\u00e1s, los Pa\u00edses Bajos son uno de los pa\u00edses que m\u00e1s sufren el cambio clim\u00e1tico. Las inundaciones producidas por el mar son un problema y un desbordamiento de los r\u00edos tambi\u00e9n podr\u00eda ser muy peligroso.[51]\u200b[52]\u200b[53]\u200b"}, {"name": "Clima", "text": "El bioma primigenio es el bosque templado de frondosas. Seg\u00fan WWF, la pr\u00e1ctica totalidad del pa\u00eds pertenece a la ecorregi\u00f3n denominada bosque mixto atl\u00e1ntico, salvo el extremo sureste, que corresponde al bosque de frondosas de Europa occidental. Los vientos del oeste, especialmente en invierno son fuertes, las lluvias copiosas y las temperaturas moderadas con granizo.[54]\u200b La siguiente tabla muestra las variaciones del clima en el pa\u00eds:"}]}, {"name": "Econom\u00eda", "text": "Pa\u00edses Bajos cuenta con una de econom\u00eda de mercado que se constituye como una de las m\u00e1s grandes[cita\u00a0requerida] y desarrolladas del mundo. Seg\u00fan el Banco Mundial, en 2018 su econom\u00eda creci\u00f3 un 2,6\u00a0%[55]\u200b y alcanzaba un PIB per c\u00e1pita de 54\u00a0024,059\u00a0USD.[56]\u200b El 70,2\u00a0% de la fuerza laboral trabaja en el sector servicios, un 17,9\u00a0% trabaja en la industria, y tan solo el 1,6\u00a0% de la fuerza laboral trabaja en el sector de agricultura.[57]\u200b En el segundo trimestre del a\u00f1o 2019, la tasa de desempleo se situ\u00f3 en el 3,3\u00a0%, una de las m\u00e1s bajas de la OCDE.[58]\u200b En 2015, el porcentaje de poblaci\u00f3n que viv\u00eda con menos de 5,50 d\u00f3lares al d\u00eda era del 0,5\u00a0%.[59]\u200b\n\u00a0Alemania\n Rep\u00fablica Popular China\n\u00a0B\u00e9lgica\n\u00a0Reino Unido\n\u00a0Francia\n\u00a0Estados Unidos\n\u00a0Italia\nLa econom\u00eda neerlandesa destaca por su alto grado de competitividad, situ\u00e1ndose en 2019 en el cuarto puesto de un total de 141 pa\u00edses.[60]\u200b El comercio representa m\u00e1s del 80\u00a0% de su PIB y si se suman sus importaciones y exportaciones, a pesar de que su poblaci\u00f3n tiene un peso relativo del 0,22\u00a0% en la poblaci\u00f3n mundial, su comercio equivale al 4\u00a0% del total. En 2006, el puerto de R\u00f3terdam era el s\u00e9ptimo contenedor m\u00e1s grande en t\u00e9rminos de TEU. En el norte, cerca de Slochteren, est\u00e1 situado uno de los campos de gas natural m\u00e1s grandes del mundo.[61]\u200b Hasta ahora la explotaci\u00f3n de este campo dio un ingreso total de 159\u00a0000 millones de euros desde mediados de los a\u00f1os 1970. Con un poco m\u00e1s de la mitad de las reservas consumidas y esperando una subida continuada de los precios del petr\u00f3leo, se esperan ingresos durante las pr\u00f3ximas d\u00e9cadas.[62]\u200b\nDebido a la escasez de recursos naturales, con la notable excepci\u00f3n de gas natural, los Pa\u00edses Bajos son muy dependientes de las importaciones de otros pa\u00edses.[63]\u200b\nSeg\u00fan las previsiones de la Comisi\u00f3n Europea, la econom\u00eda neerlandesa crecer\u00e1 un 1,7\u00a0% en 2019 y un 1,3\u00a0% para 2020 y 2021, por lo que se tratar\u00e1 de un crecimiento moderado, pero superior al de otros pa\u00edses de su entorno como Alemania, B\u00e9lgica, Francia.[64]\u200b", "subsections": [{"name": "Turismo", "text": "En 2017, unos 17,6 millones de personas visitaron los Pa\u00edses Bajos, y el sector da empleo a m\u00e1s de 640 000 personas.[65]\u200b \u00c1msterdam es la capital del pa\u00eds y uno de los destinos m\u00e1s visitados por los turistas. La poblaci\u00f3n utiliza la bicicleta como medio de transporte preferente. Los lugares m\u00e1s relevantes para visitar en \u00c1msterdam son el museo van Gogh, el Rijksmuseum y la casa de Ana Frank.\nEn el resto del pa\u00eds los destinos m\u00e1s frecuentes son: La Haya, capital administrativa de los Pa\u00edses Bajos; R\u00f3terdam con el Europort, el puerto m\u00e1s grande de Europa y segundo del mundo; Gouda, con su mercado de queso que se celebra todos los jueves; Alkmaar, tambi\u00e9n importante por sus quesos; y Dordrecht, ciudad m\u00e1s antigua de los Pa\u00edses Bajos junto con Nimega y las localidades de Lisse e Hillegom, que poseen el Keukenhof. Tambi\u00e9n son importantes Delft, Haarlem, Utrecht o Groninga.\nCabe destacar que el pa\u00eds dispone de siete lugares declarados Patrimonio de la humanidad por la Unesco.[66]\u200b Uno de ellos se encuentra en las Antillas Neerlandesas, la zona hist\u00f3rica de Willemstad. Adem\u00e1s cuenta con otro lugar m\u00e1s, compartido con Alemania, el mar de Frisia. El resto son: Schokland y sus alrededores, la l\u00ednea de defensa de \u00c1msterdam, la red de molinos de Kinderdijk-Elshout, la Ir.D.F. Woudagemaal, el Droogmakerij de Beemster y la casa Rietveld Schr\u00f6der.\nA partir de 2020, y bajo la supervisi\u00f3n del Ministerio de Asuntos Exteriores, la marca \"Holanda\" cambi\u00f3, para conocerse de la misma manera que el nombre oficial del pa\u00eds \"Pa\u00edses Bajos\" (NL Netherlands). Netherlands (en ingl\u00e9s) y en may\u00fasculas, NL es el nuevo logotipo que sustituir\u00e1 al topon\u00edmico Holland, usado hasta 2019. Las embajadas y consulados siempre han utilizado el nombre oficial Pa\u00edses Bajos, debido a que Holanda del Norte y del Sur son solo dos de las 12 provincias nacionales. La Oficina Nacional de Turismo, que se promociona hasta ahora como Holland, analizar\u00e1 c\u00f3mo adaptar el nuevo emblema, vigente a partir de este 1 de enero.[67]\u200b"}]}, {"name": "Demograf\u00eda", "text": "En el a\u00f1o 2019, ten\u00eda una poblaci\u00f3n de 17 282 163 habitantes.[68]\u200b El idioma oficial es el neerland\u00e9s y la esperanza de vida es de 79,1 a\u00f1os. El 99\u00a0% de la poblaci\u00f3n est\u00e1 alfabetizada y presentan una de las densidades de poblaci\u00f3n m\u00e1s altas del mundo, con 399 494 hab/km\u00b2.[69]\u200b De 1950 a 2000, la poblaci\u00f3n se increment\u00f3 de 10 a 15,9 millones de habitantes, pero el ritmo de crecimiento de la poblaci\u00f3n fue m\u00e1s lento en comparaci\u00f3n con los anteriores 50 a\u00f1os.[70]\u200b La estimaci\u00f3n del crecimiento actual es del 0,412\u00a0%, con un promedio de hijos por mujer de 1,66.[71]\u200b\nEl gobierno alent\u00f3 la emigraci\u00f3n despu\u00e9s de la Segunda Guerra Mundial, ya que tem\u00eda una superpoblaci\u00f3n del territorio. Cerca de medio mill\u00f3n de personas abandonaron el pa\u00eds, pero el n\u00famero de inmigrantes provenientes principalmente de Indonesia, las Antillas Neerlandesas, Turqu\u00eda, Surinam y Marruecos, ha superado el n\u00famero de emigrantes en los \u00faltimos a\u00f1os.[72]\u200b\nLa composici\u00f3n \u00e9tnica actual es la siguiente:[73]\u200b\n80,9\u00a0% neerlandeses\n2,4\u00a0% alemanes\n2,4\u00a0% indonesios\n2,2\u00a0% turcos\n2,0\u00a0% surinameses\n1,9\u00a0% marroqu\u00edes\n0,8\u00a0% antillanos y arubanos\n6,0\u00a0% otros", "subsections": [{"name": "Urbanizaci\u00f3n", "text": "El pa\u00eds est\u00e1 densamente poblado, aunque las ciudades sean modestas en el tama\u00f1o comparado con otros pa\u00edses europeos o mundiales. No tienen un tama\u00f1o muy grande, pero el grado de urbanizaci\u00f3n medio de estas es muy alto. La capital y la ciudad m\u00e1s grande es \u00c1msterdam, aunque el gobierno est\u00e1 localizado en La Haya. Mientras que la capital generalmente est\u00e1 definida como la ciudad donde habita la sede del gobierno, en este caso nadie llamar\u00eda nunca a La Haya como capital, aunque s\u00ed es conocida como la \u00abcapital legal del mundo\u00bb.[74]\u200b"}, {"name": "Randstad", "text": "El Randstad (del neerland\u00e9s rand, 'borde', y stad, 'ciudad') es el nombre que recibe la mayor conurbaci\u00f3n de los Pa\u00edses Bajos, a su vez una de las mayores de Europa.[75]\u200b\nHay que distinguir entre la regi\u00f3n metropolitana de Randstad, con una poblaci\u00f3n en torno a los 6,5 millones de habitantes (40\u00a0% del total de los Pa\u00edses Bajos), y la Regi\u00f3n de Randstad (una asociaci\u00f3n socio-econ\u00f3mica), que re\u00fane unos 7,6 millones de habitantes (casi la mitad de la poblaci\u00f3n del pa\u00eds).[76]\u200b Ambas entidades se extienden por las provincias de Holanda Meridional, Holanda Septentrional, Utrecht y Flevoland."}, {"name": "\u00c1reas metropolitanas", "text": ""}]}, {"name": "Cultura", "text": "Durante el periodo g\u00f3tico y renacentista los Pa\u00edses Bajos comenzaron a experimentar un desarrollo art\u00edstico notable, sobre todo en pintura. En el plano intelectual, Erasmo de R\u00f3terdam, nacido en los Pa\u00edses Bajos tuvo gran influencia en la vida cultural de su pa\u00eds y de Europa durante el siglo\u00a0XVI. Posteriormente y en su honor se otorga desde 1958 el Premio Erasmus en el campo de las humanidades, ciencias sociales y las artes.\nEn el siglo\u00a0XVII, durante el periodo que se conoce como la \u00abEdad de Oro neerlandesa\u00bb, la influencia cultural del pa\u00eds tuvo su c\u00faspide. Entre las figuras neerlandesas m\u00e1s notorias de esa \u00e9poca estaban Christiaan Huygens y Baruch Spinoza. Adem\u00e1s, hab\u00eda extranjeros que viv\u00edan en el pa\u00eds gracias a su ambiente de tolerancia, como el franc\u00e9s Ren\u00e9 Descartes o el ingl\u00e9s John Locke. El pa\u00eds es conocido popularmente por sus molinos de viento, zapatos de madera, tulipanes, bicicletas y tolerancia social.", "subsections": [{"name": "Pintura", "text": "La pintura barroca neerlandesa es burguesa, dominando los temas de paisaje, retratos y vida cotidiana, con la figura de Rembrandt como su mejor exponente. En esta \u00abEdad de Oro neerlandesa\u00bb del siglo\u00a0XVII tambi\u00e9n destacaron Johannes Vermeer, Frans Hals y anteriormente Hieronymus Bosch. En siglos m\u00e1s recientes, el pa\u00eds ha producido pintores notables como Vincent van Gogh o Piet Mondrian.\nLa abstracci\u00f3n de Mondrian se elabor\u00f3 a partir de la ret\u00edcula cubista, a la que progresivamente redujo a trazos horizontales y verticales que encierran planos de color puro. Por su simplificaci\u00f3n, el lenguaje del neoplasticismo (v\u00e9ase De Stijl). En el periodo de entreguerras, Theo van Doesburg, despu\u00e9s de haber sido uno de los principales defensores del neoplasticismo, renov\u00f3 de manera decisiva el arte abstracto al mantener que la creaci\u00f3n art\u00edstica solo deb\u00eda estar sometida a reglas controlables y l\u00f3gicas."}, {"name": "Literatura", "text": "En la Edad Media destaca la versi\u00f3n en neerland\u00e9s antiguo de una historia caballeresca francesa, Flores y Blancaflor, inspirada en un cuento de las Mil y una noches; original es, sin embargo, Karel ende Elegast (Carlomagno y Elegast); hay tambi\u00e9n una versi\u00f3n en neerland\u00e9s del Roman del Renart franc\u00e9s. El primer poeta de nombre conocido es Hendrik van Veldeke (ca. 1170). Se considera padre de la prosa en neerland\u00e9s al m\u00edstico Jan van Ruusbroec (1293-1381), cuya obra Die Chierheit der Gheesteliker Brulocht (El atav\u00edo de la boda espiritual) influy\u00f3 en la literatura asc\u00e9tica y m\u00edstica de toda Europa. El humanismo del renacimiento dio figuras como Erasmo de R\u00f3terdam y culmin\u00f3 con el Siglo de Oro de la literatura neerlandesa, el XVII, cuando se tradujo la Biblia al neerland\u00e9s con distintas peculiaridades de cada dialecto para forjar un neerland\u00e9s literario com\u00fan; esta es la llamada Biblia de los estados. Los autores m\u00e1s importantes de este siglo de oro fueron Joost van den Vondel, Pieter Corneliszoon Hooft, Constantijn Huygens y Gerbrand Adriaensz Bredero. En el siglo\u00a0XVIII destaca una singular pareja de mujeres escritoras que viv\u00edan juntas, Betje Wolff (1738-1804) y su amiga Aagje Deken (1741-1804), que escriben notables novelas epistolares. La generaci\u00f3n rom\u00e1ntica del XIX est\u00e1 representada por Willem Bilderdijk (1756-1831), Hi\u00ebronymus van Alphen (1746-1803), Rhijnvis Feith (1753-1824), Hendrik Tollens (1780-1856) y A. C. W. Staring (1767-1840). En la narrativa destac\u00f3 Multatuli con una novela que denuncia del colonialismo, Max Havelaar (1860), y en el ensayo Busken Huet (1826-1886). El naturalismo est\u00e1 representado por Marcellus Emants (1848-1923). La generaci\u00f3n de 1880 lo toma como precursor, formando un grupo denominado Tachtigers: Willem Kloos, H\u00e9l\u00e8ne Swarth, Albert Verwey, Frederik van Eeden, Lodewijk van Deyssel y Herman Gorter. En el siglo\u00a0XX hay que mencionar la novela psicol\u00f3gica de Louis Couperus y, tras la segunda guerra mundial, a tres autores que dominaron el panorama: Willem Frederik Hermans, Harry Mulisch y Gerard Reve. Despu\u00e9s sobresalieron Hella Haasse y Cees Nooteboom, entre muchos otros tan importantes como estos."}, {"name": "Gastronom\u00eda", "text": "La cocina se caracteriza por el consumo en grandes cantidades de pan y patatas. Es muy popular una tostada redonda untada con mantequilla: el beschuit, que se suele comer como desayuno, con diferentes sabores y que se emplea en diferentes celebraciones. Tambi\u00e9n es famoso uno de los platos nacionales, el erwtensoep que b\u00e1sicamente es una sopa de guisantes.\nSon populares los quesos, entre los que destacan el Gouda, Edam y Leyden. Muchas de las ciudades en el este tienen sus propios quesos, algunos de ellos distinguibles solo por el sabor y por su apariencia exterior. Pero como en todos los pa\u00edses europeos las diferencias regionales se hacen patentes y cada regi\u00f3n tiene sus platos t\u00edpicos. El norte, protestante, tiene otra forma de ver la vida que el sur, cat\u00f3lico; y eso se refleja tambi\u00e9n en sus influencias gastron\u00f3micas. Tambi\u00e9n hay que destacar el bocadillo de arenque (haring broodje). Su dulce m\u00e1s apreciado son las galletas rellenas de sirope llamadas stroopwafels."}, {"name": "Idioma", "text": "En el pa\u00eds la mayor\u00eda de la poblaci\u00f3n habla el neerland\u00e9s, que es el idioma oficial, pero tambi\u00e9n est\u00e1n reconocidas lenguas provinciales y dialectos regionales. Tambi\u00e9n se habla en Flandes y en Surinam, mientras que en Indonesia las generaciones m\u00e1s j\u00f3venes est\u00e1n empezando a recuperar el uso del idioma en el pa\u00eds, hasta ahora habitual sobre todo en la poblaci\u00f3n que conoci\u00f3 la colonizaci\u00f3n neerlandesa.\nEl fris\u00f3n es la lengua cooficial en la provincia de Frisia, y es hablado por 453\u00a0000 personas.[77]\u200b\nVarios dialectos del bajo saj\u00f3n neerland\u00e9s se hablan en la parte noreste del pa\u00eds y son reconocidos por los neerlandeses como lenguas regionales de acuerdo con la Carta Europea de las Lenguas Regionales o Minoritarias. Son hablados por 1 798 000 personas.\nOtro dialecto neerland\u00e9s es el limburgu\u00e9s, que se habla en el sureste de la provincia de Limburgo y es hablado por 825\u00a0000 personas.[78]\u200b\nEn Sud\u00e1frica y en Namibia, los descendientes de los colonos neerlandeses hablan afrik\u00e1ans, un idioma que desciende del neerland\u00e9s.\nEs tradicional en el pa\u00eds hablar otras lenguas, el 70\u00a0% de la poblaci\u00f3n tiene un conocimiento alto del ingl\u00e9s, entre el 55 y el 59\u00a0% habla el alem\u00e1n y cerca del 19\u00a0% habla el franc\u00e9s.[79]\u200b"}, {"name": "Religi\u00f3n", "text": "\u00a0\u00a0\u00a0\u00a0\u00a0Irreligi\u00f3n (no creyente) (Ateo) (Agn\u00f3stico) 50.1% \n\u00a0\u00a0\u00a0\u00a0\u00a0Iglesia Cat\u00f3lica 23.7% \n\u00a0\u00a0\u00a0\u00a0\u00a0Protestantismo 15.5% \n\u00a0\u00a0\u00a0\u00a0\u00a0Otros cristianos 4.6% \n\u00a0\u00a0\u00a0\u00a0\u00a0Islam 4.9% \n\u00a0\u00a0\u00a0\u00a0\u00a0Otros 1.1% \nTras la reforma del siglo\u00a0XVI, el pa\u00eds qued\u00f3 dividido en una parte cat\u00f3lica y otra protestante. Su separaci\u00f3n es aproximadamente de suroeste a nordeste: la primera es cat\u00f3lica mientras que la segunda, protestante, incluye varias ramas, como la Iglesia reformada (calvinistas) y los luteranos.[82]\u200b\nEn 2005, 43,6\u00a0% de la poblaci\u00f3n neerlandesa es cristiana (el 27\u00a0% se declaraba cristiana cat\u00f3lica, y un 16,6\u00a0% se declaraba cristiana protestante). Un 5\u00a0% de la poblaci\u00f3n es musulmana, un peque\u00f1o porcentaje es jud\u00eda, y un 48\u00a0% de la poblaci\u00f3n no se declara perteneciente a una religi\u00f3n en general.[83]\u200b[84]\u200b Despu\u00e9s de los atentados ocurridos en Europa los ciudadanos neerlandeses no musulmanes contemplaban el islam como una amenaza, y la presencia de musulmanes como algo desagradable, aunque desde 2006 se muestran menos negativos sobre la presencia de estos. Ello parece deberse a que no se han producido atentados graves en ese tiempo, al agotamiento sobre el tema y al aumento del contacto entre no-musulmanes y musulmanes.[85]\u200b\nSeg\u00fan la encuesta del Eurobar\u00f3metro de 2005, el 34\u00a0% de los ciudadanos neerlandeses respondieron \"Creo que hay un Dios\", mientras que el 37\u00a0% respondi\u00f3 \"Creo que hay una especie de esp\u00edritu o fuerza vital\" y el 27\u00a0% dijo \"No creo que exista ning\u00fan tipo de esp\u00edritu, dios, la vida o la fuerza\".[86]\u200b Adem\u00e1s, el 41\u00a0% de la poblaci\u00f3n admiti\u00f3 que habitualmente piensan en el significado y el prop\u00f3sito de la vida y el 6\u00a0% dijo que nunca lo pensaban.[86]\u200b"}, {"name": "Tecnolog\u00eda", "text": "Los Pa\u00edses Bajos siempre se destacaron por estar a la delantera en materia de tecnolog\u00eda y en su aplicaci\u00f3n en \u00e1reas como el urbanismo, la ecolog\u00eda, la medicina, la educaci\u00f3n, etc.\nLa Comisi\u00f3n Europea ha publicado los resultados de la edici\u00f3n de 2016 del \u00cdndice de la Econom\u00eda y la Sociedad Digitales en los que Dinamarca, los Pa\u00edses Bajos, Suecia y Finlandia siguen ocupando los primeros puestos de estos resultados.[87]\u200b"}, {"name": "Educaci\u00f3n", "text": "La educaci\u00f3n est\u00e1 dividida en colegios y en diferentes grupos de edad dentro de ellos, algunos de estos con diferentes niveles educativos. Los colegios se dividen en colegios p\u00fablicos o colegios especiales religiosos. El Informe PISA, que est\u00e1 coordinado por la Organizaci\u00f3n para la Cooperaci\u00f3n y el Desarrollo Econ\u00f3mico, coloc\u00f3 en el noveno lugar de la educaci\u00f3n mundial a los Pa\u00edses Bajos en 2008, obteniendo un crecimiento considerable en la media de la Organizaci\u00f3n.[88]\u200b\nLa educaci\u00f3n elemental comprende desde los cuatro a los doce a\u00f1os. Desde los cinco a\u00f1os es obligatorio. A partir de los doce a\u00f1os se puede escoger entre realizar la educaci\u00f3n preparatoria de nivel medio (que consta de cuatro a\u00f1os), la educaci\u00f3n general continuada (que consta de cinco a\u00f1os), o la educaci\u00f3n cient\u00edfica preparatoria (que consta de seis a\u00f1os). Una vez terminados estos estudios, se puede optar por hacer la educaci\u00f3n terciaria entre las que se incluyen las universidades. Al terminar estos estudios, se puede realizar una maestr\u00eda que se termina con una edad promedio de veintid\u00f3s a\u00f1os, para luego comenzar a trabajar. Todas las universidades, a excepci\u00f3n de Nyenrode, reciben financiaci\u00f3n del estado. Las universidades de \u00c1msterdam, Delft, Leiden y Utrecht figuran cada a\u00f1o entre las cien mejores del mundo.[89]\u200b[90]\u200b"}, {"name": "Deportes", "text": " Pa\u00edses Bajos en los Juegos Ol\u00edmpicos\n Selecci\u00f3n de f\u00fatbol de los Pa\u00edses Bajos\n F\u00fatbol en los Pa\u00edses Bajos\n Selecci\u00f3n de baloncesto de los Pa\u00edses Bajos\n Eredivisie\nUno de los deportes m\u00e1s importantes del pa\u00eds es el ciclismo, tanto en ruta como en pista. Jan Janssen y Joop Zoetemelk son los \u00fanicos neerlandeses que han ganado el tradicional Tour de Francia, adem\u00e1s de triunfar en el Campeonato del Mundo de ciclismo y en los Juegos Ol\u00edmpicos.[91]\u200b Otras ciclistas, como Leontien Van Moorsel y Marianne Vos tambi\u00e9n han triunfado en los Juegos Ol\u00edmpicos y ha conseguido campeonatos mundiales. Tambi\u00e9n merecen menci\u00f3n los campeones de los Juegos Ol\u00edmpicos y de los campeonatos del mundo, Hennie Kuiper, Jan Raas y Gerrie Knetemann.\nEl f\u00fatbol es la otra rama deportiva que tambi\u00e9n posee mucha popularidad. Son conocidos clubes como el Ajax \u00c1msterdam, Feyenoord R\u00f3terdam y el PSV Eindhoven. Estos consiguieron ser los m\u00e1ximos campeones europeos en su historia, pero solamente el Ajax \u00c1msterdam y el Feyenoord R\u00f3terdam (que entre s\u00ed tienen una hist\u00f3rica rivalidad) lograron coronarse como campeones mundiales de clubes. Existen otros clubes conocidos a nivel local como el Sparta Rotterdam (uno de los m\u00e1s antiguos del pa\u00eds), y otros como el AZ Alkmaar y el Football Club Twente, ambos campeones de liga en alguna ocasi\u00f3n. Aparte de estos \u00e9xitos, los Pa\u00edses Bajos han tenido a varios balones de oro como Johan Cruyff, ganador en tres ocasiones, Ruud Gullit, ganador en una ocasi\u00f3n o Marco van Basten ganador en otras tres ocasiones.[92]\u200b Adem\u00e1s de estos tres futbolistas, los Pa\u00edses Bajos tambi\u00e9n tienen otros mundialmente conocidos tales como Kees Kist, Wim Kieft (ganadores de la Bota de Oro junto con Van Basten), adem\u00e1s de otros como Johan Neeskens, Rob Rensenbrink, Dennis Bergkamp, Ronald Koeman, Edwin van der Sar, Clarence Seedorf, Robin van Persie, Patrick Kluivert, Wesley Sneijder, entre otros. Muchos de estos jugadores han actuado en importantes clubes europeos.\nLa liga nacional es conocida con el nombre de Eredivisie, y en la actualidad es una de las 10 ligas de importancia en Europa. La Eredivisie fue considerada en los a\u00f1os 1990 como una de las m\u00e1s fuertes del mundo seg\u00fan la Federaci\u00f3n de Historia y Estad\u00edstica del F\u00fatbol, siendo elegida como la mejor tercera en 1992. \nEl \u00fanico t\u00edtulo de la selecci\u00f3n de f\u00fatbol de los Pa\u00edses Bajos (que durante una \u00e9poca fue conocida popularmente como \u00abla naranja mec\u00e1nica\u00bb) es la Eurocopa 1988, celebrada en Alemania Federal. Fue subcampeona del mundo en 1974, 1978 y 2010.\nEl tenis tambi\u00e9n ha tenido \u00e9xitos, aunque este no tiene tanta relevancia como el f\u00fatbol y el ciclismo. Richard Krajicek es el \u00fanico neerland\u00e9s en ganar un torneo de Grand Slam, concretamente el Campeonato de Wimbledon, en 1996. Martin Verkerk es otro jugador que ha llegado a una final de Grand Slam, en 2003, aunque cay\u00f3 ante Juan Carlos Ferrero en Roland Garros. El hockey sobre hierba tambi\u00e9n es una de las ramas deportivas m\u00e1s importantes a nivel mundial. La Selecci\u00f3n femenina de hockey sobre hierba de los Pa\u00edses Bajos consigui\u00f3 ganar el Campeonato mundial de hockey sobre hierba hasta en seis ocasiones y el seleccionado masculino lo ha hecho tambi\u00e9n en dos ocasiones.\nTambi\u00e9n destaca en nataci\u00f3n con grandes nadadores y diversos r\u00e9cords mundiales como Inge de Bruijn, ganadora de ocho medallas ol\u00edmpicas entre 2000 y 2004, cuatro de ellas de oro, adem\u00e1s de batir 10 r\u00e9cords mundiales, Pieter van den Hoogenband tres veces campe\u00f3n ol\u00edmpico, 14 veces campe\u00f3n europeo y 43 campe\u00f3n nacional, Marleen Veldhuis, que tuvo el r\u00e9cord mundial de 50 metros libres as\u00ed como el de 4 x 100 libre.[93]\u200b[94]\u200b\nEn los deportes de motor, el Circuito de Assen est\u00e1 considerado como la catedral del motociclismo mundial, celebr\u00e1ndose all\u00ed el Gran Premio de los Pa\u00edses Bajos de Motociclismo, mientras que el Circuito de Zandvoort acogi\u00f3 durante muchos a\u00f1os el equivalente de F\u00f3rmula 1. En esta \u00faltima categor\u00eda Max Verstappen es el piloto m\u00e1s joven de la historia en debutar en el campeonato del mundo y tambi\u00e9n el m\u00e1s joven en ganar un gran premio, aparte de ser el \u00fanico piloto neerland\u00e9s que lo consigui\u00f3, y, en el a\u00f1o 2021, se ha convertido en el  primer piloto neerland\u00e9s en proclamarse campe\u00f3n del mundo de esta categor\u00eda. En 2022 se ha convertido en bicampe\u00f3n de la m\u00e1xima categor\u00eda del automovilismo, incluso rompiendo r\u00e9cords y llegando a 15 victorias en una temporada. Adem\u00e1s del anterior, solo otro piloto neerland\u00e9s, Jos Verstappen (su padre), logr\u00f3 subir al podio.\nEn otros deportes como el atletismo destaca Ellen van Langen ganadora de los 800 metros planos en los Juegos Ol\u00edmpicos de Barcelona 1992, pero sobre todo Fanny Blankers-Koen, cuatro veces medalla de oro en los Juegos Ol\u00edmpicos de Londres 1948.[95]\u200b En equitaci\u00f3n Anky van Grunsven ha obtenido ocho medallas ol\u00edmpicas en la disciplina de adiestramiento o doma cl\u00e1sica. En b\u00e9isbol son la primera potencia europea gracias a que en los territorios neerlandeses caribe\u00f1os de Aruba y Curazao es el deporte m\u00e1s popular y la gran mayor\u00eda de los jugadores que componen el equipo nacional provienen o tienen or\u00edgenes en los mismos. En las artes marciales son un pa\u00eds con una larga tradici\u00f3n de luchadores de kickboxing como Peter Aerts, Ernesto Hoost, Remy Bonjasky o Semmy Schilt que han dominado por completo las competiciones internacionales.[96]\u200b"}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Pa\u00edses Bajos. Contenido relacionado con Pa\u00edses Bajos.\nCronolog\u00eda de la Uni\u00f3n Europea\nTratado de \u00c1msterdam\nRefer\u00e9ndum sobre la Constituci\u00f3n Europea en los Pa\u00edses Bajos\nOperaci\u00f3n Market Garden\nMunicipios de los Pa\u00edses Bajos", "subsections": []}, {"name": "Notas", "text": "\u2191 \n[...] Es frecuente y admisible emplearlo en el habla corriente para referirse a todo el pa\u00eds, uso que no debe extenderse a textos oficiales [...].\nReal Academia Espa\u00f1ola. Diccionario panhisp\u00e1nico de dudas (2005).", "subsections": []}, {"name": "Referencias", "text": "\u2191 a b CIA. \u00abPa\u00edses Bajos - Geograf\u00eda - Libro Mundial de Hechos\u00bb. Consultado el 18 de febrero de 2017.\u00a0\n\u2191 \u00abPopulation and population dynamics; month, quarter and year\u00bb. Centraal Bureau voor de Statistiek. Consultado el 22 de enero de 2018.\u00a0\n\u2191 Real Academia Espa\u00f1ola. \u00abneerland\u00e9s\u00bb. Diccionario de la lengua espa\u00f1ola (23.\u00aa edici\u00f3n).\u00a0\n\u2191 \u00abNetherlands\u00bb. Fondo Monetario Internacional. Consultado el 25 de septiembre de 2018.\u00a0\n\u2191 PNUD. \u00abHuman Development Report 2021-2022\u00bb (en ingl\u00e9s). Consultado el 10 de setiembre de 2022.\u00a0\n\u2191 Real Academia Espa\u00f1ola y Asociaci\u00f3n de Academias de la Lengua Espa\u00f1ola (2005). \u00abPa\u00edses Bajos\u00bb. Diccionario panhisp\u00e1nico de dudas. Madrid: Santillana. ISBN\u00a0978-8-429-40623-8.\u00a0\n\u2191 \u00abConstituci\u00f3n del Reino de los Pa\u00edses Bajos\u00bb. Gobierno de los Pa\u00edses Bajos. 28 de febrero de 2019. Cap\u00edtulo 2, art\u00edculo 32. Consultado el 29 de octubre de 2019. \u00ab(...) la capital \u00c1msterdam (...)\u00a0\u00bb.\u00a0\n\u2191 \u00abPa\u00edses Bajos. 2.\u00bb DPD (2005). Consultado el 1 de julio de 2014.\n\u2191 \u00abPor qu\u00e9 Holanda quiere que el mundo ya no le llame as\u00ed\u00bb. La Naci\u00f3n. 28 de junio de 2021. Consultado el 28 de junio de 2021.\u00a0\n\u2191 \u00abPa\u00edses Bajos\u00bb. europa.eu. Archivado desde el original el 26 de octubre de 2008. Consultado el 1 de julio de 2008.\u00a0\n\u2191 Le Benelux en quelques traits Archivado el 9 de marzo de 2010 en Wayback Machine., Benelux. Consultado el 1 de marzo de 2010.\n\u2191 Banco Mundial. \u00abWorld Bank Country and Lending Groups\u00bb (en ingl\u00e9s). Archivado desde el original el 11 de enero de 2018. Consultado el 18 de noviembre de 2019.\u00a0\n\u2191 Cuadro estad\u00edstico 1. Informe sobre Desarrollo Humano 2018. Consultado el 25 de septiembre de 2018\n\u2191 Transparencia Internacional. \u00abCorruption Perceptions Index 2018\u00bb (en ingl\u00e9s). Archivado desde el original el 30 de enero de 2019. Consultado el 18 de noviembre de 2019.\u00a0\n\u2191 Economist Intelligence Unit. \u00abEIU Democracy Index 2018 - World Democracy Report\u00bb (en ingl\u00e9s). Consultado el 18 de noviembre de 2019.\u00a0\n\u2191 a b c d e f Historia de los Pa\u00edses Bajos. holandalatina.com. Consultado el 24 de noviembre de 2009.\n\u2191 Wrecks & shipfinds of Western & inland Europe Archivado el 16 de marzo de 2008 en Wayback Machine., ABC\n\u2191 a b Louwe Kooijmans, L. P. (1998). \u00abTrijntje van de Betuweroute, Jachtkampen uit de Steentijd te Hardinxveld-Giessendam\u00bb (PDF). Spiegel Historiael 33. pp.\u00a0423-428. Archivado desde el original el 26 de julio de 2007.\u00a0\n\u2191 Prehistoric agricultural field found in Swifterbant, 4300-4000 BC\n\u2191 Raemakers, Daan (2006). \u00abDe spiegel van Swifterbant\u00bb (PDF). University of Groningen. Archivado desde el original el 10 de abril de 2008.\u00a0\n\u2191 D\u00f3lmenes en Pa\u00edses Bajos, un curioso fen\u00f3meno, sobreholanda.com, consultado el 26 de noviembre de 2009\n\u2191 Mallory, J. P. y Douglas Q. Adams (1997). The Encyclopedia of Indo-European Culture (EIEC), p. 93. Fitzroy Dearborn.\n\u2191 Images about the Late Dutch Bronze Age. versatel.nl. Consultado el 26 de noviembre de 2009.\n\u2191 Dutch pre-Roman Iron Age. versatel.nl. Consultado el 26 de noviembre de 2009.\n\u2191 Lendering, Jona. Germania inferior (1). Archivado el 7 de junio de 2020 en Wayback Machine. livius.org. Consultado el 26 de noviembre de 2009.\n\u2191 Germania Inferior. absoluteastronomy.com. Consultado el 29 de octubre de 2009.\n\u2191 The Histories. classics.mit.edu. Consultado el 29 de octubre de 2009.\n\u2191 The Batavian revolt. Archivado el 4 de mayo de 2016 en Wayback Machine.. livius.org. Consultado el 1 de marzo de 2010.\n\u2191 Historiae, T\u00e1cito, siglo\u00a0I\u00a0a.\u00a0C.\n\u2191 Sacro Imperio Romano. portalplanetasedna.com. Consultado el 26 de noviembre de 2009.\n\u2191 DUQUES DE GUISA: Genealog\u00eda Archivado el 18 de septiembre de 2009 en Wayback Machine. retratosdehistoria.net. Consultado el 14 de diciembre de 2009.\n\u2191 \u00abLuxembourg II. Titles of European hereditary rulers\u00bb. narod.ru.\u00a0\n\u2191 Carlos, gobernador de los Pa\u00edses Bajos. diomedes.com. Consultado el 14 de diciembre de 2009.\n\u2191 Historia. amadeus.net. Consultado el 14 de diciembre de 2009.\n\u2191 Felipe II. tudorplace.com. Consultado el 14 de diciembre de 2009.\n\u2191 Union of Utrecht. rootsweb.ancestry.com. Consultado el 14 de diciembre de 2009.\n\u2191 \u00abORDONNANCE ET EDIT PERPETUEL DES ARCHIDUCS NOS PRINCES SOUVERAINS\u00bb. skynet.be. Archivado desde el original el 9 de octubre de 2018. Consultado el 16 de marzo de 2015.\u00a0\n\u2191 Tratado de Uni\u00f3n de los Estados Unidos Belgas.\n\u2191 www.1789-1815.com\n\u2191 \u00abB\u00e9lgica: incompatibilidad hist\u00f3rica\u00bb. Deutsche Welle 24 de diciembre de 2007. 2007. Consultado el 10 de marzo de 2008.\u00a0\n\u2191 Mokyr, Joel (2000). \u00abThe industrial revolution and the Netherlands: Why did it not happen?\u00bb [La revoluci\u00f3n industrial y los Pa\u00edses Bajos: \u00bfpor qu\u00e9 no ocurri\u00f3?]. De Economist 148: 503-520. ISSN\u00a01572-9982. doi:10.1023/A:1004134217178.\u00a0\n\u2191 Abbenhuis, Maartje M. The Art of Staying Neutral. Amsterdam: Amsterdam UP, 2006.\n\u2191 La Segunda Guerra Mundial (1940-1945). inghist.nl. Consultado el 29 de enero de 2010.\n\u2191 \u00abLos fundadores de la UE\u00bb. Deutsche Welle 20 de marzo de 2007. 2007. Consultado el 10 de marzo de 2008.\u00a0\n\u2191 \u00abEl Tratado de Maastricht: su primera d\u00e9cada\u00bb. Deutsche Welle 31 octubre de 2003. 2003. Consultado el 10 de marzo de 2008.\u00a0\n\u2191 \u00abLas barreras de Pa\u00edses Bajos hacia el mar\u00bb. Discovery Channel. Consultado el 29 de enero de 2010.\u00a0\n\u2191 bajos-abdicara-favor-hijo-2304603 \u00abLa reina Beatriz de Pa\u00edses Bajos abdica en favor de su hijo\u00bb. Consultado el 28 de enero de 2013.\u00a0 (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima).\n\u2191 \u00abAsociacion de Transexuales de Andaluc\u00eda - Sylvia Rivera: Una Ni\u00f1a Transexual comparte su Historia con sus Amigos\u00bb. atandalucia.org.\u00a0\n\u2191 \u00abMinisterio holand\u00e9s de Asuntos Exteriores - Pol\u00edtica exterior\u00bb. minbuza.nl. Archivado desde el original el 2 de octubre de 2006.\u00a0\n\u2191 \u00ab404 De pagina is niet gevonden\u00bb. planet.nl.\u00a0\n\u2191 Nickerson, Colin (5 de diciembre de 2005). Netherlands relinquishes some of itself to the waters. Boston Globe. Consultado el 18 de septiembre de 2008.\u00a0\n\u2191 Olsthoorn, A. A.; Richard S. J. Tol (febrero de 2001). \u00abFloods, flood management and climate change in The Netherlands\u00bb. Institute for Environmental Studies (Institute for Environmental Studies, Vrije Universiteit). Archivado desde el original el 22 de febrero de 2008. Consultado el 18 de septiembre de 2008.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |mes= (ayuda); La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 Tol, Richard S. J.; Nicolien van der Grijp, Alexander A. Olsthoorn, Peter E. van der Werff (2003). \u00abAdapting to Climate: A Case Study on Riverine Flood Risks in the Netherlands\u00bb. Risk Analysis (Blackwell-Synergy) 23 (3): 575-583. doi:10.1111/1539-6924.00338. Archivado desde el original el 16 de diciembre de 2018. Consultado el 10 de octubre de 2007.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 Pa\u00edses Bajos: clima y vegetaci\u00f3n. geografia.laguia2000.com. Consultado el 11 de febrero de 2010.\n\u2191 Banco Mundial. \u00abGDP growth (annual\u00a0%) - Netherlands\u00bb. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 Banco Mundial. \u00abGDP per capita (current US$) - Netherlands\u00bb. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 a b Central Intelligence Agency (CIA9. \u00abThe Netherlands - The World Factbook\u00bb (en ingl\u00e9s). Archivado desde el original el 5 de septiembre de 2015. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 \u00abUnemployment rate - OECD Data\u00bb (en ingl\u00e9s). OCDE Data. Consultado el 19 de noviembre de 2019.\u00a0\n\u2191 The World Bank Data. \u00abPoverty headcount ratio at $5.50 a day (2011 PPP) (% of population) - Netherlands\u00bb. Consultado el 19 de noviembre de 2019.\u00a0\n\u2191 World Economic Forum. \u00abThe Global Competitiveness Index 4.0 2019 Rankings\u00bb (PDF) (en ingl\u00e9s). p.\u00a0xiii. Consultado el 19 de noviembre de 2019.\u00a0\n\u2191 Port of Rotterdam - Home Archivado el 15 de abril de 2009 en Wayback Machine., portofrotterdam.com, Consultado el 5 de octubre de 2008\n\u2191 \u00abAardgas als smeerolie\u00bb. Andere Tijden. Transscript. VPRO. 15 de enero de 2006. http://geschiedenis.vpro.nl/programmas/2899536/afleveringen/25899792/.\u00a0\n\u2191 Encyclop\u00e6dia Britannica. \u00abNetherlands - Economy\u00bb. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 Comisi\u00f3n Europea. \u00abEconomic performance by country\u00bb [Comportamiento econ\u00f3mico por pa\u00eds]. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 Gobierno de los Pa\u00edses Bajos. \u00abTourism and Recreation - Spreading tourism\u00bb (en ingl\u00e9s). Consultado el 20 de noviembre de 2019.\u00a0\n\u2191 UNESCO. \u00abWorld Heritage List: Europe and North America\u00bb (en ingl\u00e9s).\u00a0\n\u2191 Ferrer, Isabel (1 de enero de 2020). \u00abLa marca Holanda se renueva y ahora ser\u00e1 NL Netherlands\u00bb. El Pa\u00eds. ISSN\u00a01134-6582. Consultado el 11 de febrero de 2020.\u00a0\n\u2191 \u00abPopulation; key figures\u00bb. Centraal Bureau voor de Statistiek. Consultado el 20 de noviembre de 2019.\u00a0\n\u2191 Population counter. cbs.nl. Consultado el 11 de febrero de 2010.\n\u2191 Population: history. statline.cbs.nl. Consultado el 11 de febrero de 2010.\n\u2191 Europe: Netherlands. Archivado el 15 de mayo de 2020 en Wayback Machine. cia.gov. Consultado el 11 de febrero de 2010.\n\u2191 External migration; sex, age (31 dec), marital status and country of birth. statline.cbs.nl. Consultado el 11 de febrero de 2010.\n\u2191 Demografie van de allochtonen in Nederland. Archivado el 9 de octubre de 2018 en Wayback Machine. (En neerland\u00e9s.)\n\u2191 van Krieken, Peter J.; David McKay (2005). The Hague: Legal Capital of the World. Cambridge University Press. ISBN\u00a09067041858.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 OECD Territorial Reviews: Randstad Holland, Netherlands. oecd.org. Consultado el 11 de febrero de 2010.\n\u2191 Regio Randstad Brussel. Randstad. Consultado el 1 de marzo de 2010.\n\u2191 \u00abThe World Factbook\u00bb. cia.gov. Archivado desde el original el 7 de marzo de 2014. Consultado el 17 de septiembre de 2008.\u00a0\n\u2191 Welschen, Ad: Course Dutch Society and Culture, International School for Humanities and Social Studies ISHSS, Universiteit van Amsterdam, 2000-2005.\n\u2191 Ginsburgh, Victor; Ignacio Ortu\u00f1o-Ortin, Shlomo Weber (febrero de 2005). \u00abWhy Do People Learn Foreign Languages?\u00bb (pdf). Universit\u00e9 libre de Bruxelles. Archivado desde el original el 23 de septiembre de 2008. Consultado el 17 de septiembre de 2008.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |mes= (ayuda); La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 Schmeets, Hans (2016). De religieuze kaart van Nederland, 2010\u20132015. Centraal Bureau voor der Statistiek. p.\u00a05.\u00a0\n\u2191 CBS. \u00abHelft Nederlanders is kerkelijk of religieus\u00bb. www.cbs.nl (en nl-NL). Consultado el 17 de octubre de 2017.\u00a0\n\u2191 El pa\u00eds en breve. Ministerio neerland\u00e9s de Asuntos Exteriores. Consultado el 11 de septiembre de 2008.\n\u2191 \u00abCopia archivada\u00bb. Archivado desde el original el 11 de agosto de 2011. Consultado el 24 de noviembre de 2017.\u00a0\n\u2191 https://web.archive.org/web/20091116154332/http://www.wrr.nl/content.jsp?objectid=3840\n\u2191 \u00abHolandeses modifican postura ante musulmanes\u00bb. webislam.com.\u00a0\n\u2191 a b \u00abEurobarometer on Social Values, Science and technology 2005 (p\u00e1g. 11)\u00bb. Consultado el 5 de mayo de 2007.\u00a0\n\u2191 [1]\n\u2191 Range of rank on the PISA 2006 science scale, Organizaci\u00f3n para la Cooperaci\u00f3n y el Desarrollo Econ\u00f3mico, Consultado el 18 de septiembre de 2008.\n\u2191 \u00abSistemas de educaci\u00f3n superior en Francia y Pa\u00edses Bajos \u2013 una comparaci\u00f3n\u00bb. www.cosmopolitburo.com. Archivado desde el original el 15 de noviembre de 2012. Consultado el 13 de mayo de 2010.\u00a0\n\u2191 \u00abUniversity of Groningen\u00bb. timeshighereducation.co.uk.\u00a0\n\u2191 Palmar\u00e9s Archivado el 20 de septiembre de 2008 en Wayback Machine. El Mundo. Consultado el 17 de septiembre de 2008.\n\u2191 Palmar\u00e9s del Bal\u00f3n de Oro. ABC. Consultado el 17 de septiembre de 2008.\n\u2191 \u00abSe despide un grande\u00bb. ESPNdeportes.com.\u00a0\n\u2191 Nataci\u00f3n: De Bruijn anuncia su retiro definitivo. Emol. Consultado el 17 de septiembre de 2008.\n\u2191 Fanny Blankers-Koen, la mejor atleta del siglo XX. El Mundo. Consultado el 17 de septiembre de 2008.\n\u2191 History. K-1. Consultado el 17 de septiembre de 2008.", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Wilson, Charles (1968). Los pa\u00edses Bajos y la cultura europea en el siglo XVII (Guadarrama edici\u00f3n).\u00a0\nKossmann, E. H. (1987). The Low Countries: History of the Northern and Southern Netherlands (en ingl\u00e9s).\u00a0\nGu\u00eda de viajes.(Pa\u00edses Bajos). Plaza & Jan\u00e9s. 1994.\u00a0\nIsrael, Jonathan (1995). The Dutch Republic: Its Rise, Greatness, and Fall 1477-1806 (en ingl\u00e9s).\u00a0\nHistory of the Low Countries (en ingl\u00e9s). J. C. H. Blom and E. Lamberts, eds. 1998.\u00a0\nEchevarria, Miguel \u00c1ngel (1998). Flandes y la monarqu\u00eda hisp\u00e1nica, 1500-1713. Silex. ISBN\u00a0978-84-77-37068-0.\u00a0\nQueipo de Llano, Gonzalo; Alcala-Zamora, Jos\u00e9 (2001). Espa\u00f1a, Flandes y el mar del Norte (1618-1939). Centro de estudios constitucionales. ISBN\u00a0978-84-25-91144-6.\u00a0\nHerrero S\u00e1nchez, Manuel; Crespo Solana, Ana (2002). Espa\u00f1a y las 17 provincias de los Pa\u00edses Bajos: una revisi\u00f3n historiogr\u00e1fica (XVI-XVIII). Universidad de C\u00f3rdoba. ISBN\u00a084-7801-661-9.\u00a0\nArblaster, Paul (2006). A History of the Low Countries (en ingl\u00e9s). Palgrave Essential Histories Series New York: Palgrave Macmillan. ISBN\u00a01-4039-4828-3.\u00a0\nGray, Jeremy (2008). \u00c1msterdam. Lonely Planet. ISBN\u00a0978-84-08-07727-5.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Netherlands.\n Wikiquote alberga frases c\u00e9lebres de o sobre Pa\u00edses Bajos.\n Wikinoticias tiene noticias relacionadas con Pa\u00edses Bajos.\nSitio web oficial de la Oficina de Turismo", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Palabra_reservada", "title": "Palabra reservada", "summary": "En los lenguajes inform\u00e1ticos, una palabra reservada es una palabra que tiene un significado gramatical especial para ese lenguaje y no puede ser utilizada como un identificador de objetos en c\u00f3digos del mismo, como pueden ser las variables.\nPor ejemplo, en SQL, un usuario no puede ser llamado \"group\", porque la palabra group es usada para indicar que un identificador se refiere a un grupo, no a un usuario. Al tratarse de una palabra clave su uso queda restringido.\nOcasionalmente la especificaci\u00f3n de un lenguaje de programaci\u00f3n puede tener palabras reservadas que est\u00e1n previstas para un posible uso en futuras versiones. En Java const y goto son palabras reservadas \u2014 no tienen significado en Java, pero tampoco pueden ser usadas como identificadores. Al reservar los t\u00e9rminos pueden ser implementados en futuras versiones de Java, si se desea, sin que el c\u00f3digo fuente m\u00e1s antiguo escrito en Java deje de funcionar.", "sections": [{"name": "Palabras reservadas e independencia del lenguaje", "text": "En la CLI de .NET, todos los lenguajes tienen que proporcionar un mecanismo para utilizar los identificadores p\u00fablicos que son palabras reservadas en ese lenguaje. .|. Para ver por qu\u00e9 es necesario, supongamos que se define una clase en VB.NET como sigue:\nEntonces, se compila esta clase en un ensamblado de .NET y se distribuye como parte de un conjunto de herramientas. Un programador de C#, que quiere definir una variable de tipo \u201cthis\u201d encontrar\u00eda un problema: \u201cthis\u201d es una palabra reservada en C#. El siguiente fragmento en C# no compilar\u00e1:\nUn tema similar aparece cuando se accede a miembros, sobrescribiendo m\u00e9todos virtuales e identificando espacios de nombres. En C#, colocando la arroba (@) antes del identificador, se forzar\u00e1 a ser considerado como un identificador en vez de una palabra reservada por el compilador. El signo arroba no es considerado parte del identificador.\nPor consistencia, esta utilizaci\u00f3n tambi\u00e9n se permite en configuraciones no-p\u00fablicas como variables locales, nombres de par\u00e1metros y miembros privados.", "subsections": []}, {"name": "Palabras reservadas en SQL", "text": "En java, son palabras reservadas todas las sentencias, cl\u00e1usulas modificadoras, tipos de dato, y funciones propias del DBMS.As\u00ed, por ejemplo, no se pueden usar denominaciones tales como SELECT, GROUP, CONCAT, SUM, MAX o semejantes.\nEn cada DBMS, adem\u00e1s, existen conjuntos de denominaciones que le son propias, y que si pueden ser usadas en otros, lo que tiende a producir ciertos problemas al migrar proceso o sintaxis de uno a otro. Tal es el caso de SYSDATE, NOW, o BIGINT, el primero de los cuales es usual en Oracle, y los dos siguientes en MySQL.\nPese a eso, todos los DBMS tienen, tambi\u00e9n, la posibiilidad de usar estas palabras reservadas, siempre que se respete ciertas reglas sint\u00e1ctica: Todas las palabras reservadas usadas para nombres de objetos creados en una base de datos deben estar encerrados entre caracteres espec\u00edficamente usados para ello. En varios sistemas de bases de datos se utilizanpara ello los acentos graves (`), que no tienen otro uso en el SQL.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Panda3D", "title": "Panda3D", "summary": "Licencia BSD\nEGGPanda3D Bam container\nPanda3D es un motor de videojuegos  que incluye gr\u00e1ficos, audio, E/S, detecci\u00f3n de colisiones, as\u00ed como otras caracter\u00edsticas relevantes para la creaci\u00f3n de juegos en 3D.[1]\u200b\nPanda3D es un proyecto de c\u00f3digo abierto y software libre (desde el 28 de mayo del 2008), bajo la licencia  BSD Revisada. Versiones anteriores al 28 de mayo de 2008, no se consideran Software Libre debido a ciertos errores en el dise\u00f1o de la antigua licencia Panda3D. A pesar de ello, estas versiones antiguas de Panda3D tambi\u00e9n se pueden utilizar para el desarrollo de videojuegos libres o comerciales sin costo alguno.\nEl lenguaje de programaci\u00f3n de videojuegos para el que fue destinado Panda3D es Python. El motor en s\u00ed mismo est\u00e1 escrito en C++, y utiliza un generador-empaquetador autom\u00e1tico para exponer la completa funcionalidad del motor en una interfaz de Python. Este enfoque da al programador las ventajas del desarrollo en Python, como el desarrollo r\u00e1pido o la gesti\u00f3n avanzada de memoria, pero mantiene el rendimiento de un lenguaje compilado en el n\u00facleo del motor. Por ejemplo, el motor es integrado con el recolector de basura de Python, y las estructuras del motor son manejadas autom\u00e1ticamente.\nEl manual y los programas de ejemplo usan Python, aunque los programadores est\u00e1n trabajando en traducir el manual a C++ y proveer programas de ejemplo en C++.\nUn programador que usa Panda3D, t\u00edpicamente escribe el c\u00f3digo en Python, pero tambi\u00e9n es posible acceder directamente al motor usando c\u00f3digo en C++.\nEntre los usuarios de Panda3D se incluyen programadores de una enorme cantidad de juegos comerciales, unos pocos de proyectos de c\u00f3digo abierto, y una serie de cursos universitarios que aprovechan la corta curva de aprendizaje de Panda3D. La comunidad es peque\u00f1a pero activa, las preguntas realizadas en el foro son generalmente respondidas casi al instante.", "sections": [{"name": "\u00cdndice", "text": "1 Dise\u00f1o\n2 Herramientas no gr\u00e1ficas\n3 Historia\n4 Licencia de software\n5 Usuarios\n6 V\u00e9ase tambi\u00e9n\n7 Referencias\n8 Enlaces externos", "subsections": []}, {"name": "Dise\u00f1o", "text": "Panda3D es un motor gr\u00e1fico de escenas.[2]\u200b Esto significa que el mundo virtual es inicialmente un espacio cartesiano vac\u00edo en el cual el programador de videojuegos inserta los modelos en 3D. Panda 3D no distingue entre modelos 3D \"grandes\", como el modelo de una mazmorra o una isla, y modelos 3D \"peque\u00f1os\", como el modelado de una mesa o una espada. Ambos modelados grandes y peque\u00f1os son creados usando un programa de modelado est\u00e1ndar como Blender, 3ds Max o Maya, cargados en Panda 3D, y despu\u00e9s insertados en el espacio cartesiano.\nEl motor gr\u00e1fico de escenas de Panda 3D expone la funcionalidad de OpenGL y DirectX de una forma bastante literal. Por ejemplo, OpenGL y DirectX pueden crear niebla. Para habilitar la niebla en Panda3D, se guardan los par\u00e1metros de la niebla en un nodo en la escena gr\u00e1fica. Los par\u00e1metros de niebla coinciden exactamente con los par\u00e1metros de funciones equivalentes en las APIs subyacentes. Se diferencia de ellos, en que se guarda en la escena, mientras que OpenGL y DirectX no lo hacen. Por supuesto, tambi\u00e9n provee de operadores de alto nivel, como la carga de modelos, ejecuci\u00f3n de animaciones, detecci\u00f3n de colisiones, etc.\nPanda3D fue dise\u00f1ado antes de la existencia del vertex y pixel shaders. Adquiri\u00f3 soporte para shaders escritos a mano en 2005. No obstante, los usuarios han tardado en aprovechar las modernas t\u00e9cnicas de iluminaci\u00f3n por pixel en sus juegos. Los programadores teorizan que esto ocurre porque la programaci\u00f3n de shaders puede ser bastante dif\u00edcil, y por eso muchos programadores de juegos quieren que el motor los pueda manejar autom\u00e1ticamente[cita\u00a0requerida].\nPara remediar esta situaci\u00f3n, los programadores de Panda3D, recientemente le han dado al motor la capacidad de sintetizar shaders autom\u00e1ticamente. Esta s\u00edntesis ocurre si el modelador de 3D marca un modelado para iluminaci\u00f3n por pixel, o si el modelador aplica un normal map, gloss map, self-illumination map, o otra capacidad que excede las capacidades de un pipeline de funciones fijas.[3]\u200b La intenci\u00f3n de la s\u00edntesis es renderizar el modelado como el modelador ha previsto, sin ninguna intervenci\u00f3n del programador.", "subsections": []}, {"name": "Herramientas no gr\u00e1ficas", "text": "Panda 3D tiene otras capacidades aparte del renderizado 3D. Los principales son:\nHerramientas de an\u00e1lisis de rendimiento.\nHerramientas de exploraci\u00f3n de la escena gr\u00e1fica.\nHerramientas de depuraci\u00f3n\nUn completo pipeline de exportaci\u00f3n/importaci\u00f3n de arte.\n3D Audio, utilizando ya sea FMOD, OpenAL o Miles Sound System.\nDetecci\u00f3n de colisiones.\nSistema de f\u00edsicas, y una integraci\u00f3n total para el Open Dynamics Engine.\nSoporte para teclado y rat\u00f3n.\nSoporte para dispositivos E/S inusuales.\nM\u00e1quina de estados finitos.\nGUI.\nHerramientas para redes.", "subsections": []}, {"name": "Historia", "text": "El estudio Disney VR es una rama creada por Disney para construir atracciones en 3D para los parques tem\u00e1ticos de Disney. Construyeron una atracci\u00f3n llamada \"Aladdin's Magic Carpet\", y el motor que crearon para ello es lo que finalmente ser\u00eda Panda3D. El motor en su forma actual se parece muy poco a sus primeros a\u00f1os. Con el tiempo, Panda3D fue usado para paseos VR adicionales en los parques tem\u00e1ticos de Disney, y fue utilizado finalmente en la creaci\u00f3n de Toontown Online, un juego en l\u00ednea sobre un mundo de dibujos animados, y despu\u00e9s para la creaci\u00f3n de un segundo MMORPG, Pirates of the Caribbean Online.[4]\u200b\nEn el 2002, el motor fue liberado como c\u00f3digo abierto. Seg\u00fan los autores, esto es debido a que \"ser\u00eda m\u00e1s f\u00e1cil trabajar con otras universidades en proyectos de investigaci\u00f3n sobre la Realidad Virtual\".[5]\u200b Sin embargo, le llev\u00f3 alg\u00fan tiempo al Panda3D, el despegar como un proyecto de c\u00f3digo abierto. Seg\u00fan el art\u00edculo:\nEl sistema, a pesar de que es bastante usado por el equipo que lo desarrollo, no estaba lo \"suficientemente listo para ser de c\u00f3digo abierto\". Hab\u00eda varios usuarios interesados, pero la compilaci\u00f3n e instalaci\u00f3n del sistema fue incre\u00edblemente compleja, y hab\u00eda muy poco material sobre documentaci\u00f3n y ejemplos de c\u00f3digo, as\u00ed que no hab\u00eda una comunidad significativa de c\u00f3digo abierto en marcha.\nDe todos modos, el hecho de haber liberado el motor permiti\u00f3 que el centro tecnol\u00f3gico de entretenimiento de Carnigie Mellon se uniera al desarrollo del motor. Mientras que ingenieros de Disney continuaron con la mayor parte del desarrollo, el equipo de Carnegie Mellon se propuso el rol de pulir el motor para el consumo p\u00fablico, escribiendo documentaci\u00f3n y a\u00f1adiendo determinadas caracter\u00edsticas de alto nivel como los shaders.\nEl nombre de Panda3D fue una vez un acr\u00f3nimo: \"Platform Agnostic Networked Display Architecture\"[6]\u200b (\"Arquitectura de Visualizaci\u00f3n en Red de Plataforma Agn\u00f3stica\"). No obstante, desde entonces la frase ha perdido gran parte de su significado, la palabra \"Panda3D\" es raramente considerada como un acr\u00f3nimo m\u00e1s.", "subsections": []}, {"name": "Licencia de software", "text": "En el 2002, cuando el motor fue liberado, el objetivo de los desarrolladores fue crear una licencia libre. Sin embargo, la licencia ten\u00eda algunos defectos que la hac\u00eda no libre: Se requiere que los cambios sean verificados y se proh\u00edbe expresamente la exportaci\u00f3n de software a varias naciones con las cuales los Estados Unidos ten\u00eda embargos comerciales.\nEl mi\u00e9rcoles 28 de mayo de 2008, la rama principal del desarrollo de Panda3D cambia a la licencia BSD. Sin embargo, las versiones antiguas siguen usando la antigua licencia.[7]\u200b\nPanda3D hace uso de multitud de librer\u00edas de terceros cuyas licencias tampoco son Software libre, incluyendo FMOD,  Nvidia Cg, DirectX, y MFC.", "subsections": []}, {"name": "Usuarios", "text": "Aqu\u00ed hay una lista parcial de compa\u00f1\u00edas y productos comerciales que han utilizado Panda3D:\nDisney's Toontown\nDisney's Pirates of the Caribbean Online\nSimOps Studios: Code3D\nMSA's Thermal Enforcer\nLittle Mermaid Pinball, Aladdin Pinball, and Pirates Pinball\nAngels Fall First: Second Antarean War\nAqu\u00ed hay una lista incompleta de proyectos de software libre construidos sobre Panda3D:\nLa Granja de Los Poderosos\nHerdelia\nVikings\nFuntrench's Eden", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Software Libre. Contenido relacionado con Free Software Portal Logo.svg.\nOgre 3D\nCrystal Space\nIrrlicht", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abPanda3D Manual\u00bb.\u00a0\n\u2191 \u00abPanda3D Manual Chapter: 'The Scene Graph'\u00bb.\u00a0\n\u2191 \u00abPanda3D Manual Chapter: 'The Shader Generator'\u00bb.\u00a0\n\u2191 \u00abGamasutra Postmortem: Disney's Toontown (discusses history of Panda3D)\u00bb.\u00a0\n\u2191 \u00abProceedings, PyCon 2004: The Panda3D Engine - Python Scripting for Game and Simulation Development\u00bb. Archivado desde el original el 17 de agosto de 2005.\u00a0\n\u2191 \u00abGameDev.net coverage of Game Developer's Conference, Austin, 2008\u00bb. Archivado desde el original el 28 de septiembre de 2008.\u00a0\n\u2191 \u00abPanda3D Manual Chapter: 'Introduction to Panda'\u00bb.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Panda3D sitio web\nDevmaster.net listing of Panda3D (Muy desactualizado)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pandas_(software)", "title": "Pandas (software)", "summary": "Pandas es una librer\u00eda de Python especializada en la manipulaci\u00f3n y el an\u00e1lisis de datos. Ofrece estructuras de datos y operaciones para manipular tablas num\u00e9ricas y series temporales, es como el Excel de Python. Es un\u00a0software libre  distribuido bajo la licencia BSD.[1]\u200b El nombre deriva del t\u00e9rmino \"datos de panel\", t\u00e9rmino de\u00a0econometr\u00eda\u00a0que designa datos que combinan una dimensi\u00f3n temporal con otra dimensi\u00f3n transversal.[2]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Caracter\u00edsticas de la biblioteca\n2 Historia\n2.1 L\u00ednea del tiempo:[6]\u200b\n3 Ejemplos\n4 V\u00e9ase tambi\u00e9n\n5 Referencias\n6 Enlaces externos", "subsections": []}, {"name": "Caracter\u00edsticas de la biblioteca", "text": "Tipo de datos DataFrame para manipulaci\u00f3n de datos con indexaci\u00f3n integrada.\nHerramientas para leer y escribir datos entre estructuras de dato en-memoria y formatos de archivo variados.\nAlineaci\u00f3n de dato y manejo integrado de datos faltantes.\nReestructuraci\u00f3n y segmentaci\u00f3n de conjuntos de datos.\nSegmentaci\u00f3n vertical basada en etiquetas, indexaci\u00f3n elegante, y segmentaci\u00f3n horizontal de grandes conjuntos de datos.\nInserci\u00f3n y eliminaci\u00f3n de columnas en estructuras de datos.\nAgrupaci\u00f3n predefinida en la biblioteca lo que permite realizar cadenas de operaciones dividir-aplicar-combinar sobre conjuntos de datos.\nMezcla y uni\u00f3n de datos.\nIndexaci\u00f3n jer\u00e1rquica de ejes para trabajar con datos de altas dimensiones en estructuras de datos de menor dimensi\u00f3n.\nFuncionalidad de series de tiempo: generaci\u00f3n de rangos de fechas y conversi\u00f3n de frecuencias, desplazamiento de ventanas estad\u00edsticas y de regresiones lineales, desplazamiento de fechas y retrasos.[3]\u200b\nLa biblioteca ha sido altamente optimizada en cuanto a rendimiento, con caminos de c\u00f3digo cr\u00edtico escritos en Cython o en C.[4]\u200b", "subsections": []}, {"name": "Historia", "text": "Su principal desarrollador,\u00a0Wes McKinney, empez\u00f3 a desarrollar Pandas en el a\u00f1o 2008 mientras trabajaba en\u00a0AQR Capital\u00a0por la necesidad que ten\u00eda de  una herramienta flexible de alto rendimiento para realizar an\u00e1lisis cuantitativo en datos financieros.[5]\u200b Antes de dejar AQR convenci\u00f3 a la administraci\u00f3n de la empresa de distribuir esta biblioteca bajo licencia de c\u00f3digo abierto. Otro empleado de AQR, Chang Ella, se uni\u00f3 en 2012 al esfuerzo de desarrollo de la biblioteca.[cita\u00a0requerida]", "subsections": [{"name": "L\u00ednea del tiempo:[6]\u200b", "text": "2008: Comienza el desarrollo de pandas\n2009: Pandas se convierte en un software de c\u00f3digo abierto\n2012: Es publicada la primera edici\u00f3n de Python for Data Analysis\n2015: pandas se convierte en un proyecto esponsorizado por NumFOCUS\n2018: Primer sprint presencial de desarrolladores del n\u00facleo"}]}, {"name": "Ejemplos", "text": " Curvas\nimport\npandas\nas\npd\nmatplotlib.pyplot\nplt\nnumpy\nnp\ndf\n=\npd\n.\nDataFrame\n(\nnp\nrandom\nrandn\n100\n,\n5\n),\ncolumns\nlist\n'ABCDE'\n))\ncumsum\n()\n# Return cumulative sum over a DataFrame or Series axis\nplot\nplt\nshow\n Gr\u00e1fica de barras\nrand\n10\nbar\nstacked\nTrue\n)\n Diagrama de caja  \n7\nbox\n Histograma \ndata\nSeries\nnormal\nsize\nhist\ngrid\nFalse", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "matplotlib\nNumPy\nSciPy\nR (lenguaje de programaci\u00f3n)\nScikit-learn", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abLicense \u2013 Package overview \u2013 pandas 0.21.1 documentation\u00bb. pandas. 12 de diciembre de 2017. Consultado el 13 de diciembre de 2017.\u00a0\n\u2191 Using Econometrics: A Practical Guide. Pearson. 2016. pp.\u00a0346, 465. ISBN\u00a0013418274X.\u00a0\n\u2191 \u00abpandas.date_range \u2013 pandas 0.21.1 documentation\u00bb. pandas. 12 de diciembre de 2017. Consultado el 13 de diciembre de 2017.\u00a0\n\u2191 \u00abPython Data Analysis Library \u2013 pandas: Python Data Analysis Library\u00bb. pandas. Consultado el 13 de noviembre de 2017.\u00a0\n\u2191 Matt Harrison, Theodore Petrou (2020). Pandas CookBook. Packt. ISBN\u00a0978-1839213106.\u00a0\n\u2191 \u00abpandas - Python Data Analysis Library\u00bb. pandas.pydata.org. Consultado el 29 de septiembre de 2021.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web oficial", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Paradigma_de_programaci%C3%B3n", "title": "Paradigma de programaci\u00f3n", "summary": "Se denominan paradigmas de programaci\u00f3n a las formas de clasificar los lenguajes de programaci\u00f3n en funci\u00f3n de sus caracter\u00edsticas. Los idiomas se pueden clasificar en m\u00faltiples paradigmas.\nAlgunos paradigmas se ocupan principalmente de las implicancias para el modelo de ejecuci\u00f3n del lenguaje, como permitir efectos secundarios o si la secuencia de operaciones est\u00e1 definida por el modelo de ejecuci\u00f3n. Otros paradigmas se refieren principalmente a la forma en que se organiza el c\u00f3digo, como agrupar un c\u00f3digo en unidades junto con el estado que modifica el c\u00f3digo. Sin embargo, otros se preocupan principalmente por el estilo de la sintaxis y la gram\u00e1tica.\nLos paradigmas de programaci\u00f3n comunes incluyen:[1]\u200b[2]\u200b[3]\u200b\nimperativo en el que el programador instruye a la m\u00e1quina c\u00f3mo cambiar su estado,\nprocedimental que agrupa las instrucciones en procedimientos,\norientado a objetos que agrupa las instrucciones con la parte del estado en el que operan,\ndeclarativo en el que el programador simplemente declara las propiedades del resultado deseado, pero no c\u00f3mo calcularlo\nfuncional en el que el resultado deseado se declara como el valor de una serie de aplicaciones de funci\u00f3n,\nl\u00f3gico en la que el resultado deseado se declara como la respuesta a una pregunta sobre un sistema de hechos y reglas,\nmatem\u00e1tico en el que el resultado deseado se declara como la soluci\u00f3n de un problema de optimizaci\u00f3n\nreactivo en el que se declara el resultado deseado con flujos de datos y la propagaci\u00f3n del cambio\nLas t\u00e9cnicas simb\u00f3licas como la reflexi\u00f3n, que permiten que el programa se refiera a s\u00ed mismo, tambi\u00e9n pueden ser consideradas como un paradigma de programaci\u00f3n. Sin embargo, esto es compatible con los principales paradigmas y, por lo tanto, no es un paradigma real por derecho propio.\nPor ejemplo, los lenguajes que caen en el paradigma imperativo tienen dos caracter\u00edsticas principales: establecen el orden en el que ocurren las operaciones, con construcciones que controlan expl\u00edcitamente ese orden, y permiten efectos secundarios, en los que el estado puede modificarse en un momento determinado, dentro de una unidad de c\u00f3digo, y luego leer en un momento diferente dentro de una unidad de c\u00f3digo diferente. La comunicaci\u00f3n entre las unidades de c\u00f3digo no es expl\u00edcita. Mientras tanto, en la programaci\u00f3n orientada a objetos, el c\u00f3digo se organiza en objetos que contienen un estado que solo es modificado por el c\u00f3digo que forma parte del objeto. La mayor\u00eda de los lenguajes orientados a objetos tambi\u00e9n son lenguajes imperativos. Por el contrario, los lenguajes que se ajustan al paradigma declarativo no indican el orden en el que ejecutar las operaciones. En su lugar, proporcionan una serie de operaciones disponibles en el sistema, junto con las condiciones en las que se permite que se ejecute cada una. La implementaci\u00f3n del modelo de ejecuci\u00f3n del lenguaje rastrea qu\u00e9 operaciones son libres de ejecutar y elige el orden en forma independiente. M\u00e1s en Comparaci\u00f3n de lenguajes de programaci\u00f3n de m\u00faltiples paradigmas.", "sections": [{"name": "\u00cdndice", "text": "1 Lenguajes de programaci\u00f3n procedurales\n2 Resumen\n3 Referencias\n4 V\u00e9ase tambi\u00e9n", "subsections": [{"name": "Lenguajes de programaci\u00f3n procedurales", "text": "El desarrollo de lenguajes procedurales dio lugar a lenguajes sirven de vocabulario relacionado con el problema a resolver. Ejemplos de estos lenguajes son:\nCOBOL (COmmon Business Oriente Language) - hace servir t\u00e9rminos como archivo, mover y copiar.\nFORTRAN (FORmula TRANslation) - hace servir terminolog\u00eda del lenguaje matem\u00e1tico.\nALGOL (ALGOritmic Language) - enfocado a ser un lenguaje apropiado para definir algoritmos, tambi\u00e9n puede servir de lenguaje matem\u00e1tico.\nPL/I (Programing Language One) - un h\u00edbrido comercial/cient\u00edfico de prop\u00f3sito general con soporte para usuarios.\nBASIC (Begginers All purpose Symbolic Instruction Code) - se desarroll\u00f3 para permitir escribir programas a m\u00e1s personas.\nC - un lenguaje de prop\u00f3sito general.\nTodos estos lenguajes siguen un paradigma procedural. Describen, paso a paso, exactamente el proceso que debe seguirse para resolver un problema espec\u00edfico. La eficacia y eficiencia de cada soluci\u00f3n dependen de la experiencia, la inventiva y la habilidad del programador."}]}, {"name": "Resumen", "text": ":\u200a5\u200a\nAs\u00ed como la ingenier\u00eda de software (como proceso) se define mediante diferentes metodolog\u00edas, los lenguajes de programaci\u00f3n (como modelos de computaci\u00f3n) se definen mediante diferentes paradigmas. Algunos lenguajes est\u00e1n dise\u00f1ados para admitir un paradigma (Smalltalk admite programaci\u00f3n orientada a objetos, Haskell admite programaci\u00f3n funcional), mientras que otros lenguajes de programaci\u00f3n admiten m\u00faltiples paradigmas (como Object Pascal, C++, Java, JavaScript, C#, Scala, Visual Basic, Common Lisp, Scheme, Perl, PHP, Python, Ruby, Oz y F# ). Por ejemplo, los programas escritos en C ++, Object Pascal o PHP pueden ser puramente procedimentales, puramente orientados a objetos o pueden contener elementos de ambos u otros paradigmas. Los dise\u00f1adores y programadores de software deciden c\u00f3mo utilizar esos elementos paradigm\u00e1ticos.\nEn la programaci\u00f3n orientada a objetos, los programas se tratan como un conjunto de objetos que interact\u00faan. En la programaci\u00f3n funcional, los programas se tratan como una secuencia de evaluaciones de funciones sin estado. Cuando se programan computadoras o sistemas con muchos procesadores, en la programaci\u00f3n orientada a procesos, los programas se tratan como conjuntos de procesos concurrentes que act\u00faan sobre estructuras de datos compartidas l\u00f3gicas.\nMuchos paradigmas de programaci\u00f3n son tan conocidos por las t\u00e9cnicas que proh\u00edben como por las que habilitan. Por ejemplo, la programaci\u00f3n funcional pura no permite el uso de efectos secundarios, mientras que la programaci\u00f3n estructurada no permite el uso de la instrucci\u00f3n \"go to\". En parte por esta raz\u00f3n, los nuevos paradigmas a menudo son considerados doctrinarios o demasiado r\u00edgidos por quienes est\u00e1n acostumbrados a estilos anteriores.[6]\u200b Sin embargo, evitar ciertas t\u00e9cnicas puede facilitar la comprensi\u00f3n del comportamiento del programa y demostrar teoremas sobre la correcci\u00f3n del programa.\nLos paradigmas de programaci\u00f3n tambi\u00e9n se pueden comparar con modelos de programaci\u00f3n, lo que permite invocar un modelo de ejecuci\u00f3n utilizando solo una API. Los modelos de programaci\u00f3n tambi\u00e9n se pueden clasificar en paradigmas seg\u00fan las caracter\u00edsticas del modelo de ejecuci\u00f3n.\nPara la computaci\u00f3n paralela, es com\u00fan usar un modelo de programaci\u00f3n en lugar de un lenguaje. La raz\u00f3n es que los detalles del hardware paralelo se filtran en las abstracciones utilizadas para programar el hardware. Esto hace que el programador tenga que mapear patrones en el algoritmo sobre patrones en el modelo de ejecuci\u00f3n (que se han insertado debido a una fuga de hardware en la abstracci\u00f3n). Como consecuencia, ning\u00fan lenguaje de programaci\u00f3n paralelo se adapta bien a todos los problemas de c\u00e1lculo. Por lo tanto, es m\u00e1s conveniente utilizar un lenguaje secuencial base e insertar llamadas a la API en modelos de ejecuci\u00f3n paralela a trav\u00e9s de un modelo de programaci\u00f3n. Dichos modelos de programaci\u00f3n paralela se pueden clasificar de acuerdo con abstracciones que reflejan el hardware, como la memoria compartida, la memoria distribuida con paso de mensajes, nociones de lugar visibles en el c\u00f3digo, etc. Estos pueden considerarse sabores del paradigma de programaci\u00f3n que se aplican solo a lenguajes y modelos de programaci\u00f3n paralelos.", "subsections": []}, {"name": "Referencias", "text": "\u2191 N\u00f8rmark, Kurt. Overview of the four main programming paradigms. Aalborg University, 9 May 2011. Retrieved 22 September 2012.\n\u2191 Frans Coenen (11 de octubre de 1999). \u00abCharacteristics of declarative programming languages\u00bb. cgi.csc.liv.ac.uk. Consultado el 20 de febrero de 2014.\u00a0\n\u2191 Michael A. Covington (23 de agosto de 2010). \u00abCSCI/ARTI 4540/6540: First Lecture on Symbolic Programming and LISP\u00bb. University of Georgia. Archivado desde el original el 7 de marzo de 2012. Consultado el 20 de noviembre de 2013.\u00a0\n\u2191 Peter Van Roy (12 de mayo de 2009). \u00abProgramming Paradigms: What Every Programmer Should Know\u00bb. info.ucl.ac.be. Consultado el 27 de enero de 2014.\u00a0\n\u2191 Peter Van-Roy; Seif Haridi (2004). Concepts, Techniques, and Models of Computer Programming. MIT Press. ISBN\u00a0978-0-262-22069-9.\u00a0\n\u2191 Frank Rubin (March 1987). \u00ab'GOTO Considered Harmful' Considered Harmful\u00bb. Communications of the ACM 30 (3): 195-196. S2CID\u00a06853038. doi:10.1145/214748.315722. Archivado desde el original el 20 de marzo de 2009.\u00a0", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Programaci\u00f3n\nLenguaje de programaci\u00f3n", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Perif%C3%A9rico_de_entrada/salida", "title": "Perif\u00e9rico de entrada/salida", "summary": "En inform\u00e1tica, un perif\u00e9rico de entrada/salida o E/S (en ingl\u00e9s: input/output o I/O) es aquel tipo de dispositivo perif\u00e9rico de un computador capaz de interactuar con los elementos externos a ese sistema de forma bidireccional, es decir, que permite tanto que sea ingresada informaci\u00f3n desde un sistema externo, como emitir informaci\u00f3n a partir de ese sistema.  Los Dispositivos Perif\u00e9ricos de entrada son todos aquellos dispositivos que permiten introducir datos o informaci\u00f3n en una computadora para que esta los procese u ordene", "sections": [{"name": "\u00cdndice", "text": "1 Funciones\n1.1 Direccionamiento o selecci\u00f3n de perif\u00e9rico\n1.1.1 Bus de direcciones\n1.1.2 T\u00e9cnicas de direccionamiento para controladores\n1.2 Comunicaci\u00f3n f\u00edsica entre el controlador y el procesador\n1.2.1 Basados en buffer tri-estado\n1.2.2 Basados en MUX/DEMUX\n1.3 Sincronizaci\u00f3n\n1.3.1 Tipos de temporizaci\u00f3n\n1.3.1.1 Temporizaci\u00f3n s\u00edncrona\n1.3.1.2 Temporizaci\u00f3n as\u00edncrona o con \"handshaking\"\n1.4 Otras funciones importantes\n2 Tipos\n2.1 Almacenamiento de datos\n2.2 Dispositivos de redes\n3 V\u00e9ase tambi\u00e9n\n4 Enlaces externos", "subsections": []}, {"name": "Funciones", "text": "Un perif\u00e9rico de E/S es el que se utiliza para ingresar (E) datos a la computadora, y luego de ser procesados por la unidad central de procesamiento (CPU), genera la salida (S) de informaci\u00f3n. Su funci\u00f3n es leer o grabar, permanente o virtualmente, todo aquello que se haga con la computadora, para que pueda ser utilizado por los usuarios u otros sistemas.\nUn sistema de E/S debe poder, como m\u00ednimo, direccionar los diferentes perif\u00e9ricos con los que puede establecer comunicaci\u00f3n, establecer un sistema de comunicaci\u00f3n entre el procesador y los controladores, y sincronizar los dispositivos de manera que no se produzcan inconsistencias o errores. Adem\u00e1s, deber\u00eda ser capaz de convertir los datos entre diferentes formatos, controlar el estado de los perif\u00e9ricos, llevar la cuenta de las transmisiones y tener un sistema de detecci\u00f3n de errores.", "subsections": [{"name": "Direccionamiento o selecci\u00f3n de perif\u00e9rico", "text": "A la hora de comunicarse con un dispositivo, el procesador sit\u00faa su direcci\u00f3n asociada en el bus de direcciones. De esta forma, selecciona el dispositivo con el que quiere iniciar una transferencia de datos. La forma de identificar cada perif\u00e9rico es el llamado direccionamiento.\nTiene las siguientes caracter\u00edsticas:\nEs necesario prevenir que varios dispositivos puedan acceder simult\u00e1neamente al mismo bus, ya que se pueden producir cortocircuitos (en el caso de una arquitectura de bus compartido).\nCada direcci\u00f3n no tiene por qu\u00e9 referirse a un solo puerto, pero es necesario que \u00e9sta se pueda identificar un\u00edvocamente y no produzca incoherencias o ambig\u00fcedades con el resto del sistema.\nLos controladores suelen tener varios puertos asociados.\nBus de direcciones\nEl bus de direcciones comunica el procesador con los perif\u00e9ricos, seleccionando aquel con el que se desea interaccionar. Este puede ser:\nMapeado: El mapa de perif\u00e9ricos pertenece al mismo que el de memoria, es decir, el procesador no distingue entre accesos a memoria y accesos a los dispositivos de E/S, por tanto no hay instrucciones espec\u00edficas de E/S que no sean las propias de acceso a memoria, sino que se utilizan LOAD, STORE o MOVE. La ventaja de usar una E/S mapeada es que hay menor complejidad a la hora de dise\u00f1ar el procesador.\nIndependiente: El mapa de perif\u00e9ricos es independiente (y valga la redundancia) al mapa de memoria ya que usa la plantilla IO/M# del procesador, por tanto existen instrucciones dedicadas a las transferencias con perif\u00e9ricos distintos a la memoria principal (nemot\u00e9cnicos m\u00e1s comunes: IN, OUT, TESTI/O, CONTROLI/O). Las ventajas de usar E/S independiente es que, facilita la protecci\u00f3n de E/S y los programas son m\u00e1s r\u00e1pidos al tener una decodificaci\u00f3n m\u00e1s sencilla y tener un tama\u00f1o menor las instrucciones de E/S. Al contrario que la E/S mapeada, el dise\u00f1o del procesador es m\u00e1s complejo.\nT\u00e9cnicas de direccionamiento para controladores\nEn funci\u00f3n del tipo de sistema E/S, podemos encontrar diferentes formas de direccionamiento:\nDireccionamiento por selecci\u00f3n lineal: Consiste en asignar un bit del bus de direcciones a cada puerto. Si tenemos n \"l\u00edneas\" para direccionar perif\u00e9ricos podemos especificar, a lo sumo, n perif\u00e9ricos distintos. Este tipo de direccionamiento no se suele utilizar ya que tiene importantes restricciones tales como que solo un perif\u00e9rico puede estar activo a la vez.\nDireccionamiento por selecci\u00f3n por decodificaci\u00f3n: La direcci\u00f3n del perif\u00e9rico est\u00e1 codificada y se requiere un decodificador para activar el perif\u00e9rico deseado. Dentro de este tipo de direccionamiento se hallan dos posibilidades:\nCentralizado: Se emplea un decodificador para todos los puertos.\nDistribuido: Cada puerto \"reconoce\" su propia direcci\u00f3n."}, {"name": "Comunicaci\u00f3n f\u00edsica entre el controlador y el procesador", "text": "Existen distintas formas de interconexi\u00f3n que se pueden dar entre controlador y procesador. Las m\u00e1s destacadas son las basadas en buffer tri-estado y en las MUX/DEMUX indicando sus ventajas/inconvenientes.\nSe suele usar m\u00e1s la alternativa basada en buffer tri-estado pues permite un mejor aprovechamiento de los dispositivos de E/S y la mejora de los mismos al dedicar mayor \u00e1rea de estos en la mejora de prestaciones y no en el interconexionado.\nBasados en buffer tri-estado\nSe implementan usando un bus compartido y buffer tri-estado para cada puerto y evitar as\u00ed el \"volcado\" de informaci\u00f3n por parte de dos o m\u00e1s perif\u00e9ricos en el bus. Las caracter\u00edsticas principales de este tipo de interconexi\u00f3n son:\nFacilidad en la expansi\u00f3n por medio de tarjetas o circuiter\u00eda espec\u00edfica\nPermite conectar en paralelo muchos perif\u00e9ricos\nBasados en MUX/DEMUX\nSe emplean MUX y DEMUX para seleccionar el perif\u00e9rico que podr\u00e1 usar el bus compartido en un momento dado, impidiendo al resto de dispositivos acceder a este \u00faltimo. Las caracter\u00edsticas principales de este tipo de interconexi\u00f3n son:\nEscasa posibilidad de expansi\u00f3n\nMucha circuiter\u00eda: Suelen dedicar gran parte del \u00e1rea del dispositivo en el cableado del mismo."}, {"name": "Sincronizaci\u00f3n", "text": "La sincronizaci\u00f3n con el procesador o la memoria de los dispositivos de E/S consiste en la acomodaci\u00f3n de velocidades de ambos, ya que los perif\u00e9ricos suelen ser m\u00e1s lentos. A fin de que no se imponga el ritmo del dispositivo m\u00e1s lento se establecen mecanismos para saber cu\u00e1ndo se deben enviar/recibir datos y es com\u00fan que los controladores dispongan de buffers de almacenamiento temporal de palabras y permitan aceptar se\u00f1ales de control de conformidad que reflejan el estado del perif\u00e9rico en un momento dado (listo, petici\u00f3n, reconocimiento, ocupado, etc).\nTipos de temporizaci\u00f3n\nLa temporizaci\u00f3n de las operaciones de E/S puede ser de dos tipos:\nS\u00edncrona: Aquella en la que los dispositivos que se conectan poseen velocidades similares, por lo que ninguno de ellos debe esperar al otro.\nAs\u00edncrona: Aquella en los que los dispositivos tienen velocidades dispares, lo cual provoca que uno deba esperar al otro para que no se produzcan errores/inconsistencias en los datos.\nExiste otra definici\u00f3n de los t\u00e9rminos Sincrono/Asincrono que se puede encontrar en diferentes textos/escritos de diferentes autores dichos t\u00e9rminos refiri\u00e9ndose a las distintas definiciones:\nS\u00edncronos: Se dice de los dispositivos que comparten una se\u00f1al de reloj com\u00fan.\nAs\u00edncronos: Aquellos que no comparten la misma se\u00f1al de reloj. Debido a que no tienen la misma se\u00f1al de reloj, pueden acomodar una amplia variedad de dispositivos, y el bus puede alargarse sin preocuparse por los problemas de sincronizaci\u00f3n. Para coordinar la transmisi\u00f3n de datos entre emisor y receptor, utilizan un protocolo de presentaci\u00f3n (handshaking protocol). \u00c9ste protocolo consta de una serie de pasos en los cuales emisor y receptor proceden al siguiente paso solamente cuando ambas partes est\u00e1n de acuerdo. Para implementar \u00e9ste protocolo se requiere de un conjunto adicional de l\u00edneas de control, entre ellas:\nReadReq o RD: Se utiliza para indicar una petici\u00f3n de lectura de memoria. La direcci\u00f3n se pone en la l\u00ednea de datos al mismo tiempo.\nWriteReq o WR: Se utiliza para indicar una petici\u00f3n de escritura en memoria.\nData: Se utiliza para indicar que la palabra de datos est\u00e1 preparada en las l\u00edneas de datos (datos estables).\nAck: Se utiliza para conocer la se\u00f1al de ReadReq o Data, es decir, esta se\u00f1al de aceptaci\u00f3n se necesita para que el controlador del perif\u00e9rico conteste a la petici\u00f3n de transferencia generada por el procesador.\nTemporizaci\u00f3n s\u00edncrona\nEn la temporizaci\u00f3n s\u00edncrona, la aparici\u00f3n de un evento est\u00e1 determinada por el reloj. El bus incluye una l\u00ednea de reloj que es com\u00fan a todos los dispositivos, y se suelen sincronizar durante el flanco de subida. Casi todos los eventos duran un \u00fanico ciclo de reloj.\nEste tipo de temporizaci\u00f3n s\u00f3lo funciona si el dispositivo de E/S es suficientemente r\u00e1pido para responder a la espera que le brinda el procesador, en caso contrario se producir\u00e1n errores en la escritura de los puertos y se leer\u00e1n datos no v\u00e1lidos del bus, por lo que las operaciones de E/S no ser\u00edan correctas.\nOtro tema importante es que, si no se incorporan rutinas para detectar hardware inexistente, el programa podr\u00eda fallar por tratar de direccionar un dispositivo que o bien no existe o bien ha sido \"desconectado\" del equipo.\nLas operaciones de lectura y escritura funcionan de la siguiente manera:\nEscritura: El procesador activa la se\u00f1al WR#, que es la de escritura, y espera un tiempo, que es determinado por el procesador (no es una espera al otro dispositivo), y una vez transcurrido ese periodo de tiempo desactiva la se\u00f1al de escritura, por lo que si el dispositivo de E/S no es suficientemente r\u00e1pido la escritura no se realizar\u00e1 correctamente. Cabe destacar que en este tipo de temporizaci\u00f3n no se produce ninguna espera por parte del procesador ni por parte del perif\u00e9rico.\nLectura: El procesador activa la se\u00f1al RD# que es la de lectura y espera un tiempo determinado por el mismo (como ocurr\u00eda en el caso de la Escritura) y acto seguido lee del bus de datos la informaci\u00f3n, sin comprobar si esta contiene los datos v\u00e1lidos suministrados por el perif\u00e9rico.\nTemporizaci\u00f3n as\u00edncrona o con \"handshaking\"\nLa traducci\u00f3n de \"handshaking\" es \"apret\u00f3n de manos\" y viene a significar que el procesador y los perif\u00e9ricos intercambian se\u00f1ales de control que les permiten sincronizar sus acciones y \"colaborar\" conjuntamente en la transferencia de informaci\u00f3n. Generalmente se suele considerar que existe s\u00f3lo una se\u00f1al de sincronizaci\u00f3n llamada ACK (aunque puede haber tantas se\u00f1ales de sincronizaci\u00f3n como se necesiten y esto depende del hardware del dispositivo en cuesti\u00f3n).\nCon este procedimiento mejoramos el rendimiento de las operaciones de E/S e impedimos que se produzcan los fallos en la escritura/lectura que pod\u00edan suceder con la temporizaci\u00f3n s\u00edncrona para un dispositivo existente. Sin embargo al igual que en el caso sincrono se han de incorporar rutinas que determinen si se intenta acceder a un dispositivo inexistente o \"desconectado\" puesto que esto si provocar\u00eda errores (entrar\u00eda en un bucle infinito esperando a ACK). La soluci\u00f3n que generalmente se adopta es que el procesador da un tiempo l\u00edmite de espera por encima del cual se genera una excepci\u00f3n y se aborta la operaci\u00f3n E/S.\nEl funcionamiento de las operaciones de lectura y escritura es el siguiente:\nEscritura: El procesador activa la se\u00f1al de escritura, WR# y espera hasta que el perif\u00e9rico activa su l\u00ednea de sincronizaci\u00f3n ACK, cuando esto sucede el procesador deshabilita la se\u00f1al de escritura y se produce la escritura (y valga la redundancia) de los datos en el puerto del perif\u00e9rico correspondiente. Finalmente el perif\u00e9rico desactiva ACK.\nLectura: El procesador habilita la se\u00f1al de lectura, RD# y espera hasta que el dispositivo le \"indique\" mediante ACK que los datos est\u00e1n listos para su lectura. Una vez que ACK esta activa el procesador lee los datos del bus de datos y desactiva la se\u00f1al RD#. Finalmente el perif\u00e9rico reconoce la deshabilitaci\u00f3n de RD# y este desactiva la se\u00f1al de sincronizaci\u00f3n, ACK."}, {"name": "Otras funciones importantes", "text": "Adem\u00e1s de las funciones principales, existen otras tareas de las que un sistema de E/S debe hacerse cargo. Estas son las m\u00e1s importantes:\nConversi\u00f3n de datos: Acomodaci\u00f3n de las caracter\u00edsticas f\u00edsicas y l\u00f3gicas de las se\u00f1ales de datos empleadas por el dispositivo de E/S y por el bus del sistema. Permite \"compatibilizar\" los datos del bus de datos y los datos que acepta el perif\u00e9rico en cuesti\u00f3n, es decir, realiza conversiones entre distintos formatos de datos, por ejemplo:\nConversi\u00f3n de c\u00f3digos (BCD, ASCII, UNICODE, ANSI, etc).\nConversi\u00f3n serie/paralelo.\nConversi\u00f3n de niveles l\u00f3gicos para representar 0 y 1 (necesario para compatibilizar distintas tecnolog\u00edas l\u00f3gicas como la CMOS y la TTL).\nConversiones A/D y D/A.\nControl de perif\u00e9ricos: Permite conocer el estado en el que se encuentra el dispositivo y modificarlo, pudiendo adem\u00e1s enviar otras se\u00f1ales de control para afectar su funcionalidad actual.\nControl de los \"paquetes\" transferidos: Se debe encargar de determinar qu\u00e9 cantidad de informaci\u00f3n se env\u00eda en cada operaci\u00f3n de E/S (lo llamaremos \"paquete\") y contar la cantidad de paquetes que se llevan enviados para poder determinar cu\u00e1ndo se termina la transferencia de datos.\nDetecci\u00f3n de errores: Pueden ser errores propios del funcionamiento del hardware del perif\u00e9rico o bien de los datos (pueden haber sido corrompidos intencionadamente o accidentalmente) y en caso de ser necesario \"relanzar\" la operaci\u00f3n de E/S correspondiente."}]}, {"name": "Tipos", "text": "Dispositivos o perif\u00e9ricos de comunicaci\u00f3n entre computadoras, tales como m\u00f3dems y tarjetas de red, por lo general sirven para entrada y salida. Tambi\u00e9n, los dispositivos de almacenamiento de datos, como los discos r\u00edgidos, la unidad de estado s\u00f3lido, las memorias flash, las disqueteras, entre otros, se pueden considerar perif\u00e9ricos de entrada/salida.\nEjemplos:\nMultit\u00e1ctil\nCasco virtual\nImpresora multifunci\u00f3n", "subsections": [{"name": "Almacenamiento de datos", "text": "Art\u00edculo principal:\nEn ocasiones, se consideran perif\u00e9ricos de E/S a los dispositivos de almacenamiento de datos, como por ejemplo, las lectograbadoras de discos \u00f3pticos, \u2018lectoras\u2019 de tarjetas de memoria, discos duros port\u00e1tiles o externos, memorias USB o memorias flash, etc\u00e9tera."}, {"name": "Dispositivos de redes", "text": "Tambi\u00e9n, los dispositivos de redes o de comunicaci\u00f3n, suelen considerarse perif\u00e9ricos de E/S porque su funci\u00f3n es la interacci\u00f3n o interconexi\u00f3n entre dos o m\u00e1s computadoras, o entre la computadora y otro perif\u00e9rico externo.\nEjemplos: m\u00f3dem, tarjeta de red, concentrador, conmutador (dispositivo de red), enrutador, comunicaci\u00f3n inal\u00e1mbrica, bluetooth."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Perif\u00e9rico (inform\u00e1tica)\nPerif\u00e9rico de entrada\nDirecciones base de entrada/salida", "subsections": []}, {"name": "Enlaces externos", "text": "exa.unne.edu.ar/depar/areas/informatica/SistemasOperativos/SO5.htm Evoluci\u00f3n del proceso de entrada/salida.\nwww.sc.ehu.es/sbweb/fisica/cursoJava/fundamentos/archivos/intro.htm Tutorial sobre entrada/salida.\nwww.lugmen.org.ar/documentacion/cursos/linux-api/lecciones/02-io/material/linux-api.html Entrada/salida de bajo nivel.\nwww.entechtaiwan.com/dev/hw32/index.shtm Direct I/O from Win32 (en ingl\u00e9s).\nwww.iometer.org I/O Meter (en ingl\u00e9s).", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Perl", "title": "Perl", "summary": "5.36.0[1]\u200b / 28 de mayo de 2022 (9 meses\u00a0y\u00a023 d\u00edas)\nPerl es un lenguaje de programaci\u00f3n dise\u00f1ado por Larry Wall en 1987. Perl toma caracter\u00edsticas del lenguaje C, del lenguaje interpretado bourne shell (sh), AWK, sed, Lisp y, en un grado inferior, de muchos otros lenguajes de programaci\u00f3n.\nEstructuralmente, Perl est\u00e1 basado en un estilo de bloques como los del C o AWK, y fue ampliamente adoptado por su destreza en el procesado de texto y no tener ninguna de las limitaciones de los otros lenguajes de script.", "sections": [{"name": "\u00cdndice", "text": "1 Historia\n1.1 Nombre\n1.2 El s\u00edmbolo del camello\n2 Descripci\u00f3n\n2.1 Caracter\u00edsticas\n2.2 Dise\u00f1o\n2.3 Aplicaciones\n2.4 Implementaci\u00f3n\n2.5 Disponibilidad\n2.5.1 GNU/Linux\n2.5.2 Windows\n3 Estructura del lenguaje\n3.1 Programa ejemplo\n3.2 Tipos de datos\n3.3 Estructuras de control\n3.4 Subrutinas\n3.5 Expresiones regulares\n3.6 Interfaz con bases de datos\n4 Comparativa de funcionamiento\n4.1 Optimizando\n5 Futuro\n6 Diversi\u00f3n con Perl\n6.1 Enlaces relacionados\n7 Comunidad Perl\n8 V\u00e9ase tambi\u00e9n\n9 Referencias\n10 Enlaces externos", "subsections": []}, {"name": "Historia", "text": "Larry Wall comenz\u00f3 a trabajar en Perl en 1987 mientras trabajaba como programador en Unisys[4]\u200b y anunci\u00f3 la versi\u00f3n 1.0 en el grupo de noticias comp.sources.misc el 18 de diciembre de 1987. El lenguaje se expandi\u00f3 r\u00e1pidamente en los siguientes a\u00f1os. Perl 2, publicado en 1988, aport\u00f3 un mejor motor de expresiones regulares. Perl 3, publicado en 1989, a\u00f1adi\u00f3 soporte para datos binarios.\nHasta 1991 la \u00fanica documentaci\u00f3n de Perl era una simple (y cada vez m\u00e1s larga) p\u00e1gina de manual Unix. En 1991 se public\u00f3 \nProgramming Perl (el libro del camello) y se convirti\u00f3 en la referencia de facto del lenguaje. Al mismo tiempo, el n\u00famero de versi\u00f3n de Perl salt\u00f3 a 4, no por marcar un gran cambio en el lenguaje, sino por identificar a la versi\u00f3n que estaba documentada en el libro.\nPerl 4 trajo consigo una serie de lanzamientos de mantenimiento, culminando en Perl 4.036 en 1993. En este punto, Larry Wall abandon\u00f3 Perl 4 para comenzar a trabajar en Perl 5. Perl 4 se quedar\u00eda en esa versi\u00f3n hasta hoy.\nEl desarrollo de Perl 5 continu\u00f3 en 1994. La lista de correo perl5-porters se estableci\u00f3 en mayo de 1994 para coordinar el trabajo de adaptaci\u00f3n de Perl 5 a diferentes plataformas. Es el primer foro para desarrollo, mantenimiento y adaptaci\u00f3n de Perl 5.\nPerl 5 fue publicado el 17 de octubre de 1994. Fue casi una completa reescritura del int\u00e9rprete y a\u00f1adi\u00f3 muchas nuevas caracter\u00edsticas al lenguaje, incluyendo objetos, referencias, paquetes y m\u00f3dulos. A destacar, los m\u00f3dulos proveen de un mecanismo para extender el lenguaje sin modificar el int\u00e9rprete. Esto permiti\u00f3 estabilizar su n\u00facleo principal, adem\u00e1s de permitir a los programadores de Perl a\u00f1adirle nuevas caracter\u00edsticas.\nVersi\u00f3n antigua, sin servicio t\u00e9cnico:\nVersi\u00f3n antigua, con servicio t\u00e9cnico:\nVersi\u00f3n estable actual:\n\u00daltima versi\u00f3n prevista para lanzamiento:\nLanzamiento futuro:\nLeyenda:\nVersi\u00f3n antigua\nVersi\u00f3n antigua, con servicio t\u00e9cnico\nVersi\u00f3n actual\n\u00daltima versi\u00f3n prevista\nLanzamiento futuro\nEl 26 de octubre de 1995, se cre\u00f3 el Comprehensive Perl Archive Network (CPAN). CPAN es una colecci\u00f3n de sitios web que almacenan y distribuyen fuentes en Perl, binarios, documentaci\u00f3n, scripts y m\u00f3dulos. Originalmente, cada sitio CPAN deb\u00eda ser accedido a trav\u00e9s de su propio URL; hoy en d\u00eda, http://www.cpan.org redirige autom\u00e1ticamente a uno de los cientos de repositorios espejo de CPAN.\nEn 2008, Perl 5 contin\u00faa siendo mantenido. Caracter\u00edsticas importantes y algunas construcciones esenciales han sido a\u00f1adidas, incluyendo soporte Unicode, hilos, un soporte importante para la programaci\u00f3n orientada a objetos y otras mejoras.", "subsections": [{"name": "Nombre", "text": "Perl se llam\u00f3 originalmente \"Pearl\". Larry Wall quer\u00eda darle al lenguaje un nombre corto con connotaciones positivas; asegura que mir\u00f3 (y rechaz\u00f3) todas las combinaciones de tres y cuatro letras del diccionario. Tambi\u00e9n consider\u00f3 nombrarlo como su esposa Gloria. Wall descubri\u00f3 antes del lanzamiento oficial que ya exist\u00eda un lenguaje de programaci\u00f3n llamado PEARL y cambi\u00f3 la ortograf\u00eda del nombre.\nEl nombre normalmente comienza con may\u00fascula (Perl) cuando se refiere al lenguaje y con min\u00fascula (perl) cuando se refiere al propio programa int\u00e9rprete debido a que los sistemas de ficheros Unix distinguen may\u00fasculas y min\u00fasculas. Antes del lanzamiento de la primera edici\u00f3n de Programming Perl era com\u00fan referirse al lenguaje como perl; Randal L. Schwartz, sin embargo, forz\u00f3 el nombre en may\u00fascula en el libro para que destacara mejor cuando fuera impreso. La distinci\u00f3n fue subsiguientemente adoptada por la comunidad.\nEl nombre es descrito ocasionalmente como \"PERL\" (por Practical Extraction and Report Language - Lenguaje Pr\u00e1ctico para la Extracci\u00f3n e Informe). Aunque esta expansi\u00f3n ha prevalecido en muchos manuales actuales, incluyendo la p\u00e1gina de manual de Perl, es un retroacr\u00f3nimo y oficialmente el nombre no quiere decir nada. La ortograf\u00eda de PERL en may\u00fasculas es por eso usada como jerga para detectar a individuos ajenos a la comunidad. Sin embargo, se han sugerido varios retroacr\u00f3nimos, incluyendo el c\u00f3mico Pathologically Eclectic Rubbish Lister (Contabilizador de Basura Patol\u00f3gicamente Ecl\u00e9ctico)."}, {"name": "El s\u00edmbolo del camello", "text": "Perl se simboliza generalmente por un camello de una sola joroba (camello ar\u00e1bigo o dromedario), que fue la imagen elegida por el editor O'Reilly para la cubierta de Programming Perl, que por consiguiente adquiri\u00f3 el nombre de El Libro del Camello.[4]\u200b O'Reilly es propietario de este s\u00edmbolo como marca registrada, pero dice que usa sus derechos legales solo para proteger la \"integridad e impacto de este s\u00edmbolo\".[7]\u200b\nO'Reilly permite el uso no comercial del s\u00edmbolo, y ofrece logos Programming Republic of Perl y botones Powered by Perl.\nDesde hace unos a\u00f1os, y para evitar este tipo de problemas con la licencia comercial, la Fundaci\u00f3n Perl elabor\u00f3 nuevos logotipos basados en una cebolla, a ra\u00edz de las conferencias anuales que Larry Wall ofrece con el t\u00edtulo: State of the Onion (\"Estado de la Cebolla\") Onion se pronuncia muy parecido a Union, por lo que suena parecido a State of the Union (\"Estado de la Uni\u00f3n\"), evento en el cual el presidente de los Estados Unidos informa a los ciudadanos del estado en que se encuentra su pa\u00eds."}]}, {"name": "Descripci\u00f3n", "text": "La p\u00e1gina de manual Unix perlintro(1) dice:", "subsections": [{"name": "Caracter\u00edsticas", "text": "La estructura completa de Perl deriva ampliamente del lenguaje C. Perl es un lenguaje imperativo, con variables, expresiones, asignaciones, bloques de c\u00f3digo delimitados por llaves, estructuras de control y subrutinas.\nPerl tambi\u00e9n toma caracter\u00edsticas de la programaci\u00f3n shell. Todas las variables son marcadas con un Sigilo precedente (Sigil, en ingl\u00e9s). Los sigilos identifican inequ\u00edvocamente los nombres de las variables, permitiendo a Perl tener una rica sintaxis. Notablemente, los sigilos permiten interpolar variables directamente dentro de las cadenas de caracteres (string). Como en los shell, Perl tiene muchas funciones integradas para tareas comunes y para acceder a los recursos del sistema.\nPerl toma las listas del Lisp, hash (memoria asociativa) del AWK y expresiones regulares del sed. Todo esto simplifica y facilita todas las formas del an\u00e1lisis sint\u00e1ctico, manejo de texto y tareas de gesti\u00f3n de datos.\nEn Perl 5, se a\u00f1adieron caracter\u00edsticas para soportar estructuras de datos complejas, funciones de primer orden (p. e. clausuras como valores) y un modelo de programaci\u00f3n orientada a objetos. Estos incluyen referencias, paquetes y una ejecuci\u00f3n de m\u00e9todos basada en clases y la introducci\u00f3n de variables de \u00e1mbito l\u00e9xico, que hizo m\u00e1s f\u00e1cil escribir c\u00f3digo robusto (junto con el pragma  strict). Una caracter\u00edstica principal introducida en Perl 5 fue la habilidad de empaquetar c\u00f3digo reutilizable como m\u00f3dulos. Larry Wall indic\u00f3 m\u00e1s adelante que \"la intenci\u00f3n del sistema de m\u00f3dulos de Perl 5 era apoyar el crecimiento de la cultura Perl en vez del n\u00facleo de Perl\".[8]\u200b\nTodas las versiones de Perl hacen el tipificado autom\u00e1tico de datos y la gesti\u00f3n de memoria. El int\u00e9rprete conoce el tipo y requerimientos de almacenamiento de cada objeto en el programa; reserva y libera espacio para ellos seg\u00fan sea necesario. Las conversiones legales de tipo se hacen de forma autom\u00e1tica en tiempo de ejecuci\u00f3n; las conversiones ilegales son consideradas errores fatales."}, {"name": "Dise\u00f1o", "text": "El dise\u00f1o de Perl puede ser entendido como una respuesta a tres amplias tendencias de la industria inform\u00e1tica: rebaja de los costes en el hardware, aumento de los costes laborales y las mejoras en la tecnolog\u00eda de compiladores. Anteriormente, muchos lenguajes de ordenador como Fortran y C, fueron dise\u00f1ados para hacer un uso eficiente de un hardware caro. En contraste, Perl es dise\u00f1ado para hacer un uso eficiente de los costosos programadores de ordenador.\nPerl tiene muchas caracter\u00edsticas que facilitan la tarea del programador a costa de unos requerimientos de CPU y memoria mayores. Estas incluyen gesti\u00f3n de memoria autom\u00e1tica; tipo de dato din\u00e1mico; strings, listas y hashes; expresiones regulares; introspecci\u00f3n y una funci\u00f3n eval().\nLarry Wall fue adiestrado como ling\u00fcista y el dise\u00f1o de Perl ha sido muy aleccionado con principios ling\u00fc\u00edsticos. Ejemplos incluyen la Codificaci\u00f3n Huffman (las construcciones m\u00e1s comunes deben ser las m\u00e1s cortas), buena distribuci\u00f3n (la informaci\u00f3n importante debe ir primero) y una larga colecci\u00f3n de primitivas del lenguaje. Perl favorece las construcciones del lenguaje, tan naturales, como para los humanos son la lectura y la escritura, incluso si eso hace m\u00e1s complicado al int\u00e9rprete Perl. \nLa sintaxis de Perl refleja la idea de que \"cosas que son diferentes deben parecer diferentes\".  Por ejemplo, escalares, arrays y hashes tienen diferente sigilo. \u00cdndices de array y claves hash usan diferentes clases de par\u00e9ntesis. Strings y expresiones regulares tienen diferentes delimitadores est\u00e1ndar. Esta aproximaci\u00f3n puede contrastarse con lenguajes como Lisp, donde la misma construcci\u00f3n S-expresi\u00f3n y sintaxis b\u00e1sica se usa para muchos y variados prop\u00f3sitos.\nPerl tiene caracter\u00edsticas que soportan una variedad de paradigmas de programaci\u00f3n, como la imperativa, funcional y la orientada a objetos. Al mismo tiempo, Perl no obliga a seguir ning\u00fan paradigma en particular, ni obliga al programador a elegir alguna de ellas. \nHay un amplio sentido de lo pr\u00e1ctico, tanto en el lenguaje Perl como en la comunidad y la cultura que lo rodean. El prefacio de Programming Perl comienza con, \"Perl es un lenguaje para tener tu trabajo terminado\". Una consecuencia de esto es que Perl no es un lenguaje ordenado. Incluye caracter\u00edsticas si la gente las usa, tolera excepciones a las reglas y emplea la heur\u00edstica para resolver ambig\u00fcedades sint\u00e1cticas. Debido a la naturaleza indulgente del compilador, a veces los errores pueden ser dif\u00edciles de encontrar. Hablando del variado comportamiento de las funciones internas en los contextos de lista y escalar, la p\u00e1gina de manual de perlfunc(1) dice \"En general, hacen lo que tu quieras, siempre que quieras la coherencia.\"\nPerl tiene varios lemas que transmiten aspectos de su dise\u00f1o y uso. Uno es There's more than one way to do it (Hay m\u00e1s de una forma de hacerlo) (TMTOWTDI, usualmente pronunciado 'Tim Toady'). Otros son \"Perl: la motosierra del ej\u00e9rcito Suizo de los lenguajes de programaci\u00f3n\" y \"L\u00edmites imprecisos\". Una meta prefijada de Perl es hacer las cosas f\u00e1ciles de forma f\u00e1cil y las tareas dif\u00edciles, posibles.  A Perl tambi\u00e9n se le ha llamado \"El esparadrapo de Internet\"."}, {"name": "Aplicaciones", "text": "Perl tiene muchas y variadas aplicaciones, gracias a la disponibilidad de muchos m\u00f3dulos est\u00e1ndares y de terceras partes.\nSe ha usado desde los primeros d\u00edas del Web para escribir guiones (scripts) CGI. Es una de las \"tres Pes\" (Perl, Python y PHP), que son los lenguajes m\u00e1s populares para la creaci\u00f3n de aplicaciones Web, y es un componente integral de la popular soluci\u00f3n LAMP para el desarrollo web. Grandes proyectos escritos en Perl son Slash, IMDb[9]\u200b y UseModWiki, un motor de Wiki. Muchos sitios web con alto tr\u00e1fico, como Amazon.com y Ticketmaster.com usan Perl extensamente.\nPerl se usa a menudo como un \"lenguaje pegamento\", ligando sistemas e interfaces que no fueron dise\u00f1ados espec\u00edficamente para interoperar; y para el \"escarbado de datos\", convirtiendo o procesando grandes cantidades de datos para tareas como por ejemplo crear informes. De hecho, estas fortalezas est\u00e1n \u00edntimamente unidas. Su combinaci\u00f3n hace a Perl una popular herramienta de prop\u00f3sito general para los administradores de sistemas, especialmente en programas peque\u00f1os que pueden ser escritos y ejecutados en una sola l\u00ednea de comandos.\nPerl es tambi\u00e9n ampliamente usado en finanzas y bioinform\u00e1tica, donde es apreciado por su desarrollo r\u00e1pido, tanto de aplicaciones como de despliegue, as\u00ed como la habilidad de manejar grandes vol\u00famenes de datos."}, {"name": "Implementaci\u00f3n", "text": "Perl est\u00e1 implementado como un int\u00e9rprete, escrito en C, junto con una gran colecci\u00f3n de m\u00f3dulos, escritos en Perl y C. La distribuci\u00f3n fuente tiene, en 2005, 12 MB cuando se empaqueta y comprime en un fichero tar. El int\u00e9rprete tiene 150.000 l\u00edneas de c\u00f3digo C y se compila en un ejecutable de 1 MB en las arquitecturas de hardware m\u00e1s t\u00edpicas. De forma alternativa, el int\u00e9rprete puede ser compilado como una biblioteca y ser embebida en otros programas. Hay cerca de 500 m\u00f3dulos en la distribuci\u00f3n, sumando 200.000 l\u00edneas de Perl y unas 350.000 l\u00edneas adicionales de c\u00f3digo C. Mucho del c\u00f3digo C en los m\u00f3dulos consiste en tablas de codificaci\u00f3n de caracteres.\nEl int\u00e9rprete tiene una arquitectura orientada a objetos. Todos los elementos del lenguaje Perl \u2014escalares, listas, hashes, referencias a c\u00f3digo, manejadores de archivo\u2014 est\u00e1n representados en el int\u00e9rprete como estructuras C. Las operaciones sobre estas estructuras est\u00e1n definidas como una numerosa colecci\u00f3n de macros, typedef y funciones; esto constituye la API C de Perl. La API Perl puede ser desconcertante para el no iniciado, pero sus puntos de entrada siguen un esquema de nombres coherente, que ayuda a los que quieran utilizarla.\nLa ejecuci\u00f3n de un programa Perl se puede dividir, generosamente, en dos fases: tiempo de compilaci\u00f3n y tiempo de ejecuci\u00f3n.[10]\u200b En tiempo de compilaci\u00f3n el int\u00e9rprete parsea el texto del programa en un \u00e1rbol sint\u00e1ctico. En tiempo de ejecuci\u00f3n, ejecuta el programa siguiendo el \u00e1rbol. El texto es parseado solo una vez y el \u00e1rbol sint\u00e1ctico es optimizado antes de ser ejecutado, para que la fase de ejecuci\u00f3n sea relativamente eficiente. Las optimizaciones del \u00e1rbol sint\u00e1ctico en tiempo de compilaci\u00f3n incluyen simplificaci\u00f3n de expresiones constantes, propagaci\u00f3n del contexto y optimizaci\u00f3n en trozos sueltos de c\u00f3digo. Sin embargo, las fases de compilaci\u00f3n y ejecuci\u00f3n pueden anidarse: un bloque BEGIN se ejecuta en tiempo de compilaci\u00f3n, mientras que una funci\u00f3n eval inicia una compilaci\u00f3n durante una ejecuci\u00f3n. Ambas operaciones est\u00e1n impl\u00edcitas en otras  -de forma notable, la cl\u00e1usula use que carga bibliotecas, conocidas en Perl como m\u00f3dulos, implica un bloque BEGIN.\nPerl es un lenguaje din\u00e1mico y tiene una gram\u00e1tica sensible al contexto que puede quedar afectada por el c\u00f3digo ejecutado durante una fase de ejecuci\u00f3n intermedia (Ver ejemplos.[11]\u200b). Por eso Perl no puede ser parseado mediante una aplicaci\u00f3n directa de analizadores sint\u00e1cticos/parseadores Lex/Yacc. En cambio, el int\u00e9rprete implementa su propio analizador l\u00e9xico, que coordinado con un parseador modificado GNU bison resuelve las ambig\u00fcedades del lenguaje. Se ha dicho que \"solo perl puede parsear Perl\", queriendo decir que solo el int\u00e9rprete Perl (perl) puede parsear el lenguaje Perl (Perl). La raz\u00f3n de esto se atestigua por las persistentes imperfecciones de otros programas que emprenden la tarea de parsear Perl, como los analizadores de c\u00f3digo y los auto-indentadores, que tienen que v\u00e9rselas no solo con las muchas formas de expresar inequ\u00edvocamente construcciones sint\u00e1cticas, sino tambi\u00e9n con el hecho de que tambi\u00e9n Perl no puede, en general, ser parseado sin antes ser ejecutado.\nEl mantenimiento del int\u00e9rprete Perl, a lo largo de los a\u00f1os, se ha vuelto cada vez m\u00e1s dif\u00edcil. El n\u00facleo ha estado en continuo desarrollo desde 1994. El c\u00f3digo ha sido optimizado en rendimiento a expensas de la simplicidad, claridad y unas interfaces internas m\u00e1s fuertes. Nuevas caracter\u00edsticas han sido a\u00f1adidas, manteniendo todav\u00eda, compatibilidad virtualmente completa hacia atr\u00e1s con las primeras versiones. El tama\u00f1o y la complejidad del int\u00e9rprete son una barrera para los desarrolladores que desean trabajar en \u00e9l.\nPerl es distribuido con unos 120.000 test funcionales. Estos se ejecutan como parte del proceso normal de construcci\u00f3n y comprueban extensamente al int\u00e9rprete y a sus m\u00f3dulos principales. Los desarrolladores Perl conf\u00edan en los test funcionales para asegurarse que los cambios en el int\u00e9rprete no introducen errores; rec\u00edprocamente, los usuarios Perl que vean al int\u00e9rprete pasar los test funcionales en su sistema pueden tener un alto grado de confianza de que est\u00e1 funcionando adecuadamente.\nNo hay una especificaci\u00f3n o est\u00e1ndar escrito para el lenguaje Perl y no hay planes de crear uno para la versi\u00f3n actual de Perl. Siempre ha existido solo una implementaci\u00f3n del int\u00e9rprete. Este int\u00e9rprete, junto con los test funcionales, forman la especificaci\u00f3n de facto del lenguaje."}, {"name": "Disponibilidad", "text": "Perl es software libre y est\u00e1 licenciado bajo la Licencia Art\u00edstica y la GNU General Public License. Existen distribuciones disponibles para la mayor\u00eda de sistemas operativos. Est\u00e1 especialmente extendido en Unix y en sistemas similares, pero ha sido portado a las plataformas m\u00e1s modernas (y otras m\u00e1s obsoletas). Con solo seis excepciones confirmadas, puede ser compilado desde el c\u00f3digo fuente en todos los Unix, compatibles POSIX o cualquier otra plataforma Unix compatible. Sin embargo, esto no es normalmente necesario, porque Perl est\u00e1 incluido por defecto en la instalaci\u00f3n de los sistemas operativos m\u00e1s populares.[12]\u200b\nDebido a los cambios especiales necesarios para soportar al Mac OS Classic, existe una adaptaci\u00f3n especial llamada MacPerl.[13]\u200b\nGNU/Linux\nPerl est\u00e1 preinstalado en las distribuciones m\u00e1s populares de GNU/Linux incluyendo Gentoo, Slackware, Mandriva, Debian, RedHat y SUSE.\nWindows\nLos usuarios de Microsoft Windows normalmente instalan una distribuci\u00f3n binaria de Perl.[14]\u200b Compilar Perl desde el c\u00f3digo fuente bajo Windows es posible, pero la mayor\u00eda de las instalaciones no disponen del necesario compilador de C.\nLa capa de emulaci\u00f3n Cygwin proporciona otra forma de correr Perl bajo Windows. Cygwin proporciona en entorno parecido al Unix en Windows que incluye gcc, por lo que compilar Perl desde el c\u00f3digo es una opci\u00f3n accesible para los usuarios que prefieren esta opci\u00f3n.\nEn junio de 2006, win32.perl.org fue lanzado por Adam Kennedy en nombre de la Fundaci\u00f3n Perl. Es una comunidad web \"para todo lo relacionado con Windows y Perl\".[15]\u200b"}]}, {"name": "Estructura del lenguaje", "text": "", "subsections": [{"name": "Programa ejemplo", "text": "En Perl, el programa can\u00f3nico \"Hola mundo\" es:\n#!/usr/bin/perl\nprint\n\"\u00a1Hola mundo!\\n\"\n;\nLa primera l\u00ednea contiene el shebang (par de caracteres que identifica el texto que sigue), que le indica al sistema operativo d\u00f3nde encontrar el int\u00e9rprete de Perl. La segunda imprime el string \u00a1Hola mundo! y un car\u00e1cter de nueva l\u00ednea.\nEl shebang es la forma normal para invocar al int\u00e9rprete en los sistemas Unix. Los sistemas Windows pueden seguir utiliz\u00e1ndolo o pueden asociar la extensi\u00f3n de archivo .pl con el int\u00e9rprete Perl. Algunos editores de texto tambi\u00e9n usan la l\u00ednea shebang como una pista sobre el modo de trabajo en que deben operar. Si el programa es ejecutado por perl y no invocado por el shell, la l\u00ednea que empieza por el shebang es parseada para interpretar las opciones. En otro caso, es ignorada. Para ver los detalles de esto, consultar la p\u00e1gina de manual perlrun."}, {"name": "Tipos de datos", "text": "Perl tiene tres tipos de datos: escalares, \nlistas y hashes:\nUn escalar es un solo valor; puede ser un n\u00famero, un string (cadena de caracteres) o una referencia\nUna lista es una colecci\u00f3n ordenada de escalares (una variable que almacena una lista se llama array)\nUn hash, o memoria asociativa, es un mapeo de strings a escalares; los strings se llaman claves y los escalares valores.\nTodas las variables est\u00e1n precedidas por un sigilo, que identifica el tipo de dato que es accedido (no el tipo de dato de la misma variable). Se puede usar el mismo nombre para variables de diferentes tipos, sin que tengan conflictos.\n$var\n# un escalar\n@var\n# un array\n%var\n# un hash\nLos n\u00fameros se escriben de la forma usual; los strings est\u00e1n rodeados entre comillas de varias clases.\n$n\n=\n42\n$nombre\n\"juan\"\n$color\n'rojo'\nPerl convertir\u00e1 los strings en n\u00fameros y viceversa dependiendo del contexto en que sean usados. En el siguiente ejemplo los strings $n y $m son tratados como n\u00fameros cuando son argumentos del operador suma. Este c\u00f3digo imprime el n\u00famero '5', desechando cualquier informaci\u00f3n no num\u00e9rica de la operaci\u00f3n y dejando los valores de las variables intactos. (El operador de concatenaci\u00f3n no es +, sino ..)\n\"3 manzanas\"\n$m\n\"2 naranjas\"\n+\nPerl tambi\u00e9n tiene un contexto booleano que utiliza en la evaluaci\u00f3n de declaraciones condicionales. Los siguientes valores en Perl eval\u00faan todos como falso:\n$falso\n0\n# el n\u00famero cero\n0.0\n# el n\u00famero cero como flotante\n'0'\n# el string cero\n\"\"\n# el string vac\u00edo\nundef\n# el valor devuelto por undef\nTodos los dem\u00e1s valores se eval\u00faan a verdadero. Esto incluye el curioso string auto-descriptivo \"0 pero verdadero\", que de hecho es 0 como n\u00famero, pero verdadero como booleano. (Cualquier string no num\u00e9rico tambi\u00e9n tendr\u00e1 esta propiedad, pero este string en particular es ignorado por Perl en contextos num\u00e9ricos).  Las expresiones booleanas evaluadas tambi\u00e9n devuelven valores escalares. Aunque la documentaci\u00f3n no indica qu\u00e9 valor particular se devuelve como verdadero o falso (y por lo tanto no fiable), muchos operadores booleanos devuelven 1 por verdadero y el string vac\u00edo para falso (que eval\u00faa a cero en contexto num\u00e9rico). La funci\u00f3n defined() le dice si la variable tiene alg\u00fan valor. En el ejemplo anterior defined($falso) ser\u00e1 verdadero con cada uno de los valores anteriores, excepto undef.\nSi, espec\u00edficamente, quiere asegurarse de tener un resultado 1/0 (como en C), necesita realizar el c\u00e1lculo siguiente:\nmy\n$resultado_real\n$resultado_booleano\n?\n1\n:\nUna lista se define listando sus elementos, separados por comas y rodeados por par\u00e9ntesis donde as\u00ed sea requerido por la precedencia de los operadores.\n@puntuaciones\n(\n32\n,\n45\n16\n5\n);\nUn hash puede ser inicializado desde una lista de pares clave/valor.\n%favorito\njoe\n=>\nsam\n'azul'\nLos elementos individuales de una lista son accedidos utilizando un \u00edndice num\u00e9rico, dentro de corchetes. Valores individuales en un hash son accedidos utilizando la correspondiente clave, dentro de llaves. El sigilo $ identifica que el elemento accedido es un escalar.\n$puntuaciones\n[\n2\n]\n# un elemento de @puntuaciones\n$favorito\n{\n}\n# un valor de %favorito\nM\u00faltiples elementos pueden ser accedidos usando en su lugar el sigilo @ (identificando el resultado como una lista).\n3\n# tres elementos de @puntuaciones\n@favorito\n'joe'\n'sam'\n# dos valores de %favorito\nEl n\u00famero de elementos en un array puede ser obtenido evaluando el array en contexto escalar o con la ayuda del sigilo $#. Este \u00faltimo da el \u00edndice del \u00faltimo elemento dentro del array, no el n\u00famero de elementos.\n$numero\n@amigos\n$#amigos\n# el \u00edndice del \u00faltimo elemento en @amigos\n# normalmente el n\u00famero de elementos en @amigos,\n# que es uno m\u00e1s que $#amigos porque el primer elemento tiene el \u00edndice 0, no 1\nHay unas pocas funciones que operan sobre hashes enteros.\n@nombres_de_clientes\nkeys\n%direcciones\n# guarda en @nombres_de_clientes  todas las claves  de %direcciones\n@direcciones_de_email\nvalues\n# guarda en @direcciones_de_email todos los valores de %direcciones"}, {"name": "Estructuras de control", "text": "Art\u00edculo principal:\nPerl tiene varias clases de estructuras de control.\nTiene estructuras de control orientado al bloque, similar a los de los lenguajes de programaci\u00f3n C y Java. Las condiciones est\u00e1n rodeadas por par\u00e9ntesis y los bloques subordinados por llaves:\n''\netiqueta\nwhile\ncondici\u00f3n\n)\n...\ncontinue\nfor\nexpresi\u00f3n\ninicial\ncondicional\nincremental\nforeach\nvar\nlista\nif\nelse\nelsif\nCuando se controla a una sola declaraci\u00f3n, los modificadores de declaraci\u00f3n proporcionan una sintaxis m\u00e1s ligera:\ndeclaraci\u00f3n\nunless\nuntil\nLos operadores l\u00f3gicos cortocircuito son normalmente usados para controlar el flujo del programa a nivel de expresi\u00f3n:\nexpr\nand\nor\nLas palabras clave de control de flujo next, last, return y redo son expresiones, por lo que pueden ser usadas con los operadores cortocircuito.\nPerl tambi\u00e9n tiene dos construcciones impl\u00edcitas para bucles:\nresultados\ngrep\nmap\ngrep devuelve todos los elementos de lista en que el bloque subordinado eval\u00faa a verdadero. map eval\u00faa el bloque subordinado por cada elemento de lista y devuelve una lista de los valores resultantes. Estas construcciones permiten un estilo simple de programaci\u00f3n funcional.\nLa declaraci\u00f3n switch (llamada \"given\"/\"when\") existe desde la versi\u00f3n 5.10:\nuse\n5.10.1\n# o posterior\ngiven\n$variable\nwhen\ndefault\nPerl incluye una declaraci\u00f3n goto etiqueta, pero es usada raramente. Las situaciones donde en otros lenguajes se utiliza goto no ocurren tan a menudo en Perl debido a sus amplias opciones de control de flujo.\nExiste tambi\u00e9n una declaraci\u00f3n goto &sub que realiza una llamada 'final'. Termina la subrutina actual e inmediatamente llama a la sub especificada. Esto se usa en situaciones donde una nueva subrutina puede realizar una gesti\u00f3n de la pila m\u00e1s eficiente que el propio Perl (porque t\u00edpicamente no se requiere ning\u00fan cambio en la pila actual), y en una recursi\u00f3n muy profunda este tipo de llamadas puede tener un sustancial impacto positivo en el funcionamiento porque evita la sobrecarga de la gesti\u00f3n contexto/pila en el momento de retornar."}, {"name": "Subrutinas", "text": "Las subrutinas se definen con la palabra clave sub e invocadas simplemente nombr\u00e1ndolas. Si la subrutina en cuesti\u00f3n no ha sido todav\u00eda declarada, es necesario, para el proceso de an\u00e1lisis sint\u00e1ctico, poner los par\u00e9ntesis.\nfoo\n();\n# par\u00e9ntesis necesarios aqu\u00ed...\nsub\nfoo\n#... pero no aqu\u00ed\nUna lista de argumentos pueden ser indicados despu\u00e9s del nombre de la subrutina. Los argumentos pueden ser escalares, listas o hashes.\n$x\n@y\n%z\nLos par\u00e1metros de una subrutina no necesitan ser declarados, ni en n\u00famero ni en tipo; de hecho, pueden variar en cada llamada. Los arrays son expandidos a sus elementos, los hashes a una lista de pares clave/valor y todo el conjunto es pasado a la subrutina como una indiferenciada lista de escalares.\nCualesquiera de los argumentos pasados est\u00e1n disponibles para la subrutina en el array especial @_. Los elementos de @_ son asociados a los argumentos actuales; cambiando un elemento de @_ cambia el argumento correspondiente.\nLos elementos de @_ pueden ser accedidos con los sub\u00edndices de la forma normal.\n$_\n],\nSin embargo, el c\u00f3digo resultante puede ser dif\u00edcil de leer y los par\u00e1metros tener una sem\u00e1ntica de pase por referencia, que puede resultar algo no deseable.\nUn modismo com\u00fan es asignar @_ a una lista de variables con nombres.\n$y\n$z\n@_\nEsto afecta tanto a la mnem\u00f3nica de los nombres de los par\u00e1metros como a la sem\u00e1ntica de los valores pasados por valor. La palabra clave my indica que las siguientes variables est\u00e1n l\u00e9xicamente embebidas en el bloque que las contienen.\nOtro modismo es sacar los par\u00e1metros de @_. Esto es muy com\u00fan cuando la subrutina toma un solo argumento.\nshift\n# Si no se dice nada, nos referimos a @_\nLas subrutinas pueden devolver valores.\nreturn\nSi la subrutina no sale v\u00eda declaraci\u00f3n return, entonces devuelve la \u00faltima expresi\u00f3n evaluada en el cuerpo de la subrutina. Arrays y hashes en el valor de retorno son expandidos a una lista de escalares, igual que si fueran argumentos de una funci\u00f3n.\nLa expresi\u00f3n devuelta es evaluada en el contexto de la llamada de la subrutina; esto puede sorprender al desprevenido.\nlista\n4\n6\narray\n@x\n# devuelve 6 - \u00faltimo elemento de la lista\narray\n# devuelve 3 - n\u00famero de elementos de la lista\n# devuelve (4, 5, 6)\nUna subrutina puede descubrir su contexto de llamada con la funci\u00f3n wantarray.\ncualquiera\nwantarray\n\"Naranjas\"\ncualquiera\n# devuelve \"Naranjas\"\n# devuelve (1, 2)"}, {"name": "Expresiones regulares", "text": "El lenguaje Perl incluye una sintaxis especializada para escribir expresiones regulares y el int\u00e9rprete contiene un motor para emparejar strings con expresiones regulares. El motor de expresiones regulares usa un algoritmo de Vuelta Atr\u00e1s (backtracking), extendiendo sus capacidades desde el simple emparejamiento de patrones simples con la captura y sustituci\u00f3n de strings. El motor de expresiones regulares se deriva de regex, escrito por Henry Spencer.\nLa sintaxis de expresiones regulares fue originalmente tomada de las expresiones regulares de Unix Versi\u00f3n 8. Sin embargo, se diferenci\u00f3 ya antes del primer lanzamiento de Perl y desde entonces ha ido incorporando muchas m\u00e1s caracter\u00edsticas. Otros lenguajes y aplicaciones est\u00e1n adoptando las expresiones regulares de Perl (PCRE) en vez de las expresiones regulares POSIX, incluyendo PHP, Ruby, Java y el Servidor HTTP Apache.\nEl operador m// (empareja) permite comprobar un emparejamiento por medio de una expresi\u00f3n regular. (Para abreviar, el precedente m puede ser omitido.) En el caso m\u00e1s simple, una expresi\u00f3n como:\n=~\nm/abc/\neval\u00faa a verdadero si y solo si el string $x empareja con la expresi\u00f3n regular abc.\nPartes de la expresi\u00f3n regular pueden ser incluidas entre par\u00e9ntesis: las partes correspondientes de un string emparejado son capturadas. Los strings capturados son asignados de forma secuencial a las variables internas $1, $2, $3,... y una lista de strings capturados se devuelve como valor del emparejamiento.\nm/a(.)c/\n# captura el car\u00e1cter entre 'a' y 'c' y lo guarda en $1\nEl operador s/// (sustituci\u00f3n) especifica una operaci\u00f3n de b\u00fasqueda y reemplazo:\ns/abc/aBc/\n# Convierte la b en may\u00fascula\nLas expresiones regulares en Perl pueden tomar unos modificadores. Son sufijos de una sola letra que modifican el significado de la expresi\u00f3n:\nm/abc/i\n# emparejamiento independientemente de si est\u00e1n en may\u00fascula o min\u00fascula\ns/abc/aBc/g\n# b\u00fasqueda y reemplazo global (a lo largo de todo el ''string'')\nLas expresiones regulares pueden ser densas y cr\u00edpticas. Esto es porque la sintaxis de las expresiones regulares es extremadamente compacta, generalmente usando caracteres sueltos o pares de caracteres que representan sus operaciones. Perl alivia un poco este problema con el modificador /x que permite a los programadores poner espacio en blanco y comentarios dentro de las expresiones regulares:\nm/a           # empareja una 'a'\n        .           # empareja cualquier car\u00e1cter\n        c           # empareja una 'c'\n      /x\nUn uso com\u00fan de las expresiones regulares es el de especificar delimitadores de campos al operador split:\n@palabras\nsplit\nm/,/\n$l\u00ednea\n# divide la $l\u00ednea de valores separados por comas\nEl operador split complementa la captura de string. La captura de string devuelve las partes de un string que emparejan con una expresi\u00f3n regular; split devuelve las partes que no emparejan."}, {"name": "Interfaz con bases de datos", "text": "Perl est\u00e1 ampliamente favorecido para las aplicaciones de bases de datos. Sus facilidades de manejo de texto son buenas para generar consultas SQL; arrays, hashes y la gesti\u00f3n de memoria autom\u00e1tica hace f\u00e1cil recoger y procesar los datos devueltos.\nEn las primeras versiones de Perl, las interfaces de bases de datos fueron creadas enlazando el int\u00e9rprete con una biblioteca de base de datos desde el lado del cliente. Esto era algo torpe; un problema en particular fue que el ejecutable perl resultante estaba restringido a usar solo una interfaz de base de datos, la que hab\u00eda sido enlazada. Tambi\u00e9n, reenlazar el int\u00e9rprete era lo suficientemente dificultoso que solo fue realizado para algunas de las m\u00e1s famosas e importantes bases de datos.\nEn Perl 5, las interfaces de bases de datos est\u00e1n implementadas por el m\u00f3dulo Perl DBI. El m\u00f3dulo DBI presenta una \u00fanica interfaz a las aplicaciones Perl, independiente de las bases de datos, mientras que los m\u00f3dulos DBD:: (Controlador de base de datos) manejan los detalles de acceso a unas 50 bases de datos diferentes. Existen controladores DBD:: para la mayor parte de las bases de datos ANSI SQL."}]}, {"name": "Comparativa de funcionamiento", "text": "El \"Computer Language Shootout Benchmarks\" compara el funcionamiento de implementaciones de problemas de programaci\u00f3n t\u00edpicos, en diversos lenguajes. Sus implementaciones Perl normalmente toman m\u00e1s memoria que las implementaciones en otros lenguajes, y esto var\u00eda los resultados de velocidad. Las prestaciones de Perl son similares a las de otros lenguajes como Python, PHP o Ruby, pero m\u00e1s lento que la mayor parte de lenguajes compilados.\nPerl puede ser m\u00e1s lento que otros lenguajes haciendo lo mismo porque tiene que compilar el c\u00f3digo fuente cada vez que corre el programa. En \"A Timely Start\", Jean-Louis Leroy encontr\u00f3 que sus scripts en Perl tardaban mucho m\u00e1s tiempo en correr que lo que \u00e9l esperaba porque el int\u00e9rprete perl perd\u00eda la mayor parte del tiempo buscando y compilando los m\u00f3dulos. Como Perl no puede salvar su compilaci\u00f3n intermedia como lo hacen Java, Python y Ruby, los scripts Perl conllevan esta sobrecarga en cada ejecuci\u00f3n. La sobrecarga no es un problema cuando la fase de ejecuci\u00f3n es muy larga, pero puede sesgar significativamente en tiempos de ejecuci\u00f3n muy cortos, como se encuentra a menudo en los benchmarks. Una vez que perl inicia la fase de ejecuci\u00f3n, sin embargo, puede ser muy r\u00e1pido y t\u00edpicamente supera a otros lenguajes din\u00e1micos. Tecnolog\u00edas como mod perl superan esto guardando el programa compilado en memoria entre ejecuciones, o Class::Autouse que retrasa la compilaci\u00f3n de partes del programa hasta que son necesarias.", "subsections": [{"name": "Optimizando", "text": "Nicholas Clark, un desarrollador principal de Perl, diserta sobre algunas mejoras en el dise\u00f1o con Perl y otras soluciones en \"When perl is not quite fast enough\".  Las rutinas m\u00e1s cr\u00edticas de un programa Perl pueden escribirse en C o incluso en lenguaje ensamblador con XS o Inline.\nOptimizar Perl puede requerir un conocimiento \u00edntimo de su funcionamiento en lugar de la destreza con el lenguaje y su sintaxis, significando que el problema est\u00e1 con la implementaci\u00f3n de Perl en lugar de con el lenguaje mismo. Raku, la siguiente versi\u00f3n, tomar\u00e1 algunas de estas ideas como lecciones, que otros lenguajes ya han aprendido."}]}, {"name": "Futuro", "text": "En el a\u00f1o 2000, en la conferencia Perl, Jon Orwant hizo una petici\u00f3n para una nueva versi\u00f3n del lenguaje.[16]\u200b Esto condujo a una decisi\u00f3n para comenzar el trabajo del redise\u00f1o del lenguaje, que se llamar\u00eda Perl 6. Se pidieron propuestas a la comunidad Perl para las nuevas caracter\u00edsticas del lenguaje, y se recibieron m\u00e1s de 300 RFC (del ingl\u00e9s Request For Comments, petici\u00f3n de comentarios).\nLarry Wall estuvo los siguientes a\u00f1os digiriendo los RFC y sintetiz\u00e1ndolos en un entorno de trabajo coherente para Perl 6. Present\u00f3 su dise\u00f1o de Perl 6 en una serie de documentos llamados Apocalipsis, que se numeran para corresponderse con los cap\u00edtulos de Programming Perl. La actual, inacabada especificaci\u00f3n de Perl 6, est\u00e1 resumida en unos documentos de dise\u00f1o llamados Sinopsis, que est\u00e1n numerados para corresponder a los Apocalipsis.\nPerl 6 no tiene la intenci\u00f3n de ser compatible para atr\u00e1s, aunque existir\u00e1 un modo de compatibilidad.\nEn 2001 se decidi\u00f3 que Perl 6 corriese en una m\u00e1quina virtual llamada Parrot. Esto quiere decir que otros lenguajes que usen Parrot podr\u00e1n ganar acceso nativo a CPAN y permitir\u00e1 alg\u00fan cierto nivel de desarrollo cruzado.\nEn 2005 Audrey Tang cre\u00f3 el proyecto pugs, una implementaci\u00f3n de Perl 6 en Haskell. Fue y es una plataforma de testeo del lenguaje Perl 6 (separado del desarrollo actual de la implementaci\u00f3n) permitiendo a los dise\u00f1adores explorar. El proyecto pugs engendr\u00f3 una activa comunidad Perl/Haskell centrada alrededor del canal irc #perl6 en Freenode.\nUn cierto n\u00famero de caracter\u00edsticas en el lenguaje Perl 6 muestran una similitud con las de Haskell y Perl 6 ha sido acogido por la comunidad Haskell como un potencial lenguaje de scripting.\nEn el 2006, Perl 6, Parrot y pugs siguen estando bajo desarrollo y un nuevo m\u00f3dulo para Perl 5 llamado v6 permite a una parte del c\u00f3digo Perl 6 correr directamente sobre Perl 5.\nEn octubre de 2019, ante la evidencia de que Perl 6 es un lenguaje muy diferente de Perl 5, y para que no se generara una confusi\u00f3n entre los dos lenguajes, se decidi\u00f3 renombrarlo a Raku.", "subsections": []}, {"name": "Diversi\u00f3n con Perl", "text": "Como en C, las competiciones de c\u00f3digo ofuscado son un rasgo popular de la cultura Perl. El Obfuscated Perl contest homenajea la virtud de la flexibilidad sint\u00e1ctica de Perl. El programa siguiente imprime el texto \"Just another Perl / Unix hacker\", usando 32 procesos en paralelo coordinados con pipes. La explicaci\u00f3n completa est\u00e1 disponible en el sitio web del autor.\n@P\n//\n\".URRUU\\c8R\"\n@d\n\"\\nrekcah xinU / lreP rehtona tsuJ\"\np\n@p\n\"r$p\"\n\"u$p\"\nP\npipe\n++\n$p\n;(\n$q\n*=\n+=\n$f\n=!\nfork\n$P\n^\nord\n})\n&\n];\n/ ^$P/ix\n$P:close$_\n%p\np\n/^[P.]/\n&&\nclose\nwait\n$?\n/^r/\n<$_>\n$d\nsleep\nrand\n/\\S/\nDe forma similar al c\u00f3digo ofuscado pero con un prop\u00f3sito diferente, \"Poes\u00eda Perl\" es la pr\u00e1ctica de escribir poemas que puedan ser compilados como c\u00f3digo legal de Perl (aunque generalmente sin sentido). Esta afici\u00f3n es m\u00e1s o menos \u00fanica en Perl debido al gran n\u00famero de palabras normales del Ingl\u00e9s que el lenguaje utiliza. Los nuevos poemas se publican de forma regular en el sitio Perl Monks, en la secci\u00f3n Poes\u00eda Perl. Parte del saber de Perl est\u00e1 en Black Perl, un ejemplo infame de la po\u00e9tica de Perl.\nOtro pasatiempo es \"Perl Golf\". Como con el deporte real, la meta es reducir el n\u00famero de golpes necesarios para completar un objetivo, pero aqu\u00ed, los \"golpes\" se refieren a los pulsaciones de teclado en vez de a los recorridos en un club de golf. Se propone una tarea, como \"escanear un string de entrada y devolver el pal\u00edndromo m\u00e1s grande que contenga\" y los participantes intentan batir a sus oponentes escribiendo soluciones que requieran cada vez menos caracteres de c\u00f3digo fuente Perl.\nOtra tradici\u00f3n entre los hacker Perl es escribir JAPH, que es una especie de peque\u00f1os programas ofuscados que imprimen la frase \"Just another Perl hacker,\". El \"can\u00f3nico\" JAPH incluye la coma al final, aunque a menudo se omite, y otras muchas variantes que se han creado (ejemplo,[17]\u200b que imprime \"Just Another Perl Pirate!\").\nUn m\u00f3dulo Perl interesante es Lingua::Romana::Perligata (en CPAN). Este m\u00f3dulo traduce el c\u00f3digo fuente de un script escrito en Lat\u00edn a Perl, permitiendo al programador escribir programas ejecutables en Lat\u00edn.\nLa comunidad Perl ha reservado el espacio de nombres \"Acme\" para los m\u00f3dulos que sean divertidos o experimentales.  Algunos de los m\u00f3dulos Acme est\u00e1n implementados de maneras muy entretenidas. Algunos ejemplos:\nAcme::Bleach, uno de los primeros m\u00f3dulos en Acme::, permite al c\u00f3digo fuente de un programa ser \"blanqueado\" (es decir, todos los caracteres son reemplazados por el espacio en blanco) y seguir funcionando.  Es un ejemplo de un filtro de c\u00f3digo fuente.  Hay tambi\u00e9n un cierto n\u00famero de otros filtros de fuente en el espacio de nombres Acme.\nAcme::Hello simplifica el proceso de escribir un programa \"Hello, World!\"\nAcme::Currency permite cambiar el prefijo \"$\" de las variables escalares por otro car\u00e1cter (por defecto usa el euro \"\u20ac\")\nAcme::ProgressBar es, completamente hecho a prop\u00f3sito, una horrible e ineficiente forma de indicar el progreso de una tarea\nAcme::VerySign satiriza el largamente criticado servicio Site Finder de VeriSign\nAcme::Don't implementa el opuesto l\u00f3gico de la palabra clave do \u2014don't\u2014, que no ejecuta el bloque de c\u00f3digo subordinado.", "subsections": [{"name": "Enlaces relacionados", "text": "Humor Perl en Wikibooks\nLingua::Romana::Perligata - \u00a1Escribe Perl en Lat\u00edn!\nUn tutorial sobre Perligata\nTest de Pureza Perl"}]}, {"name": "Comunidad Perl", "text": "La comunidad Perl est\u00e1 constituida por grupos que a su vez conforman Perl Mongers.[18]\u200b\nEn Espa\u00f1a hay tres grupos:\nBarcelona.pm (persona de contacto: \u00c1lex Muntada)\nMadrid.pm (persona de contacto: Diego Kuperman)\nGranada.pm[19]\u200b (persona de contacto: Juan Juli\u00e1n Merelo Guerv\u00f3s\nEn Am\u00e9rica Latina hay 17 grupos distribuidos entre los siguientes pa\u00edses: Argentina[20]\u200b, Brasil[21]\u200b, Chile[22]\u200b, Ecuador[23]\u200b, Paraguay[24]\u200b y \nPer\u00fa[25]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Software libre. Contenido relacionado con Software libre.\nLa Fundaci\u00f3n Perl (en la Wikipedia en ingl\u00e9s)\nPOE: Entorno Objeto de Perl (en la Wikipedia en ingl\u00e9s)\nPerl Data Language (en la Wikipedia en ingl\u00e9s)\nherramienta de documentaci\u00f3n para Perl (en la Wikipedia en ingl\u00e9s)\nJust another Perl hacker (en la Wikipedia en ingl\u00e9s)\nObfuscated Perl contest (en la Wikipedia en ingl\u00e9s)\nPerl Mongers (en la Wikipedia en ingl\u00e9s)\nPerlScript (en la Wikipedia en ingl\u00e9s)\nComparison of programming languages (en la Wikipedia en ingl\u00e9s)\nProgramming Perl (en la Wikipedia en ingl\u00e9s)\nLearning Perl (en la Wikipedia en ingl\u00e9s)\nPerl Cookbook (en la Wikipedia en ingl\u00e9s)", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abperl 5.36.0 is now available\u00bb. www.nntp.perl.org. Consultado el 30 de mayo de 2022.\u00a0\n\u2191 \u00abPerl 5.34.1 is now available!\u00bb. www.nntp.perl.org. Consultado el 13 de marzo de 2022.\u00a0\n\u2191 \u00abperl 5.37.6 is now available\u00bb. perl.org. Consultado el 21 de noviembre de 2022.\u00a0\n\u2191 a b \u00abLarry Wall\u00bb. Archivado desde el original el 15 de agosto de 2006. Consultado el 20 de agosto de 2006.\u00a0 (ingl\u00e9s)\n\u2191 \u00abperlhist - the Perl history records\u00bb. www.cpan.org. Consultado el 21 de julio de 2020.\u00a0\n\u2191 \u00abPerl Source\u00bb. www.cpan.org. Consultado el 21 de julio de 2020.\u00a0\n\u2191 \u00abPerl - O'Reilly Media\u00bb.\u00a0\n\u2191 Usenet post, May 10th 1997, with ID 199705101952.MAA00756@wall.org.\n\u2191 \u00abWhat software/hardware are you using to run the site?\u00bb.\u00a0\n\u2191 Una descripci\u00f3n del int\u00e9rprete Perl 5 se puede encontrar en Programming Perl, 3rd Ed., cap\u00edtulo 18 (ingl\u00e9s)\n\u2191 \u00abOn Parsing Perl\u00bb.\u00a0\n\u2191 Hietaniemi, Jarkko (1998).  CPAN.org, ed. \u00abPerl Ports (Binary Distributions)\u00bb.\u00a0\n\u2191 Prime Time Freeware, ed. (1997). \u00abThe MacPerl Pages\u00bb. Archivado desde el original el 18 de enero de 2006.\u00a0\n\u2191 Win32 Perl Wiki (ed.). \u00abWin32 Distributions\u00bb.\u00a0\n\u2191 Kennedy, Adam (2006). \u00abWin32 Perl Wiki\u00bb.\u00a0\n\u2191 Transcripci\u00f3n de la charla de Larry. Anotada el 28 de septiembre de 2006. (ingl\u00e9s)\n\u2191 \u00abAharrr!\u00bb.\u00a0\n\u2191 \u00abPerl Mongers\u00bb. Consultado el 14 de marzo de 2016.\u00a0\n\u2191 \u00abGranada Perl Mongers\u00bb. Archivado desde el original el 9 de agosto de 2018. Consultado el 14 de marzo de 2016.\u00a0\n\u2191 \u00abArgentina Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abBrazil Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abChile Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abEcuador Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abParaguay Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abPeru Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Perl.\n Wikilibros alberga un libro o manual sobre Programaci\u00f3n en Perl.\nPerl.org \u2013 El directorio Perl\nPerl.com \u2013 Perl en O'Reilly Network\nPerldoc at Perl.org \u2013 documentaci\u00f3n en l\u00ednea sobre Perl\nDocumentaci\u00f3n Perl en espa\u00f1ol Proyecto de traducci\u00f3n de las p\u00e1ginas del manual de Perl a espa\u00f1ol.\nDesarrollo de Perl 5 y Perl 6\nParrot m\u00e1quina virtual\nThe CPAN \u2013 Comprehensive Perl Archive Network, distribuci\u00f3n fuente de Perl\nActiveState ActivePerl \u2013 Perl para Microsoft Windows y otras plataformas\nIndigoPerl \u2013 otra distribuci\u00f3n de Perl para Microsoft Windows\nCygwin tambi\u00e9n distribuye Perl en Windows\nStrawberry Perl - una implementaci\u00f3n open-source para Windows.\nsitios web sobre Perl en el Open Directory Project", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pip_(administrador_de_paquetes)", "title": "Pip (administrador de paquetes)", "summary": "pip es un sistema de gesti\u00f3n de paquetes utilizado para instalar y administrar paquetes de software escritos en Python. Muchos paquetes pueden ser encontrados en el Python Package Index (PyPI). Python 2.7.9 y posteriores (en la serie Python2), Python 3.4 y posteriores incluyen pip (pip3 para Python3) por defecto.\npip es un acr\u00f3nimo recursivo que se puede interpretar como Pip Instalador de Paquetes o Pip Instalador de Python.[1]\u200b", "sections": [{"name": "\u00cdndice", "text": "1 Interfaz l\u00ednea de comando\n2 Uso de servicio del alojamiento web\n3 V\u00e9ase tambi\u00e9n\n4 Referencias\n5 Enlaces externos", "subsections": []}, {"name": "Interfaz l\u00ednea de comando", "text": "Una ventaja importante de pip es la facilidad de su interfaz de l\u00ednea de comandos, el cual permite instalar paquetes de software de Python f\u00e1cilmente desde solo una orden:\nLos usuarios tambi\u00e9n pueden f\u00e1cilmente desinstalar alg\u00fan paquete:\nOtra caracter\u00edstica particular de pip es que permite gestionar listas de paquetes y sus n\u00fameros de versi\u00f3n correspondientes a trav\u00e9s de un archivo de requisitos. Esto nos permite una recreaci\u00f3n eficaz de un conjunto de paquetes en un entorno separado (p. ej. otro ordenador) o entorno virtual. Esto se puede conseguir con un archivo correctamente formateado requisitos.txt y la siguiente orden:\nCon pip es posible instalar un paquete para una versi\u00f3n concreta de Python, s\u00f3lo es necesario reemplazar ${versi\u00f3n} por la versi\u00f3n de Python que queramos: 2, 3, 3.4, etc:\n${\nversi\u00f3n\n}", "subsections": []}, {"name": "Uso de servicio del alojamiento web", "text": "Pip es usado para soporte de Python en la nube, como por Heroku.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "PyPI", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abpyinstall is dead, long live\u00a0pip!\u00bb. www.ianbicking.org (en ingl\u00e9s). Consultado el 30 de diciembre de 2021.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web oficial (en ingl\u00e9s)\nTutorial de pip", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pit%C3%B3n", "title": "Pit\u00f3n", "summary": "Pit\u00f3n puede referirse a:\nPythonidae, familia de serpientes constrictoras.\nPython, g\u00e9nero de pitones.\nPit\u00f3n reticulada, serpiente m\u00e1s larga del mundo.\nPit\u00f3n, gran serpiente de la mitolog\u00eda griega.\nPit\u00f3n, ciudad del Antiguo Egipto mencionada en el libro de la Biblia del \u00c9xodo.\nPit\u00f3n volc\u00e1nico, resto de un volc\u00e1n erosionado.\nPit\u00f3n, alfarero griego del siglo\u00a0V\u00a0a.\u00a0C.\nPit\u00f3n, pintor griego del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, s\u00e1trapa de Media, del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, s\u00e1trapa de la India, del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, cuerno de algunos animales.\nPit\u00f3n, pito o pitorro (en vasijas, regaderas, porrones, etc.)\nPython, lenguaje de programaci\u00f3n.\nPython, misil fabricado por Israel.\nEl nombre com\u00fan de la planta Agave americana.\nEl nombre com\u00fan de la planta Taraxacum officinale.\nPithon, poblaci\u00f3n y comuna francesa.", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "Pit\u00f3n de la Fournaise, volc\u00e1n activo de la isla de La Reuni\u00f3n\nPit\u00f3n de las Nieves, volc\u00e1n que es el punto m\u00e1s alto de la isla de La Reuni\u00f3n\nPiton de la Petite Rivi\u00e8re Noire, monta\u00f1a m\u00e1s alta de la isla de Mauricio.", "subsections": []}]}
